2017-01-05 16:35:53 GameBoard.<init>()	Hello World!
2017-01-05 16:35:53 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-05 16:35:53 QueryProlog.initialise()	setup(h3/h3). suceeded
2017-01-05 16:35:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:54 GameBoard.setupBoardFromString()	Board created
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:35:54 GameBoard.initialise()	[book, gold, gem, map, crown]
2017-01-05 16:35:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:35:54 GameBoard.initialise()	[fairy, candle, helmet, sword, chest]
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:54 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	null
2017-01-05 16:35:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:35:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:35:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:54 AI_Player.update()	update
2017-01-05 16:35:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:35:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:35:54 AI_Player.update()	Search took406ms
2017-01-05 16:35:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:54 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-05 16:35:54 AI_Player.update()		1101,	101,	1011,	1011,	1110,	101,	11
2017-01-05 16:35:54 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-05 16:35:54 AI_Player.update()		11,	1010,	11,	1001,	110,	101,	1110
2017-01-05 16:35:54 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 16:35:54 AI_Player.update()		1001,	1010,	1101,	101,	101,	1001,	1001
2017-01-05 16:35:54 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1100,	1001
2017-01-05 16:35:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:35:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:35:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:35:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:54 AI_Player.update()	update
2017-01-05 16:35:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:35:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:35:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:35:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:35:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:54 AI_Player.update()	update
2017-01-05 16:35:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:35:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:35:54 AI_Player.update()	Search took42ms
2017-01-05 16:35:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:54 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:35:54 AI_Player.update()		1101,	101,	1011,	1011,	1110,	11,	11
2017-01-05 16:35:54 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-05 16:35:54 AI_Player.update()		11,	1010,	11,	1001,	110,	101,	1110
2017-01-05 16:35:54 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:35:54 AI_Player.update()		1001,	1010,	1101,	101,	101,	1100,	1001
2017-01-05 16:35:54 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1001,	1001
2017-01-05 16:35:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:35:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:54 AI_Player.update()	update
2017-01-05 16:35:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:35:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:35:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:35:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:54 AI_Player.update()	update
2017-01-05 16:35:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:35:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:35:54 AI_Player.update()	Search took344ms
2017-01-05 16:35:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:54 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:35:54 AI_Player.update()		1101,	11,	1011,	1011,	1110,	11,	11
2017-01-05 16:35:54 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-05 16:35:54 AI_Player.update()		11,	1100,	11,	1001,	110,	101,	1110
2017-01-05 16:35:54 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:35:54 AI_Player.update()		1001,	1011,	1101,	101,	101,	1100,	1001
2017-01-05 16:35:54 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 16:35:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:35:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:54 AI_Player.update()	update
2017-01-05 16:35:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:35:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:35:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:35:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:35:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:35:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:35:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:35:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:54 AI_Player.update()	update
2017-01-05 16:35:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:35:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:35:55 AI_Player.update()	Search took394ms
2017-01-05 16:35:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:55 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 16:35:55 AI_Player.update()		1101,	11,	1011,	1011,	1110,	101,	11
2017-01-05 16:35:55 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-05 16:35:55 AI_Player.update()		11,	1100,	11,	1001,	110,	1001,	1110
2017-01-05 16:35:55 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:35:55 AI_Player.update()		1001,	1011,	1101,	101,	101,	1001,	1001
2017-01-05 16:35:55 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:35:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:35:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:35:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:35:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:55 AI_Player.update()	update
2017-01-05 16:35:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:35:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:35:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:35:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:35:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:35:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:55 AI_Player.update()	update
2017-01-05 16:35:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:35:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:35:55 AI_Player.update()	Search took79ms
2017-01-05 16:35:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:55 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-05 16:35:55 AI_Player.update()		1101,	1010,	1011,	1011,	1110,	101,	11
2017-01-05 16:35:55 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-05 16:35:55 AI_Player.update()		11,	1010,	11,	1001,	110,	1001,	1110
2017-01-05 16:35:55 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:35:55 AI_Player.update()		1001,	101,	1101,	101,	101,	1001,	1001
2017-01-05 16:35:55 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:35:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:35:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:35:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:55 AI_Player.update()	update
2017-01-05 16:35:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:35:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:35:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:35:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:35:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:35:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:55 AI_Player.update()	update
2017-01-05 16:35:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:35:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:35:55 AI_Player.update()	Search took445ms
2017-01-05 16:35:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:55 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-05 16:35:55 AI_Player.update()		1101,	1010,	1011,	1011,	1110,	101,	11
2017-01-05 16:35:55 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-05 16:35:55 AI_Player.update()		1110,	11,	1010,	11,	1001,	110,	1001
2017-01-05 16:35:55 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:35:55 AI_Player.update()		1001,	101,	1101,	101,	101,	1001,	1001
2017-01-05 16:35:55 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:35:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:35:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:35:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:35:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:55 AI_Player.update()	update
2017-01-05 16:35:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:35:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:35:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:35:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:35:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:35:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:35:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:35:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:35:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:55 AI_Player.update()	update
2017-01-05 16:35:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:35:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:35:56 AI_Player.update()	Search took274ms
2017-01-05 16:35:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:56 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 16:35:56 AI_Player.update()		1101,	11,	1011,	1011,	1110,	101,	11
2017-01-05 16:35:56 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-05 16:35:56 AI_Player.update()		1110,	1100,	1010,	11,	1001,	110,	1001
2017-01-05 16:35:56 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:35:56 AI_Player.update()		1001,	1011,	1101,	101,	101,	1001,	1001
2017-01-05 16:35:56 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:35:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:35:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:35:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:56 AI_Player.update()	update
2017-01-05 16:35:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:35:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:35:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:35:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:35:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:35:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:35:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:35:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:56 AI_Player.update()	update
2017-01-05 16:35:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:35:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:35:56 AI_Player.update()	Search took266ms
2017-01-05 16:35:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:56 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 16:35:56 AI_Player.update()		1101,	101,	1011,	1011,	1110,	101,	11
2017-01-05 16:35:56 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-05 16:35:56 AI_Player.update()		1110,	1010,	1010,	11,	1001,	110,	1001
2017-01-05 16:35:56 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:35:56 AI_Player.update()		1001,	11,	1101,	101,	101,	1001,	1001
2017-01-05 16:35:56 AI_Player.update()		1100,	1011,	1101,	11,	1101,	101,	1001
2017-01-05 16:35:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:35:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:35:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:35:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:56 AI_Player.update()	update
2017-01-05 16:35:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:35:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:35:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:35:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:35:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:35:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:35:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:35:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:35:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:56 AI_Player.update()	update
2017-01-05 16:35:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:35:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:35:57 AI_Player.update()	Search took808ms
2017-01-05 16:35:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:57 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 16:35:57 AI_Player.update()		1101,	11,	1011,	1011,	1110,	101,	11
2017-01-05 16:35:57 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-05 16:35:57 AI_Player.update()		1110,	1100,	1010,	11,	1001,	110,	1001
2017-01-05 16:35:57 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:35:57 AI_Player.update()		1001,	1011,	1101,	101,	101,	1001,	1001
2017-01-05 16:35:57 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:35:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:35:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:35:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:57 AI_Player.update()	update
2017-01-05 16:35:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:35:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:35:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:35:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:35:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:35:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:35:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:35:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:57 AI_Player.update()	update
2017-01-05 16:35:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:35:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:35:57 AI_Player.update()	Search took605ms
2017-01-05 16:35:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:57 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 16:35:57 AI_Player.update()		11,	1011,	1011,	1110,	101,	11,	1101
2017-01-05 16:35:57 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-05 16:35:57 AI_Player.update()		1110,	1100,	1010,	11,	1001,	110,	1001
2017-01-05 16:35:57 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:35:57 AI_Player.update()		1001,	1011,	1101,	101,	101,	1001,	1001
2017-01-05 16:35:57 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:35:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:35:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:35:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:35:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:57 AI_Player.update()	update
2017-01-05 16:35:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:35:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:35:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:35:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:35:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:35:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:35:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:35:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:35:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:57 AI_Player.update()	update
2017-01-05 16:35:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:35:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:35:58 AI_Player.update()	Search took414ms
2017-01-05 16:35:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:58 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 16:35:58 AI_Player.update()		11,	101,	1011,	1110,	101,	11,	1101
2017-01-05 16:35:58 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-05 16:35:58 AI_Player.update()		1110,	1010,	1010,	11,	1001,	110,	1001
2017-01-05 16:35:58 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:35:58 AI_Player.update()		1001,	11,	1101,	101,	101,	1001,	1001
2017-01-05 16:35:58 AI_Player.update()		1100,	1011,	1101,	11,	1101,	101,	1001
2017-01-05 16:35:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:35:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:35:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:58 AI_Player.update()	update
2017-01-05 16:35:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:35:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:35:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:35:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:35:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:35:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:35:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:35:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:58 AI_Player.update()	update
2017-01-05 16:35:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:35:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:35:58 AI_Player.update()	Search took441ms
2017-01-05 16:35:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:58 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 16:35:58 AI_Player.update()		1101,	11,	101,	1011,	1110,	101,	11
2017-01-05 16:35:58 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-05 16:35:58 AI_Player.update()		1110,	1010,	1010,	11,	1001,	110,	1001
2017-01-05 16:35:58 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:35:58 AI_Player.update()		1001,	11,	1101,	101,	101,	1001,	1001
2017-01-05 16:35:58 AI_Player.update()		1100,	1011,	1101,	11,	1101,	101,	1001
2017-01-05 16:35:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:35:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:35:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:35:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:58 AI_Player.update()	update
2017-01-05 16:35:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:35:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:35:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:35:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:35:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:35:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:35:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:35:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:35:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:58 AI_Player.update()	update
2017-01-05 16:35:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:35:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:35:59 AI_Player.update()	Search took774ms
2017-01-05 16:35:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:59 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-05 16:35:59 AI_Player.update()		1101,	101,	101,	1011,	1110,	101,	11
2017-01-05 16:35:59 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-05 16:35:59 AI_Player.update()		1110,	1011,	1010,	11,	1001,	110,	1001
2017-01-05 16:35:59 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:35:59 AI_Player.update()		1001,	1100,	1101,	101,	101,	1001,	1001
2017-01-05 16:35:59 AI_Player.update()		1100,	11,	1101,	11,	1101,	101,	1001
2017-01-05 16:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:35:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:59 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:59 AI_Player.update()	update
2017-01-05 16:35:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:35:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:35:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:35:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:35:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:35:59 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:35:59 AI_Player.update()	update
2017-01-05 16:35:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:00 AI_Player.update()	Search took428ms
2017-01-05 16:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-05 16:36:00 AI_Player.update()		1101,	101,	101,	1011,	1110,	101,	11
2017-01-05 16:36:00 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-05 16:36:00 AI_Player.update()		1001,	1110,	1011,	1010,	11,	1001,	110
2017-01-05 16:36:00 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:36:00 AI_Player.update()		1001,	1100,	1101,	101,	101,	1001,	1001
2017-01-05 16:36:00 AI_Player.update()		1100,	11,	1101,	11,	1101,	101,	1001
2017-01-05 16:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()	update
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()	update
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:00 AI_Player.update()	Search took355ms
2017-01-05 16:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()		110,	1011,	111,	11,	111,	11,	11
2017-01-05 16:36:00 AI_Player.update()		1101,	101,	101,	101,	1110,	101,	11
2017-01-05 16:36:00 AI_Player.update()		1110,	11,	1110,	1011,	111,	101,	1011
2017-01-05 16:36:00 AI_Player.update()		1001,	1110,	1011,	110,	11,	1001,	110
2017-01-05 16:36:00 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:36:00 AI_Player.update()		1001,	1100,	1101,	1010,	101,	1001,	1001
2017-01-05 16:36:00 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 16:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()	update
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()	update
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:00 AI_Player.update()	Search took150ms
2017-01-05 16:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-05 16:36:00 AI_Player.update()		1101,	11,	101,	101,	1110,	101,	11
2017-01-05 16:36:00 AI_Player.update()		1110,	1110,	1110,	1011,	111,	101,	1011
2017-01-05 16:36:00 AI_Player.update()		1001,	1010,	1011,	110,	11,	1001,	110
2017-01-05 16:36:00 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:36:00 AI_Player.update()		1001,	11,	1101,	1010,	101,	1001,	1001
2017-01-05 16:36:00 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-05 16:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()	update
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()	update
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:00 AI_Player.update()	Search took106ms
2017-01-05 16:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-05 16:36:00 AI_Player.update()		1101,	1110,	101,	101,	1110,	101,	11
2017-01-05 16:36:00 AI_Player.update()		1110,	1010,	1110,	1011,	111,	101,	1011
2017-01-05 16:36:00 AI_Player.update()		1001,	1100,	1011,	110,	11,	1001,	110
2017-01-05 16:36:00 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:36:00 AI_Player.update()		1001,	1011,	1101,	1010,	101,	1001,	1001
2017-01-05 16:36:00 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()	update
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()	update
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:00 AI_Player.update()	Search took123ms
2017-01-05 16:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-05 16:36:00 AI_Player.update()		1101,	1110,	101,	101,	1110,	101,	11
2017-01-05 16:36:00 AI_Player.update()		1110,	1010,	1110,	1011,	111,	101,	1011
2017-01-05 16:36:00 AI_Player.update()		1001,	1100,	1011,	110,	11,	1001,	110
2017-01-05 16:36:00 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:36:00 AI_Player.update()		1001,	1001,	1011,	1101,	1010,	101,	1001
2017-01-05 16:36:00 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()	update
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:00 AI_Player.update()	update
2017-01-05 16:36:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:01 AI_Player.update()	Search took339ms
2017-01-05 16:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-05 16:36:01 AI_Player.update()		1101,	11,	101,	101,	1110,	101,	11
2017-01-05 16:36:01 AI_Player.update()		1110,	1110,	1110,	1011,	111,	101,	1011
2017-01-05 16:36:01 AI_Player.update()		1001,	1010,	1011,	110,	11,	1001,	110
2017-01-05 16:36:01 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:36:01 AI_Player.update()		1001,	11,	1011,	1101,	1010,	101,	1001
2017-01-05 16:36:01 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-05 16:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()	update
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:01 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:36:01 AI_Player.update()	Player a has won!
2017-01-05 16:36:01 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:01 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:36:01 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:01 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()	update
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:01 AI_Player.update()	Search took22ms
2017-01-05 16:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:36:01 AI_Player.update()		101,	1100,	1100,	1110,	1010,	1010,	101
2017-01-05 16:36:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 16:36:01 AI_Player.update()		1001,	101,	1100,	1001,	1010,	11,	101
2017-01-05 16:36:01 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:36:01 AI_Player.update()		110,	110,	110,	1010,	101,	1010,	111
2017-01-05 16:36:01 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()	update
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()	update
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:01 AI_Player.update()	Search took120ms
2017-01-05 16:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:36:01 AI_Player.update()		101,	101,	1100,	1100,	1110,	1010,	1010
2017-01-05 16:36:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 16:36:01 AI_Player.update()		1001,	101,	1100,	1001,	1010,	11,	101
2017-01-05 16:36:01 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:36:01 AI_Player.update()		110,	110,	110,	1010,	101,	1010,	111
2017-01-05 16:36:01 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()	update
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:36:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()	update
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:01 AI_Player.update()	Search took53ms
2017-01-05 16:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:36:01 AI_Player.update()		101,	101,	1100,	1100,	1110,	1010,	1010
2017-01-05 16:36:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 16:36:01 AI_Player.update()		1001,	1101,	1100,	1001,	1010,	11,	101
2017-01-05 16:36:01 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:36:01 AI_Player.update()		110,	1011,	110,	1010,	101,	1010,	111
2017-01-05 16:36:01 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()	update
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()	update
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:01 AI_Player.update()	Search took257ms
2017-01-05 16:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:36:01 AI_Player.update()		101,	101,	1100,	1100,	1110,	1010,	1010
2017-01-05 16:36:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 16:36:01 AI_Player.update()		1001,	1101,	1100,	1001,	1010,	11,	101
2017-01-05 16:36:01 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:36:01 AI_Player.update()		111,	110,	1011,	110,	1010,	101,	1010
2017-01-05 16:36:01 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()	update
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()	update
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:01 AI_Player.update()	Search took54ms
2017-01-05 16:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:36:01 AI_Player.update()		101,	101,	1100,	1100,	1110,	1010,	1010
2017-01-05 16:36:01 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-05 16:36:01 AI_Player.update()		1001,	110,	1100,	1001,	1010,	11,	101
2017-01-05 16:36:01 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:36:01 AI_Player.update()		111,	11,	1011,	110,	1010,	101,	1010
2017-01-05 16:36:01 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()	update
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:01 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:01 AI_Player.update()	update
2017-01-05 16:36:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:02 AI_Player.update()	Search took422ms
2017-01-05 16:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:02 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 16:36:02 AI_Player.update()		101,	101,	1100,	1100,	1110,	101,	1010
2017-01-05 16:36:02 AI_Player.update()		1110,	1101,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:02 AI_Player.update()		1001,	110,	1100,	1001,	1010,	1001,	101
2017-01-05 16:36:02 AI_Player.update()		1110,	110,	1101,	1011,	1011,	101,	1011
2017-01-05 16:36:02 AI_Player.update()		111,	11,	1011,	110,	1010,	1100,	1010
2017-01-05 16:36:02 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-05 16:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:02 AI_Player.update()	update
2017-01-05 16:36:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:02 AI_Player.update()	update
2017-01-05 16:36:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:02 AI_Player.update()	Search took40ms
2017-01-05 16:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:02 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 16:36:02 AI_Player.update()		101,	101,	1100,	1001,	1110,	101,	1010
2017-01-05 16:36:02 AI_Player.update()		1110,	1101,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:02 AI_Player.update()		1001,	110,	1100,	1011,	1010,	1001,	101
2017-01-05 16:36:02 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-05 16:36:02 AI_Player.update()		111,	11,	1011,	110,	1010,	1100,	1010
2017-01-05 16:36:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:02 AI_Player.update()	update
2017-01-05 16:36:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:02 AI_Player.update()	update
2017-01-05 16:36:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:02 AI_Player.update()	Search took437ms
2017-01-05 16:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:02 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 16:36:02 AI_Player.update()		101,	1101,	1100,	1001,	1110,	101,	1010
2017-01-05 16:36:02 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:02 AI_Player.update()		1001,	110,	1100,	1011,	1010,	1001,	101
2017-01-05 16:36:02 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-05 16:36:02 AI_Player.update()		111,	101,	1011,	110,	1010,	1100,	1010
2017-01-05 16:36:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:02 AI_Player.update()	update
2017-01-05 16:36:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:02 AI_Player.update()	update
2017-01-05 16:36:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:02 AI_Player.update()	Search took60ms
2017-01-05 16:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:02 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 16:36:02 AI_Player.update()		1101,	1100,	1001,	1110,	101,	1010,	101
2017-01-05 16:36:02 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:02 AI_Player.update()		1001,	110,	1100,	1011,	1010,	1001,	101
2017-01-05 16:36:02 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-05 16:36:02 AI_Player.update()		111,	101,	1011,	110,	1010,	1100,	1010
2017-01-05 16:36:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:02 AI_Player.update()	update
2017-01-05 16:36:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:02 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:02 AI_Player.update()	update
2017-01-05 16:36:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:03 AI_Player.update()	Search took531ms
2017-01-05 16:36:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-05 16:36:03 AI_Player.update()		1101,	110,	1001,	1110,	101,	1010,	101
2017-01-05 16:36:03 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:03 AI_Player.update()		1001,	11,	1100,	1011,	1010,	1001,	101
2017-01-05 16:36:03 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:36:03 AI_Player.update()		111,	101,	1011,	110,	1010,	1100,	1010
2017-01-05 16:36:03 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()	update
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()	update
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:03 AI_Player.update()	Search took201ms
2017-01-05 16:36:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-05 16:36:03 AI_Player.update()		1101,	110,	1001,	1100,	101,	1010,	101
2017-01-05 16:36:03 AI_Player.update()		1110,	110,	1110,	1110,	111,	11,	1011
2017-01-05 16:36:03 AI_Player.update()		1001,	11,	1100,	1001,	1010,	1001,	101
2017-01-05 16:36:03 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-05 16:36:03 AI_Player.update()		111,	101,	1011,	110,	1010,	1100,	1010
2017-01-05 16:36:03 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-05 16:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()	update
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()	update
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:03 AI_Player.update()	Search took145ms
2017-01-05 16:36:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:36:03 AI_Player.update()		1101,	110,	1001,	1100,	101,	1010,	101
2017-01-05 16:36:03 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-05 16:36:03 AI_Player.update()		1001,	11,	1100,	1001,	1010,	11,	101
2017-01-05 16:36:03 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:36:03 AI_Player.update()		111,	101,	1011,	110,	1010,	101,	1010
2017-01-05 16:36:03 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()	update
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()	update
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:03 AI_Player.update()	Search took225ms
2017-01-05 16:36:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-05 16:36:03 AI_Player.update()		1101,	110,	1001,	1110,	101,	1010,	101
2017-01-05 16:36:03 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-05 16:36:03 AI_Player.update()		1001,	11,	1100,	1011,	1010,	11,	101
2017-01-05 16:36:03 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 16:36:03 AI_Player.update()		111,	101,	1011,	110,	1010,	101,	1010
2017-01-05 16:36:03 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()	update
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()	update
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:03 AI_Player.update()	Search took76ms
2017-01-05 16:36:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:36:03 AI_Player.update()		1101,	110,	1001,	1100,	101,	1010,	101
2017-01-05 16:36:03 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-05 16:36:03 AI_Player.update()		1001,	11,	1100,	1001,	1010,	11,	101
2017-01-05 16:36:03 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:36:03 AI_Player.update()		111,	101,	1011,	110,	1010,	101,	1010
2017-01-05 16:36:03 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()	update
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:03 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:03 AI_Player.update()	update
2017-01-05 16:36:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:04 AI_Player.update()	Search took149ms
2017-01-05 16:36:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:36:04 AI_Player.update()		1101,	1100,	1001,	1100,	101,	1010,	101
2017-01-05 16:36:04 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-05 16:36:04 AI_Player.update()		1001,	110,	1100,	1001,	1010,	11,	101
2017-01-05 16:36:04 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:36:04 AI_Player.update()		111,	101,	1011,	110,	1010,	101,	1010
2017-01-05 16:36:04 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()	update
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()	update
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:04 AI_Player.update()	Search took148ms
2017-01-05 16:36:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:36:04 AI_Player.update()		1101,	110,	1001,	1100,	101,	1010,	101
2017-01-05 16:36:04 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-05 16:36:04 AI_Player.update()		1001,	11,	1100,	1001,	1010,	11,	101
2017-01-05 16:36:04 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:36:04 AI_Player.update()		111,	101,	1011,	110,	1010,	101,	1010
2017-01-05 16:36:04 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()	update
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()	update
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:04 AI_Player.update()	Search took119ms
2017-01-05 16:36:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:36:04 AI_Player.update()		101,	1101,	110,	1001,	1100,	101,	1010
2017-01-05 16:36:04 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-05 16:36:04 AI_Player.update()		1001,	11,	1100,	1001,	1010,	11,	101
2017-01-05 16:36:04 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:36:04 AI_Player.update()		111,	101,	1011,	110,	1010,	101,	1010
2017-01-05 16:36:04 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()	update
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()	update
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:04 AI_Player.update()	Search took202ms
2017-01-05 16:36:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-05 16:36:04 AI_Player.update()		101,	110,	110,	1001,	1100,	101,	1010
2017-01-05 16:36:04 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-05 16:36:04 AI_Player.update()		1001,	101,	1100,	1001,	1010,	11,	101
2017-01-05 16:36:04 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:36:04 AI_Player.update()		111,	101,	1011,	110,	1010,	101,	1010
2017-01-05 16:36:04 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()	update
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()	update
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:04 AI_Player.update()	Search took231ms
2017-01-05 16:36:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-05 16:36:04 AI_Player.update()		101,	110,	110,	1001,	1100,	1010,	1010
2017-01-05 16:36:04 AI_Player.update()		1110,	11,	1110,	1110,	111,	11,	1011
2017-01-05 16:36:04 AI_Player.update()		1001,	101,	1100,	1001,	1010,	1001,	101
2017-01-05 16:36:04 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-05 16:36:04 AI_Player.update()		111,	101,	1011,	110,	1010,	1100,	1010
2017-01-05 16:36:04 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-05 16:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()	update
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:04 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:36:04 AI_Player.update()	Player a has won!
2017-01-05 16:36:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:04 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:36:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:04 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:36:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:04 AI_Player.update()	update
2017-01-05 16:36:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:05 AI_Player.update()	Search took246ms
2017-01-05 16:36:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()		110,	110,	111,	1100,	111,	1100,	11
2017-01-05 16:36:05 AI_Player.update()		1010,	1100,	101,	1010,	1100,	110,	1010
2017-01-05 16:36:05 AI_Player.update()		1110,	111,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:05 AI_Player.update()		1100,	1010,	111,	110,	11,	1100,	1100
2017-01-05 16:36:05 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:36:05 AI_Player.update()		1010,	1001,	1010,	111,	11,	110,	101
2017-01-05 16:36:05 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 16:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()	update
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()	update
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:05 AI_Player.update()	Search took114ms
2017-01-05 16:36:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-05 16:36:05 AI_Player.update()		1010,	1100,	101,	1010,	1100,	1100,	1010
2017-01-05 16:36:05 AI_Player.update()		1110,	111,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:05 AI_Player.update()		1100,	1010,	111,	110,	11,	110,	1100
2017-01-05 16:36:05 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:05 AI_Player.update()		1010,	1001,	1010,	111,	11,	1001,	101
2017-01-05 16:36:05 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	110,	1001
2017-01-05 16:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()	update
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()	update
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:05 AI_Player.update()	Search took135ms
2017-01-05 16:36:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-05 16:36:05 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1010,	1010
2017-01-05 16:36:05 AI_Player.update()		1110,	111,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:05 AI_Player.update()		1100,	1010,	111,	110,	11,	110,	1100
2017-01-05 16:36:05 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:05 AI_Player.update()		1010,	1001,	1010,	111,	11,	1001,	101
2017-01-05 16:36:05 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	110,	1001
2017-01-05 16:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()	update
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()	update
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:05 AI_Player.update()	Search took162ms
2017-01-05 16:36:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-05 16:36:05 AI_Player.update()		1100,	101,	1010,	1100,	1100,	110,	1010
2017-01-05 16:36:05 AI_Player.update()		1110,	111,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:05 AI_Player.update()		1100,	1010,	111,	110,	11,	1100,	1100
2017-01-05 16:36:05 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:36:05 AI_Player.update()		1010,	1001,	1010,	111,	11,	110,	101
2017-01-05 16:36:05 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 16:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()	update
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()	update
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:05 AI_Player.update()	Search took113ms
2017-01-05 16:36:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-05 16:36:05 AI_Player.update()		1100,	110,	1010,	1100,	1100,	110,	1010
2017-01-05 16:36:05 AI_Player.update()		1110,	101,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:05 AI_Player.update()		1100,	111,	111,	110,	11,	1100,	1100
2017-01-05 16:36:05 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:36:05 AI_Player.update()		1010,	1010,	1010,	111,	11,	110,	101
2017-01-05 16:36:05 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()	update
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()	update
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:05 AI_Player.update()	Search took203ms
2017-01-05 16:36:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-05 16:36:05 AI_Player.update()		1100,	110,	1010,	1100,	1100,	110,	1010
2017-01-05 16:36:05 AI_Player.update()		1110,	101,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:05 AI_Player.update()		1100,	111,	111,	110,	11,	1100,	1100
2017-01-05 16:36:05 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:36:05 AI_Player.update()		101,	1010,	1010,	1010,	111,	11,	110
2017-01-05 16:36:05 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()	update
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:05 AI_Player.update()	update
2017-01-05 16:36:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:06 AI_Player.update()	Search took157ms
2017-01-05 16:36:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:06 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-05 16:36:06 AI_Player.update()		1010,	1100,	110,	1010,	1100,	1100,	110
2017-01-05 16:36:06 AI_Player.update()		1110,	101,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:06 AI_Player.update()		1100,	111,	111,	110,	11,	1100,	1100
2017-01-05 16:36:06 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:36:06 AI_Player.update()		101,	1010,	1010,	1010,	111,	11,	110
2017-01-05 16:36:06 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:06 AI_Player.update()	update
2017-01-05 16:36:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:06 AI_Player.update()	update
2017-01-05 16:36:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:06 AI_Player.update()	Search took346ms
2017-01-05 16:36:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:06 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-05 16:36:06 AI_Player.update()		110,	1010,	1100,	110,	1010,	1100,	1100
2017-01-05 16:36:06 AI_Player.update()		1110,	101,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:06 AI_Player.update()		1100,	111,	111,	110,	11,	1100,	1100
2017-01-05 16:36:06 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:36:06 AI_Player.update()		101,	1010,	1010,	1010,	111,	11,	110
2017-01-05 16:36:06 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:06 AI_Player.update()	update
2017-01-05 16:36:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:36:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:06 AI_Player.update()	update
2017-01-05 16:36:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:06 AI_Player.update()	Search took273ms
2017-01-05 16:36:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:06 AI_Player.update()		110,	1001,	111,	1100,	111,	1010,	11
2017-01-05 16:36:06 AI_Player.update()		110,	1010,	1100,	110,	1010,	1100,	1100
2017-01-05 16:36:06 AI_Player.update()		1110,	1010,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:06 AI_Player.update()		1100,	101,	111,	110,	11,	1100,	1100
2017-01-05 16:36:06 AI_Player.update()		1110,	111,	1101,	11,	1011,	1001,	1011
2017-01-05 16:36:06 AI_Player.update()		101,	1010,	1010,	1010,	111,	11,	110
2017-01-05 16:36:06 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 16:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:06 AI_Player.update()	update
2017-01-05 16:36:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:06 AI_Player.update()	update
2017-01-05 16:36:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:06 AI_Player.update()	Search took274ms
2017-01-05 16:36:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:06 AI_Player.update()		110,	1001,	111,	1100,	111,	1010,	11
2017-01-05 16:36:06 AI_Player.update()		110,	1010,	1100,	110,	1010,	1100,	1100
2017-01-05 16:36:06 AI_Player.update()		1110,	1010,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:06 AI_Player.update()		1100,	101,	111,	110,	11,	1100,	1100
2017-01-05 16:36:06 AI_Player.update()		1110,	111,	1101,	11,	1011,	1001,	1011
2017-01-05 16:36:06 AI_Player.update()		1010,	1010,	1010,	111,	11,	110,	101
2017-01-05 16:36:06 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 16:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:06 AI_Player.update()	update
2017-01-05 16:36:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:06 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:06 AI_Player.update()	update
2017-01-05 16:36:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:07 AI_Player.update()	Search took319ms
2017-01-05 16:36:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:07 AI_Player.update()		110,	1001,	111,	1100,	111,	1010,	11
2017-01-05 16:36:07 AI_Player.update()		110,	1010,	1100,	110,	1010,	1100,	1100
2017-01-05 16:36:07 AI_Player.update()		1110,	1010,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:07 AI_Player.update()		1100,	101,	111,	110,	11,	1100,	1100
2017-01-05 16:36:07 AI_Player.update()		1110,	111,	1101,	11,	1011,	1001,	1011
2017-01-05 16:36:07 AI_Player.update()		101,	1010,	1010,	1010,	111,	11,	110
2017-01-05 16:36:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 16:36:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:07 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:07 AI_Player.update()	update
2017-01-05 16:36:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:07 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:07 AI_Player.update()	update
2017-01-05 16:36:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:07 AI_Player.update()	Search took310ms
2017-01-05 16:36:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:07 AI_Player.update()		110,	1001,	111,	1100,	111,	1010,	11
2017-01-05 16:36:07 AI_Player.update()		110,	1010,	1100,	110,	1010,	1100,	1100
2017-01-05 16:36:07 AI_Player.update()		1110,	1010,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:07 AI_Player.update()		1100,	101,	111,	110,	11,	1100,	1100
2017-01-05 16:36:07 AI_Player.update()		1110,	111,	1101,	11,	1011,	1001,	1011
2017-01-05 16:36:07 AI_Player.update()		1010,	1010,	1010,	111,	11,	110,	101
2017-01-05 16:36:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 16:36:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:07 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:07 AI_Player.update()	update
2017-01-05 16:36:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:07 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:07 AI_Player.update()	update
2017-01-05 16:36:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:07 AI_Player.update()	Search took189ms
2017-01-05 16:36:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:07 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-05 16:36:07 AI_Player.update()		110,	1010,	1100,	110,	1010,	1100,	1100
2017-01-05 16:36:07 AI_Player.update()		1110,	101,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:07 AI_Player.update()		1100,	111,	111,	110,	11,	1100,	1100
2017-01-05 16:36:07 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:36:07 AI_Player.update()		1010,	1010,	1010,	111,	11,	110,	101
2017-01-05 16:36:07 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:36:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:07 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:07 AI_Player.update()	update
2017-01-05 16:36:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:07 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:07 AI_Player.update()	update
2017-01-05 16:36:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:08 AI_Player.update()	Search took288ms
2017-01-05 16:36:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-05 16:36:08 AI_Player.update()		110,	1010,	1100,	110,	1010,	1100,	1100
2017-01-05 16:36:08 AI_Player.update()		1110,	101,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:08 AI_Player.update()		1100,	111,	111,	110,	11,	1100,	1100
2017-01-05 16:36:08 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:36:08 AI_Player.update()		1010,	1010,	111,	11,	110,	101,	1010
2017-01-05 16:36:08 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()	update
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:36:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()	update
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:08 AI_Player.update()	Search took136ms
2017-01-05 16:36:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-05 16:36:08 AI_Player.update()		110,	1010,	1100,	110,	1010,	1010,	1100
2017-01-05 16:36:08 AI_Player.update()		1110,	101,	1110,	1110,	111,	1100,	1011
2017-01-05 16:36:08 AI_Player.update()		1100,	111,	111,	110,	11,	110,	1100
2017-01-05 16:36:08 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:08 AI_Player.update()		1010,	1010,	111,	11,	110,	1001,	1010
2017-01-05 16:36:08 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()	update
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()	update
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:08 AI_Player.update()	Search took205ms
2017-01-05 16:36:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-05 16:36:08 AI_Player.update()		110,	1010,	1100,	1110,	1010,	1010,	1100
2017-01-05 16:36:08 AI_Player.update()		1110,	101,	1110,	110,	111,	1100,	1011
2017-01-05 16:36:08 AI_Player.update()		1100,	111,	111,	11,	11,	110,	1100
2017-01-05 16:36:08 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:08 AI_Player.update()		1010,	1010,	111,	1001,	110,	1001,	1010
2017-01-05 16:36:08 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-05 16:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()	update
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()	update
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:08 AI_Player.update()	Search took111ms
2017-01-05 16:36:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-05 16:36:08 AI_Player.update()		110,	1010,	1100,	1110,	1010,	1010,	1100
2017-01-05 16:36:08 AI_Player.update()		1110,	101,	1110,	110,	111,	1100,	1011
2017-01-05 16:36:08 AI_Player.update()		1100,	111,	111,	11,	11,	110,	1100
2017-01-05 16:36:08 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:08 AI_Player.update()		1010,	111,	1001,	110,	1001,	1010,	1010
2017-01-05 16:36:08 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-05 16:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()	update
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()	update
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:08 AI_Player.update()	Search took295ms
2017-01-05 16:36:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-05 16:36:08 AI_Player.update()		110,	101,	1100,	1110,	1010,	1010,	1100
2017-01-05 16:36:08 AI_Player.update()		1110,	111,	1110,	110,	111,	1100,	1011
2017-01-05 16:36:08 AI_Player.update()		1100,	1010,	111,	11,	11,	110,	1100
2017-01-05 16:36:08 AI_Player.update()		1110,	111,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:08 AI_Player.update()		1010,	1001,	1001,	110,	1001,	1010,	1010
2017-01-05 16:36:08 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 16:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()	update
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:08 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:08 AI_Player.update()	update
2017-01-05 16:36:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:09 AI_Player.update()	Search took114ms
2017-01-05 16:36:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-05 16:36:09 AI_Player.update()		110,	101,	1100,	1110,	1010,	1100,	1100
2017-01-05 16:36:09 AI_Player.update()		1110,	111,	1110,	110,	111,	110,	1011
2017-01-05 16:36:09 AI_Player.update()		1100,	1010,	111,	11,	11,	1100,	1100
2017-01-05 16:36:09 AI_Player.update()		1110,	111,	1101,	11,	1011,	1010,	1011
2017-01-05 16:36:09 AI_Player.update()		1010,	1001,	1001,	110,	1001,	101,	1010
2017-01-05 16:36:09 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:09 AI_Player.update()	Search took212ms
2017-01-05 16:36:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:36:09 AI_Player.update()		110,	111,	1100,	1110,	1010,	1100,	1100
2017-01-05 16:36:09 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-05 16:36:09 AI_Player.update()		1100,	111,	111,	11,	11,	1100,	1100
2017-01-05 16:36:09 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 16:36:09 AI_Player.update()		1010,	1010,	1001,	110,	1001,	101,	1010
2017-01-05 16:36:09 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:09 AI_Player.update()	Search took203ms
2017-01-05 16:36:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 16:36:09 AI_Player.update()		110,	111,	1100,	110,	1010,	1100,	1100
2017-01-05 16:36:09 AI_Player.update()		1110,	1010,	1110,	1110,	111,	110,	1011
2017-01-05 16:36:09 AI_Player.update()		1100,	111,	111,	110,	11,	1100,	1100
2017-01-05 16:36:09 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 16:36:09 AI_Player.update()		1010,	1010,	1001,	11,	1001,	101,	1010
2017-01-05 16:36:09 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:09 AI_Player.update()	Search took53ms
2017-01-05 16:36:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:36:09 AI_Player.update()		110,	111,	1100,	1100,	1010,	1100,	1100
2017-01-05 16:36:09 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-05 16:36:09 AI_Player.update()		1100,	111,	111,	1110,	11,	1100,	1100
2017-01-05 16:36:09 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1010,	1011
2017-01-05 16:36:09 AI_Player.update()		1010,	1010,	1001,	11,	1001,	101,	1010
2017-01-05 16:36:09 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:09 AI_Player.update()	Search took117ms
2017-01-05 16:36:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-05 16:36:09 AI_Player.update()		110,	1010,	1100,	1100,	1010,	1100,	1100
2017-01-05 16:36:09 AI_Player.update()		1110,	111,	1110,	110,	111,	110,	1011
2017-01-05 16:36:09 AI_Player.update()		1100,	1001,	111,	1110,	11,	1100,	1100
2017-01-05 16:36:09 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-05 16:36:09 AI_Player.update()		1010,	1010,	1001,	11,	1001,	101,	1010
2017-01-05 16:36:09 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:09 AI_Player.update()	Search took56ms
2017-01-05 16:36:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-05 16:36:09 AI_Player.update()		1010,	1100,	1100,	1010,	1100,	1100,	110
2017-01-05 16:36:09 AI_Player.update()		1110,	111,	1110,	110,	111,	110,	1011
2017-01-05 16:36:09 AI_Player.update()		1100,	1001,	111,	1110,	11,	1100,	1100
2017-01-05 16:36:09 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-05 16:36:09 AI_Player.update()		1010,	1010,	1001,	11,	1001,	101,	1010
2017-01-05 16:36:09 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:09 AI_Player.update()	Search took111ms
2017-01-05 16:36:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-05 16:36:09 AI_Player.update()		1010,	1100,	1100,	1010,	1100,	1100,	110
2017-01-05 16:36:09 AI_Player.update()		1110,	111,	1110,	110,	111,	110,	1011
2017-01-05 16:36:09 AI_Player.update()		1100,	1100,	1001,	111,	1110,	11,	1100
2017-01-05 16:36:09 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-05 16:36:09 AI_Player.update()		1010,	1010,	1001,	11,	1001,	101,	1010
2017-01-05 16:36:09 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:09 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:09 AI_Player.update()	update
2017-01-05 16:36:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:10 AI_Player.update()	Search took218ms
2017-01-05 16:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:36:10 AI_Player.update()		1010,	111,	1100,	1010,	1100,	1100,	110
2017-01-05 16:36:10 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-05 16:36:10 AI_Player.update()		1100,	111,	1001,	111,	1110,	11,	1100
2017-01-05 16:36:10 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-05 16:36:10 AI_Player.update()		1010,	1010,	1001,	11,	1001,	101,	1010
2017-01-05 16:36:10 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-05 16:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()	update
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()	update
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:10 AI_Player.update()	Search took248ms
2017-01-05 16:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-05 16:36:10 AI_Player.update()		1010,	111,	1100,	110,	1100,	1100,	110
2017-01-05 16:36:10 AI_Player.update()		1110,	1100,	1110,	111,	111,	110,	1011
2017-01-05 16:36:10 AI_Player.update()		1100,	111,	1001,	110,	1110,	11,	1100
2017-01-05 16:36:10 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-05 16:36:10 AI_Player.update()		1010,	1010,	1001,	11,	1001,	101,	1010
2017-01-05 16:36:10 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 16:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()	update
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:10 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:36:10 AI_Player.update()	Player a has won!
2017-01-05 16:36:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:10 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:36:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:10 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()	update
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:10 AI_Player.update()	Search took36ms
2017-01-05 16:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()		110,	111,	111,	1001,	111,	1101,	11
2017-01-05 16:36:10 AI_Player.update()		110,	1001,	1101,	101,	1010,	11,	110
2017-01-05 16:36:10 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:36:10 AI_Player.update()		1010,	101,	1101,	101,	11,	11,	111
2017-01-05 16:36:10 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	11,	1011
2017-01-05 16:36:10 AI_Player.update()		11,	101,	111,	110,	101,	1001,	11
2017-01-05 16:36:10 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1011,	1001
2017-01-05 16:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()	update
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()	update
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:10 AI_Player.update()	Search took90ms
2017-01-05 16:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()		110,	1100,	111,	1001,	111,	1101,	11
2017-01-05 16:36:10 AI_Player.update()		110,	111,	1101,	101,	1010,	11,	110
2017-01-05 16:36:10 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-05 16:36:10 AI_Player.update()		1010,	110,	1101,	101,	11,	11,	111
2017-01-05 16:36:10 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-05 16:36:10 AI_Player.update()		11,	1001,	111,	110,	101,	1001,	11
2017-01-05 16:36:10 AI_Player.update()		1100,	101,	1101,	110,	1101,	1011,	1001
2017-01-05 16:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()	update
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()	update
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:10 AI_Player.update()	Search took364ms
2017-01-05 16:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()		110,	111,	111,	1001,	111,	1101,	11
2017-01-05 16:36:10 AI_Player.update()		110,	1001,	1101,	101,	1010,	11,	110
2017-01-05 16:36:10 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:36:10 AI_Player.update()		1010,	101,	1101,	101,	11,	11,	111
2017-01-05 16:36:10 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	11,	1011
2017-01-05 16:36:10 AI_Player.update()		11,	101,	111,	110,	101,	1001,	11
2017-01-05 16:36:10 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1011,	1001
2017-01-05 16:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()	update
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()	update
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:10 AI_Player.update()	Search took108ms
2017-01-05 16:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()		110,	111,	111,	110,	111,	1101,	11
2017-01-05 16:36:10 AI_Player.update()		110,	1001,	1101,	1001,	1010,	11,	110
2017-01-05 16:36:10 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:36:10 AI_Player.update()		1010,	101,	1101,	101,	11,	11,	111
2017-01-05 16:36:10 AI_Player.update()		1110,	1001,	1101,	101,	1011,	11,	1011
2017-01-05 16:36:10 AI_Player.update()		11,	101,	111,	1001,	101,	1001,	11
2017-01-05 16:36:10 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1011,	1001
2017-01-05 16:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()	update
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:10 AI_Player.update()	update
2017-01-05 16:36:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:11 AI_Player.update()	Search took300ms
2017-01-05 16:36:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:11 AI_Player.update()		110,	1001,	111,	110,	111,	1101,	11
2017-01-05 16:36:11 AI_Player.update()		110,	110,	1101,	1001,	1010,	11,	110
2017-01-05 16:36:11 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 16:36:11 AI_Player.update()		1010,	1001,	1101,	101,	11,	11,	111
2017-01-05 16:36:11 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:36:11 AI_Player.update()		11,	1100,	111,	1001,	101,	1001,	11
2017-01-05 16:36:11 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-05 16:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:11 AI_Player.update()	update
2017-01-05 16:36:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:36:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:11 AI_Player.update()	update
2017-01-05 16:36:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:11 AI_Player.update()	Search took418ms
2017-01-05 16:36:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:11 AI_Player.update()		110,	1001,	111,	110,	111,	1101,	11
2017-01-05 16:36:11 AI_Player.update()		110,	110,	1101,	1001,	1010,	11,	110
2017-01-05 16:36:11 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 16:36:11 AI_Player.update()		111,	1010,	1001,	1101,	101,	11,	11
2017-01-05 16:36:11 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:36:11 AI_Player.update()		11,	1100,	111,	1001,	101,	1001,	11
2017-01-05 16:36:11 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-05 16:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:11 AI_Player.update()	update
2017-01-05 16:36:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:11 AI_Player.update()	update
2017-01-05 16:36:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:11 AI_Player.update()	Search took132ms
2017-01-05 16:36:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:11 AI_Player.update()		110,	1001,	111,	110,	111,	1101,	11
2017-01-05 16:36:11 AI_Player.update()		110,	110,	1101,	110,	1010,	11,	110
2017-01-05 16:36:11 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:36:11 AI_Player.update()		111,	1010,	1001,	101,	101,	11,	11
2017-01-05 16:36:11 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-05 16:36:11 AI_Player.update()		11,	1100,	111,	101,	101,	1001,	11
2017-01-05 16:36:11 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:11 AI_Player.update()	update
2017-01-05 16:36:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:11 AI_Player.update()	update
2017-01-05 16:36:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:11 AI_Player.update()	Search took138ms
2017-01-05 16:36:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:11 AI_Player.update()		110,	1001,	111,	110,	111,	1101,	11
2017-01-05 16:36:11 AI_Player.update()		110,	110,	1101,	110,	1010,	11,	110
2017-01-05 16:36:11 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:36:11 AI_Player.update()		11,	111,	1010,	1001,	101,	101,	11
2017-01-05 16:36:11 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-05 16:36:11 AI_Player.update()		11,	1100,	111,	101,	101,	1001,	11
2017-01-05 16:36:11 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:11 AI_Player.update()	update
2017-01-05 16:36:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:11 AI_Player.update()	update
2017-01-05 16:36:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:12 AI_Player.update()	Search took217ms
2017-01-05 16:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()		110,	1001,	111,	1001,	111,	1101,	11
2017-01-05 16:36:12 AI_Player.update()		110,	110,	1101,	110,	1010,	11,	110
2017-01-05 16:36:12 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-05 16:36:12 AI_Player.update()		11,	111,	1010,	1001,	101,	101,	11
2017-01-05 16:36:12 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-05 16:36:12 AI_Player.update()		11,	1100,	111,	1101,	101,	1001,	11
2017-01-05 16:36:12 AI_Player.update()		1100,	111,	1101,	101,	1101,	1011,	1001
2017-01-05 16:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()	update
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()	update
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:12 AI_Player.update()	Search took154ms
2017-01-05 16:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()		110,	1001,	111,	110,	111,	1101,	11
2017-01-05 16:36:12 AI_Player.update()		110,	110,	1101,	110,	1010,	11,	110
2017-01-05 16:36:12 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:36:12 AI_Player.update()		11,	111,	1010,	1001,	101,	101,	11
2017-01-05 16:36:12 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-05 16:36:12 AI_Player.update()		11,	1100,	111,	101,	101,	1001,	11
2017-01-05 16:36:12 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()	update
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()	update
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:12 AI_Player.update()	Search took134ms
2017-01-05 16:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()		110,	110,	111,	110,	111,	1101,	11
2017-01-05 16:36:12 AI_Player.update()		110,	101,	1101,	110,	1010,	11,	110
2017-01-05 16:36:12 AI_Player.update()		1110,	111,	1110,	1001,	111,	1010,	1011
2017-01-05 16:36:12 AI_Player.update()		11,	101,	1010,	1001,	101,	101,	11
2017-01-05 16:36:12 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	11,	1011
2017-01-05 16:36:12 AI_Player.update()		11,	111,	111,	101,	101,	1001,	11
2017-01-05 16:36:12 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()	update
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()	update
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:12 AI_Player.update()	Search took186ms
2017-01-05 16:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()		110,	110,	111,	110,	111,	1101,	11
2017-01-05 16:36:12 AI_Player.update()		110,	101,	1101,	1001,	1010,	11,	110
2017-01-05 16:36:12 AI_Player.update()		1110,	111,	1110,	1001,	111,	1010,	1011
2017-01-05 16:36:12 AI_Player.update()		11,	101,	1010,	1101,	101,	101,	11
2017-01-05 16:36:12 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 16:36:12 AI_Player.update()		11,	111,	111,	1001,	101,	1001,	11
2017-01-05 16:36:12 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1011,	1001
2017-01-05 16:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()	update
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()	update
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:12 AI_Player.update()	Search took73ms
2017-01-05 16:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()		110,	110,	111,	110,	111,	1011,	11
2017-01-05 16:36:12 AI_Player.update()		110,	101,	1101,	1001,	1010,	1101,	110
2017-01-05 16:36:12 AI_Player.update()		1110,	111,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:12 AI_Player.update()		11,	101,	1010,	1101,	101,	1010,	11
2017-01-05 16:36:12 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:12 AI_Player.update()		11,	111,	111,	1001,	101,	11,	11
2017-01-05 16:36:12 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1001,	1001
2017-01-05 16:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()	update
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()	update
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:12 AI_Player.update()	Search took233ms
2017-01-05 16:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()		110,	110,	111,	110,	111,	1011,	11
2017-01-05 16:36:12 AI_Player.update()		110,	101,	1101,	1001,	1010,	1101,	110
2017-01-05 16:36:12 AI_Player.update()		1110,	111,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:12 AI_Player.update()		11,	11,	101,	1010,	1101,	101,	1010
2017-01-05 16:36:12 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:12 AI_Player.update()		11,	111,	111,	1001,	101,	11,	11
2017-01-05 16:36:12 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1001,	1001
2017-01-05 16:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()	update
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:12 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:12 AI_Player.update()	update
2017-01-05 16:36:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:13 AI_Player.update()	Search took231ms
2017-01-05 16:36:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:13 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-05 16:36:13 AI_Player.update()		110,	101,	1101,	1001,	1010,	1011,	110
2017-01-05 16:36:13 AI_Player.update()		1110,	111,	1110,	1001,	111,	1101,	1011
2017-01-05 16:36:13 AI_Player.update()		11,	11,	101,	1010,	1101,	11,	1010
2017-01-05 16:36:13 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:13 AI_Player.update()		11,	111,	111,	1001,	101,	101,	11
2017-01-05 16:36:13 AI_Player.update()		1100,	1001,	1101,	110,	1101,	11,	1001
2017-01-05 16:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:13 AI_Player.update()	update
2017-01-05 16:36:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:36:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:13 AI_Player.update()	update
2017-01-05 16:36:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:13 AI_Player.update()	Search took244ms
2017-01-05 16:36:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:13 AI_Player.update()		110,	101,	111,	110,	111,	1001,	11
2017-01-05 16:36:13 AI_Player.update()		110,	111,	1101,	1001,	1010,	1011,	110
2017-01-05 16:36:13 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-05 16:36:13 AI_Player.update()		11,	1100,	101,	1010,	1101,	11,	1010
2017-01-05 16:36:13 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:13 AI_Player.update()		11,	1001,	111,	1001,	101,	101,	11
2017-01-05 16:36:13 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-05 16:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:13 AI_Player.update()	update
2017-01-05 16:36:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:13 AI_Player.update()	update
2017-01-05 16:36:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:13 AI_Player.update()	Search took355ms
2017-01-05 16:36:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:13 AI_Player.update()		110,	101,	111,	110,	111,	1001,	11
2017-01-05 16:36:13 AI_Player.update()		110,	111,	1101,	1001,	1010,	1011,	110
2017-01-05 16:36:13 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-05 16:36:13 AI_Player.update()		1010,	11,	1100,	101,	1010,	1101,	11
2017-01-05 16:36:13 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:13 AI_Player.update()		11,	1001,	111,	1001,	101,	101,	11
2017-01-05 16:36:13 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-05 16:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:13 AI_Player.update()	update
2017-01-05 16:36:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:13 AI_Player.update()	update
2017-01-05 16:36:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:14 AI_Player.update()	Search took184ms
2017-01-05 16:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()		110,	101,	111,	110,	111,	1001,	11
2017-01-05 16:36:14 AI_Player.update()		110,	111,	1101,	1001,	1010,	1011,	110
2017-01-05 16:36:14 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-05 16:36:14 AI_Player.update()		11,	1100,	101,	1010,	1101,	11,	1010
2017-01-05 16:36:14 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:14 AI_Player.update()		11,	1001,	111,	1001,	101,	101,	11
2017-01-05 16:36:14 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-05 16:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()	update
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()	update
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:14 AI_Player.update()	Search took197ms
2017-01-05 16:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()		110,	101,	111,	110,	111,	1001,	11
2017-01-05 16:36:14 AI_Player.update()		110,	111,	1101,	1001,	1010,	1011,	110
2017-01-05 16:36:14 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-05 16:36:14 AI_Player.update()		1010,	11,	1100,	101,	1010,	1101,	11
2017-01-05 16:36:14 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:14 AI_Player.update()		11,	1001,	111,	1001,	101,	101,	11
2017-01-05 16:36:14 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-05 16:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()	update
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:14 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:36:14 AI_Player.update()	Player a has won!
2017-01-05 16:36:14 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:14 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:36:14 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:14 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()	update
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:14 AI_Player.update()	Search took87ms
2017-01-05 16:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:36:14 AI_Player.update()		1010,	11,	11,	110,	1010,	1110,	110
2017-01-05 16:36:14 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-05 16:36:14 AI_Player.update()		1100,	101,	1010,	1011,	1101,	1011,	1001
2017-01-05 16:36:14 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1110,	1011
2017-01-05 16:36:14 AI_Player.update()		101,	1100,	101,	1011,	101,	1001,	101
2017-01-05 16:36:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()	update
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()	update
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:14 AI_Player.update()	Search took102ms
2017-01-05 16:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:36:14 AI_Player.update()		11,	11,	110,	1010,	1110,	110,	1010
2017-01-05 16:36:14 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-05 16:36:14 AI_Player.update()		1100,	101,	1010,	1011,	1101,	1011,	1001
2017-01-05 16:36:14 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1110,	1011
2017-01-05 16:36:14 AI_Player.update()		101,	1100,	101,	1011,	101,	1001,	101
2017-01-05 16:36:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()	update
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()	update
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:14 AI_Player.update()	Search took496ms
2017-01-05 16:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:36:14 AI_Player.update()		11,	11,	110,	1010,	1110,	110,	1010
2017-01-05 16:36:14 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-05 16:36:14 AI_Player.update()		1100,	101,	1010,	1011,	1101,	1011,	1001
2017-01-05 16:36:14 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1110,	1011
2017-01-05 16:36:14 AI_Player.update()		1100,	101,	1011,	101,	1001,	101,	101
2017-01-05 16:36:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()	update
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:14 AI_Player.update()	update
2017-01-05 16:36:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:15 AI_Player.update()	Search took343ms
2017-01-05 16:36:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:15 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:36:15 AI_Player.update()		1010,	11,	11,	110,	1010,	1110,	110
2017-01-05 16:36:15 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-05 16:36:15 AI_Player.update()		1100,	101,	1010,	1011,	1101,	1011,	1001
2017-01-05 16:36:15 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1110,	1011
2017-01-05 16:36:15 AI_Player.update()		1100,	101,	1011,	101,	1001,	101,	101
2017-01-05 16:36:15 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:15 AI_Player.update()	update
2017-01-05 16:36:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:15 AI_Player.update()	update
2017-01-05 16:36:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:15 AI_Player.update()	Search took475ms
2017-01-05 16:36:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:15 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:36:15 AI_Player.update()		1010,	11,	11,	110,	1010,	1110,	110
2017-01-05 16:36:15 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-05 16:36:15 AI_Player.update()		1001,	1100,	101,	1010,	1011,	1101,	1011
2017-01-05 16:36:15 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1110,	1011
2017-01-05 16:36:15 AI_Player.update()		1100,	101,	1011,	101,	1001,	101,	101
2017-01-05 16:36:15 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:15 AI_Player.update()	update
2017-01-05 16:36:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:15 AI_Player.update()	update
2017-01-05 16:36:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:15 AI_Player.update()	Search took218ms
2017-01-05 16:36:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:15 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:36:15 AI_Player.update()		1010,	11,	11,	1010,	1010,	1110,	110
2017-01-05 16:36:15 AI_Player.update()		1110,	11,	1110,	110,	111,	1101,	1011
2017-01-05 16:36:15 AI_Player.update()		1001,	1100,	101,	1001,	1011,	1101,	1011
2017-01-05 16:36:15 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:36:15 AI_Player.update()		1100,	101,	1011,	110,	1001,	101,	101
2017-01-05 16:36:15 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 16:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:15 AI_Player.update()	update
2017-01-05 16:36:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:15 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:15 AI_Player.update()	update
2017-01-05 16:36:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:16 AI_Player.update()	Search took365ms
2017-01-05 16:36:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:16 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-05 16:36:16 AI_Player.update()		1010,	11,	11,	1010,	1010,	1110,	110
2017-01-05 16:36:16 AI_Player.update()		1110,	1100,	1110,	110,	111,	1101,	1011
2017-01-05 16:36:16 AI_Player.update()		1001,	1101,	101,	1001,	1011,	1101,	1011
2017-01-05 16:36:16 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:36:16 AI_Player.update()		1100,	1100,	1011,	110,	1001,	101,	101
2017-01-05 16:36:16 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 16:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:16 AI_Player.update()	update
2017-01-05 16:36:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:16 AI_Player.update()	update
2017-01-05 16:36:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:16 AI_Player.update()	Search took430ms
2017-01-05 16:36:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:16 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-05 16:36:16 AI_Player.update()		1010,	11,	11,	1010,	1010,	1110,	110
2017-01-05 16:36:16 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-05 16:36:16 AI_Player.update()		1001,	1101,	101,	110,	1011,	1101,	1011
2017-01-05 16:36:16 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:36:16 AI_Player.update()		1100,	1100,	1011,	1010,	1001,	101,	101
2017-01-05 16:36:16 AI_Player.update()		1100,	110,	1101,	110,	1101,	1010,	1001
2017-01-05 16:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:16 AI_Player.update()	update
2017-01-05 16:36:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:16 AI_Player.update()	update
2017-01-05 16:36:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:16 AI_Player.update()	Search took129ms
2017-01-05 16:36:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:16 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:36:16 AI_Player.update()		1010,	11,	11,	1010,	1010,	1110,	110
2017-01-05 16:36:16 AI_Player.update()		1110,	11,	1110,	1010,	111,	1101,	1011
2017-01-05 16:36:16 AI_Player.update()		1001,	1100,	101,	110,	1011,	1101,	1011
2017-01-05 16:36:16 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:36:16 AI_Player.update()		1100,	101,	1011,	1010,	1001,	101,	101
2017-01-05 16:36:16 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-05 16:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:16 AI_Player.update()	update
2017-01-05 16:36:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:16 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:16 AI_Player.update()	update
2017-01-05 16:36:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:17 AI_Player.update()	Search took135ms
2017-01-05 16:36:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:17 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:36:17 AI_Player.update()		1010,	11,	11,	1010,	1010,	1110,	110
2017-01-05 16:36:17 AI_Player.update()		1110,	11,	1110,	1010,	111,	1101,	1011
2017-01-05 16:36:17 AI_Player.update()		1001,	1100,	101,	110,	1011,	1101,	1011
2017-01-05 16:36:17 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:36:17 AI_Player.update()		101,	1100,	101,	1011,	1010,	1001,	101
2017-01-05 16:36:17 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-05 16:36:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:17 AI_Player.update()	update
2017-01-05 16:36:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:17 AI_Player.update()	update
2017-01-05 16:36:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:17 AI_Player.update()	Search took592ms
2017-01-05 16:36:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:17 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:36:17 AI_Player.update()		11,	11,	1010,	1010,	1110,	110,	1010
2017-01-05 16:36:17 AI_Player.update()		1110,	11,	1110,	1010,	111,	1101,	1011
2017-01-05 16:36:17 AI_Player.update()		1001,	1100,	101,	110,	1011,	1101,	1011
2017-01-05 16:36:17 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:36:17 AI_Player.update()		101,	1100,	101,	1011,	1010,	1001,	101
2017-01-05 16:36:17 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-05 16:36:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:17 AI_Player.update()	update
2017-01-05 16:36:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:17 AI_Player.update()	update
2017-01-05 16:36:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:18 AI_Player.update()	Search took845ms
2017-01-05 16:36:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:18 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 16:36:18 AI_Player.update()		11,	11,	1010,	1010,	1110,	1101,	1010
2017-01-05 16:36:18 AI_Player.update()		1110,	11,	1110,	1010,	111,	1101,	1011
2017-01-05 16:36:18 AI_Player.update()		1001,	1100,	101,	110,	1011,	1110,	1011
2017-01-05 16:36:18 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:36:18 AI_Player.update()		101,	1100,	101,	1011,	1010,	1010,	101
2017-01-05 16:36:18 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1001,	1001
2017-01-05 16:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:18 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:18 AI_Player.update()	update
2017-01-05 16:36:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:18 AI_Player.update()	update
2017-01-05 16:36:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:19 AI_Player.update()	Search took790ms
2017-01-05 16:36:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:19 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 16:36:19 AI_Player.update()		11,	11,	1010,	1010,	1110,	1101,	1010
2017-01-05 16:36:19 AI_Player.update()		1110,	11,	1110,	1010,	111,	1101,	1011
2017-01-05 16:36:19 AI_Player.update()		1001,	1100,	101,	110,	1011,	1110,	1011
2017-01-05 16:36:19 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:36:19 AI_Player.update()		101,	101,	1100,	101,	1011,	1010,	1010
2017-01-05 16:36:19 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1001,	1001
2017-01-05 16:36:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:19 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:19 AI_Player.update()	update
2017-01-05 16:36:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:19 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:19 AI_Player.update()	update
2017-01-05 16:36:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:20 AI_Player.update()	Search took1447ms
2017-01-05 16:36:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:20 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-05 16:36:20 AI_Player.update()		11,	11,	1010,	1010,	1110,	1101,	1010
2017-01-05 16:36:20 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-05 16:36:20 AI_Player.update()		1001,	1101,	101,	110,	1011,	1110,	1011
2017-01-05 16:36:20 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:36:20 AI_Player.update()		101,	1100,	1100,	101,	1011,	1010,	1010
2017-01-05 16:36:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	1001,	1001
2017-01-05 16:36:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:20 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:20 AI_Player.update()	update
2017-01-05 16:36:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:20 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:36:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:20 AI_Player.update()	update
2017-01-05 16:36:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:21 AI_Player.update()	Search took995ms
2017-01-05 16:36:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:21 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-05 16:36:21 AI_Player.update()		11,	11,	1010,	101,	1110,	1101,	1010
2017-01-05 16:36:21 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-05 16:36:21 AI_Player.update()		1001,	1101,	101,	1010,	1011,	1110,	1011
2017-01-05 16:36:21 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 16:36:21 AI_Player.update()		101,	1100,	1100,	1001,	1011,	1010,	1010
2017-01-05 16:36:21 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:36:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:21 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:36:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:21 AI_Player.update()	update
2017-01-05 16:36:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:21 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:21 AI_Player.update()	update
2017-01-05 16:36:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:22 AI_Player.update()	Search took384ms
2017-01-05 16:36:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:22 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-05 16:36:22 AI_Player.update()		11,	11,	1010,	110,	1110,	1101,	1010
2017-01-05 16:36:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-05 16:36:22 AI_Player.update()		1001,	1101,	101,	1010,	1011,	1110,	1011
2017-01-05 16:36:22 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:36:22 AI_Player.update()		101,	1100,	1100,	110,	1011,	1010,	1010
2017-01-05 16:36:22 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:36:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:22 AI_Player.update()	update
2017-01-05 16:36:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:36:22 AI_Player.update()	Player b has won!
2017-01-05 16:36:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:22 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:36:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:22 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:36:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:22 AI_Player.update()	update
2017-01-05 16:36:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:22 AI_Player.update()	Search took155ms
2017-01-05 16:36:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:22 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 16:36:22 AI_Player.update()		110,	110,	1010,	101,	1110,	101,	1110
2017-01-05 16:36:22 AI_Player.update()		1110,	1100,	1110,	110,	111,	1010,	1011
2017-01-05 16:36:22 AI_Player.update()		101,	1010,	1010,	1010,	101,	1010,	1110
2017-01-05 16:36:22 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:22 AI_Player.update()		1010,	101,	110,	1010,	1100,	1100,	110
2017-01-05 16:36:22 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-05 16:36:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:22 AI_Player.update()	update
2017-01-05 16:36:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:22 AI_Player.update()	update
2017-01-05 16:36:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:22 AI_Player.update()	Search took212ms
2017-01-05 16:36:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:22 AI_Player.update()		110,	1011,	111,	101,	111,	1010,	11
2017-01-05 16:36:22 AI_Player.update()		110,	101,	1010,	101,	1110,	101,	1110
2017-01-05 16:36:22 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-05 16:36:22 AI_Player.update()		101,	1100,	1010,	1010,	101,	1010,	1110
2017-01-05 16:36:22 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:22 AI_Player.update()		1010,	110,	110,	1010,	1100,	1100,	110
2017-01-05 16:36:22 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 16:36:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:22 AI_Player.update()	update
2017-01-05 16:36:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:22 AI_Player.update()	update
2017-01-05 16:36:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:22 AI_Player.update()	Search took330ms
2017-01-05 16:36:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:22 AI_Player.update()		110,	1011,	111,	101,	111,	110,	11
2017-01-05 16:36:22 AI_Player.update()		110,	101,	1010,	101,	1110,	1010,	1110
2017-01-05 16:36:22 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 16:36:22 AI_Player.update()		101,	1100,	1010,	1010,	101,	1010,	1110
2017-01-05 16:36:22 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-05 16:36:22 AI_Player.update()		1010,	110,	110,	1010,	1100,	110,	110
2017-01-05 16:36:22 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:36:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:22 AI_Player.update()	update
2017-01-05 16:36:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:36:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:22 AI_Player.update()	update
2017-01-05 16:36:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:23 AI_Player.update()	Search took267ms
2017-01-05 16:36:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:23 AI_Player.update()		110,	1011,	111,	101,	111,	110,	11
2017-01-05 16:36:23 AI_Player.update()		110,	101,	1010,	101,	1110,	1010,	1110
2017-01-05 16:36:23 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 16:36:23 AI_Player.update()		1110,	101,	1100,	1010,	1010,	101,	1010
2017-01-05 16:36:23 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-05 16:36:23 AI_Player.update()		1010,	110,	110,	1010,	1100,	110,	110
2017-01-05 16:36:23 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:36:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:36:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:23 AI_Player.update()	update
2017-01-05 16:36:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:23 AI_Player.update()	update
2017-01-05 16:36:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:23 AI_Player.update()	Search took592ms
2017-01-05 16:36:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:23 AI_Player.update()		110,	1011,	111,	101,	111,	110,	11
2017-01-05 16:36:23 AI_Player.update()		110,	101,	1010,	101,	1110,	1010,	1110
2017-01-05 16:36:23 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 16:36:23 AI_Player.update()		1110,	101,	1100,	110,	1010,	101,	1010
2017-01-05 16:36:23 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:36:23 AI_Player.update()		1010,	110,	110,	101,	1100,	110,	110
2017-01-05 16:36:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:36:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:23 AI_Player.update()	update
2017-01-05 16:36:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:36:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:23 AI_Player.update()	update
2017-01-05 16:36:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:23 AI_Player.update()	Search took207ms
2017-01-05 16:36:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:23 AI_Player.update()		110,	1011,	111,	101,	111,	110,	11
2017-01-05 16:36:23 AI_Player.update()		110,	101,	1010,	101,	1110,	1010,	1110
2017-01-05 16:36:23 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 16:36:23 AI_Player.update()		1010,	1110,	101,	1100,	110,	1010,	101
2017-01-05 16:36:23 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:36:23 AI_Player.update()		1010,	110,	110,	101,	1100,	110,	110
2017-01-05 16:36:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:36:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:36:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:23 AI_Player.update()	update
2017-01-05 16:36:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:23 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:36:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:23 AI_Player.update()	update
2017-01-05 16:36:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:24 AI_Player.update()	Search took340ms
2017-01-05 16:36:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:24 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 16:36:24 AI_Player.update()		110,	110,	1010,	101,	1110,	1010,	1110
2017-01-05 16:36:24 AI_Player.update()		1110,	1110,	1110,	101,	111,	101,	1011
2017-01-05 16:36:24 AI_Player.update()		1010,	1010,	101,	1100,	110,	1010,	101
2017-01-05 16:36:24 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:36:24 AI_Player.update()		1010,	101,	110,	101,	1100,	110,	110
2017-01-05 16:36:24 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:36:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:36:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:24 AI_Player.update()	update
2017-01-05 16:36:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:36:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:24 AI_Player.update()	update
2017-01-05 16:36:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:24 AI_Player.update()	Search took188ms
2017-01-05 16:36:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:24 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 16:36:24 AI_Player.update()		110,	110,	1010,	101,	1110,	1010,	1110
2017-01-05 16:36:24 AI_Player.update()		1110,	1110,	1110,	101,	111,	101,	1011
2017-01-05 16:36:24 AI_Player.update()		1010,	101,	1100,	110,	1010,	101,	1010
2017-01-05 16:36:24 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:36:24 AI_Player.update()		1010,	101,	110,	101,	1100,	110,	110
2017-01-05 16:36:24 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:36:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:36:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:24 AI_Player.update()	update
2017-01-05 16:36:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:36:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:24 AI_Player.update()	update
2017-01-05 16:36:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:25 AI_Player.update()	Search took579ms
2017-01-05 16:36:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 16:36:25 AI_Player.update()		1110,	110,	110,	1010,	101,	1110,	1010
2017-01-05 16:36:25 AI_Player.update()		1110,	1110,	1110,	101,	111,	101,	1011
2017-01-05 16:36:25 AI_Player.update()		1010,	101,	1100,	110,	1010,	101,	1010
2017-01-05 16:36:25 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:36:25 AI_Player.update()		1010,	101,	110,	101,	1100,	110,	110
2017-01-05 16:36:25 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:36:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()	update
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:36:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()	update
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:25 AI_Player.update()	Search took484ms
2017-01-05 16:36:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 16:36:25 AI_Player.update()		1110,	110,	110,	101,	101,	1110,	1010
2017-01-05 16:36:25 AI_Player.update()		1110,	1110,	1110,	110,	111,	101,	1011
2017-01-05 16:36:25 AI_Player.update()		1010,	101,	1100,	1010,	1010,	101,	1010
2017-01-05 16:36:25 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 16:36:25 AI_Player.update()		1010,	101,	110,	1010,	1100,	110,	110
2017-01-05 16:36:25 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-05 16:36:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()	update
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()	update
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:25 AI_Player.update()	Search took50ms
2017-01-05 16:36:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 16:36:25 AI_Player.update()		1110,	110,	110,	110,	101,	1110,	1010
2017-01-05 16:36:25 AI_Player.update()		1110,	1110,	1110,	1010,	111,	101,	1011
2017-01-05 16:36:25 AI_Player.update()		1010,	101,	1100,	101,	1010,	101,	1010
2017-01-05 16:36:25 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:36:25 AI_Player.update()		1010,	101,	110,	101,	1100,	110,	110
2017-01-05 16:36:25 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:36:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()	update
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:25 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:36:25 AI_Player.update()	Player a has won!
2017-01-05 16:36:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:25 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:36:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:25 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:36:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()	update
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:25 AI_Player.update()	Search took24ms
2017-01-05 16:36:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 16:36:25 AI_Player.update()		1011,	1001,	110,	101,	110,	1100,	110
2017-01-05 16:36:25 AI_Player.update()		1110,	111,	1110,	1110,	111,	1010,	1011
2017-01-05 16:36:25 AI_Player.update()		1100,	101,	1010,	111,	1011,	1001,	110
2017-01-05 16:36:25 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-05 16:36:25 AI_Player.update()		110,	101,	1110,	1100,	11,	1011,	1100
2017-01-05 16:36:25 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	101,	1001
2017-01-05 16:36:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()	update
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()	update
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:25 AI_Player.update()	Search took29ms
2017-01-05 16:36:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 16:36:25 AI_Player.update()		1001,	110,	101,	110,	1100,	110,	1011
2017-01-05 16:36:25 AI_Player.update()		1110,	111,	1110,	1110,	111,	1010,	1011
2017-01-05 16:36:25 AI_Player.update()		1100,	101,	1010,	111,	1011,	1001,	110
2017-01-05 16:36:25 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-05 16:36:25 AI_Player.update()		110,	101,	1110,	1100,	11,	1011,	1100
2017-01-05 16:36:25 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	101,	1001
2017-01-05 16:36:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()	update
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()	update
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:25 AI_Player.update()	Search took86ms
2017-01-05 16:36:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 16:36:25 AI_Player.update()		1001,	1010,	101,	110,	1100,	110,	1011
2017-01-05 16:36:25 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-05 16:36:25 AI_Player.update()		1100,	111,	1010,	111,	1011,	1001,	110
2017-01-05 16:36:25 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:36:25 AI_Player.update()		110,	1100,	1110,	1100,	11,	1011,	1100
2017-01-05 16:36:25 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-05 16:36:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()	update
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:25 AI_Player.update()	update
2017-01-05 16:36:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:26 AI_Player.update()	Search took205ms
2017-01-05 16:36:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:26 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:36:26 AI_Player.update()		1001,	1010,	101,	110,	1100,	1010,	1011
2017-01-05 16:36:26 AI_Player.update()		1110,	110,	1110,	1110,	111,	1001,	1011
2017-01-05 16:36:26 AI_Player.update()		1100,	111,	1010,	111,	1011,	101,	110
2017-01-05 16:36:26 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1011,	1011
2017-01-05 16:36:26 AI_Player.update()		110,	1100,	1110,	1100,	11,	101,	1100
2017-01-05 16:36:26 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-05 16:36:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:26 AI_Player.update()	update
2017-01-05 16:36:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:26 AI_Player.update()	update
2017-01-05 16:36:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:26 AI_Player.update()	Search took544ms
2017-01-05 16:36:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:26 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-05 16:36:26 AI_Player.update()		1001,	1010,	101,	110,	1100,	1001,	1011
2017-01-05 16:36:26 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-05 16:36:26 AI_Player.update()		1100,	111,	1010,	111,	1011,	1011,	110
2017-01-05 16:36:26 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:36:26 AI_Player.update()		110,	1100,	1110,	1100,	11,	1100,	1100
2017-01-05 16:36:26 AI_Player.update()		1100,	101,	1101,	1011,	1101,	110,	1001
2017-01-05 16:36:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:26 AI_Player.update()	update
2017-01-05 16:36:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:26 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:26 AI_Player.update()	update
2017-01-05 16:36:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:27 AI_Player.update()	Search took558ms
2017-01-05 16:36:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:27 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:36:27 AI_Player.update()		1001,	1010,	101,	110,	1100,	1010,	1011
2017-01-05 16:36:27 AI_Player.update()		1110,	110,	1110,	1110,	111,	1001,	1011
2017-01-05 16:36:27 AI_Player.update()		1100,	111,	1010,	111,	1011,	101,	110
2017-01-05 16:36:27 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1011,	1011
2017-01-05 16:36:27 AI_Player.update()		110,	1100,	1110,	1100,	11,	101,	1100
2017-01-05 16:36:27 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-05 16:36:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:27 AI_Player.update()	update
2017-01-05 16:36:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:27 AI_Player.update()	update
2017-01-05 16:36:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:27 AI_Player.update()	Search took582ms
2017-01-05 16:36:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:27 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:36:27 AI_Player.update()		1001,	1010,	101,	110,	1100,	1010,	1011
2017-01-05 16:36:27 AI_Player.update()		1110,	110,	1110,	1110,	111,	1001,	1011
2017-01-05 16:36:27 AI_Player.update()		111,	1010,	111,	1011,	101,	110,	1100
2017-01-05 16:36:27 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1011,	1011
2017-01-05 16:36:27 AI_Player.update()		110,	1100,	1110,	1100,	11,	101,	1100
2017-01-05 16:36:27 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-05 16:36:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:27 AI_Player.update()	update
2017-01-05 16:36:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:27 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:27 AI_Player.update()	update
2017-01-05 16:36:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:28 AI_Player.update()	Search took384ms
2017-01-05 16:36:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:36:28 AI_Player.update()		1011,	1001,	1010,	101,	110,	1100,	1010
2017-01-05 16:36:28 AI_Player.update()		1110,	110,	1110,	1110,	111,	1001,	1011
2017-01-05 16:36:28 AI_Player.update()		111,	1010,	111,	1011,	101,	110,	1100
2017-01-05 16:36:28 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1011,	1011
2017-01-05 16:36:28 AI_Player.update()		110,	1100,	1110,	1100,	11,	101,	1100
2017-01-05 16:36:28 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-05 16:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()	update
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()	update
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:28 AI_Player.update()	Search took133ms
2017-01-05 16:36:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:36:28 AI_Player.update()		1011,	1001,	1010,	101,	110,	1100,	1010
2017-01-05 16:36:28 AI_Player.update()		1110,	110,	1110,	1110,	111,	1001,	1011
2017-01-05 16:36:28 AI_Player.update()		1010,	111,	1011,	101,	110,	1100,	111
2017-01-05 16:36:28 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1011,	1011
2017-01-05 16:36:28 AI_Player.update()		110,	1100,	1110,	1100,	11,	101,	1100
2017-01-05 16:36:28 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-05 16:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()	update
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()	update
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:28 AI_Player.update()	Search took79ms
2017-01-05 16:36:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:36:28 AI_Player.update()		1001,	1010,	101,	110,	1100,	1010,	1011
2017-01-05 16:36:28 AI_Player.update()		1110,	110,	1110,	1110,	111,	1001,	1011
2017-01-05 16:36:28 AI_Player.update()		1010,	111,	1011,	101,	110,	1100,	111
2017-01-05 16:36:28 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1011,	1011
2017-01-05 16:36:28 AI_Player.update()		110,	1100,	1110,	1100,	11,	101,	1100
2017-01-05 16:36:28 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-05 16:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()	update
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()	update
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:28 AI_Player.update()	Search took93ms
2017-01-05 16:36:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:36:28 AI_Player.update()		1011,	1001,	1010,	101,	110,	1100,	1010
2017-01-05 16:36:28 AI_Player.update()		1110,	110,	1110,	1110,	111,	1001,	1011
2017-01-05 16:36:28 AI_Player.update()		1010,	111,	1011,	101,	110,	1100,	111
2017-01-05 16:36:28 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1011,	1011
2017-01-05 16:36:28 AI_Player.update()		110,	1100,	1110,	1100,	11,	101,	1100
2017-01-05 16:36:28 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-05 16:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()	update
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()	update
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:28 AI_Player.update()	Search took46ms
2017-01-05 16:36:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 16:36:28 AI_Player.update()		1011,	1001,	1010,	1110,	110,	1100,	1010
2017-01-05 16:36:28 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 16:36:28 AI_Player.update()		1010,	111,	1011,	1001,	110,	1100,	111
2017-01-05 16:36:28 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:36:28 AI_Player.update()		110,	1100,	1110,	1011,	11,	101,	1100
2017-01-05 16:36:28 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()	update
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:36:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()	update
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:28 AI_Player.update()	Search took105ms
2017-01-05 16:36:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 16:36:28 AI_Player.update()		1011,	1001,	1010,	1110,	110,	1100,	1010
2017-01-05 16:36:28 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 16:36:28 AI_Player.update()		1010,	111,	1011,	1001,	110,	1100,	111
2017-01-05 16:36:28 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:36:28 AI_Player.update()		1100,	110,	1100,	1110,	1011,	11,	101
2017-01-05 16:36:28 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()	update
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:28 AI_Player.update()	update
2017-01-05 16:36:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:29 AI_Player.update()	Search took437ms
2017-01-05 16:36:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:29 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 16:36:29 AI_Player.update()		1011,	110,	1010,	1110,	110,	1100,	1010
2017-01-05 16:36:29 AI_Player.update()		1110,	111,	1110,	101,	111,	1001,	1011
2017-01-05 16:36:29 AI_Player.update()		1010,	101,	1011,	1001,	110,	1100,	111
2017-01-05 16:36:29 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:36:29 AI_Player.update()		1100,	101,	1100,	1110,	1011,	11,	101
2017-01-05 16:36:29 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:36:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:29 AI_Player.update()	update
2017-01-05 16:36:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:36:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:29 AI_Player.update()	update
2017-01-05 16:36:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:29 AI_Player.update()	Search took306ms
2017-01-05 16:36:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:29 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 16:36:29 AI_Player.update()		1011,	111,	1010,	1110,	110,	1100,	1010
2017-01-05 16:36:29 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 16:36:29 AI_Player.update()		1010,	110,	1011,	1001,	110,	1100,	111
2017-01-05 16:36:29 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:36:29 AI_Player.update()		1100,	1010,	1100,	1110,	1011,	11,	101
2017-01-05 16:36:29 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:36:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:36:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:29 AI_Player.update()	update
2017-01-05 16:36:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:36:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:29 AI_Player.update()	update
2017-01-05 16:36:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:29 AI_Player.update()	Search took439ms
2017-01-05 16:36:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:29 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 16:36:29 AI_Player.update()		111,	1010,	1110,	110,	1100,	1010,	1011
2017-01-05 16:36:29 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 16:36:29 AI_Player.update()		1010,	110,	1011,	1001,	110,	1100,	111
2017-01-05 16:36:29 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:36:29 AI_Player.update()		1100,	1010,	1100,	1110,	1011,	11,	101
2017-01-05 16:36:29 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:36:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:36:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:29 AI_Player.update()	update
2017-01-05 16:36:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:29 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:36:29 AI_Player.update()	Player b has won!
2017-01-05 16:36:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:29 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:36:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:29 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:36:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:29 AI_Player.update()	update
2017-01-05 16:36:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:30 AI_Player.update()	Search took236ms
2017-01-05 16:36:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:30 AI_Player.update()		110,	11,	111,	1010,	111,	1010,	11
2017-01-05 16:36:30 AI_Player.update()		1010,	1100,	1011,	1001,	111,	11,	1010
2017-01-05 16:36:30 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-05 16:36:30 AI_Player.update()		1100,	1110,	101,	1100,	1001,	1001,	110
2017-01-05 16:36:30 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-05 16:36:30 AI_Player.update()		111,	101,	1010,	101,	101,	110,	1011
2017-01-05 16:36:30 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-05 16:36:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:30 AI_Player.update()	update
2017-01-05 16:36:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:30 AI_Player.update()	update
2017-01-05 16:36:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:30 AI_Player.update()	Search took128ms
2017-01-05 16:36:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:30 AI_Player.update()		110,	11,	111,	1010,	111,	1010,	11
2017-01-05 16:36:30 AI_Player.update()		1010,	1100,	1011,	1001,	111,	11,	1010
2017-01-05 16:36:30 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-05 16:36:30 AI_Player.update()		110,	1100,	1110,	101,	1100,	1001,	1001
2017-01-05 16:36:30 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-05 16:36:30 AI_Player.update()		111,	101,	1010,	101,	101,	110,	1011
2017-01-05 16:36:30 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-05 16:36:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:30 AI_Player.update()	update
2017-01-05 16:36:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:30 AI_Player.update()	update
2017-01-05 16:36:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:30 AI_Player.update()	Search took585ms
2017-01-05 16:36:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-05 16:36:30 AI_Player.update()		1010,	11,	1011,	1001,	111,	11,	1010
2017-01-05 16:36:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-05 16:36:30 AI_Player.update()		110,	110,	1110,	101,	1100,	1001,	1001
2017-01-05 16:36:30 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-05 16:36:30 AI_Player.update()		111,	1110,	1010,	101,	101,	110,	1011
2017-01-05 16:36:30 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-05 16:36:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:30 AI_Player.update()	update
2017-01-05 16:36:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:30 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:30 AI_Player.update()	update
2017-01-05 16:36:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:31 AI_Player.update()	Search took278ms
2017-01-05 16:36:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:31 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 16:36:31 AI_Player.update()		1010,	11,	1011,	1001,	111,	1100,	1010
2017-01-05 16:36:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 16:36:31 AI_Player.update()		110,	110,	1110,	101,	1100,	1101,	1001
2017-01-05 16:36:31 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:31 AI_Player.update()		111,	1110,	1010,	101,	101,	1101,	1011
2017-01-05 16:36:31 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:36:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:31 AI_Player.update()	update
2017-01-05 16:36:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:31 AI_Player.update()	update
2017-01-05 16:36:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:31 AI_Player.update()	Search took651ms
2017-01-05 16:36:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:31 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 16:36:31 AI_Player.update()		1010,	1100,	1011,	1001,	111,	1100,	1010
2017-01-05 16:36:31 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 16:36:31 AI_Player.update()		110,	1100,	1110,	101,	1100,	1101,	1001
2017-01-05 16:36:31 AI_Player.update()		1110,	1110,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:31 AI_Player.update()		111,	101,	1010,	101,	101,	1101,	1011
2017-01-05 16:36:31 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:36:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:31 AI_Player.update()	update
2017-01-05 16:36:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:31 AI_Player.update()	update
2017-01-05 16:36:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:32 AI_Player.update()	Search took754ms
2017-01-05 16:36:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:32 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 16:36:32 AI_Player.update()		1010,	1100,	1011,	1010,	111,	1100,	1010
2017-01-05 16:36:32 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-05 16:36:32 AI_Player.update()		110,	1100,	1110,	101,	1100,	1101,	1001
2017-01-05 16:36:32 AI_Player.update()		1110,	1110,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:32 AI_Player.update()		111,	101,	1010,	101,	101,	1101,	1011
2017-01-05 16:36:32 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 16:36:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:32 AI_Player.update()	update
2017-01-05 16:36:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:32 AI_Player.update()	update
2017-01-05 16:36:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:32 AI_Player.update()	Search took170ms
2017-01-05 16:36:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:32 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-05 16:36:32 AI_Player.update()		1010,	110,	1011,	1010,	111,	1100,	1010
2017-01-05 16:36:32 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-05 16:36:32 AI_Player.update()		110,	1110,	1110,	101,	1100,	1101,	1001
2017-01-05 16:36:32 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:32 AI_Player.update()		111,	101,	1010,	101,	101,	1101,	1011
2017-01-05 16:36:32 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:36:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:32 AI_Player.update()	update
2017-01-05 16:36:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:32 AI_Player.update()	update
2017-01-05 16:36:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:33 AI_Player.update()	Search took584ms
2017-01-05 16:36:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:33 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-05 16:36:33 AI_Player.update()		1010,	110,	1011,	1010,	111,	1100,	1010
2017-01-05 16:36:33 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-05 16:36:33 AI_Player.update()		1110,	1110,	101,	1100,	1101,	1001,	110
2017-01-05 16:36:33 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:33 AI_Player.update()		111,	101,	1010,	101,	101,	1101,	1011
2017-01-05 16:36:33 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:36:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:33 AI_Player.update()	update
2017-01-05 16:36:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:33 AI_Player.update()	update
2017-01-05 16:36:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:33 AI_Player.update()	Search took91ms
2017-01-05 16:36:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:33 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-05 16:36:33 AI_Player.update()		110,	1011,	1010,	111,	1100,	1010,	1010
2017-01-05 16:36:33 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-05 16:36:33 AI_Player.update()		1110,	1110,	101,	1100,	1101,	1001,	110
2017-01-05 16:36:33 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:33 AI_Player.update()		111,	101,	1010,	101,	101,	1101,	1011
2017-01-05 16:36:33 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:36:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:33 AI_Player.update()	update
2017-01-05 16:36:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:33 AI_Player.update()	update
2017-01-05 16:36:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:33 AI_Player.update()	Search took258ms
2017-01-05 16:36:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:33 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-05 16:36:33 AI_Player.update()		110,	1011,	1010,	111,	1100,	1010,	1010
2017-01-05 16:36:33 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-05 16:36:33 AI_Player.update()		110,	1110,	1110,	101,	1100,	1101,	1001
2017-01-05 16:36:33 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:33 AI_Player.update()		111,	101,	1010,	101,	101,	1101,	1011
2017-01-05 16:36:33 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:36:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:33 AI_Player.update()	update
2017-01-05 16:36:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:33 AI_Player.update()	update
2017-01-05 16:36:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:33 AI_Player.update()	Search took211ms
2017-01-05 16:36:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:33 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-05 16:36:33 AI_Player.update()		110,	1011,	1010,	1010,	1100,	1010,	1010
2017-01-05 16:36:33 AI_Player.update()		1110,	1100,	1110,	111,	111,	1001,	1011
2017-01-05 16:36:33 AI_Player.update()		110,	1110,	1110,	1001,	1100,	1101,	1001
2017-01-05 16:36:33 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:33 AI_Player.update()		111,	101,	1010,	101,	101,	1101,	1011
2017-01-05 16:36:33 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:36:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:33 AI_Player.update()	update
2017-01-05 16:36:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:36:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:33 AI_Player.update()	update
2017-01-05 16:36:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:34 AI_Player.update()	Search took304ms
2017-01-05 16:36:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:34 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-05 16:36:34 AI_Player.update()		110,	1011,	1010,	1010,	1100,	1010,	1010
2017-01-05 16:36:34 AI_Player.update()		1110,	1100,	1110,	111,	111,	1001,	1011
2017-01-05 16:36:34 AI_Player.update()		1110,	1110,	1001,	1100,	1101,	1001,	110
2017-01-05 16:36:34 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:34 AI_Player.update()		111,	101,	1010,	101,	101,	1101,	1011
2017-01-05 16:36:34 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:36:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:36:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:34 AI_Player.update()	update
2017-01-05 16:36:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:34 AI_Player.update()	update
2017-01-05 16:36:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:34 AI_Player.update()	Search took664ms
2017-01-05 16:36:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:34 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-05 16:36:34 AI_Player.update()		110,	1100,	1010,	1010,	1100,	1010,	1010
2017-01-05 16:36:34 AI_Player.update()		1110,	1110,	1110,	111,	111,	1001,	1011
2017-01-05 16:36:34 AI_Player.update()		1110,	101,	1001,	1100,	1101,	1001,	110
2017-01-05 16:36:34 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:34 AI_Player.update()		111,	11,	1010,	101,	101,	1101,	1011
2017-01-05 16:36:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 16:36:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:34 AI_Player.update()	update
2017-01-05 16:36:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:34 AI_Player.update()	update
2017-01-05 16:36:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:35 AI_Player.update()	Search took330ms
2017-01-05 16:36:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-05 16:36:35 AI_Player.update()		110,	1100,	1010,	1010,	1100,	1010,	1010
2017-01-05 16:36:35 AI_Player.update()		1110,	1110,	1110,	111,	111,	1001,	1011
2017-01-05 16:36:35 AI_Player.update()		101,	1001,	1100,	1101,	1001,	110,	1110
2017-01-05 16:36:35 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:35 AI_Player.update()		111,	11,	1010,	101,	101,	1101,	1011
2017-01-05 16:36:35 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 16:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()	update
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()	update
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:35 AI_Player.update()	Search took258ms
2017-01-05 16:36:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-05 16:36:35 AI_Player.update()		110,	1100,	1010,	1010,	1100,	1010,	1010
2017-01-05 16:36:35 AI_Player.update()		1110,	1110,	1110,	111,	111,	1001,	1011
2017-01-05 16:36:35 AI_Player.update()		101,	1001,	1100,	1101,	1001,	110,	1110
2017-01-05 16:36:35 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:35 AI_Player.update()		11,	1010,	101,	101,	1101,	1011,	111
2017-01-05 16:36:35 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 16:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()	update
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()	update
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:35 AI_Player.update()	Search took394ms
2017-01-05 16:36:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-05 16:36:35 AI_Player.update()		110,	1100,	1010,	1010,	1100,	1010,	1010
2017-01-05 16:36:35 AI_Player.update()		1110,	1110,	1110,	111,	111,	1001,	1011
2017-01-05 16:36:35 AI_Player.update()		1001,	1100,	1101,	1001,	110,	1110,	101
2017-01-05 16:36:35 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 16:36:35 AI_Player.update()		11,	1010,	101,	101,	1101,	1011,	111
2017-01-05 16:36:35 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 16:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()	update
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:36:35 AI_Player.update()	Player b has won!
2017-01-05 16:36:35 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:35 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:36:35 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:35 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:36:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()	update
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:35 AI_Player.update()	Search took18ms
2017-01-05 16:36:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-05 16:36:35 AI_Player.update()		1001,	1010,	11,	11,	101,	1001,	11
2017-01-05 16:36:35 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-05 16:36:35 AI_Player.update()		1100,	101,	1100,	11,	11,	1010,	110
2017-01-05 16:36:35 AI_Player.update()		1110,	110,	1101,	110,	1011,	1100,	1011
2017-01-05 16:36:35 AI_Player.update()		1100,	110,	11,	1010,	101,	11,	1001
2017-01-05 16:36:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-05 16:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()	update
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()	update
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:35 AI_Player.update()	Search took38ms
2017-01-05 16:36:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-05 16:36:35 AI_Player.update()		1001,	1010,	11,	11,	101,	1001,	11
2017-01-05 16:36:35 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-05 16:36:35 AI_Player.update()		110,	1100,	101,	1100,	11,	11,	1010
2017-01-05 16:36:35 AI_Player.update()		1110,	110,	1101,	110,	1011,	1100,	1011
2017-01-05 16:36:35 AI_Player.update()		1100,	110,	11,	1010,	101,	11,	1001
2017-01-05 16:36:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-05 16:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()	update
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()	update
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:35 AI_Player.update()	Search took41ms
2017-01-05 16:36:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-05 16:36:35 AI_Player.update()		1010,	11,	11,	101,	1001,	11,	1001
2017-01-05 16:36:35 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-05 16:36:35 AI_Player.update()		110,	1100,	101,	1100,	11,	11,	1010
2017-01-05 16:36:35 AI_Player.update()		1110,	110,	1101,	110,	1011,	1100,	1011
2017-01-05 16:36:35 AI_Player.update()		1100,	110,	11,	1010,	101,	11,	1001
2017-01-05 16:36:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-05 16:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()	update
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:35 AI_Player.update()	update
2017-01-05 16:36:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:36 AI_Player.update()	Search took97ms
2017-01-05 16:36:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-05 16:36:36 AI_Player.update()		11,	11,	101,	1001,	11,	1001,	1010
2017-01-05 16:36:36 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-05 16:36:36 AI_Player.update()		110,	1100,	101,	1100,	11,	11,	1010
2017-01-05 16:36:36 AI_Player.update()		1110,	110,	1101,	110,	1011,	1100,	1011
2017-01-05 16:36:36 AI_Player.update()		1100,	110,	11,	1010,	101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:36 AI_Player.update()	Search took141ms
2017-01-05 16:36:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-05 16:36:36 AI_Player.update()		11,	11,	101,	1010,	11,	1001,	1010
2017-01-05 16:36:36 AI_Player.update()		1110,	1110,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:36 AI_Player.update()		110,	1100,	101,	1100,	11,	11,	1010
2017-01-05 16:36:36 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:36:36 AI_Player.update()		1100,	110,	11,	110,	101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:36 AI_Player.update()	Search took217ms
2017-01-05 16:36:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 16:36:36 AI_Player.update()		11,	1110,	101,	1010,	11,	1001,	1010
2017-01-05 16:36:36 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:36 AI_Player.update()		110,	110,	101,	1100,	11,	11,	1010
2017-01-05 16:36:36 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:36:36 AI_Player.update()		1100,	1010,	11,	110,	101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:36 AI_Player.update()	Search took185ms
2017-01-05 16:36:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 16:36:36 AI_Player.update()		11,	1110,	101,	110,	11,	1001,	1010
2017-01-05 16:36:36 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-05 16:36:36 AI_Player.update()		110,	110,	101,	1001,	11,	11,	1010
2017-01-05 16:36:36 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:36:36 AI_Player.update()		1100,	1010,	11,	1100,	101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()		1100,	1101,	1101,	110,	1101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:36 AI_Player.update()	Search took128ms
2017-01-05 16:36:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 16:36:36 AI_Player.update()		11,	1110,	101,	1010,	11,	1001,	1010
2017-01-05 16:36:36 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:36 AI_Player.update()		110,	110,	101,	1100,	11,	11,	1010
2017-01-05 16:36:36 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:36:36 AI_Player.update()		1100,	1010,	11,	110,	101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:36 AI_Player.update()	Search took55ms
2017-01-05 16:36:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 16:36:36 AI_Player.update()		11,	1110,	101,	1010,	11,	1001,	1010
2017-01-05 16:36:36 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:36 AI_Player.update()		1010,	110,	110,	101,	1100,	11,	11
2017-01-05 16:36:36 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:36:36 AI_Player.update()		1100,	1010,	11,	110,	101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:36 AI_Player.update()	Search took151ms
2017-01-05 16:36:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 16:36:36 AI_Player.update()		11,	1110,	101,	1001,	11,	1001,	1010
2017-01-05 16:36:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 16:36:36 AI_Player.update()		1010,	110,	110,	1100,	1100,	11,	11
2017-01-05 16:36:36 AI_Player.update()		1110,	110,	1101,	110,	1011,	1100,	1011
2017-01-05 16:36:36 AI_Player.update()		1100,	1010,	11,	1010,	101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()		1100,	1101,	1101,	110,	1101,	11,	1001
2017-01-05 16:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:36 AI_Player.update()	update
2017-01-05 16:36:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:37 AI_Player.update()	Search took135ms
2017-01-05 16:36:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 16:36:37 AI_Player.update()		11,	1110,	101,	1010,	11,	1001,	1010
2017-01-05 16:36:37 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	110,	110,	101,	1100,	11,	11
2017-01-05 16:36:37 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:36:37 AI_Player.update()		1100,	1010,	11,	110,	101,	11,	1001
2017-01-05 16:36:37 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	11,	1001
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:37 AI_Player.update()	Search took61ms
2017-01-05 16:36:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 16:36:37 AI_Player.update()		11,	1110,	101,	1010,	11,	1001,	1010
2017-01-05 16:36:37 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	110,	110,	101,	1100,	11,	11
2017-01-05 16:36:37 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	11,	110,	101,	11,	1001,	1100
2017-01-05 16:36:37 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	11,	1001
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:37 AI_Player.update()	Search took86ms
2017-01-05 16:36:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 16:36:37 AI_Player.update()		11,	1110,	101,	1001,	11,	1001,	1010
2017-01-05 16:36:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	110,	110,	1100,	1100,	11,	11
2017-01-05 16:36:37 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	11,	110,	1010,	11,	1001,	1100
2017-01-05 16:36:37 AI_Player.update()		1100,	1101,	1101,	110,	1101,	11,	1001
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:37 AI_Player.update()	Search took199ms
2017-01-05 16:36:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-05 16:36:37 AI_Player.update()		11,	1100,	101,	1001,	11,	1001,	1010
2017-01-05 16:36:37 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	110,	110,	1100,	1100,	11,	11
2017-01-05 16:36:37 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	1101,	110,	1010,	11,	1001,	1100
2017-01-05 16:36:37 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:37 AI_Player.update()	Search took187ms
2017-01-05 16:36:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()		110,	1110,	111,	110,	111,	101,	11
2017-01-05 16:36:37 AI_Player.update()		11,	1100,	101,	1010,	11,	1001,	1010
2017-01-05 16:36:37 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	110,	110,	101,	1100,	11,	11
2017-01-05 16:36:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	1101,	110,	101,	11,	1001,	1100
2017-01-05 16:36:37 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:37 AI_Player.update()	Search took127ms
2017-01-05 16:36:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()		110,	1110,	111,	110,	111,	101,	11
2017-01-05 16:36:37 AI_Player.update()		1100,	101,	1010,	11,	1001,	1010,	11
2017-01-05 16:36:37 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	110,	110,	101,	1100,	11,	11
2017-01-05 16:36:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	1101,	110,	101,	11,	1001,	1100
2017-01-05 16:36:37 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:37 AI_Player.update()	Search took131ms
2017-01-05 16:36:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()		110,	1110,	111,	110,	111,	101,	11
2017-01-05 16:36:37 AI_Player.update()		101,	1010,	11,	1001,	1010,	11,	1100
2017-01-05 16:36:37 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	110,	110,	101,	1100,	11,	11
2017-01-05 16:36:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	1101,	110,	101,	11,	1001,	1100
2017-01-05 16:36:37 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:37 AI_Player.update()	Search took18ms
2017-01-05 16:36:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()		110,	1110,	111,	110,	111,	101,	11
2017-01-05 16:36:37 AI_Player.update()		1100,	101,	1010,	11,	1001,	1010,	11
2017-01-05 16:36:37 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	110,	110,	101,	1100,	11,	11
2017-01-05 16:36:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:36:37 AI_Player.update()		1010,	1101,	110,	101,	11,	1001,	1100
2017-01-05 16:36:37 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-05 16:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:37 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:37 AI_Player.update()	update
2017-01-05 16:36:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:38 AI_Player.update()	Search took124ms
2017-01-05 16:36:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-05 16:36:38 AI_Player.update()		1100,	101,	1010,	110,	1001,	1010,	11
2017-01-05 16:36:38 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-05 16:36:38 AI_Player.update()		1010,	110,	110,	1001,	1100,	11,	11
2017-01-05 16:36:38 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:38 AI_Player.update()		1010,	1101,	110,	1100,	11,	1001,	1100
2017-01-05 16:36:38 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-05 16:36:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()	update
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()	update
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:38 AI_Player.update()	Search took47ms
2017-01-05 16:36:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-05 16:36:38 AI_Player.update()		11,	1100,	101,	1010,	110,	1001,	1010
2017-01-05 16:36:38 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-05 16:36:38 AI_Player.update()		1010,	110,	110,	1001,	1100,	11,	11
2017-01-05 16:36:38 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:38 AI_Player.update()		1010,	1101,	110,	1100,	11,	1001,	1100
2017-01-05 16:36:38 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-05 16:36:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()	update
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()	update
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:38 AI_Player.update()	Search took164ms
2017-01-05 16:36:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:36:38 AI_Player.update()		11,	110,	101,	1010,	110,	1001,	1010
2017-01-05 16:36:38 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-05 16:36:38 AI_Player.update()		1010,	11,	110,	1001,	1100,	11,	11
2017-01-05 16:36:38 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:38 AI_Player.update()		1010,	11,	110,	1100,	11,	1001,	1100
2017-01-05 16:36:38 AI_Player.update()		1100,	1110,	1101,	101,	1101,	11,	1001
2017-01-05 16:36:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()	update
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()	update
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:38 AI_Player.update()	Search took335ms
2017-01-05 16:36:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:36:38 AI_Player.update()		110,	101,	1010,	110,	1001,	1010,	11
2017-01-05 16:36:38 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-05 16:36:38 AI_Player.update()		1010,	11,	110,	1001,	1100,	11,	11
2017-01-05 16:36:38 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:38 AI_Player.update()		1010,	11,	110,	1100,	11,	1001,	1100
2017-01-05 16:36:38 AI_Player.update()		1100,	1110,	1101,	101,	1101,	11,	1001
2017-01-05 16:36:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()	update
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()	update
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:38 AI_Player.update()	Search took363ms
2017-01-05 16:36:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-05 16:36:38 AI_Player.update()		110,	1100,	1010,	110,	1001,	1010,	11
2017-01-05 16:36:38 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 16:36:38 AI_Player.update()		1010,	110,	110,	1001,	1100,	11,	11
2017-01-05 16:36:38 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:38 AI_Player.update()		1010,	1101,	110,	1100,	11,	1001,	1100
2017-01-05 16:36:38 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-05 16:36:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()	update
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:38 AI_Player.update()	update
2017-01-05 16:36:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:39 AI_Player.update()	Search took196ms
2017-01-05 16:36:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:39 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-05 16:36:39 AI_Player.update()		110,	1100,	1010,	1010,	1001,	1010,	11
2017-01-05 16:36:39 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 16:36:39 AI_Player.update()		1010,	110,	110,	11,	1100,	11,	11
2017-01-05 16:36:39 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:36:39 AI_Player.update()		1010,	1101,	110,	101,	11,	1001,	1100
2017-01-05 16:36:39 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-05 16:36:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:39 AI_Player.update()	update
2017-01-05 16:36:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:36:39 AI_Player.update()	Player b has won!
2017-01-05 16:36:39 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:39 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:36:39 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:39 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:36:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:39 AI_Player.update()	update
2017-01-05 16:36:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:39 AI_Player.update()	Search took69ms
2017-01-05 16:36:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:39 AI_Player.update()		110,	101,	111,	110,	111,	1011,	11
2017-01-05 16:36:39 AI_Player.update()		11,	111,	1011,	1101,	1110,	11,	1101
2017-01-05 16:36:39 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1011,	1011
2017-01-05 16:36:39 AI_Player.update()		110,	1100,	1001,	1010,	1001,	1100,	1010
2017-01-05 16:36:39 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:39 AI_Player.update()		1110,	101,	11,	1101,	101,	11,	11
2017-01-05 16:36:39 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:36:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:39 AI_Player.update()	update
2017-01-05 16:36:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:39 AI_Player.update()	update
2017-01-05 16:36:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:39 AI_Player.update()	Search took18ms
2017-01-05 16:36:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:39 AI_Player.update()		110,	111,	111,	110,	111,	1011,	11
2017-01-05 16:36:39 AI_Player.update()		11,	1100,	1011,	1101,	1110,	11,	1101
2017-01-05 16:36:39 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1011,	1011
2017-01-05 16:36:39 AI_Player.update()		110,	11,	1001,	1010,	1001,	1100,	1010
2017-01-05 16:36:39 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:39 AI_Player.update()		1110,	1100,	11,	1101,	101,	11,	11
2017-01-05 16:36:39 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:36:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:39 AI_Player.update()	update
2017-01-05 16:36:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:39 AI_Player.update()	update
2017-01-05 16:36:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:39 AI_Player.update()	Search took161ms
2017-01-05 16:36:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:39 AI_Player.update()		110,	111,	111,	110,	111,	1011,	11
2017-01-05 16:36:39 AI_Player.update()		1101,	11,	1100,	1011,	1101,	1110,	11
2017-01-05 16:36:39 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1011,	1011
2017-01-05 16:36:39 AI_Player.update()		110,	11,	1001,	1010,	1001,	1100,	1010
2017-01-05 16:36:39 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:39 AI_Player.update()		1110,	1100,	11,	1101,	101,	11,	11
2017-01-05 16:36:39 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:36:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:39 AI_Player.update()	update
2017-01-05 16:36:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:39 AI_Player.update()	update
2017-01-05 16:36:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:40 AI_Player.update()	Search took645ms
2017-01-05 16:36:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:40 AI_Player.update()		110,	111,	111,	110,	111,	1011,	11
2017-01-05 16:36:40 AI_Player.update()		1101,	11,	1100,	1011,	1101,	1110,	11
2017-01-05 16:36:40 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1011,	1011
2017-01-05 16:36:40 AI_Player.update()		1010,	110,	11,	1001,	1010,	1001,	1100
2017-01-05 16:36:40 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:40 AI_Player.update()		1110,	1100,	11,	1101,	101,	11,	11
2017-01-05 16:36:40 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:36:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:40 AI_Player.update()	update
2017-01-05 16:36:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:40 AI_Player.update()	update
2017-01-05 16:36:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:40 AI_Player.update()	Search took191ms
2017-01-05 16:36:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:40 AI_Player.update()		110,	111,	111,	110,	111,	1011,	11
2017-01-05 16:36:40 AI_Player.update()		1101,	11,	1100,	1011,	1101,	1110,	11
2017-01-05 16:36:40 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1011,	1011
2017-01-05 16:36:40 AI_Player.update()		110,	11,	1001,	1010,	1001,	1100,	1010
2017-01-05 16:36:40 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:40 AI_Player.update()		1110,	1100,	11,	1101,	101,	11,	11
2017-01-05 16:36:40 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:36:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:40 AI_Player.update()	update
2017-01-05 16:36:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:40 AI_Player.update()	update
2017-01-05 16:36:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:40 AI_Player.update()	Search took174ms
2017-01-05 16:36:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:40 AI_Player.update()		110,	111,	111,	110,	111,	1011,	11
2017-01-05 16:36:40 AI_Player.update()		1101,	11,	1100,	1011,	1101,	1110,	11
2017-01-05 16:36:40 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1011,	1011
2017-01-05 16:36:40 AI_Player.update()		1010,	110,	11,	1001,	1010,	1001,	1100
2017-01-05 16:36:40 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:40 AI_Player.update()		1110,	1100,	11,	1101,	101,	11,	11
2017-01-05 16:36:40 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:36:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:40 AI_Player.update()	update
2017-01-05 16:36:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:40 AI_Player.update()	update
2017-01-05 16:36:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:41 AI_Player.update()	Search took846ms
2017-01-05 16:36:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:41 AI_Player.update()		110,	101,	111,	110,	111,	1011,	11
2017-01-05 16:36:41 AI_Player.update()		1101,	111,	1100,	1011,	1101,	1110,	11
2017-01-05 16:36:41 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-05 16:36:41 AI_Player.update()		1010,	1100,	11,	1001,	1010,	1001,	1100
2017-01-05 16:36:41 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:41 AI_Player.update()		1110,	101,	11,	1101,	101,	11,	11
2017-01-05 16:36:41 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:36:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:41 AI_Player.update()	update
2017-01-05 16:36:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:41 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:41 AI_Player.update()	update
2017-01-05 16:36:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:42 AI_Player.update()	Search took1177ms
2017-01-05 16:36:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:42 AI_Player.update()		110,	101,	111,	1011,	111,	1011,	11
2017-01-05 16:36:42 AI_Player.update()		1101,	111,	1100,	1010,	1101,	1110,	11
2017-01-05 16:36:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	1011,	1011
2017-01-05 16:36:42 AI_Player.update()		1010,	1100,	11,	101,	1010,	1001,	1100
2017-01-05 16:36:42 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:36:42 AI_Player.update()		1110,	101,	11,	1100,	101,	11,	11
2017-01-05 16:36:42 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:42 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:42 AI_Player.update()	update
2017-01-05 16:36:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:42 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:42 AI_Player.update()	update
2017-01-05 16:36:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:43 AI_Player.update()	Search took777ms
2017-01-05 16:36:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:43 AI_Player.update()		110,	1100,	111,	1011,	111,	1011,	11
2017-01-05 16:36:43 AI_Player.update()		1101,	101,	1100,	1010,	1101,	1110,	11
2017-01-05 16:36:43 AI_Player.update()		1110,	111,	1110,	1001,	111,	1011,	1011
2017-01-05 16:36:43 AI_Player.update()		1010,	11,	11,	101,	1010,	1001,	1100
2017-01-05 16:36:43 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:36:43 AI_Player.update()		1110,	110,	11,	1100,	101,	11,	11
2017-01-05 16:36:43 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:43 AI_Player.update()	update
2017-01-05 16:36:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:43 AI_Player.update()	update
2017-01-05 16:36:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:43 AI_Player.update()	Search took52ms
2017-01-05 16:36:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:43 AI_Player.update()		110,	1100,	111,	1011,	111,	1011,	11
2017-01-05 16:36:43 AI_Player.update()		1101,	101,	1100,	1010,	1101,	1110,	11
2017-01-05 16:36:43 AI_Player.update()		1110,	111,	1110,	1001,	111,	1011,	1011
2017-01-05 16:36:43 AI_Player.update()		1010,	11,	11,	101,	1010,	1001,	1100
2017-01-05 16:36:43 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:36:43 AI_Player.update()		110,	11,	1100,	101,	11,	11,	1110
2017-01-05 16:36:43 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:43 AI_Player.update()	update
2017-01-05 16:36:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:43 AI_Player.update()	update
2017-01-05 16:36:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:43 AI_Player.update()	Search took155ms
2017-01-05 16:36:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:43 AI_Player.update()		110,	101,	111,	1011,	111,	1011,	11
2017-01-05 16:36:43 AI_Player.update()		1101,	111,	1100,	1010,	1101,	1110,	11
2017-01-05 16:36:43 AI_Player.update()		1110,	11,	1110,	1001,	111,	1011,	1011
2017-01-05 16:36:43 AI_Player.update()		1010,	1100,	11,	101,	1010,	1001,	1100
2017-01-05 16:36:43 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:36:43 AI_Player.update()		110,	101,	1100,	101,	11,	11,	1110
2017-01-05 16:36:43 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-05 16:36:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:43 AI_Player.update()	update
2017-01-05 16:36:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:43 AI_Player.update()	update
2017-01-05 16:36:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:43 AI_Player.update()	Search took240ms
2017-01-05 16:36:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:43 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 16:36:43 AI_Player.update()		1101,	111,	1100,	1001,	1101,	1110,	11
2017-01-05 16:36:43 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-05 16:36:43 AI_Player.update()		1010,	1100,	11,	1101,	1010,	1001,	1100
2017-01-05 16:36:43 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:36:43 AI_Player.update()		110,	101,	1100,	110,	11,	11,	1110
2017-01-05 16:36:43 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1100,	1001
2017-01-05 16:36:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:43 AI_Player.update()	update
2017-01-05 16:36:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:43 AI_Player.update()	update
2017-01-05 16:36:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:44 AI_Player.update()	Search took732ms
2017-01-05 16:36:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:44 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-05 16:36:44 AI_Player.update()		1101,	111,	1100,	1001,	1101,	1011,	11
2017-01-05 16:36:44 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-05 16:36:44 AI_Player.update()		1010,	1100,	11,	1101,	1010,	1100,	1100
2017-01-05 16:36:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	11,	1011
2017-01-05 16:36:44 AI_Player.update()		110,	101,	1100,	110,	11,	1100,	1110
2017-01-05 16:36:44 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1011,	1001
2017-01-05 16:36:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:44 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:44 AI_Player.update()	update
2017-01-05 16:36:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:44 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:36:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:44 AI_Player.update()	update
2017-01-05 16:36:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:45 AI_Player.update()	Search took526ms
2017-01-05 16:36:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:45 AI_Player.update()		110,	111,	111,	1010,	111,	1110,	11
2017-01-05 16:36:45 AI_Player.update()		1101,	11,	1100,	1001,	1101,	1011,	11
2017-01-05 16:36:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 16:36:45 AI_Player.update()		1010,	11,	11,	1101,	1010,	1100,	1100
2017-01-05 16:36:45 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:36:45 AI_Player.update()		110,	1100,	1100,	110,	11,	1100,	1110
2017-01-05 16:36:45 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1011,	1001
2017-01-05 16:36:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:36:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:45 AI_Player.update()	update
2017-01-05 16:36:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:45 AI_Player.update()	update
2017-01-05 16:36:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:45 AI_Player.update()	Search took436ms
2017-01-05 16:36:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:45 AI_Player.update()		110,	111,	111,	1001,	111,	1110,	11
2017-01-05 16:36:45 AI_Player.update()		1101,	11,	1100,	101,	1101,	1011,	11
2017-01-05 16:36:45 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1001,	1011
2017-01-05 16:36:45 AI_Player.update()		1010,	11,	11,	101,	1010,	1100,	1100
2017-01-05 16:36:45 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-05 16:36:45 AI_Player.update()		110,	1100,	1100,	1011,	11,	1100,	1110
2017-01-05 16:36:45 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:36:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:45 AI_Player.update()	update
2017-01-05 16:36:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:45 AI_Player.update()	update
2017-01-05 16:36:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:46 AI_Player.update()	Search took636ms
2017-01-05 16:36:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:46 AI_Player.update()		110,	111,	111,	101,	111,	1110,	11
2017-01-05 16:36:46 AI_Player.update()		1101,	11,	1100,	1101,	1101,	1011,	11
2017-01-05 16:36:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 16:36:46 AI_Player.update()		1010,	11,	11,	110,	1010,	1100,	1100
2017-01-05 16:36:46 AI_Player.update()		1110,	101,	1101,	1011,	1011,	11,	1011
2017-01-05 16:36:46 AI_Player.update()		110,	1100,	1100,	1010,	11,	1100,	1110
2017-01-05 16:36:46 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:36:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:46 AI_Player.update()	update
2017-01-05 16:36:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:46 AI_Player.update()	update
2017-01-05 16:36:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:46 AI_Player.update()	Search took324ms
2017-01-05 16:36:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:46 AI_Player.update()		110,	11,	111,	101,	111,	1110,	11
2017-01-05 16:36:46 AI_Player.update()		1101,	1100,	1100,	1101,	1101,	1011,	11
2017-01-05 16:36:46 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-05 16:36:46 AI_Player.update()		1010,	101,	11,	110,	1010,	1100,	1100
2017-01-05 16:36:46 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	11,	1011
2017-01-05 16:36:46 AI_Player.update()		110,	101,	1100,	1010,	11,	1100,	1110
2017-01-05 16:36:46 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:36:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:46 AI_Player.update()	update
2017-01-05 16:36:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:46 AI_Player.update()	update
2017-01-05 16:36:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:46 AI_Player.update()	Search took514ms
2017-01-05 16:36:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:46 AI_Player.update()		110,	11,	111,	101,	111,	1110,	11
2017-01-05 16:36:46 AI_Player.update()		11,	1101,	1100,	1100,	1101,	1101,	1011
2017-01-05 16:36:46 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-05 16:36:46 AI_Player.update()		1010,	101,	11,	110,	1010,	1100,	1100
2017-01-05 16:36:46 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	11,	1011
2017-01-05 16:36:46 AI_Player.update()		110,	101,	1100,	1010,	11,	1100,	1110
2017-01-05 16:36:46 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:36:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:46 AI_Player.update()	update
2017-01-05 16:36:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:46 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:36:46 AI_Player.update()	Player b has won!
2017-01-05 16:36:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:46 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:36:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:46 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:36:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:46 AI_Player.update()	update
2017-01-05 16:36:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:47 AI_Player.update()	Search took137ms
2017-01-05 16:36:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:47 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-05 16:36:47 AI_Player.update()		110,	1001,	101,	1101,	1101,	11,	1010
2017-01-05 16:36:47 AI_Player.update()		1110,	101,	1110,	101,	111,	111,	1011
2017-01-05 16:36:47 AI_Player.update()		101,	1010,	110,	1011,	11,	1010,	110
2017-01-05 16:36:47 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:36:47 AI_Player.update()		1010,	11,	11,	1100,	101,	101,	101
2017-01-05 16:36:47 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-05 16:36:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:47 AI_Player.update()	update
2017-01-05 16:36:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:47 AI_Player.update()	update
2017-01-05 16:36:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:47 AI_Player.update()	Search took401ms
2017-01-05 16:36:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:47 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-05 16:36:47 AI_Player.update()		110,	1001,	101,	1101,	1101,	111,	1010
2017-01-05 16:36:47 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 16:36:47 AI_Player.update()		101,	1010,	110,	1011,	11,	11,	110
2017-01-05 16:36:47 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:47 AI_Player.update()		1010,	11,	11,	1100,	101,	101,	101
2017-01-05 16:36:47 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-05 16:36:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:47 AI_Player.update()	update
2017-01-05 16:36:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:36:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:47 AI_Player.update()	update
2017-01-05 16:36:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:47 AI_Player.update()	Search took223ms
2017-01-05 16:36:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:47 AI_Player.update()		110,	101,	111,	1101,	111,	11,	11
2017-01-05 16:36:47 AI_Player.update()		110,	1001,	101,	11,	1101,	111,	1010
2017-01-05 16:36:47 AI_Player.update()		1110,	101,	1110,	1101,	111,	1010,	1011
2017-01-05 16:36:47 AI_Player.update()		101,	1010,	110,	101,	11,	11,	110
2017-01-05 16:36:47 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-05 16:36:47 AI_Player.update()		1010,	11,	11,	101,	101,	101,	101
2017-01-05 16:36:47 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:36:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:36:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:47 AI_Player.update()	update
2017-01-05 16:36:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:47 AI_Player.update()	update
2017-01-05 16:36:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:47 AI_Player.update()	Search took110ms
2017-01-05 16:36:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:47 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-05 16:36:47 AI_Player.update()		110,	1001,	101,	11,	1101,	1010,	1010
2017-01-05 16:36:47 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-05 16:36:47 AI_Player.update()		101,	1010,	110,	101,	11,	101,	110
2017-01-05 16:36:47 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-05 16:36:47 AI_Player.update()		1010,	11,	11,	101,	101,	1010,	101
2017-01-05 16:36:47 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-05 16:36:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:47 AI_Player.update()	update
2017-01-05 16:36:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:47 AI_Player.update()	update
2017-01-05 16:36:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:48 AI_Player.update()	Search took159ms
2017-01-05 16:36:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:48 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-05 16:36:48 AI_Player.update()		110,	1001,	101,	11,	1101,	1010,	1010
2017-01-05 16:36:48 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-05 16:36:48 AI_Player.update()		110,	101,	1010,	110,	101,	11,	101
2017-01-05 16:36:48 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-05 16:36:48 AI_Player.update()		1010,	11,	11,	101,	101,	1010,	101
2017-01-05 16:36:48 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-05 16:36:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:48 AI_Player.update()	update
2017-01-05 16:36:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:48 AI_Player.update()	update
2017-01-05 16:36:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:48 AI_Player.update()	Search took208ms
2017-01-05 16:36:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:48 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-05 16:36:48 AI_Player.update()		110,	1001,	101,	1101,	1101,	1010,	1010
2017-01-05 16:36:48 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 16:36:48 AI_Player.update()		110,	101,	1010,	1011,	101,	11,	101
2017-01-05 16:36:48 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:48 AI_Player.update()		1010,	11,	11,	1100,	101,	1010,	101
2017-01-05 16:36:48 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	11,	1001
2017-01-05 16:36:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:48 AI_Player.update()	update
2017-01-05 16:36:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:48 AI_Player.update()	update
2017-01-05 16:36:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:48 AI_Player.update()	Search took373ms
2017-01-05 16:36:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:48 AI_Player.update()		110,	1100,	111,	11,	111,	111,	11
2017-01-05 16:36:48 AI_Player.update()		110,	101,	101,	1101,	1101,	1010,	1010
2017-01-05 16:36:48 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-05 16:36:48 AI_Player.update()		110,	101,	1010,	1011,	101,	11,	101
2017-01-05 16:36:48 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:48 AI_Player.update()		1010,	101,	11,	1100,	101,	1010,	101
2017-01-05 16:36:48 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-05 16:36:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:36:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:48 AI_Player.update()	update
2017-01-05 16:36:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:48 AI_Player.update()	update
2017-01-05 16:36:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:48 AI_Player.update()	Search took210ms
2017-01-05 16:36:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:48 AI_Player.update()		110,	11,	111,	11,	111,	111,	11
2017-01-05 16:36:48 AI_Player.update()		110,	1100,	101,	1101,	1101,	1010,	1010
2017-01-05 16:36:48 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 16:36:48 AI_Player.update()		110,	1001,	1010,	1011,	101,	11,	101
2017-01-05 16:36:48 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:48 AI_Player.update()		1010,	101,	11,	1100,	101,	1010,	101
2017-01-05 16:36:48 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-05 16:36:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:48 AI_Player.update()	update
2017-01-05 16:36:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:48 AI_Player.update()	update
2017-01-05 16:36:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:49 AI_Player.update()	Search took579ms
2017-01-05 16:36:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:49 AI_Player.update()		110,	1100,	111,	11,	111,	111,	11
2017-01-05 16:36:49 AI_Player.update()		110,	101,	101,	1101,	1101,	1010,	1010
2017-01-05 16:36:49 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-05 16:36:49 AI_Player.update()		110,	101,	1010,	1011,	101,	11,	101
2017-01-05 16:36:49 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:49 AI_Player.update()		1010,	101,	11,	1100,	101,	1010,	101
2017-01-05 16:36:49 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-05 16:36:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:49 AI_Player.update()	update
2017-01-05 16:36:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:49 AI_Player.update()	update
2017-01-05 16:36:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:49 AI_Player.update()	Search took311ms
2017-01-05 16:36:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:49 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-05 16:36:49 AI_Player.update()		110,	1001,	101,	1101,	1101,	1010,	1010
2017-01-05 16:36:49 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 16:36:49 AI_Player.update()		110,	101,	1010,	1011,	101,	11,	101
2017-01-05 16:36:49 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:49 AI_Player.update()		1010,	11,	11,	1100,	101,	1010,	101
2017-01-05 16:36:49 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	11,	1001
2017-01-05 16:36:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:36:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:49 AI_Player.update()	update
2017-01-05 16:36:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:49 AI_Player.update()	update
2017-01-05 16:36:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:49 AI_Player.update()	Search took111ms
2017-01-05 16:36:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:49 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-05 16:36:49 AI_Player.update()		1001,	101,	1101,	1101,	1010,	1010,	110
2017-01-05 16:36:49 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 16:36:49 AI_Player.update()		110,	101,	1010,	1011,	101,	11,	101
2017-01-05 16:36:49 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:49 AI_Player.update()		1010,	11,	11,	1100,	101,	1010,	101
2017-01-05 16:36:49 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	11,	1001
2017-01-05 16:36:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:36:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:49 AI_Player.update()	update
2017-01-05 16:36:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:49 AI_Player.update()	update
2017-01-05 16:36:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:50 AI_Player.update()	Search took356ms
2017-01-05 16:36:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:50 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-05 16:36:50 AI_Player.update()		1001,	101,	1101,	1101,	1010,	1010,	110
2017-01-05 16:36:50 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 16:36:50 AI_Player.update()		110,	101,	1010,	1011,	101,	11,	101
2017-01-05 16:36:50 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:50 AI_Player.update()		11,	11,	1100,	101,	1010,	101,	1010
2017-01-05 16:36:50 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	11,	1001
2017-01-05 16:36:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:36:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:50 AI_Player.update()	update
2017-01-05 16:36:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:36:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:50 AI_Player.update()	update
2017-01-05 16:36:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:50 AI_Player.update()	Search took25ms
2017-01-05 16:36:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:50 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-05 16:36:50 AI_Player.update()		1001,	101,	1101,	1101,	1010,	11,	110
2017-01-05 16:36:50 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 16:36:50 AI_Player.update()		110,	101,	1010,	1011,	101,	101,	101
2017-01-05 16:36:50 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:50 AI_Player.update()		11,	11,	1100,	101,	1010,	11,	1010
2017-01-05 16:36:50 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	111,	1001
2017-01-05 16:36:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:36:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:50 AI_Player.update()	update
2017-01-05 16:36:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:36:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:50 AI_Player.update()	update
2017-01-05 16:36:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:50 AI_Player.update()	Search took537ms
2017-01-05 16:36:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:50 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-05 16:36:50 AI_Player.update()		1001,	101,	1101,	1101,	1010,	11,	110
2017-01-05 16:36:50 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 16:36:50 AI_Player.update()		110,	101,	1010,	1011,	101,	101,	101
2017-01-05 16:36:50 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:50 AI_Player.update()		11,	1100,	1100,	101,	1010,	11,	1010
2017-01-05 16:36:50 AI_Player.update()		1100,	101,	1101,	1101,	1101,	111,	1001
2017-01-05 16:36:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:36:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:50 AI_Player.update()	update
2017-01-05 16:36:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:36:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:50 AI_Player.update()	update
2017-01-05 16:36:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:50 AI_Player.update()	Search took195ms
2017-01-05 16:36:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:50 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-05 16:36:50 AI_Player.update()		1001,	101,	1101,	1101,	1010,	11,	110
2017-01-05 16:36:50 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 16:36:50 AI_Player.update()		110,	101,	1010,	1011,	101,	101,	101
2017-01-05 16:36:50 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:50 AI_Player.update()		11,	11,	1100,	101,	1010,	11,	1010
2017-01-05 16:36:50 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	111,	1001
2017-01-05 16:36:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:36:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:50 AI_Player.update()	update
2017-01-05 16:36:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:50 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:36:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:50 AI_Player.update()	update
2017-01-05 16:36:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:51 AI_Player.update()	Search took510ms
2017-01-05 16:36:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-05 16:36:51 AI_Player.update()		1001,	101,	1101,	1101,	1010,	1010,	110
2017-01-05 16:36:51 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 16:36:51 AI_Player.update()		110,	101,	1010,	1011,	101,	11,	101
2017-01-05 16:36:51 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:36:51 AI_Player.update()		11,	11,	1100,	101,	1010,	101,	1010
2017-01-05 16:36:51 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	11,	1001
2017-01-05 16:36:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:36:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()	update
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:36:51 AI_Player.update()	Player b has won!
2017-01-05 16:36:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:51 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:36:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:51 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:36:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()	update
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:51 AI_Player.update()	Search took124ms
2017-01-05 16:36:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-05 16:36:51 AI_Player.update()		110,	1001,	111,	110,	110,	1100,	1010
2017-01-05 16:36:51 AI_Player.update()		1110,	1010,	1110,	1110,	111,	11,	1011
2017-01-05 16:36:51 AI_Player.update()		1010,	1100,	110,	1001,	1010,	101,	110
2017-01-05 16:36:51 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:51 AI_Player.update()		11,	1100,	1010,	11,	110,	11,	1010
2017-01-05 16:36:51 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-05 16:36:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()	update
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()	update
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:51 AI_Player.update()	Search took102ms
2017-01-05 16:36:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()		110,	1001,	111,	101,	111,	1001,	11
2017-01-05 16:36:51 AI_Player.update()		110,	1010,	111,	110,	110,	1100,	1010
2017-01-05 16:36:51 AI_Player.update()		1110,	1100,	1110,	1110,	111,	11,	1011
2017-01-05 16:36:51 AI_Player.update()		1010,	110,	110,	1001,	1010,	101,	110
2017-01-05 16:36:51 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:51 AI_Player.update()		11,	1010,	1010,	11,	110,	11,	1010
2017-01-05 16:36:51 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1001,	1001
2017-01-05 16:36:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()	update
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()	update
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:51 AI_Player.update()	Search took67ms
2017-01-05 16:36:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-05 16:36:51 AI_Player.update()		110,	1100,	111,	110,	110,	1100,	1010
2017-01-05 16:36:51 AI_Player.update()		1110,	110,	1110,	1110,	111,	11,	1011
2017-01-05 16:36:51 AI_Player.update()		1010,	1100,	110,	1001,	1010,	101,	110
2017-01-05 16:36:51 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:51 AI_Player.update()		11,	101,	1010,	11,	110,	11,	1010
2017-01-05 16:36:51 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1001,	1001
2017-01-05 16:36:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()	update
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()	update
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:51 AI_Player.update()	Search took92ms
2017-01-05 16:36:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-05 16:36:51 AI_Player.update()		1010,	110,	1100,	111,	110,	110,	1100
2017-01-05 16:36:51 AI_Player.update()		1110,	110,	1110,	1110,	111,	11,	1011
2017-01-05 16:36:51 AI_Player.update()		1010,	1100,	110,	1001,	1010,	101,	110
2017-01-05 16:36:51 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:51 AI_Player.update()		11,	101,	1010,	11,	110,	11,	1010
2017-01-05 16:36:51 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1001,	1001
2017-01-05 16:36:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:36:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()	update
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:51 AI_Player.update()	update
2017-01-05 16:36:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:52 AI_Player.update()	Search took347ms
2017-01-05 16:36:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:52 AI_Player.update()		110,	1010,	111,	111,	111,	1001,	11
2017-01-05 16:36:52 AI_Player.update()		1010,	110,	1100,	1110,	110,	110,	1100
2017-01-05 16:36:52 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:52 AI_Player.update()		1010,	1100,	110,	11,	1010,	101,	110
2017-01-05 16:36:52 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:52 AI_Player.update()		11,	101,	1010,	1110,	110,	11,	1010
2017-01-05 16:36:52 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-05 16:36:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:52 AI_Player.update()	update
2017-01-05 16:36:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:52 AI_Player.update()	update
2017-01-05 16:36:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:52 AI_Player.update()	Search took74ms
2017-01-05 16:36:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:52 AI_Player.update()		110,	110,	111,	111,	111,	1001,	11
2017-01-05 16:36:52 AI_Player.update()		1010,	110,	1100,	1110,	110,	110,	1100
2017-01-05 16:36:52 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:52 AI_Player.update()		1010,	1010,	110,	11,	1010,	101,	110
2017-01-05 16:36:52 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:52 AI_Player.update()		11,	1001,	1010,	1110,	110,	11,	1010
2017-01-05 16:36:52 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:36:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:52 AI_Player.update()	update
2017-01-05 16:36:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:52 AI_Player.update()	update
2017-01-05 16:36:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:52 AI_Player.update()	Search took207ms
2017-01-05 16:36:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:52 AI_Player.update()		110,	110,	111,	111,	111,	1001,	11
2017-01-05 16:36:52 AI_Player.update()		1010,	110,	1100,	1110,	110,	110,	1100
2017-01-05 16:36:52 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:52 AI_Player.update()		1010,	1010,	110,	11,	1010,	101,	110
2017-01-05 16:36:52 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:52 AI_Player.update()		1010,	11,	1001,	1010,	1110,	110,	11
2017-01-05 16:36:52 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:36:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:36:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:52 AI_Player.update()	update
2017-01-05 16:36:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:36:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:52 AI_Player.update()	update
2017-01-05 16:36:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:52 AI_Player.update()	Search took296ms
2017-01-05 16:36:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:52 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:36:52 AI_Player.update()		1010,	110,	1100,	111,	110,	110,	1100
2017-01-05 16:36:52 AI_Player.update()		1110,	1100,	1110,	1110,	111,	11,	1011
2017-01-05 16:36:52 AI_Player.update()		1010,	1010,	110,	1001,	1010,	101,	110
2017-01-05 16:36:52 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:52 AI_Player.update()		1010,	11,	1001,	11,	1110,	110,	11
2017-01-05 16:36:52 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:36:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:36:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:52 AI_Player.update()	update
2017-01-05 16:36:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:52 AI_Player.update()	update
2017-01-05 16:36:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:53 AI_Player.update()	Search took756ms
2017-01-05 16:36:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:53 AI_Player.update()		110,	110,	111,	111,	111,	1001,	11
2017-01-05 16:36:53 AI_Player.update()		1010,	110,	1100,	1110,	110,	110,	1100
2017-01-05 16:36:53 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:53 AI_Player.update()		1010,	1010,	110,	11,	1010,	101,	110
2017-01-05 16:36:53 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:53 AI_Player.update()		1010,	11,	1001,	1010,	1110,	110,	11
2017-01-05 16:36:53 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:36:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:36:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:53 AI_Player.update()	update
2017-01-05 16:36:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:36:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:53 AI_Player.update()	update
2017-01-05 16:36:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:53 AI_Player.update()	Search took317ms
2017-01-05 16:36:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:53 AI_Player.update()		110,	110,	111,	111,	111,	1001,	11
2017-01-05 16:36:53 AI_Player.update()		1010,	1100,	1100,	1110,	110,	110,	1100
2017-01-05 16:36:53 AI_Player.update()		1110,	1010,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:53 AI_Player.update()		1010,	101,	110,	11,	1010,	101,	110
2017-01-05 16:36:53 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:53 AI_Player.update()		1010,	1010,	1001,	1010,	1110,	110,	11
2017-01-05 16:36:53 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:36:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:36:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:53 AI_Player.update()	update
2017-01-05 16:36:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:53 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:36:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:53 AI_Player.update()	update
2017-01-05 16:36:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:54 AI_Player.update()	Search took319ms
2017-01-05 16:36:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:54 AI_Player.update()		110,	1100,	111,	111,	111,	1001,	11
2017-01-05 16:36:54 AI_Player.update()		1010,	1010,	1100,	1110,	110,	110,	1100
2017-01-05 16:36:54 AI_Player.update()		1110,	101,	1110,	1001,	111,	11,	1011
2017-01-05 16:36:54 AI_Player.update()		1010,	11,	110,	11,	1010,	101,	110
2017-01-05 16:36:54 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 16:36:54 AI_Player.update()		1010,	110,	1001,	1010,	1110,	110,	11
2017-01-05 16:36:54 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:36:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:36:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:54 AI_Player.update()	update
2017-01-05 16:36:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:36:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:54 AI_Player.update()	update
2017-01-05 16:36:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:54 AI_Player.update()	Search took240ms
2017-01-05 16:36:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:54 AI_Player.update()		110,	1100,	111,	111,	111,	110,	11
2017-01-05 16:36:54 AI_Player.update()		1010,	1010,	1100,	1110,	110,	11,	1100
2017-01-05 16:36:54 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 16:36:54 AI_Player.update()		1010,	11,	110,	11,	1010,	1100,	110
2017-01-05 16:36:54 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-05 16:36:54 AI_Player.update()		1010,	110,	1001,	1010,	1110,	1001,	11
2017-01-05 16:36:54 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:36:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:36:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:54 AI_Player.update()	update
2017-01-05 16:36:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:36:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:54 AI_Player.update()	update
2017-01-05 16:36:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:54 AI_Player.update()	Search took449ms
2017-01-05 16:36:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:54 AI_Player.update()		110,	110,	111,	111,	111,	110,	11
2017-01-05 16:36:54 AI_Player.update()		1010,	1100,	1100,	1110,	110,	11,	1100
2017-01-05 16:36:54 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 16:36:54 AI_Player.update()		1010,	101,	110,	11,	1010,	1100,	110
2017-01-05 16:36:54 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-05 16:36:54 AI_Player.update()		1010,	1010,	1001,	1010,	1110,	1001,	11
2017-01-05 16:36:54 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:36:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:36:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:54 AI_Player.update()	update
2017-01-05 16:36:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:36:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:54 AI_Player.update()	update
2017-01-05 16:36:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:55 AI_Player.update()	Search took495ms
2017-01-05 16:36:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:55 AI_Player.update()		110,	1100,	111,	111,	111,	110,	11
2017-01-05 16:36:55 AI_Player.update()		1010,	1010,	1100,	1110,	110,	11,	1100
2017-01-05 16:36:55 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 16:36:55 AI_Player.update()		1010,	11,	110,	11,	1010,	1100,	110
2017-01-05 16:36:55 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-05 16:36:55 AI_Player.update()		1010,	110,	1001,	1010,	1110,	1001,	11
2017-01-05 16:36:55 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:36:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:36:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:55 AI_Player.update()	update
2017-01-05 16:36:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:55 AI_Player.update()	update
2017-01-05 16:36:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:55 AI_Player.update()	Search took140ms
2017-01-05 16:36:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:55 AI_Player.update()		110,	110,	111,	111,	111,	110,	11
2017-01-05 16:36:55 AI_Player.update()		1010,	1100,	1100,	1110,	110,	11,	1100
2017-01-05 16:36:55 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 16:36:55 AI_Player.update()		1010,	101,	110,	11,	1010,	1100,	110
2017-01-05 16:36:55 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-05 16:36:55 AI_Player.update()		1010,	1010,	1001,	1010,	1110,	1001,	11
2017-01-05 16:36:55 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:36:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:55 AI_Player.update()	update
2017-01-05 16:36:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:55 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:55 AI_Player.update()	update
2017-01-05 16:36:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:56 AI_Player.update()	Search took468ms
2017-01-05 16:36:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:56 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 16:36:56 AI_Player.update()		1010,	1100,	1100,	111,	110,	11,	1100
2017-01-05 16:36:56 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 16:36:56 AI_Player.update()		1010,	101,	110,	1001,	1010,	1100,	110
2017-01-05 16:36:56 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-05 16:36:56 AI_Player.update()		1010,	1010,	1001,	11,	1110,	1001,	11
2017-01-05 16:36:56 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:36:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:36:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:56 AI_Player.update()	update
2017-01-05 16:36:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:36:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:56 AI_Player.update()	update
2017-01-05 16:36:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:56 AI_Player.update()	Search took433ms
2017-01-05 16:36:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:56 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 16:36:56 AI_Player.update()		1100,	1100,	111,	110,	11,	1100,	1010
2017-01-05 16:36:56 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 16:36:56 AI_Player.update()		1010,	101,	110,	1001,	1010,	1100,	110
2017-01-05 16:36:56 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-05 16:36:56 AI_Player.update()		1010,	1010,	1001,	11,	1110,	1001,	11
2017-01-05 16:36:56 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:36:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:36:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:56 AI_Player.update()	update
2017-01-05 16:36:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:56 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:36:56 AI_Player.update()	Player a has won!
2017-01-05 16:36:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:56 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:36:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:36:56 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:36:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:56 AI_Player.update()	update
2017-01-05 16:36:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:57 AI_Player.update()	Search took645ms
2017-01-05 16:36:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()		110,	11,	111,	1001,	111,	1100,	11
2017-01-05 16:36:57 AI_Player.update()		101,	101,	1110,	101,	1100,	1010,	1010
2017-01-05 16:36:57 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 16:36:57 AI_Player.update()		1010,	110,	1100,	1110,	111,	101,	1010
2017-01-05 16:36:57 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 16:36:57 AI_Player.update()		101,	1011,	101,	1010,	101,	101,	1010
2017-01-05 16:36:57 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	11,	1001
2017-01-05 16:36:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()	update
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()	update
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:57 AI_Player.update()	Search took447ms
2017-01-05 16:36:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-05 16:36:57 AI_Player.update()		101,	101,	1110,	11,	1100,	1010,	1010
2017-01-05 16:36:57 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 16:36:57 AI_Player.update()		1010,	110,	1100,	101,	111,	101,	1010
2017-01-05 16:36:57 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:36:57 AI_Player.update()		101,	1011,	101,	1100,	101,	101,	1010
2017-01-05 16:36:57 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	11,	1001
2017-01-05 16:36:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:36:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()	update
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:36:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()	update
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:57 AI_Player.update()	Search took72ms
2017-01-05 16:36:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-05 16:36:57 AI_Player.update()		1010,	101,	101,	1110,	11,	1100,	1010
2017-01-05 16:36:57 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 16:36:57 AI_Player.update()		1010,	110,	1100,	101,	111,	101,	1010
2017-01-05 16:36:57 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:36:57 AI_Player.update()		101,	1011,	101,	1100,	101,	101,	1010
2017-01-05 16:36:57 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	11,	1001
2017-01-05 16:36:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:36:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()	update
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()	update
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:57 AI_Player.update()	Search took185ms
2017-01-05 16:36:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 16:36:57 AI_Player.update()		1010,	1010,	101,	1110,	11,	1100,	1010
2017-01-05 16:36:57 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-05 16:36:57 AI_Player.update()		1010,	11,	1100,	101,	111,	101,	1010
2017-01-05 16:36:57 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:36:57 AI_Player.update()		101,	1110,	101,	1100,	101,	101,	1010
2017-01-05 16:36:57 AI_Player.update()		1100,	11,	1101,	1001,	1101,	11,	1001
2017-01-05 16:36:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:36:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()	update
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()	update
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:57 AI_Player.update()	Search took61ms
2017-01-05 16:36:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-05 16:36:57 AI_Player.update()		1010,	110,	101,	1110,	11,	1100,	1010
2017-01-05 16:36:57 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 16:36:57 AI_Player.update()		1010,	1011,	1100,	101,	111,	101,	1010
2017-01-05 16:36:57 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:36:57 AI_Player.update()		101,	11,	101,	1100,	101,	101,	1010
2017-01-05 16:36:57 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-05 16:36:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()	update
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:57 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:57 AI_Player.update()	update
2017-01-05 16:36:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:58 AI_Player.update()	Search took330ms
2017-01-05 16:36:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:58 AI_Player.update()		110,	1010,	111,	1001,	111,	1100,	11
2017-01-05 16:36:58 AI_Player.update()		1010,	110,	101,	101,	11,	1100,	1010
2017-01-05 16:36:58 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 16:36:58 AI_Player.update()		1010,	1011,	1100,	1110,	111,	101,	1010
2017-01-05 16:36:58 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-05 16:36:58 AI_Player.update()		101,	11,	101,	1010,	101,	101,	1010
2017-01-05 16:36:58 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-05 16:36:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:36:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:58 AI_Player.update()	update
2017-01-05 16:36:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:36:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:58 AI_Player.update()	update
2017-01-05 16:36:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:58 AI_Player.update()	Search took208ms
2017-01-05 16:36:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:58 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-05 16:36:58 AI_Player.update()		1010,	1010,	101,	101,	11,	1100,	1010
2017-01-05 16:36:58 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-05 16:36:58 AI_Player.update()		1010,	11,	1100,	1110,	111,	101,	1010
2017-01-05 16:36:58 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1010,	1011
2017-01-05 16:36:58 AI_Player.update()		101,	1110,	101,	1010,	101,	101,	1010
2017-01-05 16:36:58 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-05 16:36:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:36:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:58 AI_Player.update()	update
2017-01-05 16:36:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:58 AI_Player.update()	update
2017-01-05 16:36:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:59 AI_Player.update()	Search took579ms
2017-01-05 16:36:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:59 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-05 16:36:59 AI_Player.update()		1010,	1010,	101,	101,	11,	1100,	1010
2017-01-05 16:36:59 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-05 16:36:59 AI_Player.update()		1010,	11,	1100,	1110,	111,	101,	1010
2017-01-05 16:36:59 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1010,	1011
2017-01-05 16:36:59 AI_Player.update()		1010,	101,	1110,	101,	1010,	101,	101
2017-01-05 16:36:59 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-05 16:36:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:36:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:59 AI_Player.update()	update
2017-01-05 16:36:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:36:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:59 AI_Player.update()	update
2017-01-05 16:36:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:36:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:36:59 AI_Player.update()	Search took272ms
2017-01-05 16:36:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:59 AI_Player.update()		110,	101,	111,	1100,	111,	1100,	11
2017-01-05 16:36:59 AI_Player.update()		1010,	1010,	101,	1001,	11,	1100,	1010
2017-01-05 16:36:59 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 16:36:59 AI_Player.update()		1010,	11,	1100,	1110,	111,	101,	1010
2017-01-05 16:36:59 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	1010,	1011
2017-01-05 16:36:59 AI_Player.update()		1010,	101,	1110,	101,	1010,	101,	101
2017-01-05 16:36:59 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-05 16:36:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:36:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:59 AI_Player.update()	update
2017-01-05 16:36:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:36:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:36:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:36:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:36:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:36:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:36:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:59 AI_Player.update()	update
2017-01-05 16:36:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:36:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:36:59 AI_Player.update()	Search took625ms
2017-01-05 16:36:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:36:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:59 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-05 16:36:59 AI_Player.update()		1010,	110,	101,	1001,	11,	1100,	1010
2017-01-05 16:36:59 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 16:36:59 AI_Player.update()		1010,	1011,	1100,	1110,	111,	101,	1010
2017-01-05 16:36:59 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-05 16:36:59 AI_Player.update()		1010,	11,	1110,	101,	1010,	101,	101
2017-01-05 16:36:59 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-05 16:36:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:36:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:36:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:36:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:59 AI_Player.update()	update
2017-01-05 16:36:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:36:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:36:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:36:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:36:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:36:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:36:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:36:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:36:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:36:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:36:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:36:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:36:59 AI_Player.update()	update
2017-01-05 16:36:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:00 AI_Player.update()	Search took892ms
2017-01-05 16:37:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:00 AI_Player.update()		110,	1010,	111,	1001,	111,	1100,	11
2017-01-05 16:37:00 AI_Player.update()		1010,	110,	101,	101,	11,	1100,	1010
2017-01-05 16:37:00 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 16:37:00 AI_Player.update()		1010,	1011,	1100,	1110,	111,	101,	1010
2017-01-05 16:37:00 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 16:37:00 AI_Player.update()		1010,	11,	1110,	101,	1010,	101,	101
2017-01-05 16:37:00 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-05 16:37:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:00 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:37:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:00 AI_Player.update()	update
2017-01-05 16:37:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:00 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:37:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:00 AI_Player.update()	update
2017-01-05 16:37:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:02 AI_Player.update()	Search took1325ms
2017-01-05 16:37:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:02 AI_Player.update()		110,	110,	111,	1001,	111,	1100,	11
2017-01-05 16:37:02 AI_Player.update()		1010,	11,	101,	101,	11,	1100,	1010
2017-01-05 16:37:02 AI_Player.update()		1110,	1011,	1110,	1110,	111,	101,	1011
2017-01-05 16:37:02 AI_Player.update()		1010,	101,	1100,	1110,	111,	101,	1010
2017-01-05 16:37:02 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 16:37:02 AI_Player.update()		1010,	101,	1110,	101,	1010,	101,	101
2017-01-05 16:37:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-05 16:37:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:37:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:02 AI_Player.update()	update
2017-01-05 16:37:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:37:02 AI_Player.update()	Player b has won!
2017-01-05 16:37:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:02 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:02 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:02 AI_Player.update()	update
2017-01-05 16:37:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:02 AI_Player.update()	Search took79ms
2017-01-05 16:37:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:02 AI_Player.update()		110,	111,	111,	1100,	111,	111,	11
2017-01-05 16:37:02 AI_Player.update()		1001,	11,	1110,	1011,	1010,	101,	11
2017-01-05 16:37:02 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-05 16:37:02 AI_Player.update()		1001,	110,	1001,	101,	11,	11,	101
2017-01-05 16:37:02 AI_Player.update()		1110,	111,	1101,	1001,	1011,	11,	1011
2017-01-05 16:37:02 AI_Player.update()		1011,	101,	1100,	1100,	1110,	11,	1010
2017-01-05 16:37:02 AI_Player.update()		1100,	1100,	1101,	111,	1101,	110,	1001
2017-01-05 16:37:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:02 AI_Player.update()	update
2017-01-05 16:37:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:02 AI_Player.update()	update
2017-01-05 16:37:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:02 AI_Player.update()	Search took139ms
2017-01-05 16:37:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:02 AI_Player.update()		110,	111,	111,	111,	111,	111,	11
2017-01-05 16:37:02 AI_Player.update()		1001,	11,	1110,	1100,	1010,	101,	11
2017-01-05 16:37:02 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-05 16:37:02 AI_Player.update()		1001,	110,	1001,	11,	11,	11,	101
2017-01-05 16:37:02 AI_Player.update()		1110,	111,	1101,	101,	1011,	11,	1011
2017-01-05 16:37:02 AI_Player.update()		1011,	101,	1100,	1001,	1110,	11,	1010
2017-01-05 16:37:02 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-05 16:37:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:02 AI_Player.update()	update
2017-01-05 16:37:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:02 AI_Player.update()	update
2017-01-05 16:37:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:02 AI_Player.update()	Search took494ms
2017-01-05 16:37:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:02 AI_Player.update()		110,	111,	111,	1100,	111,	111,	11
2017-01-05 16:37:02 AI_Player.update()		1001,	11,	1110,	111,	1010,	101,	11
2017-01-05 16:37:02 AI_Player.update()		1110,	110,	1110,	1100,	111,	11,	1011
2017-01-05 16:37:02 AI_Player.update()		1001,	110,	1001,	1011,	11,	11,	101
2017-01-05 16:37:02 AI_Player.update()		1110,	111,	1101,	11,	1011,	11,	1011
2017-01-05 16:37:02 AI_Player.update()		1011,	101,	1100,	101,	1110,	11,	1010
2017-01-05 16:37:02 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-05 16:37:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:02 AI_Player.update()	update
2017-01-05 16:37:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:02 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:02 AI_Player.update()	update
2017-01-05 16:37:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:03 AI_Player.update()	Search took451ms
2017-01-05 16:37:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:03 AI_Player.update()		110,	11,	111,	1100,	111,	111,	11
2017-01-05 16:37:03 AI_Player.update()		1001,	110,	1110,	111,	1010,	101,	11
2017-01-05 16:37:03 AI_Player.update()		1110,	110,	1110,	1100,	111,	11,	1011
2017-01-05 16:37:03 AI_Player.update()		1001,	111,	1001,	1011,	11,	11,	101
2017-01-05 16:37:03 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 16:37:03 AI_Player.update()		1011,	1100,	1100,	101,	1110,	11,	1010
2017-01-05 16:37:03 AI_Player.update()		1100,	111,	1101,	1001,	1101,	110,	1001
2017-01-05 16:37:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:03 AI_Player.update()	update
2017-01-05 16:37:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:03 AI_Player.update()	update
2017-01-05 16:37:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:03 AI_Player.update()	Search took55ms
2017-01-05 16:37:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:03 AI_Player.update()		110,	111,	111,	1100,	111,	111,	11
2017-01-05 16:37:03 AI_Player.update()		1001,	11,	1110,	111,	1010,	101,	11
2017-01-05 16:37:03 AI_Player.update()		1110,	110,	1110,	1100,	111,	11,	1011
2017-01-05 16:37:03 AI_Player.update()		1001,	110,	1001,	1011,	11,	11,	101
2017-01-05 16:37:03 AI_Player.update()		1110,	111,	1101,	11,	1011,	11,	1011
2017-01-05 16:37:03 AI_Player.update()		1011,	101,	1100,	101,	1110,	11,	1010
2017-01-05 16:37:03 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-05 16:37:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:03 AI_Player.update()	update
2017-01-05 16:37:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:03 AI_Player.update()	update
2017-01-05 16:37:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:03 AI_Player.update()	Search took312ms
2017-01-05 16:37:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:03 AI_Player.update()		110,	11,	111,	1100,	111,	111,	11
2017-01-05 16:37:03 AI_Player.update()		1001,	110,	1110,	111,	1010,	101,	11
2017-01-05 16:37:03 AI_Player.update()		1110,	110,	1110,	1100,	111,	11,	1011
2017-01-05 16:37:03 AI_Player.update()		1001,	111,	1001,	1011,	11,	11,	101
2017-01-05 16:37:03 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 16:37:03 AI_Player.update()		1011,	1100,	1100,	101,	1110,	11,	1010
2017-01-05 16:37:03 AI_Player.update()		1100,	111,	1101,	1001,	1101,	110,	1001
2017-01-05 16:37:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:03 AI_Player.update()	update
2017-01-05 16:37:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:37:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:03 AI_Player.update()	update
2017-01-05 16:37:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:04 AI_Player.update()	Search took394ms
2017-01-05 16:37:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:04 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-05 16:37:04 AI_Player.update()		1001,	110,	1110,	111,	1010,	111,	11
2017-01-05 16:37:04 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-05 16:37:04 AI_Player.update()		1001,	111,	1001,	1011,	11,	11,	101
2017-01-05 16:37:04 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 16:37:04 AI_Player.update()		1011,	1100,	1100,	101,	1110,	11,	1010
2017-01-05 16:37:04 AI_Player.update()		1100,	111,	1101,	1001,	1101,	11,	1001
2017-01-05 16:37:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:37:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:04 AI_Player.update()	update
2017-01-05 16:37:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:04 AI_Player.update()	update
2017-01-05 16:37:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:04 AI_Player.update()	Search took505ms
2017-01-05 16:37:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:04 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-05 16:37:04 AI_Player.update()		1001,	110,	1110,	1100,	1010,	111,	11
2017-01-05 16:37:04 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-05 16:37:04 AI_Player.update()		1001,	111,	1001,	1100,	11,	11,	101
2017-01-05 16:37:04 AI_Player.update()		1110,	101,	1101,	1011,	1011,	11,	1011
2017-01-05 16:37:04 AI_Player.update()		1011,	1100,	1100,	11,	1110,	11,	1010
2017-01-05 16:37:04 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:04 AI_Player.update()	update
2017-01-05 16:37:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:04 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:04 AI_Player.update()	update
2017-01-05 16:37:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:05 AI_Player.update()	Search took917ms
2017-01-05 16:37:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:05 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-05 16:37:05 AI_Player.update()		1001,	110,	1110,	1100,	1010,	111,	11
2017-01-05 16:37:05 AI_Player.update()		1110,	111,	1110,	111,	111,	101,	1011
2017-01-05 16:37:05 AI_Player.update()		1001,	101,	1001,	1100,	11,	11,	101
2017-01-05 16:37:05 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	11,	1011
2017-01-05 16:37:05 AI_Player.update()		1011,	111,	1100,	11,	1110,	11,	1010
2017-01-05 16:37:05 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:05 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:05 AI_Player.update()	update
2017-01-05 16:37:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:05 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:05 AI_Player.update()	update
2017-01-05 16:37:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:06 AI_Player.update()	Search took603ms
2017-01-05 16:37:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:06 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 16:37:06 AI_Player.update()		1001,	110,	1110,	1001,	1010,	111,	11
2017-01-05 16:37:06 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 16:37:06 AI_Player.update()		1001,	101,	1001,	111,	11,	11,	101
2017-01-05 16:37:06 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-05 16:37:06 AI_Player.update()		1011,	111,	1100,	1011,	1110,	11,	1010
2017-01-05 16:37:06 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 16:37:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:06 AI_Player.update()	update
2017-01-05 16:37:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:06 AI_Player.update()	update
2017-01-05 16:37:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:06 AI_Player.update()	Search took312ms
2017-01-05 16:37:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:06 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 16:37:06 AI_Player.update()		1001,	111,	1110,	1001,	1010,	111,	11
2017-01-05 16:37:06 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 16:37:06 AI_Player.update()		1001,	1100,	1001,	111,	11,	11,	101
2017-01-05 16:37:06 AI_Player.update()		1110,	111,	1101,	1100,	1011,	11,	1011
2017-01-05 16:37:06 AI_Player.update()		1011,	11,	1100,	1011,	1110,	11,	1010
2017-01-05 16:37:06 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-05 16:37:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:06 AI_Player.update()	update
2017-01-05 16:37:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:06 AI_Player.update()	update
2017-01-05 16:37:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:06 AI_Player.update()	Search took223ms
2017-01-05 16:37:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:06 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 16:37:06 AI_Player.update()		11,	1001,	111,	1110,	1001,	1010,	111
2017-01-05 16:37:06 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 16:37:06 AI_Player.update()		1001,	1100,	1001,	111,	11,	11,	101
2017-01-05 16:37:06 AI_Player.update()		1110,	111,	1101,	1100,	1011,	11,	1011
2017-01-05 16:37:06 AI_Player.update()		1011,	11,	1100,	1011,	1110,	11,	1010
2017-01-05 16:37:06 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-05 16:37:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:06 AI_Player.update()	update
2017-01-05 16:37:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:06 AI_Player.update()	update
2017-01-05 16:37:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:07 AI_Player.update()	Search took442ms
2017-01-05 16:37:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:07 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-05 16:37:07 AI_Player.update()		11,	1001,	111,	101,	1001,	1010,	111
2017-01-05 16:37:07 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 16:37:07 AI_Player.update()		1001,	1100,	1001,	1100,	11,	11,	101
2017-01-05 16:37:07 AI_Player.update()		1110,	111,	1101,	111,	1011,	11,	1011
2017-01-05 16:37:07 AI_Player.update()		1011,	11,	1100,	1100,	1110,	11,	1010
2017-01-05 16:37:07 AI_Player.update()		1100,	110,	1101,	1011,	1101,	11,	1001
2017-01-05 16:37:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:07 AI_Player.update()	update
2017-01-05 16:37:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:07 AI_Player.update()	update
2017-01-05 16:37:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:07 AI_Player.update()	Search took518ms
2017-01-05 16:37:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:07 AI_Player.update()		110,	1001,	111,	11,	111,	110,	11
2017-01-05 16:37:07 AI_Player.update()		11,	101,	111,	101,	1001,	1010,	111
2017-01-05 16:37:07 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-05 16:37:07 AI_Player.update()		1001,	111,	1001,	1100,	11,	11,	101
2017-01-05 16:37:07 AI_Player.update()		1110,	11,	1101,	111,	1011,	11,	1011
2017-01-05 16:37:07 AI_Player.update()		1011,	110,	1100,	1100,	1110,	11,	1010
2017-01-05 16:37:07 AI_Player.update()		1100,	110,	1101,	1011,	1101,	11,	1001
2017-01-05 16:37:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:07 AI_Player.update()	update
2017-01-05 16:37:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:07 AI_Player.update()	update
2017-01-05 16:37:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:07 AI_Player.update()	Search took109ms
2017-01-05 16:37:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:07 AI_Player.update()		110,	1001,	111,	11,	111,	110,	11
2017-01-05 16:37:07 AI_Player.update()		11,	101,	111,	101,	1001,	1010,	111
2017-01-05 16:37:07 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-05 16:37:07 AI_Player.update()		1001,	111,	1001,	1100,	11,	11,	101
2017-01-05 16:37:07 AI_Player.update()		1110,	11,	1101,	111,	1011,	11,	1011
2017-01-05 16:37:07 AI_Player.update()		110,	1100,	1100,	1110,	11,	1010,	1011
2017-01-05 16:37:07 AI_Player.update()		1100,	110,	1101,	1011,	1101,	11,	1001
2017-01-05 16:37:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:07 AI_Player.update()	update
2017-01-05 16:37:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:37:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:07 AI_Player.update()	update
2017-01-05 16:37:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:08 AI_Player.update()	Search took378ms
2017-01-05 16:37:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()		110,	1001,	111,	11,	111,	110,	11
2017-01-05 16:37:08 AI_Player.update()		111,	11,	101,	111,	101,	1001,	1010
2017-01-05 16:37:08 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-05 16:37:08 AI_Player.update()		1001,	111,	1001,	1100,	11,	11,	101
2017-01-05 16:37:08 AI_Player.update()		1110,	11,	1101,	111,	1011,	11,	1011
2017-01-05 16:37:08 AI_Player.update()		110,	1100,	1100,	1110,	11,	1010,	1011
2017-01-05 16:37:08 AI_Player.update()		1100,	110,	1101,	1011,	1101,	11,	1001
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:08 AI_Player.update()	Search took41ms
2017-01-05 16:37:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 16:37:08 AI_Player.update()		111,	1100,	101,	111,	101,	1001,	1010
2017-01-05 16:37:08 AI_Player.update()		1110,	111,	1110,	1110,	111,	101,	1011
2017-01-05 16:37:08 AI_Player.update()		1001,	11,	1001,	1100,	11,	11,	101
2017-01-05 16:37:08 AI_Player.update()		1110,	1100,	1101,	111,	1011,	11,	1011
2017-01-05 16:37:08 AI_Player.update()		110,	110,	1100,	1110,	11,	1010,	1011
2017-01-05 16:37:08 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	11,	1001
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:08 AI_Player.update()	Search took182ms
2017-01-05 16:37:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-05 16:37:08 AI_Player.update()		111,	111,	101,	111,	101,	1001,	1010
2017-01-05 16:37:08 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 16:37:08 AI_Player.update()		1001,	1100,	1001,	1100,	11,	11,	101
2017-01-05 16:37:08 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 16:37:08 AI_Player.update()		110,	1001,	1100,	1110,	11,	1010,	1011
2017-01-05 16:37:08 AI_Player.update()		1100,	11,	1101,	1011,	1101,	11,	1001
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:37:08 AI_Player.update()	Player b has won!
2017-01-05 16:37:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:08 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:08 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:08 AI_Player.update()	Search took15ms
2017-01-05 16:37:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-05 16:37:08 AI_Player.update()		11,	101,	110,	1001,	101,	1011,	1001
2017-01-05 16:37:08 AI_Player.update()		1110,	1110,	1110,	11,	111,	1010,	1011
2017-01-05 16:37:08 AI_Player.update()		1001,	1100,	1010,	110,	11,	1001,	1010
2017-01-05 16:37:08 AI_Player.update()		1110,	1010,	1101,	101,	1011,	111,	1011
2017-01-05 16:37:08 AI_Player.update()		1001,	1010,	101,	110,	1110,	101,	1110
2017-01-05 16:37:08 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:08 AI_Player.update()	Search took140ms
2017-01-05 16:37:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-05 16:37:08 AI_Player.update()		1001,	11,	101,	110,	1001,	101,	1011
2017-01-05 16:37:08 AI_Player.update()		1110,	1110,	1110,	11,	111,	1010,	1011
2017-01-05 16:37:08 AI_Player.update()		1001,	1100,	1010,	110,	11,	1001,	1010
2017-01-05 16:37:08 AI_Player.update()		1110,	1010,	1101,	101,	1011,	111,	1011
2017-01-05 16:37:08 AI_Player.update()		1001,	1010,	101,	110,	1110,	101,	1110
2017-01-05 16:37:08 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:08 AI_Player.update()	Search took34ms
2017-01-05 16:37:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-05 16:37:08 AI_Player.update()		1011,	1001,	11,	101,	110,	1001,	101
2017-01-05 16:37:08 AI_Player.update()		1110,	1110,	1110,	11,	111,	1010,	1011
2017-01-05 16:37:08 AI_Player.update()		1001,	1100,	1010,	110,	11,	1001,	1010
2017-01-05 16:37:08 AI_Player.update()		1110,	1010,	1101,	101,	1011,	111,	1011
2017-01-05 16:37:08 AI_Player.update()		1001,	1010,	101,	110,	1110,	101,	1110
2017-01-05 16:37:08 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:08 AI_Player.update()	Search took203ms
2017-01-05 16:37:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-05 16:37:08 AI_Player.update()		1011,	1001,	11,	101,	110,	1001,	101
2017-01-05 16:37:08 AI_Player.update()		1110,	1110,	1110,	11,	111,	1010,	1011
2017-01-05 16:37:08 AI_Player.update()		1010,	1001,	1100,	1010,	110,	11,	1001
2017-01-05 16:37:08 AI_Player.update()		1110,	1010,	1101,	101,	1011,	111,	1011
2017-01-05 16:37:08 AI_Player.update()		1001,	1010,	101,	110,	1110,	101,	1110
2017-01-05 16:37:08 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-05 16:37:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:08 AI_Player.update()	update
2017-01-05 16:37:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:09 AI_Player.update()	Search took143ms
2017-01-05 16:37:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 16:37:09 AI_Player.update()		1011,	1001,	11,	11,	110,	1001,	101
2017-01-05 16:37:09 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-05 16:37:09 AI_Player.update()		1010,	1001,	1100,	101,	110,	11,	1001
2017-01-05 16:37:09 AI_Player.update()		1110,	1010,	1101,	110,	1011,	111,	1011
2017-01-05 16:37:09 AI_Player.update()		1001,	1010,	101,	11,	1110,	101,	1110
2017-01-05 16:37:09 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1100,	1001
2017-01-05 16:37:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()	update
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()	update
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:09 AI_Player.update()	Search took143ms
2017-01-05 16:37:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 16:37:09 AI_Player.update()		1011,	1110,	11,	11,	110,	1001,	101
2017-01-05 16:37:09 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 16:37:09 AI_Player.update()		1010,	1010,	1100,	101,	110,	11,	1001
2017-01-05 16:37:09 AI_Player.update()		1110,	1010,	1101,	110,	1011,	111,	1011
2017-01-05 16:37:09 AI_Player.update()		1001,	1001,	101,	11,	1110,	101,	1110
2017-01-05 16:37:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-05 16:37:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()	update
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()	update
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:09 AI_Player.update()	Search took78ms
2017-01-05 16:37:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()		110,	1001,	111,	11,	111,	110,	11
2017-01-05 16:37:09 AI_Player.update()		1011,	1110,	11,	1010,	110,	1001,	101
2017-01-05 16:37:09 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-05 16:37:09 AI_Player.update()		1010,	1010,	1100,	110,	110,	11,	1001
2017-01-05 16:37:09 AI_Player.update()		1110,	1010,	1101,	11,	1011,	111,	1011
2017-01-05 16:37:09 AI_Player.update()		1001,	1001,	101,	110,	1110,	101,	1110
2017-01-05 16:37:09 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:37:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()	update
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()	update
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:09 AI_Player.update()	Search took306ms
2017-01-05 16:37:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()		110,	1001,	111,	11,	111,	110,	11
2017-01-05 16:37:09 AI_Player.update()		1110,	11,	1010,	110,	1001,	101,	1011
2017-01-05 16:37:09 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-05 16:37:09 AI_Player.update()		1010,	1010,	1100,	110,	110,	11,	1001
2017-01-05 16:37:09 AI_Player.update()		1110,	1010,	1101,	11,	1011,	111,	1011
2017-01-05 16:37:09 AI_Player.update()		1001,	1001,	101,	110,	1110,	101,	1110
2017-01-05 16:37:09 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:37:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()	update
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()	update
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:09 AI_Player.update()	Search took273ms
2017-01-05 16:37:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-05 16:37:09 AI_Player.update()		1110,	11,	1010,	110,	1001,	1010,	1011
2017-01-05 16:37:09 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 16:37:09 AI_Player.update()		1010,	1010,	1100,	110,	110,	111,	1001
2017-01-05 16:37:09 AI_Player.update()		1110,	1010,	1101,	11,	1011,	101,	1011
2017-01-05 16:37:09 AI_Player.update()		1001,	1001,	101,	110,	1110,	1100,	1110
2017-01-05 16:37:09 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 16:37:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()	update
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:37:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:09 AI_Player.update()	update
2017-01-05 16:37:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:10 AI_Player.update()	Search took452ms
2017-01-05 16:37:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:10 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-05 16:37:10 AI_Player.update()		1110,	11,	1010,	110,	1001,	11,	1011
2017-01-05 16:37:10 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-05 16:37:10 AI_Player.update()		1010,	1010,	1100,	110,	110,	101,	1001
2017-01-05 16:37:10 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 16:37:10 AI_Player.update()		1001,	1001,	101,	110,	1110,	110,	1110
2017-01-05 16:37:10 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:37:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:37:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:10 AI_Player.update()	update
2017-01-05 16:37:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:10 AI_Player.update()	update
2017-01-05 16:37:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:10 AI_Player.update()	Search took92ms
2017-01-05 16:37:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:10 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-05 16:37:10 AI_Player.update()		1110,	11,	1010,	11,	1001,	11,	1011
2017-01-05 16:37:10 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-05 16:37:10 AI_Player.update()		1010,	1010,	1100,	101,	110,	101,	1001
2017-01-05 16:37:10 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-05 16:37:10 AI_Player.update()		1001,	1001,	101,	11,	1110,	110,	1110
2017-01-05 16:37:10 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-05 16:37:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:10 AI_Player.update()	update
2017-01-05 16:37:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:37:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:10 AI_Player.update()	update
2017-01-05 16:37:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:11 AI_Player.update()	Search took601ms
2017-01-05 16:37:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-05 16:37:11 AI_Player.update()		1110,	11,	1010,	101,	1001,	11,	1011
2017-01-05 16:37:11 AI_Player.update()		1110,	1001,	1110,	11,	111,	111,	1011
2017-01-05 16:37:11 AI_Player.update()		1010,	1010,	1100,	110,	110,	101,	1001
2017-01-05 16:37:11 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:11 AI_Player.update()		1001,	1001,	101,	110,	1110,	110,	1110
2017-01-05 16:37:11 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:37:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:11 AI_Player.update()	Search took272ms
2017-01-05 16:37:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:37:11 AI_Player.update()		1110,	1001,	1010,	101,	1001,	11,	1011
2017-01-05 16:37:11 AI_Player.update()		1110,	11,	1110,	11,	111,	111,	1011
2017-01-05 16:37:11 AI_Player.update()		1010,	1001,	1100,	110,	110,	101,	1001
2017-01-05 16:37:11 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:11 AI_Player.update()		1001,	1010,	101,	110,	1110,	110,	1110
2017-01-05 16:37:11 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:37:11 AI_Player.update()	Player a has won!
2017-01-05 16:37:11 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:11 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:11 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:11 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:11 AI_Player.update()	Search took57ms
2017-01-05 16:37:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()		110,	111,	111,	1001,	111,	1101,	11
2017-01-05 16:37:11 AI_Player.update()		101,	1010,	1011,	11,	1011,	1001,	1101
2017-01-05 16:37:11 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 16:37:11 AI_Player.update()		111,	1001,	1001,	1010,	1110,	110,	101
2017-01-05 16:37:11 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:11 AI_Player.update()		1100,	110,	101,	1010,	1010,	101,	110
2017-01-05 16:37:11 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:11 AI_Player.update()	Search took59ms
2017-01-05 16:37:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()		110,	1010,	111,	1001,	111,	1101,	11
2017-01-05 16:37:11 AI_Player.update()		101,	11,	1011,	11,	1011,	1001,	1101
2017-01-05 16:37:11 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 16:37:11 AI_Player.update()		111,	1101,	1001,	1010,	1110,	110,	101
2017-01-05 16:37:11 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:11 AI_Player.update()		1100,	1001,	101,	1010,	1010,	101,	110
2017-01-05 16:37:11 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:11 AI_Player.update()	Search took233ms
2017-01-05 16:37:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()		110,	111,	111,	1001,	111,	1101,	11
2017-01-05 16:37:11 AI_Player.update()		101,	1010,	1011,	11,	1011,	1001,	1101
2017-01-05 16:37:11 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 16:37:11 AI_Player.update()		111,	1001,	1001,	1010,	1110,	110,	101
2017-01-05 16:37:11 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:11 AI_Player.update()		1100,	110,	101,	1010,	1010,	101,	110
2017-01-05 16:37:11 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:11 AI_Player.update()	Search took71ms
2017-01-05 16:37:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()		110,	111,	111,	1001,	111,	1101,	11
2017-01-05 16:37:11 AI_Player.update()		1101,	101,	1010,	1011,	11,	1011,	1001
2017-01-05 16:37:11 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 16:37:11 AI_Player.update()		111,	1001,	1001,	1010,	1110,	110,	101
2017-01-05 16:37:11 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:11 AI_Player.update()		1100,	110,	101,	1010,	1010,	101,	110
2017-01-05 16:37:11 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:11 AI_Player.update()	Search took253ms
2017-01-05 16:37:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()		110,	101,	111,	1001,	111,	1101,	11
2017-01-05 16:37:11 AI_Player.update()		1101,	11,	1010,	1011,	11,	1011,	1001
2017-01-05 16:37:11 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 16:37:11 AI_Player.update()		111,	1101,	1001,	1010,	1110,	110,	101
2017-01-05 16:37:11 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:11 AI_Player.update()		1100,	1001,	101,	1010,	1010,	101,	110
2017-01-05 16:37:11 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:11 AI_Player.update()	update
2017-01-05 16:37:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:12 AI_Player.update()	Search took434ms
2017-01-05 16:37:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:12 AI_Player.update()		110,	101,	111,	1001,	111,	1101,	11
2017-01-05 16:37:12 AI_Player.update()		1101,	11,	1010,	1011,	11,	1011,	1001
2017-01-05 16:37:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 16:37:12 AI_Player.update()		1101,	1001,	1010,	1110,	110,	101,	111
2017-01-05 16:37:12 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:12 AI_Player.update()		1100,	1001,	101,	1010,	1010,	101,	110
2017-01-05 16:37:12 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:12 AI_Player.update()	update
2017-01-05 16:37:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:12 AI_Player.update()	update
2017-01-05 16:37:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:12 AI_Player.update()	Search took491ms
2017-01-05 16:37:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:12 AI_Player.update()		110,	101,	111,	1001,	111,	1101,	11
2017-01-05 16:37:12 AI_Player.update()		1101,	11,	1010,	1001,	11,	1011,	1001
2017-01-05 16:37:12 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1001,	1011
2017-01-05 16:37:12 AI_Player.update()		1101,	1001,	1010,	1010,	110,	101,	111
2017-01-05 16:37:12 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1110,	1011
2017-01-05 16:37:12 AI_Player.update()		1100,	1001,	101,	1010,	1010,	101,	110
2017-01-05 16:37:12 AI_Player.update()		1100,	111,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:12 AI_Player.update()	update
2017-01-05 16:37:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:12 AI_Player.update()	update
2017-01-05 16:37:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:13 AI_Player.update()	Search took706ms
2017-01-05 16:37:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:13 AI_Player.update()		110,	101,	111,	1001,	111,	1101,	11
2017-01-05 16:37:13 AI_Player.update()		1101,	11,	1010,	1011,	11,	1011,	1001
2017-01-05 16:37:13 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 16:37:13 AI_Player.update()		1101,	1001,	1010,	1110,	110,	101,	111
2017-01-05 16:37:13 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:13 AI_Player.update()		1100,	1001,	101,	1010,	1010,	101,	110
2017-01-05 16:37:13 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:13 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:13 AI_Player.update()	update
2017-01-05 16:37:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:13 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:13 AI_Player.update()	update
2017-01-05 16:37:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:14 AI_Player.update()	Search took375ms
2017-01-05 16:37:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()		110,	11,	111,	1001,	111,	1101,	11
2017-01-05 16:37:14 AI_Player.update()		1101,	1001,	1010,	1011,	11,	1011,	1001
2017-01-05 16:37:14 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 16:37:14 AI_Player.update()		1101,	110,	1010,	1110,	110,	101,	111
2017-01-05 16:37:14 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:14 AI_Player.update()		1100,	111,	101,	1010,	1010,	101,	110
2017-01-05 16:37:14 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()	update
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()	update
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:14 AI_Player.update()	Search took118ms
2017-01-05 16:37:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()		110,	11,	111,	1001,	111,	1101,	11
2017-01-05 16:37:14 AI_Player.update()		1101,	1001,	1010,	1011,	11,	1011,	1001
2017-01-05 16:37:14 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 16:37:14 AI_Player.update()		110,	1010,	1110,	110,	101,	111,	1101
2017-01-05 16:37:14 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:14 AI_Player.update()		1100,	111,	101,	1010,	1010,	101,	110
2017-01-05 16:37:14 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()	update
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()	update
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:14 AI_Player.update()	Search took143ms
2017-01-05 16:37:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 16:37:14 AI_Player.update()		1101,	1001,	1010,	1011,	11,	1101,	1001
2017-01-05 16:37:14 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1011,	1011
2017-01-05 16:37:14 AI_Player.update()		110,	1010,	1110,	110,	101,	1001,	1101
2017-01-05 16:37:14 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	111,	1011
2017-01-05 16:37:14 AI_Player.update()		1100,	111,	101,	1010,	1010,	1110,	110
2017-01-05 16:37:14 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()	update
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:37:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()	update
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:14 AI_Player.update()	Search took76ms
2017-01-05 16:37:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 16:37:14 AI_Player.update()		1101,	1001,	1010,	1011,	11,	1101,	1001
2017-01-05 16:37:14 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1011,	1011
2017-01-05 16:37:14 AI_Player.update()		1101,	110,	1010,	1110,	110,	101,	1001
2017-01-05 16:37:14 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	111,	1011
2017-01-05 16:37:14 AI_Player.update()		1100,	111,	101,	1010,	1010,	1110,	110
2017-01-05 16:37:14 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:37:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()	update
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()	update
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:14 AI_Player.update()	Search took67ms
2017-01-05 16:37:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()		110,	11,	111,	1011,	111,	101,	11
2017-01-05 16:37:14 AI_Player.update()		1101,	1001,	1010,	1010,	11,	1101,	1001
2017-01-05 16:37:14 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1011,	1011
2017-01-05 16:37:14 AI_Player.update()		1101,	110,	1010,	1010,	110,	101,	1001
2017-01-05 16:37:14 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	111,	1011
2017-01-05 16:37:14 AI_Player.update()		1100,	111,	101,	1001,	1010,	1110,	110
2017-01-05 16:37:14 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()	update
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()	update
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:14 AI_Player.update()	Search took442ms
2017-01-05 16:37:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()		110,	11,	111,	1011,	111,	1101,	11
2017-01-05 16:37:14 AI_Player.update()		1101,	1001,	1010,	1010,	11,	1011,	1001
2017-01-05 16:37:14 AI_Player.update()		1110,	1001,	1110,	1110,	111,	101,	1011
2017-01-05 16:37:14 AI_Player.update()		1101,	110,	1010,	1010,	110,	111,	1001
2017-01-05 16:37:14 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:14 AI_Player.update()		1100,	111,	101,	1001,	1010,	101,	110
2017-01-05 16:37:14 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()	update
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:14 AI_Player.update()	update
2017-01-05 16:37:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:15 AI_Player.update()	Search took780ms
2017-01-05 16:37:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:15 AI_Player.update()		110,	1001,	111,	1011,	111,	1101,	11
2017-01-05 16:37:15 AI_Player.update()		1101,	1001,	1010,	1010,	11,	1011,	1001
2017-01-05 16:37:15 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-05 16:37:15 AI_Player.update()		1101,	1001,	1010,	1010,	110,	111,	1001
2017-01-05 16:37:15 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:15 AI_Player.update()		1100,	101,	101,	1001,	1010,	101,	110
2017-01-05 16:37:15 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:15 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:15 AI_Player.update()	update
2017-01-05 16:37:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:15 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:37:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:15 AI_Player.update()	update
2017-01-05 16:37:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:16 AI_Player.update()	Search took1115ms
2017-01-05 16:37:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:16 AI_Player.update()		110,	1001,	111,	1011,	111,	1101,	11
2017-01-05 16:37:16 AI_Player.update()		1101,	1001,	1010,	1010,	11,	1011,	1001
2017-01-05 16:37:16 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-05 16:37:16 AI_Player.update()		1101,	1001,	1010,	1010,	110,	111,	1001
2017-01-05 16:37:16 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:16 AI_Player.update()		110,	1100,	101,	101,	1001,	1010,	101
2017-01-05 16:37:16 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:16 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:37:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:16 AI_Player.update()	update
2017-01-05 16:37:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:16 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:16 AI_Player.update()	update
2017-01-05 16:37:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:17 AI_Player.update()	Search took1077ms
2017-01-05 16:37:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:17 AI_Player.update()		110,	1001,	111,	1011,	111,	1101,	11
2017-01-05 16:37:17 AI_Player.update()		1001,	1101,	1001,	1010,	1010,	11,	1011
2017-01-05 16:37:17 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-05 16:37:17 AI_Player.update()		1101,	1001,	1010,	1010,	110,	111,	1001
2017-01-05 16:37:17 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:17 AI_Player.update()		110,	1100,	101,	101,	1001,	1010,	101
2017-01-05 16:37:17 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-05 16:37:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:17 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:17 AI_Player.update()	update
2017-01-05 16:37:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:17 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:17 AI_Player.update()	update
2017-01-05 16:37:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:18 AI_Player.update()	Search took917ms
2017-01-05 16:37:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:18 AI_Player.update()		110,	1001,	111,	1010,	111,	1101,	11
2017-01-05 16:37:18 AI_Player.update()		1001,	1101,	1001,	1110,	1010,	11,	1011
2017-01-05 16:37:18 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-05 16:37:18 AI_Player.update()		1101,	1001,	1010,	1010,	110,	111,	1001
2017-01-05 16:37:18 AI_Player.update()		1110,	111,	1101,	101,	1011,	1110,	1011
2017-01-05 16:37:18 AI_Player.update()		110,	1100,	101,	1001,	1001,	1010,	101
2017-01-05 16:37:18 AI_Player.update()		1100,	11,	1101,	1011,	1101,	101,	1001
2017-01-05 16:37:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:18 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:18 AI_Player.update()	update
2017-01-05 16:37:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:18 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:37:18 AI_Player.update()	Player b has won!
2017-01-05 16:37:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:18 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:18 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:18 AI_Player.update()	update
2017-01-05 16:37:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:19 AI_Player.update()	Search took209ms
2017-01-05 16:37:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()		110,	111,	111,	11,	111,	1100,	11
2017-01-05 16:37:19 AI_Player.update()		1010,	1010,	1010,	1100,	110,	11,	1010
2017-01-05 16:37:19 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:19 AI_Player.update()		110,	1010,	1001,	1001,	1100,	1010,	11
2017-01-05 16:37:19 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:19 AI_Player.update()		111,	1010,	1100,	11,	1100,	111,	101
2017-01-05 16:37:19 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:19 AI_Player.update()	Search took57ms
2017-01-05 16:37:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-05 16:37:19 AI_Player.update()		1010,	111,	1010,	1100,	110,	11,	1010
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:19 AI_Player.update()		110,	101,	1001,	1001,	1100,	1010,	11
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:19 AI_Player.update()		111,	101,	1100,	11,	1100,	111,	101
2017-01-05 16:37:19 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:19 AI_Player.update()	Search took228ms
2017-01-05 16:37:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()		110,	111,	111,	11,	111,	1100,	11
2017-01-05 16:37:19 AI_Player.update()		1010,	1010,	1010,	1100,	110,	11,	1010
2017-01-05 16:37:19 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:19 AI_Player.update()		110,	1010,	1001,	1001,	1100,	1010,	11
2017-01-05 16:37:19 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:19 AI_Player.update()		111,	1010,	1100,	11,	1100,	111,	101
2017-01-05 16:37:19 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:19 AI_Player.update()	Search took84ms
2017-01-05 16:37:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-05 16:37:19 AI_Player.update()		1010,	111,	1010,	1100,	110,	11,	1010
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:19 AI_Player.update()		110,	101,	1001,	1001,	1100,	1010,	11
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:19 AI_Player.update()		111,	101,	1100,	11,	1100,	111,	101
2017-01-05 16:37:19 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:19 AI_Player.update()	Search took193ms
2017-01-05 16:37:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-05 16:37:19 AI_Player.update()		111,	1010,	1100,	110,	11,	1010,	1010
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:19 AI_Player.update()		110,	101,	1001,	1001,	1100,	1010,	11
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:19 AI_Player.update()		111,	101,	1100,	11,	1100,	111,	101
2017-01-05 16:37:19 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:19 AI_Player.update()	Search took32ms
2017-01-05 16:37:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-05 16:37:19 AI_Player.update()		1010,	111,	1010,	1100,	110,	11,	1010
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:19 AI_Player.update()		110,	101,	1001,	1001,	1100,	1010,	11
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:19 AI_Player.update()		111,	101,	1100,	11,	1100,	111,	101
2017-01-05 16:37:19 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:19 AI_Player.update()	Search took55ms
2017-01-05 16:37:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:37:19 AI_Player.update()		1010,	111,	1010,	1100,	110,	1100,	1010
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	11,	1011
2017-01-05 16:37:19 AI_Player.update()		110,	101,	1001,	1001,	1100,	1010,	11
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-05 16:37:19 AI_Player.update()		111,	101,	1100,	11,	1100,	101,	101
2017-01-05 16:37:19 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	111,	1001
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:19 AI_Player.update()	Search took90ms
2017-01-05 16:37:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:37:19 AI_Player.update()		1010,	1010,	111,	1010,	1100,	110,	1100
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	11,	1011
2017-01-05 16:37:19 AI_Player.update()		110,	101,	1001,	1001,	1100,	1010,	11
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-05 16:37:19 AI_Player.update()		111,	101,	1100,	11,	1100,	101,	101
2017-01-05 16:37:19 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	111,	1001
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:19 AI_Player.update()	Search took62ms
2017-01-05 16:37:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 16:37:19 AI_Player.update()		1010,	1010,	111,	1010,	1100,	11,	1100
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:19 AI_Player.update()		110,	101,	1001,	1001,	1100,	1010,	11
2017-01-05 16:37:19 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:19 AI_Player.update()		111,	101,	1100,	11,	1100,	111,	101
2017-01-05 16:37:19 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:19 AI_Player.update()	update
2017-01-05 16:37:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:20 AI_Player.update()	Search took177ms
2017-01-05 16:37:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 16:37:20 AI_Player.update()		1010,	1010,	111,	1010,	1100,	11,	1100
2017-01-05 16:37:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:20 AI_Player.update()		110,	1010,	1001,	1001,	1100,	1010,	11
2017-01-05 16:37:20 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:20 AI_Player.update()		111,	1010,	1100,	11,	1100,	111,	101
2017-01-05 16:37:20 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:20 AI_Player.update()	Search took68ms
2017-01-05 16:37:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 16:37:20 AI_Player.update()		1010,	1010,	111,	1010,	1100,	11,	1100
2017-01-05 16:37:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:20 AI_Player.update()		110,	1010,	1001,	1001,	1100,	1010,	11
2017-01-05 16:37:20 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:20 AI_Player.update()		1010,	1100,	11,	1100,	111,	101,	111
2017-01-05 16:37:20 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:37:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:20 AI_Player.update()	Search took197ms
2017-01-05 16:37:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 16:37:20 AI_Player.update()		1010,	1010,	111,	1010,	1100,	11,	1100
2017-01-05 16:37:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:20 AI_Player.update()		11,	110,	1010,	1001,	1001,	1100,	1010
2017-01-05 16:37:20 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:20 AI_Player.update()		1010,	1100,	11,	1100,	111,	101,	111
2017-01-05 16:37:20 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:20 AI_Player.update()	Search took158ms
2017-01-05 16:37:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 16:37:20 AI_Player.update()		1010,	101,	111,	1010,	1100,	11,	1100
2017-01-05 16:37:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:20 AI_Player.update()		11,	101,	1010,	1001,	1001,	1100,	1010
2017-01-05 16:37:20 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:20 AI_Player.update()		1010,	101,	11,	1100,	111,	101,	111
2017-01-05 16:37:20 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:20 AI_Player.update()	Search took210ms
2017-01-05 16:37:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 16:37:20 AI_Player.update()		1100,	1010,	101,	111,	1010,	1100,	11
2017-01-05 16:37:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:20 AI_Player.update()		11,	101,	1010,	1001,	1001,	1100,	1010
2017-01-05 16:37:20 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:20 AI_Player.update()		1010,	101,	11,	1100,	111,	101,	111
2017-01-05 16:37:20 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:20 AI_Player.update()	Search took190ms
2017-01-05 16:37:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 16:37:20 AI_Player.update()		1100,	1010,	101,	111,	1010,	1010,	11
2017-01-05 16:37:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:20 AI_Player.update()		11,	101,	1010,	1001,	1001,	101,	1010
2017-01-05 16:37:20 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:20 AI_Player.update()		1010,	101,	11,	1100,	111,	101,	111
2017-01-05 16:37:20 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:37:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:20 AI_Player.update()	Search took25ms
2017-01-05 16:37:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 16:37:20 AI_Player.update()		1100,	110,	101,	111,	1010,	1010,	11
2017-01-05 16:37:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:20 AI_Player.update()		11,	1100,	1010,	1001,	1001,	101,	1010
2017-01-05 16:37:20 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:20 AI_Player.update()		1010,	1010,	11,	1100,	111,	101,	111
2017-01-05 16:37:20 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-05 16:37:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:20 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:37:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:20 AI_Player.update()	update
2017-01-05 16:37:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:21 AI_Player.update()	Search took145ms
2017-01-05 16:37:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 16:37:21 AI_Player.update()		11,	1100,	110,	101,	111,	1010,	1010
2017-01-05 16:37:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:21 AI_Player.update()		11,	1100,	1010,	1001,	1001,	101,	1010
2017-01-05 16:37:21 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:21 AI_Player.update()		1010,	1010,	11,	1100,	111,	101,	111
2017-01-05 16:37:21 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-05 16:37:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:37:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()	update
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:37:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()	update
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:21 AI_Player.update()	Search took176ms
2017-01-05 16:37:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 16:37:21 AI_Player.update()		1010,	11,	1100,	110,	101,	111,	1010
2017-01-05 16:37:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:21 AI_Player.update()		11,	1100,	1010,	1001,	1001,	101,	1010
2017-01-05 16:37:21 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:21 AI_Player.update()		1010,	1010,	11,	1100,	111,	101,	111
2017-01-05 16:37:21 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-05 16:37:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:37:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()	update
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:37:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()	update
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:21 AI_Player.update()	Search took66ms
2017-01-05 16:37:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 16:37:21 AI_Player.update()		1010,	11,	1100,	110,	101,	111,	1010
2017-01-05 16:37:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:21 AI_Player.update()		1010,	11,	1100,	1010,	1001,	1001,	101
2017-01-05 16:37:21 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:21 AI_Player.update()		1010,	1010,	11,	1100,	111,	101,	111
2017-01-05 16:37:21 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-05 16:37:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:37:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()	update
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:21 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:37:21 AI_Player.update()	Player a has won!
2017-01-05 16:37:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:21 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:21 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()	update
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:21 AI_Player.update()	Search took9ms
2017-01-05 16:37:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-05 16:37:21 AI_Player.update()		1101,	110,	101,	11,	1010,	1100,	1110
2017-01-05 16:37:21 AI_Player.update()		1110,	101,	1110,	110,	111,	1110,	1011
2017-01-05 16:37:21 AI_Player.update()		11,	1010,	110,	101,	110,	11,	1010
2017-01-05 16:37:21 AI_Player.update()		1110,	11,	1101,	110,	1011,	1100,	1011
2017-01-05 16:37:21 AI_Player.update()		11,	1010,	101,	11,	1100,	101,	11
2017-01-05 16:37:21 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:37:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()	update
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()	update
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:21 AI_Player.update()	Search took432ms
2017-01-05 16:37:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 16:37:21 AI_Player.update()		1101,	101,	101,	11,	1010,	1100,	1110
2017-01-05 16:37:21 AI_Player.update()		1110,	1010,	1110,	110,	111,	1110,	1011
2017-01-05 16:37:21 AI_Player.update()		11,	11,	110,	101,	110,	11,	1010
2017-01-05 16:37:21 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-05 16:37:21 AI_Player.update()		11,	101,	101,	11,	1100,	101,	11
2017-01-05 16:37:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:37:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()	update
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()	update
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:21 AI_Player.update()	Search took126ms
2017-01-05 16:37:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 16:37:21 AI_Player.update()		101,	101,	11,	1010,	1100,	1110,	1101
2017-01-05 16:37:21 AI_Player.update()		1110,	1010,	1110,	110,	111,	1110,	1011
2017-01-05 16:37:21 AI_Player.update()		11,	11,	110,	101,	110,	11,	1010
2017-01-05 16:37:21 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-05 16:37:21 AI_Player.update()		11,	101,	101,	11,	1100,	101,	11
2017-01-05 16:37:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:37:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()	update
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:21 AI_Player.update()	update
2017-01-05 16:37:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:22 AI_Player.update()	Search took459ms
2017-01-05 16:37:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-05 16:37:22 AI_Player.update()		101,	1010,	11,	1010,	1100,	1110,	1101
2017-01-05 16:37:22 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-05 16:37:22 AI_Player.update()		11,	1010,	110,	101,	110,	11,	1010
2017-01-05 16:37:22 AI_Player.update()		1110,	101,	1101,	110,	1011,	1100,	1011
2017-01-05 16:37:22 AI_Player.update()		11,	1010,	101,	11,	1100,	101,	11
2017-01-05 16:37:22 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:37:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:22 AI_Player.update()	update
2017-01-05 16:37:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:22 AI_Player.update()	update
2017-01-05 16:37:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:22 AI_Player.update()	Search took559ms
2017-01-05 16:37:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:22 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-05 16:37:22 AI_Player.update()		101,	1010,	11,	1010,	1100,	1110,	1101
2017-01-05 16:37:22 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-05 16:37:22 AI_Player.update()		11,	1010,	110,	101,	110,	1100,	1010
2017-01-05 16:37:22 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:22 AI_Player.update()		11,	1010,	101,	11,	1100,	1101,	11
2017-01-05 16:37:22 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:37:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:22 AI_Player.update()	update
2017-01-05 16:37:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:22 AI_Player.update()	update
2017-01-05 16:37:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:23 AI_Player.update()	Search took162ms
2017-01-05 16:37:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-05 16:37:23 AI_Player.update()		101,	1010,	11,	1010,	1100,	1110,	1101
2017-01-05 16:37:23 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-05 16:37:23 AI_Player.update()		1010,	11,	1010,	110,	101,	110,	1100
2017-01-05 16:37:23 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:23 AI_Player.update()		11,	1010,	101,	11,	1100,	1101,	11
2017-01-05 16:37:23 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:23 AI_Player.update()	Search took31ms
2017-01-05 16:37:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()		110,	1010,	111,	1010,	111,	1110,	11
2017-01-05 16:37:23 AI_Player.update()		101,	11,	11,	1010,	1100,	1110,	1101
2017-01-05 16:37:23 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-05 16:37:23 AI_Player.update()		1010,	101,	1010,	110,	101,	110,	1100
2017-01-05 16:37:23 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:23 AI_Player.update()		11,	110,	101,	11,	1100,	1101,	11
2017-01-05 16:37:23 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:23 AI_Player.update()	Search took55ms
2017-01-05 16:37:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-05 16:37:23 AI_Player.update()		101,	1010,	11,	1010,	1100,	1110,	1101
2017-01-05 16:37:23 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-05 16:37:23 AI_Player.update()		1010,	11,	1010,	110,	101,	110,	1100
2017-01-05 16:37:23 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:23 AI_Player.update()		11,	1010,	101,	11,	1100,	1101,	11
2017-01-05 16:37:23 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:37:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:23 AI_Player.update()	Search took39ms
2017-01-05 16:37:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-05 16:37:23 AI_Player.update()		101,	1010,	11,	1010,	1100,	11,	1101
2017-01-05 16:37:23 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-05 16:37:23 AI_Player.update()		1010,	11,	1010,	110,	101,	101,	1100
2017-01-05 16:37:23 AI_Player.update()		1110,	101,	1101,	110,	1011,	1101,	1011
2017-01-05 16:37:23 AI_Player.update()		11,	1010,	101,	11,	1100,	1010,	11
2017-01-05 16:37:23 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:23 AI_Player.update()	Search took159ms
2017-01-05 16:37:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-05 16:37:23 AI_Player.update()		101,	1010,	11,	110,	1100,	11,	1101
2017-01-05 16:37:23 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-05 16:37:23 AI_Player.update()		1010,	11,	1010,	110,	101,	101,	1100
2017-01-05 16:37:23 AI_Player.update()		1110,	101,	1101,	11,	1011,	1101,	1011
2017-01-05 16:37:23 AI_Player.update()		11,	1010,	101,	1100,	1100,	1010,	11
2017-01-05 16:37:23 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:37:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:23 AI_Player.update()	Search took29ms
2017-01-05 16:37:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()		110,	101,	111,	110,	111,	1110,	11
2017-01-05 16:37:23 AI_Player.update()		101,	1010,	11,	110,	1100,	11,	1101
2017-01-05 16:37:23 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-05 16:37:23 AI_Player.update()		1010,	11,	1010,	11,	101,	101,	1100
2017-01-05 16:37:23 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-05 16:37:23 AI_Player.update()		11,	1010,	101,	1010,	1100,	1010,	11
2017-01-05 16:37:23 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:23 AI_Player.update()	Search took184ms
2017-01-05 16:37:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()		110,	101,	111,	110,	111,	1110,	11
2017-01-05 16:37:23 AI_Player.update()		1010,	11,	110,	1100,	11,	1101,	101
2017-01-05 16:37:23 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-05 16:37:23 AI_Player.update()		1010,	11,	1010,	11,	101,	101,	1100
2017-01-05 16:37:23 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-05 16:37:23 AI_Player.update()		11,	1010,	101,	1010,	1100,	1010,	11
2017-01-05 16:37:23 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:37:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:23 AI_Player.update()	Search took55ms
2017-01-05 16:37:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()		110,	11,	111,	110,	111,	1110,	11
2017-01-05 16:37:23 AI_Player.update()		1010,	11,	110,	1100,	11,	1101,	101
2017-01-05 16:37:23 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-05 16:37:23 AI_Player.update()		1010,	101,	1010,	11,	101,	101,	1100
2017-01-05 16:37:23 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-05 16:37:23 AI_Player.update()		11,	110,	101,	1010,	1100,	1010,	11
2017-01-05 16:37:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:23 AI_Player.update()	Search took36ms
2017-01-05 16:37:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()		110,	101,	111,	110,	111,	1110,	11
2017-01-05 16:37:23 AI_Player.update()		1010,	11,	110,	1100,	11,	1101,	101
2017-01-05 16:37:23 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-05 16:37:23 AI_Player.update()		1010,	11,	1010,	11,	101,	101,	1100
2017-01-05 16:37:23 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-05 16:37:23 AI_Player.update()		11,	1010,	101,	1010,	1100,	1010,	11
2017-01-05 16:37:23 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:23 AI_Player.update()	Search took52ms
2017-01-05 16:37:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()		110,	11,	111,	110,	111,	1110,	11
2017-01-05 16:37:23 AI_Player.update()		1010,	11,	110,	1100,	11,	1101,	101
2017-01-05 16:37:23 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-05 16:37:23 AI_Player.update()		1010,	101,	1010,	11,	101,	101,	1100
2017-01-05 16:37:23 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-05 16:37:23 AI_Player.update()		11,	110,	101,	1010,	1100,	1010,	11
2017-01-05 16:37:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:23 AI_Player.update()	Search took110ms
2017-01-05 16:37:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()		110,	11,	111,	110,	111,	1110,	11
2017-01-05 16:37:23 AI_Player.update()		1010,	11,	110,	1100,	11,	1101,	101
2017-01-05 16:37:23 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-05 16:37:23 AI_Player.update()		101,	1010,	11,	101,	101,	1100,	1010
2017-01-05 16:37:23 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-05 16:37:23 AI_Player.update()		11,	110,	101,	1010,	1100,	1010,	11
2017-01-05 16:37:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:37:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:23 AI_Player.update()	Search took50ms
2017-01-05 16:37:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()		110,	11,	111,	110,	111,	1110,	11
2017-01-05 16:37:23 AI_Player.update()		1010,	11,	110,	1100,	11,	1101,	101
2017-01-05 16:37:23 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-05 16:37:23 AI_Player.update()		101,	1010,	11,	101,	101,	1100,	1010
2017-01-05 16:37:23 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-05 16:37:23 AI_Player.update()		11,	101,	101,	1010,	1100,	1010,	11
2017-01-05 16:37:23 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:23 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:37:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:23 AI_Player.update()	update
2017-01-05 16:37:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:24 AI_Player.update()	Search took137ms
2017-01-05 16:37:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()		110,	11,	111,	110,	111,	1110,	11
2017-01-05 16:37:24 AI_Player.update()		1010,	11,	110,	1100,	11,	1110,	101
2017-01-05 16:37:24 AI_Player.update()		1110,	1010,	1110,	110,	111,	1101,	1011
2017-01-05 16:37:24 AI_Player.update()		101,	1010,	11,	101,	101,	110,	1010
2017-01-05 16:37:24 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:24 AI_Player.update()		11,	101,	101,	1010,	1100,	1101,	11
2017-01-05 16:37:24 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:37:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:37:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()	update
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:37:24 AI_Player.update()	Player b has won!
2017-01-05 16:37:24 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:24 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:24 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:24 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()	update
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:24 AI_Player.update()	Search took114ms
2017-01-05 16:37:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()		110,	11,	111,	1110,	111,	1110,	11
2017-01-05 16:37:24 AI_Player.update()		1001,	1100,	1101,	101,	1001,	1010,	1001
2017-01-05 16:37:24 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-05 16:37:24 AI_Player.update()		1010,	11,	111,	1001,	101,	111,	1010
2017-01-05 16:37:24 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:24 AI_Player.update()		101,	1101,	1100,	1010,	11,	1001,	101
2017-01-05 16:37:24 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:37:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()	update
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()	update
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:24 AI_Player.update()	Search took113ms
2017-01-05 16:37:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()		110,	11,	111,	1110,	111,	1110,	11
2017-01-05 16:37:24 AI_Player.update()		1001,	1100,	1101,	101,	1001,	1010,	1001
2017-01-05 16:37:24 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-05 16:37:24 AI_Player.update()		11,	111,	1001,	101,	111,	1010,	1010
2017-01-05 16:37:24 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:24 AI_Player.update()		101,	1101,	1100,	1010,	11,	1001,	101
2017-01-05 16:37:24 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:37:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()	update
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()	update
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:24 AI_Player.update()	Search took164ms
2017-01-05 16:37:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()		110,	11,	111,	1110,	111,	1110,	11
2017-01-05 16:37:24 AI_Player.update()		1001,	1001,	1100,	1101,	101,	1001,	1010
2017-01-05 16:37:24 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-05 16:37:24 AI_Player.update()		11,	111,	1001,	101,	111,	1010,	1010
2017-01-05 16:37:24 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:24 AI_Player.update()		101,	1101,	1100,	1010,	11,	1001,	101
2017-01-05 16:37:24 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:37:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()	update
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()	update
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:24 AI_Player.update()	Search took289ms
2017-01-05 16:37:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()		110,	11,	111,	1110,	111,	1110,	11
2017-01-05 16:37:24 AI_Player.update()		1001,	1001,	1100,	1101,	101,	1001,	1010
2017-01-05 16:37:24 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-05 16:37:24 AI_Player.update()		1010,	11,	111,	1001,	101,	111,	1010
2017-01-05 16:37:24 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:24 AI_Player.update()		101,	1101,	1100,	1010,	11,	1001,	101
2017-01-05 16:37:24 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:37:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()	update
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:24 AI_Player.update()	update
2017-01-05 16:37:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:25 AI_Player.update()	Search took379ms
2017-01-05 16:37:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()		110,	1100,	111,	1110,	111,	1110,	11
2017-01-05 16:37:25 AI_Player.update()		1001,	11,	1100,	1101,	101,	1001,	1010
2017-01-05 16:37:25 AI_Player.update()		1110,	1001,	1110,	110,	111,	1010,	1011
2017-01-05 16:37:25 AI_Player.update()		1010,	110,	111,	1001,	101,	111,	1010
2017-01-05 16:37:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:25 AI_Player.update()		101,	101,	1100,	1010,	11,	1001,	101
2017-01-05 16:37:25 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:37:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()	update
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()	update
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:25 AI_Player.update()	Search took90ms
2017-01-05 16:37:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()		110,	1100,	111,	1110,	111,	1110,	11
2017-01-05 16:37:25 AI_Player.update()		1010,	1001,	11,	1100,	1101,	101,	1001
2017-01-05 16:37:25 AI_Player.update()		1110,	1001,	1110,	110,	111,	1010,	1011
2017-01-05 16:37:25 AI_Player.update()		1010,	110,	111,	1001,	101,	111,	1010
2017-01-05 16:37:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:25 AI_Player.update()		101,	101,	1100,	1010,	11,	1001,	101
2017-01-05 16:37:25 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:37:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()	update
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()	update
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:25 AI_Player.update()	Search took57ms
2017-01-05 16:37:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()		110,	1001,	111,	1110,	111,	1110,	11
2017-01-05 16:37:25 AI_Player.update()		1010,	1001,	11,	1100,	1101,	101,	1001
2017-01-05 16:37:25 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-05 16:37:25 AI_Player.update()		1010,	11,	111,	1001,	101,	111,	1010
2017-01-05 16:37:25 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:25 AI_Player.update()		101,	1101,	1100,	1010,	11,	1001,	101
2017-01-05 16:37:25 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:37:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()	update
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()	update
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:25 AI_Player.update()	Search took279ms
2017-01-05 16:37:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()		110,	1001,	111,	1110,	111,	1110,	11
2017-01-05 16:37:25 AI_Player.update()		1001,	11,	1100,	1101,	101,	1001,	1010
2017-01-05 16:37:25 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-05 16:37:25 AI_Player.update()		1010,	11,	111,	1001,	101,	111,	1010
2017-01-05 16:37:25 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:25 AI_Player.update()		101,	1101,	1100,	1010,	11,	1001,	101
2017-01-05 16:37:25 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:37:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()	update
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()	update
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:25 AI_Player.update()	Search took19ms
2017-01-05 16:37:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()		110,	1100,	111,	1110,	111,	1110,	11
2017-01-05 16:37:25 AI_Player.update()		1001,	1001,	1100,	1101,	101,	1001,	1010
2017-01-05 16:37:25 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-05 16:37:25 AI_Player.update()		1010,	110,	111,	1001,	101,	111,	1010
2017-01-05 16:37:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:25 AI_Player.update()		101,	101,	1100,	1010,	11,	1001,	101
2017-01-05 16:37:25 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:37:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()	update
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()	update
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:25 AI_Player.update()	Search took339ms
2017-01-05 16:37:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()		110,	1100,	111,	1101,	111,	1110,	11
2017-01-05 16:37:25 AI_Player.update()		1001,	1001,	1100,	110,	101,	1001,	1010
2017-01-05 16:37:25 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:25 AI_Player.update()		1010,	110,	111,	1100,	101,	111,	1010
2017-01-05 16:37:25 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:37:25 AI_Player.update()		101,	101,	1100,	1100,	11,	1001,	101
2017-01-05 16:37:25 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	1010,	1001
2017-01-05 16:37:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()	update
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:25 AI_Player.update()	update
2017-01-05 16:37:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:26 AI_Player.update()	Search took48ms
2017-01-05 16:37:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()		110,	1101,	111,	1101,	111,	1110,	11
2017-01-05 16:37:26 AI_Player.update()		1001,	1100,	1100,	110,	101,	1001,	1010
2017-01-05 16:37:26 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:26 AI_Player.update()		1010,	11,	111,	1100,	101,	111,	1010
2017-01-05 16:37:26 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:37:26 AI_Player.update()		101,	11,	1100,	1100,	11,	1001,	101
2017-01-05 16:37:26 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:26 AI_Player.update()	Search took82ms
2017-01-05 16:37:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()		110,	1100,	111,	1101,	111,	1110,	11
2017-01-05 16:37:26 AI_Player.update()		1001,	1001,	1100,	110,	101,	1001,	1010
2017-01-05 16:37:26 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:26 AI_Player.update()		1010,	110,	111,	1100,	101,	111,	1010
2017-01-05 16:37:26 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:37:26 AI_Player.update()		101,	101,	1100,	1100,	11,	1001,	101
2017-01-05 16:37:26 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:26 AI_Player.update()	Search took115ms
2017-01-05 16:37:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()		110,	1100,	111,	1101,	111,	1110,	11
2017-01-05 16:37:26 AI_Player.update()		1001,	1100,	110,	101,	1001,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 16:37:26 AI_Player.update()		1010,	110,	111,	1100,	101,	111,	1010
2017-01-05 16:37:26 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:37:26 AI_Player.update()		101,	101,	1100,	1100,	11,	1001,	101
2017-01-05 16:37:26 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:26 AI_Player.update()	Search took73ms
2017-01-05 16:37:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()		110,	1100,	111,	101,	111,	1110,	11
2017-01-05 16:37:26 AI_Player.update()		1001,	1100,	110,	1001,	1001,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 16:37:26 AI_Player.update()		1010,	110,	111,	1010,	101,	111,	1010
2017-01-05 16:37:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:26 AI_Player.update()		101,	101,	1100,	1110,	11,	1001,	101
2017-01-05 16:37:26 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:26 AI_Player.update()	Search took41ms
2017-01-05 16:37:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()		110,	1100,	111,	101,	111,	1110,	11
2017-01-05 16:37:26 AI_Player.update()		1001,	1100,	110,	1001,	1001,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 16:37:26 AI_Player.update()		110,	111,	1010,	101,	111,	1010,	1010
2017-01-05 16:37:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:26 AI_Player.update()		101,	101,	1100,	1110,	11,	1001,	101
2017-01-05 16:37:26 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:26 AI_Player.update()	Search took145ms
2017-01-05 16:37:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()		110,	1100,	111,	101,	111,	1110,	11
2017-01-05 16:37:26 AI_Player.update()		1001,	1100,	110,	1001,	1001,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 16:37:26 AI_Player.update()		111,	1010,	101,	111,	1010,	1010,	110
2017-01-05 16:37:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:26 AI_Player.update()		101,	101,	1100,	1110,	11,	1001,	101
2017-01-05 16:37:26 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:37:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:26 AI_Player.update()	Search took39ms
2017-01-05 16:37:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()		110,	1100,	111,	101,	111,	1110,	11
2017-01-05 16:37:26 AI_Player.update()		1001,	11,	110,	1001,	1001,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-05 16:37:26 AI_Player.update()		111,	11,	101,	111,	1010,	1010,	110
2017-01-05 16:37:26 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:26 AI_Player.update()		101,	1101,	1100,	1110,	11,	1001,	101
2017-01-05 16:37:26 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:26 AI_Player.update()	Search took238ms
2017-01-05 16:37:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()		110,	1100,	111,	101,	111,	1110,	11
2017-01-05 16:37:26 AI_Player.update()		1001,	1001,	11,	110,	1001,	1001,	1010
2017-01-05 16:37:26 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-05 16:37:26 AI_Player.update()		111,	11,	101,	111,	1010,	1010,	110
2017-01-05 16:37:26 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:26 AI_Player.update()		101,	1101,	1100,	1110,	11,	1001,	101
2017-01-05 16:37:26 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:37:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:26 AI_Player.update()	Search took143ms
2017-01-05 16:37:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()		110,	1001,	111,	101,	111,	1110,	11
2017-01-05 16:37:26 AI_Player.update()		1001,	1010,	11,	110,	1001,	1001,	1010
2017-01-05 16:37:26 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 16:37:26 AI_Player.update()		111,	101,	101,	111,	1010,	1010,	110
2017-01-05 16:37:26 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:26 AI_Player.update()		101,	1100,	1100,	1110,	11,	1001,	101
2017-01-05 16:37:26 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-05 16:37:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:26 AI_Player.update()	update
2017-01-05 16:37:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:27 AI_Player.update()	Search took360ms
2017-01-05 16:37:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()		110,	1001,	111,	101,	111,	1001,	11
2017-01-05 16:37:27 AI_Player.update()		1001,	1010,	11,	110,	1001,	1010,	1010
2017-01-05 16:37:27 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 16:37:27 AI_Player.update()		111,	101,	101,	111,	1010,	1100,	110
2017-01-05 16:37:27 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:37:27 AI_Player.update()		101,	1100,	1100,	1110,	11,	1010,	101
2017-01-05 16:37:27 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1110,	1001
2017-01-05 16:37:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()	update
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()	update
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:27 AI_Player.update()	Search took425ms
2017-01-05 16:37:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()		110,	1001,	111,	101,	111,	1001,	11
2017-01-05 16:37:27 AI_Player.update()		1010,	11,	110,	1001,	1010,	1010,	1001
2017-01-05 16:37:27 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 16:37:27 AI_Player.update()		111,	101,	101,	111,	1010,	1100,	110
2017-01-05 16:37:27 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:37:27 AI_Player.update()		101,	1100,	1100,	1110,	11,	1010,	101
2017-01-05 16:37:27 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1110,	1001
2017-01-05 16:37:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()	update
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()	update
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:27 AI_Player.update()	Search took131ms
2017-01-05 16:37:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()		110,	1001,	111,	101,	111,	1110,	11
2017-01-05 16:37:27 AI_Player.update()		1010,	11,	110,	1001,	1010,	1001,	1001
2017-01-05 16:37:27 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 16:37:27 AI_Player.update()		111,	101,	101,	111,	1010,	1010,	110
2017-01-05 16:37:27 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:37:27 AI_Player.update()		101,	1100,	1100,	1110,	11,	1001,	101
2017-01-05 16:37:27 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-05 16:37:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()	update
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:37:27 AI_Player.update()	Player b has won!
2017-01-05 16:37:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:27 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:27 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()	update
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:27 AI_Player.update()	Search took13ms
2017-01-05 16:37:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:37:27 AI_Player.update()		1001,	110,	1100,	110,	1001,	1110,	11
2017-01-05 16:37:27 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-05 16:37:27 AI_Player.update()		111,	1100,	1001,	1101,	110,	11,	1001
2017-01-05 16:37:27 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	110,	1011
2017-01-05 16:37:27 AI_Player.update()		1100,	1100,	1001,	1010,	1001,	1010,	11
2017-01-05 16:37:27 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:37:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()	update
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()	update
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:27 AI_Player.update()	Search took15ms
2017-01-05 16:37:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:37:27 AI_Player.update()		11,	1001,	110,	1100,	110,	1001,	1110
2017-01-05 16:37:27 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-05 16:37:27 AI_Player.update()		111,	1100,	1001,	1101,	110,	11,	1001
2017-01-05 16:37:27 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	110,	1011
2017-01-05 16:37:27 AI_Player.update()		1100,	1100,	1001,	1010,	1001,	1010,	11
2017-01-05 16:37:27 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:37:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()	update
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()	update
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:27 AI_Player.update()	Search took58ms
2017-01-05 16:37:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()		110,	1110,	111,	101,	111,	1001,	11
2017-01-05 16:37:27 AI_Player.update()		11,	110,	110,	1100,	110,	1001,	1110
2017-01-05 16:37:27 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:37:27 AI_Player.update()		111,	11,	1001,	1101,	110,	11,	1001
2017-01-05 16:37:27 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 16:37:27 AI_Player.update()		1100,	1001,	1001,	1010,	1001,	1010,	11
2017-01-05 16:37:27 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:37:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()	update
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:27 AI_Player.update()	update
2017-01-05 16:37:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:28 AI_Player.update()	Search took81ms
2017-01-05 16:37:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()		110,	1110,	111,	101,	111,	1001,	11
2017-01-05 16:37:28 AI_Player.update()		1110,	11,	110,	110,	1100,	110,	1001
2017-01-05 16:37:28 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:37:28 AI_Player.update()		111,	11,	1001,	1101,	110,	11,	1001
2017-01-05 16:37:28 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 16:37:28 AI_Player.update()		1100,	1001,	1001,	1010,	1001,	1010,	11
2017-01-05 16:37:28 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:37:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()	update
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:37:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()	update
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:28 AI_Player.update()	Search took105ms
2017-01-05 16:37:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-05 16:37:28 AI_Player.update()		1110,	1001,	110,	110,	1100,	110,	1001
2017-01-05 16:37:28 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-05 16:37:28 AI_Player.update()		111,	1100,	1001,	1101,	110,	11,	1001
2017-01-05 16:37:28 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	110,	1011
2017-01-05 16:37:28 AI_Player.update()		1100,	1100,	1001,	1010,	1001,	1010,	11
2017-01-05 16:37:28 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:37:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:37:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()	update
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:37:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()	update
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:28 AI_Player.update()	Search took165ms
2017-01-05 16:37:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()		110,	11,	111,	110,	111,	1001,	11
2017-01-05 16:37:28 AI_Player.update()		1110,	1001,	110,	1001,	1100,	110,	1001
2017-01-05 16:37:28 AI_Player.update()		1110,	11,	1110,	1101,	111,	110,	1011
2017-01-05 16:37:28 AI_Player.update()		111,	1100,	1001,	1010,	110,	11,	1001
2017-01-05 16:37:28 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	110,	1011
2017-01-05 16:37:28 AI_Player.update()		1100,	1100,	1001,	1101,	1001,	1010,	11
2017-01-05 16:37:28 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1100,	1001
2017-01-05 16:37:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:37:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()	update
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:37:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()	update
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:28 AI_Player.update()	Search took227ms
2017-01-05 16:37:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()		110,	1110,	111,	110,	111,	1001,	11
2017-01-05 16:37:28 AI_Player.update()		1110,	11,	110,	1001,	1100,	110,	1001
2017-01-05 16:37:28 AI_Player.update()		1110,	1001,	1110,	1101,	111,	110,	1011
2017-01-05 16:37:28 AI_Player.update()		111,	11,	1001,	1010,	110,	11,	1001
2017-01-05 16:37:28 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 16:37:28 AI_Player.update()		1100,	1001,	1001,	1101,	1001,	1010,	11
2017-01-05 16:37:28 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:37:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:37:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()	update
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:37:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()	update
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:28 AI_Player.update()	Search took212ms
2017-01-05 16:37:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()		110,	1110,	111,	1001,	111,	1001,	11
2017-01-05 16:37:28 AI_Player.update()		1110,	11,	110,	1101,	1100,	110,	1001
2017-01-05 16:37:28 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:37:28 AI_Player.update()		111,	11,	1001,	1010,	110,	11,	1001
2017-01-05 16:37:28 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-05 16:37:28 AI_Player.update()		1100,	1001,	1001,	101,	1001,	1010,	11
2017-01-05 16:37:28 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-05 16:37:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:37:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()	update
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:37:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:28 AI_Player.update()	update
2017-01-05 16:37:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:29 AI_Player.update()	Search took296ms
2017-01-05 16:37:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()		110,	1110,	111,	1001,	111,	1001,	11
2017-01-05 16:37:29 AI_Player.update()		1110,	11,	110,	1101,	1100,	110,	1001
2017-01-05 16:37:29 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:37:29 AI_Player.update()		11,	1001,	1010,	110,	11,	1001,	111
2017-01-05 16:37:29 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-05 16:37:29 AI_Player.update()		1100,	1001,	1001,	101,	1001,	1010,	11
2017-01-05 16:37:29 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-05 16:37:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:37:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()	update
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:37:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()	update
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:29 AI_Player.update()	Search took53ms
2017-01-05 16:37:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()		110,	1110,	111,	1001,	111,	1001,	11
2017-01-05 16:37:29 AI_Player.update()		1110,	11,	110,	1101,	1100,	110,	1001
2017-01-05 16:37:29 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:37:29 AI_Player.update()		11,	1001,	1010,	110,	11,	1001,	111
2017-01-05 16:37:29 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-05 16:37:29 AI_Player.update()		1001,	1001,	101,	1001,	1010,	11,	1100
2017-01-05 16:37:29 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-05 16:37:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:37:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()	update
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:37:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()	update
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:29 AI_Player.update()	Search took79ms
2017-01-05 16:37:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()		110,	1110,	111,	1001,	111,	1001,	11
2017-01-05 16:37:29 AI_Player.update()		1110,	11,	110,	1101,	1100,	110,	1001
2017-01-05 16:37:29 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:37:29 AI_Player.update()		11,	1001,	1010,	110,	11,	1001,	111
2017-01-05 16:37:29 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-05 16:37:29 AI_Player.update()		1100,	1001,	1001,	101,	1001,	1010,	11
2017-01-05 16:37:29 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-05 16:37:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:37:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()	update
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:37:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()	update
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:29 AI_Player.update()	Search took301ms
2017-01-05 16:37:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()		110,	1110,	111,	1101,	111,	1001,	11
2017-01-05 16:37:29 AI_Player.update()		1110,	11,	110,	1010,	1100,	110,	1001
2017-01-05 16:37:29 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 16:37:29 AI_Player.update()		11,	1001,	1010,	1101,	11,	1001,	111
2017-01-05 16:37:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 16:37:29 AI_Player.update()		1100,	1001,	1001,	110,	1001,	1010,	11
2017-01-05 16:37:29 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:37:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:37:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()	update
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	2 5
2017-01-05 16:37:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()	update
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:29 AI_Player.update()	Search took162ms
2017-01-05 16:37:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()		110,	1110,	111,	1101,	111,	1001,	11
2017-01-05 16:37:29 AI_Player.update()		1110,	11,	110,	1010,	1100,	110,	1001
2017-01-05 16:37:29 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 16:37:29 AI_Player.update()		11,	1001,	1010,	1101,	11,	1001,	111
2017-01-05 16:37:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 16:37:29 AI_Player.update()		11,	1100,	1001,	1001,	110,	1001,	1010
2017-01-05 16:37:29 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:37:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	2 5
2017-01-05 16:37:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()	update
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	2 5
2017-01-05 16:37:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()	update
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:29 AI_Player.update()	Search took280ms
2017-01-05 16:37:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()		110,	1110,	111,	1101,	111,	1001,	11
2017-01-05 16:37:29 AI_Player.update()		11,	110,	1010,	1100,	110,	1001,	1110
2017-01-05 16:37:29 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 16:37:29 AI_Player.update()		11,	1001,	1010,	1101,	11,	1001,	111
2017-01-05 16:37:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 16:37:29 AI_Player.update()		11,	1100,	1001,	1001,	110,	1001,	1010
2017-01-05 16:37:29 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:37:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	2 5
2017-01-05 16:37:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()	update
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	2 6
2017-01-05 16:37:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:29 AI_Player.update()	update
2017-01-05 16:37:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:30 AI_Player.update()	Search took170ms
2017-01-05 16:37:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()		110,	1110,	111,	1100,	111,	1001,	11
2017-01-05 16:37:30 AI_Player.update()		11,	110,	1010,	110,	110,	1001,	1110
2017-01-05 16:37:30 AI_Player.update()		1110,	1001,	1110,	1101,	111,	110,	1011
2017-01-05 16:37:30 AI_Player.update()		11,	1001,	1010,	101,	11,	1001,	111
2017-01-05 16:37:30 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-05 16:37:30 AI_Player.update()		11,	1100,	1001,	1001,	110,	1001,	1010
2017-01-05 16:37:30 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:37:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	2 6
2017-01-05 16:37:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()	update
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:37:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()	update
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:30 AI_Player.update()	Search took210ms
2017-01-05 16:37:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()		110,	1110,	111,	1100,	111,	1001,	11
2017-01-05 16:37:30 AI_Player.update()		11,	110,	1010,	110,	110,	110,	1110
2017-01-05 16:37:30 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-05 16:37:30 AI_Player.update()		11,	1001,	1010,	101,	11,	110,	111
2017-01-05 16:37:30 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:37:30 AI_Player.update()		11,	1100,	1001,	1001,	110,	1100,	1010
2017-01-05 16:37:30 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1001,	1001
2017-01-05 16:37:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:37:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()	update
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:37:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()	update
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:30 AI_Player.update()	Search took118ms
2017-01-05 16:37:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()		110,	110,	111,	1100,	111,	1001,	11
2017-01-05 16:37:30 AI_Player.update()		11,	1001,	1010,	110,	110,	110,	1110
2017-01-05 16:37:30 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-05 16:37:30 AI_Player.update()		11,	1100,	1010,	101,	11,	110,	111
2017-01-05 16:37:30 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:37:30 AI_Player.update()		11,	1100,	1001,	1001,	110,	1100,	1010
2017-01-05 16:37:30 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1001,	1001
2017-01-05 16:37:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:37:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()	update
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:37:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()	update
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:30 AI_Player.update()	Search took227ms
2017-01-05 16:37:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()		110,	110,	111,	1100,	111,	1001,	11
2017-01-05 16:37:30 AI_Player.update()		11,	1001,	1010,	110,	110,	1001,	1110
2017-01-05 16:37:30 AI_Player.update()		1110,	1001,	1110,	1101,	111,	110,	1011
2017-01-05 16:37:30 AI_Player.update()		11,	1100,	1010,	101,	11,	1001,	111
2017-01-05 16:37:30 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-05 16:37:30 AI_Player.update()		11,	1100,	1001,	1001,	110,	1001,	1010
2017-01-05 16:37:30 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:37:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:37:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()	update
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:37:30 AI_Player.update()	Player b has won!
2017-01-05 16:37:30 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:30 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:30 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:30 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()	update
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:30 AI_Player.update()	Search took78ms
2017-01-05 16:37:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-05 16:37:30 AI_Player.update()		1100,	1010,	101,	1110,	1101,	1011,	1101
2017-01-05 16:37:30 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:30 AI_Player.update()		1101,	101,	1100,	101,	110,	110,	110
2017-01-05 16:37:30 AI_Player.update()		1110,	11,	1101,	1011,	1011,	11,	1011
2017-01-05 16:37:30 AI_Player.update()		111,	1011,	1010,	101,	1010,	1110,	1100
2017-01-05 16:37:30 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 16:37:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()	update
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:30 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:30 AI_Player.update()	update
2017-01-05 16:37:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:31 AI_Player.update()	Search took385ms
2017-01-05 16:37:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:31 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 16:37:31 AI_Player.update()		1100,	1010,	101,	1110,	1101,	1110,	1101
2017-01-05 16:37:31 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1011,	1011
2017-01-05 16:37:31 AI_Player.update()		1101,	101,	1100,	101,	110,	1100,	110
2017-01-05 16:37:31 AI_Player.update()		1110,	11,	1101,	1011,	1011,	110,	1011
2017-01-05 16:37:31 AI_Player.update()		111,	1011,	1010,	101,	1010,	11,	1100
2017-01-05 16:37:31 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1110,	1001
2017-01-05 16:37:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:31 AI_Player.update()	update
2017-01-05 16:37:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:31 AI_Player.update()	update
2017-01-05 16:37:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:31 AI_Player.update()	Search took311ms
2017-01-05 16:37:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:31 AI_Player.update()		110,	101,	111,	1110,	111,	1010,	11
2017-01-05 16:37:31 AI_Player.update()		1100,	1010,	101,	1001,	1101,	1110,	1101
2017-01-05 16:37:31 AI_Player.update()		1110,	1001,	1110,	101,	111,	1011,	1011
2017-01-05 16:37:31 AI_Player.update()		1101,	101,	1100,	1011,	110,	1100,	110
2017-01-05 16:37:31 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 16:37:31 AI_Player.update()		111,	1011,	1010,	101,	1010,	11,	1100
2017-01-05 16:37:31 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1110,	1001
2017-01-05 16:37:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:31 AI_Player.update()	update
2017-01-05 16:37:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:31 AI_Player.update()	update
2017-01-05 16:37:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:31 AI_Player.update()	Search took353ms
2017-01-05 16:37:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:31 AI_Player.update()		110,	101,	111,	1110,	111,	1110,	11
2017-01-05 16:37:31 AI_Player.update()		1100,	1010,	101,	1001,	1101,	1010,	1101
2017-01-05 16:37:31 AI_Player.update()		1110,	1001,	1110,	101,	111,	1110,	1011
2017-01-05 16:37:31 AI_Player.update()		1101,	101,	1100,	1011,	110,	1011,	110
2017-01-05 16:37:31 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:31 AI_Player.update()		111,	1011,	1010,	101,	1010,	110,	1100
2017-01-05 16:37:31 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:31 AI_Player.update()	update
2017-01-05 16:37:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:31 AI_Player.update()	update
2017-01-05 16:37:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:32 AI_Player.update()	Search took702ms
2017-01-05 16:37:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:32 AI_Player.update()		110,	101,	111,	1110,	111,	1110,	11
2017-01-05 16:37:32 AI_Player.update()		1100,	1010,	101,	1001,	1101,	1010,	1101
2017-01-05 16:37:32 AI_Player.update()		1110,	1001,	1110,	101,	111,	1110,	1011
2017-01-05 16:37:32 AI_Player.update()		101,	1100,	1011,	110,	1011,	110,	1101
2017-01-05 16:37:32 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:32 AI_Player.update()		111,	1011,	1010,	101,	1010,	110,	1100
2017-01-05 16:37:32 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:32 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:32 AI_Player.update()	update
2017-01-05 16:37:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:32 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:32 AI_Player.update()	update
2017-01-05 16:37:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:33 AI_Player.update()	Search took736ms
2017-01-05 16:37:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:33 AI_Player.update()		110,	101,	111,	1110,	111,	1110,	11
2017-01-05 16:37:33 AI_Player.update()		1100,	1010,	101,	1001,	1101,	1010,	1101
2017-01-05 16:37:33 AI_Player.update()		1110,	1001,	1110,	101,	111,	1110,	1011
2017-01-05 16:37:33 AI_Player.update()		1101,	101,	1100,	1011,	110,	1011,	110
2017-01-05 16:37:33 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:33 AI_Player.update()		111,	1011,	1010,	101,	1010,	110,	1100
2017-01-05 16:37:33 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:33 AI_Player.update()	update
2017-01-05 16:37:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:33 AI_Player.update()	update
2017-01-05 16:37:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:33 AI_Player.update()	Search took279ms
2017-01-05 16:37:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:33 AI_Player.update()		110,	101,	111,	1110,	111,	1110,	11
2017-01-05 16:37:33 AI_Player.update()		1100,	1010,	101,	1001,	1101,	1010,	1101
2017-01-05 16:37:33 AI_Player.update()		1110,	1001,	1110,	101,	111,	1110,	1011
2017-01-05 16:37:33 AI_Player.update()		101,	1100,	1011,	110,	1011,	110,	1101
2017-01-05 16:37:33 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:33 AI_Player.update()		111,	1011,	1010,	101,	1010,	110,	1100
2017-01-05 16:37:33 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:33 AI_Player.update()	update
2017-01-05 16:37:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:33 AI_Player.update()	update
2017-01-05 16:37:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:33 AI_Player.update()	Search took298ms
2017-01-05 16:37:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:33 AI_Player.update()		110,	101,	111,	1110,	111,	1110,	11
2017-01-05 16:37:33 AI_Player.update()		1010,	101,	1001,	1101,	1010,	1101,	1100
2017-01-05 16:37:33 AI_Player.update()		1110,	1001,	1110,	101,	111,	1110,	1011
2017-01-05 16:37:33 AI_Player.update()		101,	1100,	1011,	110,	1011,	110,	1101
2017-01-05 16:37:33 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:33 AI_Player.update()		111,	1011,	1010,	101,	1010,	110,	1100
2017-01-05 16:37:33 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:33 AI_Player.update()	update
2017-01-05 16:37:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:33 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:33 AI_Player.update()	update
2017-01-05 16:37:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:34 AI_Player.update()	Search took767ms
2017-01-05 16:37:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:34 AI_Player.update()		110,	101,	111,	1110,	111,	1110,	11
2017-01-05 16:37:34 AI_Player.update()		1010,	1001,	1001,	1101,	1010,	1101,	1100
2017-01-05 16:37:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	1110,	1011
2017-01-05 16:37:34 AI_Player.update()		101,	11,	1011,	110,	1011,	110,	1101
2017-01-05 16:37:34 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:34 AI_Player.update()		111,	1100,	1010,	101,	1010,	110,	1100
2017-01-05 16:37:34 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:34 AI_Player.update()	update
2017-01-05 16:37:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:34 AI_Player.update()	update
2017-01-05 16:37:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:35 AI_Player.update()	Search took415ms
2017-01-05 16:37:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:35 AI_Player.update()		110,	101,	111,	1110,	111,	11,	11
2017-01-05 16:37:35 AI_Player.update()		1010,	1001,	1001,	1101,	1010,	1110,	1100
2017-01-05 16:37:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-05 16:37:35 AI_Player.update()		101,	11,	1011,	110,	1011,	1110,	1101
2017-01-05 16:37:35 AI_Player.update()		1110,	1011,	1101,	101,	1011,	110,	1011
2017-01-05 16:37:35 AI_Player.update()		111,	1100,	1010,	101,	1010,	1100,	1100
2017-01-05 16:37:35 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 16:37:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:35 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:35 AI_Player.update()	update
2017-01-05 16:37:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:35 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:35 AI_Player.update()	update
2017-01-05 16:37:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:36 AI_Player.update()	Search took908ms
2017-01-05 16:37:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:36 AI_Player.update()		110,	101,	111,	1110,	111,	11,	11
2017-01-05 16:37:36 AI_Player.update()		1010,	1001,	1001,	1101,	1010,	1110,	1100
2017-01-05 16:37:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-05 16:37:36 AI_Player.update()		1101,	101,	11,	1011,	110,	1011,	1110
2017-01-05 16:37:36 AI_Player.update()		1110,	1011,	1101,	101,	1011,	110,	1011
2017-01-05 16:37:36 AI_Player.update()		111,	1100,	1010,	101,	1010,	1100,	1100
2017-01-05 16:37:36 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 16:37:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:36 AI_Player.update()	update
2017-01-05 16:37:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:36 AI_Player.update()	update
2017-01-05 16:37:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:36 AI_Player.update()	Search took789ms
2017-01-05 16:37:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:36 AI_Player.update()		110,	101,	111,	1110,	111,	11,	11
2017-01-05 16:37:36 AI_Player.update()		1010,	1001,	1001,	1101,	1010,	1110,	1100
2017-01-05 16:37:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-05 16:37:36 AI_Player.update()		1101,	101,	11,	1011,	110,	1011,	1110
2017-01-05 16:37:36 AI_Player.update()		1110,	1011,	1101,	101,	1011,	110,	1011
2017-01-05 16:37:36 AI_Player.update()		1100,	1010,	101,	1010,	1100,	1100,	111
2017-01-05 16:37:36 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 16:37:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:36 AI_Player.update()	update
2017-01-05 16:37:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:36 AI_Player.update()	update
2017-01-05 16:37:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:37 AI_Player.update()	Search took477ms
2017-01-05 16:37:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:37 AI_Player.update()		110,	101,	111,	1110,	111,	110,	11
2017-01-05 16:37:37 AI_Player.update()		1010,	1001,	1001,	1101,	1010,	11,	1100
2017-01-05 16:37:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	1110,	1011
2017-01-05 16:37:37 AI_Player.update()		1101,	101,	11,	1011,	110,	1101,	1110
2017-01-05 16:37:37 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1011,	1011
2017-01-05 16:37:37 AI_Player.update()		1100,	1010,	101,	1010,	1100,	110,	111
2017-01-05 16:37:37 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:37 AI_Player.update()	update
2017-01-05 16:37:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:37:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:37 AI_Player.update()	update
2017-01-05 16:37:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:37 AI_Player.update()	Search took159ms
2017-01-05 16:37:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:37 AI_Player.update()		110,	101,	111,	1101,	111,	110,	11
2017-01-05 16:37:37 AI_Player.update()		1010,	1001,	1001,	101,	1010,	11,	1100
2017-01-05 16:37:37 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1110,	1011
2017-01-05 16:37:37 AI_Player.update()		1101,	101,	11,	101,	110,	1101,	1110
2017-01-05 16:37:37 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-05 16:37:37 AI_Player.update()		1100,	1010,	101,	101,	1100,	110,	111
2017-01-05 16:37:37 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1100,	1001
2017-01-05 16:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:37 AI_Player.update()	update
2017-01-05 16:37:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:37 AI_Player.update()	update
2017-01-05 16:37:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:37 AI_Player.update()	Search took363ms
2017-01-05 16:37:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:37 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 16:37:37 AI_Player.update()		1010,	1001,	1001,	1011,	1010,	11,	1100
2017-01-05 16:37:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	1110,	1011
2017-01-05 16:37:37 AI_Player.update()		1101,	101,	11,	1010,	110,	1101,	1110
2017-01-05 16:37:37 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1011,	1011
2017-01-05 16:37:37 AI_Player.update()		1100,	1010,	101,	1110,	1100,	110,	111
2017-01-05 16:37:37 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:37 AI_Player.update()	update
2017-01-05 16:37:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:37 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:37:37 AI_Player.update()	Player a has won!
2017-01-05 16:37:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:37 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:37 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:37 AI_Player.update()	update
2017-01-05 16:37:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:38 AI_Player.update()	Search took248ms
2017-01-05 16:37:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:37:38 AI_Player.update()		110,	1100,	11,	1100,	101,	101,	1010
2017-01-05 16:37:38 AI_Player.update()		1110,	101,	1110,	111,	111,	110,	1011
2017-01-05 16:37:38 AI_Player.update()		1100,	1101,	1001,	1110,	101,	1100,	1100
2017-01-05 16:37:38 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-05 16:37:38 AI_Player.update()		110,	1110,	101,	11,	1100,	1010,	110
2017-01-05 16:37:38 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()	update
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()	update
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:38 AI_Player.update()	Search took143ms
2017-01-05 16:37:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:37:38 AI_Player.update()		110,	1100,	11,	1100,	101,	101,	1010
2017-01-05 16:37:38 AI_Player.update()		1110,	101,	1110,	111,	111,	110,	1011
2017-01-05 16:37:38 AI_Player.update()		1100,	1100,	1101,	1001,	1110,	101,	1100
2017-01-05 16:37:38 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-05 16:37:38 AI_Player.update()		110,	1110,	101,	11,	1100,	1010,	110
2017-01-05 16:37:38 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()	update
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()	update
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:38 AI_Player.update()	Search took43ms
2017-01-05 16:37:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:37:38 AI_Player.update()		110,	1100,	11,	1100,	101,	101,	1010
2017-01-05 16:37:38 AI_Player.update()		1110,	101,	1110,	111,	111,	110,	1011
2017-01-05 16:37:38 AI_Player.update()		1100,	1100,	1101,	1001,	1110,	101,	1100
2017-01-05 16:37:38 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-05 16:37:38 AI_Player.update()		1110,	101,	11,	1100,	1010,	110,	110
2017-01-05 16:37:38 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()	update
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()	update
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:38 AI_Player.update()	Search took251ms
2017-01-05 16:37:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()		110,	101,	111,	110,	111,	1110,	11
2017-01-05 16:37:38 AI_Player.update()		110,	1100,	11,	1100,	101,	1010,	1010
2017-01-05 16:37:38 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-05 16:37:38 AI_Player.update()		1100,	1100,	1101,	1001,	1110,	110,	1100
2017-01-05 16:37:38 AI_Player.update()		1110,	1010,	1101,	111,	1011,	101,	1011
2017-01-05 16:37:38 AI_Player.update()		1110,	101,	11,	1100,	1010,	1001,	110
2017-01-05 16:37:38 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-05 16:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()	update
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()	update
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:38 AI_Player.update()	Search took267ms
2017-01-05 16:37:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()		110,	110,	111,	110,	111,	1110,	11
2017-01-05 16:37:38 AI_Player.update()		110,	101,	11,	1100,	101,	1010,	1010
2017-01-05 16:37:38 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 16:37:38 AI_Player.update()		1100,	101,	1101,	1001,	1110,	110,	1100
2017-01-05 16:37:38 AI_Player.update()		1110,	1100,	1101,	111,	1011,	101,	1011
2017-01-05 16:37:38 AI_Player.update()		1110,	1010,	11,	1100,	1010,	1001,	110
2017-01-05 16:37:38 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 16:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()	update
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:38 AI_Player.update()	update
2017-01-05 16:37:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:39 AI_Player.update()	Search took660ms
2017-01-05 16:37:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:39 AI_Player.update()		110,	101,	111,	110,	111,	1110,	11
2017-01-05 16:37:39 AI_Player.update()		110,	110,	11,	1100,	101,	1010,	1010
2017-01-05 16:37:39 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-05 16:37:39 AI_Player.update()		1100,	1100,	1101,	1001,	1110,	110,	1100
2017-01-05 16:37:39 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-05 16:37:39 AI_Player.update()		1110,	1100,	11,	1100,	1010,	1001,	110
2017-01-05 16:37:39 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-05 16:37:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:39 AI_Player.update()	update
2017-01-05 16:37:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:39 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:39 AI_Player.update()	update
2017-01-05 16:37:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:40 AI_Player.update()	Search took659ms
2017-01-05 16:37:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:40 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:37:40 AI_Player.update()		110,	110,	11,	1100,	101,	101,	1010
2017-01-05 16:37:40 AI_Player.update()		1110,	101,	1110,	111,	111,	110,	1011
2017-01-05 16:37:40 AI_Player.update()		1100,	1100,	1101,	1001,	1110,	101,	1100
2017-01-05 16:37:40 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 16:37:40 AI_Player.update()		1110,	1100,	11,	1100,	1010,	110,	110
2017-01-05 16:37:40 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:40 AI_Player.update()	update
2017-01-05 16:37:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:40 AI_Player.update()	update
2017-01-05 16:37:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:40 AI_Player.update()	Search took512ms
2017-01-05 16:37:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:40 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 16:37:40 AI_Player.update()		110,	101,	11,	1100,	101,	101,	1010
2017-01-05 16:37:40 AI_Player.update()		1110,	1100,	1110,	111,	111,	110,	1011
2017-01-05 16:37:40 AI_Player.update()		1100,	101,	1101,	1001,	1110,	101,	1100
2017-01-05 16:37:40 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1001,	1011
2017-01-05 16:37:40 AI_Player.update()		1110,	1010,	11,	1100,	1010,	110,	110
2017-01-05 16:37:40 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:40 AI_Player.update()	update
2017-01-05 16:37:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:37:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:40 AI_Player.update()	update
2017-01-05 16:37:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:41 AI_Player.update()	Search took562ms
2017-01-05 16:37:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()		110,	110,	111,	110,	111,	1110,	11
2017-01-05 16:37:41 AI_Player.update()		110,	101,	11,	1100,	101,	1010,	1010
2017-01-05 16:37:41 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 16:37:41 AI_Player.update()		1100,	101,	1101,	1001,	1110,	110,	1100
2017-01-05 16:37:41 AI_Player.update()		1110,	1100,	1101,	111,	1011,	101,	1011
2017-01-05 16:37:41 AI_Player.update()		1110,	1010,	11,	1100,	1010,	1001,	110
2017-01-05 16:37:41 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 16:37:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:37:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()	update
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()	update
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:41 AI_Player.update()	Search took91ms
2017-01-05 16:37:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()		110,	110,	111,	110,	111,	1110,	11
2017-01-05 16:37:41 AI_Player.update()		110,	101,	11,	1100,	101,	1010,	1010
2017-01-05 16:37:41 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 16:37:41 AI_Player.update()		1100,	101,	1101,	1001,	1110,	110,	1100
2017-01-05 16:37:41 AI_Player.update()		1110,	1100,	1101,	111,	1011,	101,	1011
2017-01-05 16:37:41 AI_Player.update()		110,	1110,	1010,	11,	1100,	1010,	1001
2017-01-05 16:37:41 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 16:37:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()	update
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()	update
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:41 AI_Player.update()	Search took112ms
2017-01-05 16:37:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 16:37:41 AI_Player.update()		110,	101,	11,	1100,	101,	101,	1010
2017-01-05 16:37:41 AI_Player.update()		1110,	1100,	1110,	111,	111,	110,	1011
2017-01-05 16:37:41 AI_Player.update()		1100,	101,	1101,	1001,	1110,	101,	1100
2017-01-05 16:37:41 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1010,	1011
2017-01-05 16:37:41 AI_Player.update()		110,	1110,	1010,	11,	1100,	110,	1001
2017-01-05 16:37:41 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()	update
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()	update
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:41 AI_Player.update()	Search took107ms
2017-01-05 16:37:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 16:37:41 AI_Player.update()		110,	101,	11,	1100,	101,	101,	1010
2017-01-05 16:37:41 AI_Player.update()		1110,	1100,	1110,	111,	111,	110,	1011
2017-01-05 16:37:41 AI_Player.update()		1100,	101,	1101,	1001,	1110,	101,	1100
2017-01-05 16:37:41 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1010,	1011
2017-01-05 16:37:41 AI_Player.update()		1001,	110,	1110,	1010,	11,	1100,	110
2017-01-05 16:37:41 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()	update
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:37:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()	update
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:41 AI_Player.update()	Search took117ms
2017-01-05 16:37:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-05 16:37:41 AI_Player.update()		110,	101,	11,	1100,	101,	110,	1010
2017-01-05 16:37:41 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 16:37:41 AI_Player.update()		1100,	101,	1101,	1001,	1110,	1010,	1100
2017-01-05 16:37:41 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1100,	1011
2017-01-05 16:37:41 AI_Player.update()		1001,	110,	1110,	1010,	11,	1110,	110
2017-01-05 16:37:41 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:37:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:37:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()	update
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:41 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:37:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:41 AI_Player.update()	update
2017-01-05 16:37:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:42 AI_Player.update()	Search took754ms
2017-01-05 16:37:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:42 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 16:37:42 AI_Player.update()		110,	1100,	11,	1100,	101,	110,	1010
2017-01-05 16:37:42 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-05 16:37:42 AI_Player.update()		1100,	1100,	1101,	1001,	1110,	1010,	1100
2017-01-05 16:37:42 AI_Player.update()		1110,	110,	1101,	111,	1011,	1100,	1011
2017-01-05 16:37:42 AI_Player.update()		1001,	101,	1110,	1010,	11,	1110,	110
2017-01-05 16:37:42 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:37:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:37:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:42 AI_Player.update()	update
2017-01-05 16:37:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:37:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:42 AI_Player.update()	update
2017-01-05 16:37:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:42 AI_Player.update()	Search took123ms
2017-01-05 16:37:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:42 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 16:37:42 AI_Player.update()		110,	1100,	11,	1100,	101,	110,	1010
2017-01-05 16:37:42 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-05 16:37:42 AI_Player.update()		1100,	1100,	1101,	1001,	1110,	1010,	1100
2017-01-05 16:37:42 AI_Player.update()		1110,	110,	1101,	111,	1011,	1100,	1011
2017-01-05 16:37:42 AI_Player.update()		101,	1110,	1010,	11,	1110,	110,	1001
2017-01-05 16:37:42 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:37:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:37:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:42 AI_Player.update()	update
2017-01-05 16:37:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:37:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:42 AI_Player.update()	update
2017-01-05 16:37:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:43 AI_Player.update()	Search took864ms
2017-01-05 16:37:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 16:37:43 AI_Player.update()		110,	1100,	11,	110,	101,	110,	1010
2017-01-05 16:37:43 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 16:37:43 AI_Player.update()		1100,	1100,	1101,	111,	1110,	1010,	1100
2017-01-05 16:37:43 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:37:43 AI_Player.update()		101,	1110,	1010,	111,	1110,	110,	1001
2017-01-05 16:37:43 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-05 16:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()	update
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:37:43 AI_Player.update()	Player b has won!
2017-01-05 16:37:43 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:43 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:43 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:43 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()	update
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:43 AI_Player.update()	Search took61ms
2017-01-05 16:37:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 16:37:43 AI_Player.update()		110,	101,	1101,	101,	11,	1001,	11
2017-01-05 16:37:43 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1100,	1011
2017-01-05 16:37:43 AI_Player.update()		1010,	1001,	1110,	110,	1100,	1001,	111
2017-01-05 16:37:43 AI_Player.update()		1110,	1010,	1101,	11,	1011,	101,	1011
2017-01-05 16:37:43 AI_Player.update()		110,	1010,	1010,	110,	1001,	110,	101
2017-01-05 16:37:43 AI_Player.update()		1100,	110,	1101,	1100,	1101,	11,	1001
2017-01-05 16:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()	update
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()	update
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:43 AI_Player.update()	Search took9ms
2017-01-05 16:37:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 16:37:43 AI_Player.update()		11,	110,	101,	1101,	101,	11,	1001
2017-01-05 16:37:43 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1100,	1011
2017-01-05 16:37:43 AI_Player.update()		1010,	1001,	1110,	110,	1100,	1001,	111
2017-01-05 16:37:43 AI_Player.update()		1110,	1010,	1101,	11,	1011,	101,	1011
2017-01-05 16:37:43 AI_Player.update()		110,	1010,	1010,	110,	1001,	110,	101
2017-01-05 16:37:43 AI_Player.update()		1100,	110,	1101,	1100,	1101,	11,	1001
2017-01-05 16:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()	update
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()	update
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:43 AI_Player.update()	Search took217ms
2017-01-05 16:37:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 16:37:43 AI_Player.update()		1001,	11,	110,	101,	1101,	101,	11
2017-01-05 16:37:43 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1100,	1011
2017-01-05 16:37:43 AI_Player.update()		1010,	1001,	1110,	110,	1100,	1001,	111
2017-01-05 16:37:43 AI_Player.update()		1110,	1010,	1101,	11,	1011,	101,	1011
2017-01-05 16:37:43 AI_Player.update()		110,	1010,	1010,	110,	1001,	110,	101
2017-01-05 16:37:43 AI_Player.update()		1100,	110,	1101,	1100,	1101,	11,	1001
2017-01-05 16:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()	update
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()	update
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:43 AI_Player.update()	Search took78ms
2017-01-05 16:37:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-05 16:37:43 AI_Player.update()		1001,	11,	110,	1101,	1101,	101,	11
2017-01-05 16:37:43 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-05 16:37:43 AI_Player.update()		1010,	1001,	1110,	11,	1100,	1001,	111
2017-01-05 16:37:43 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:43 AI_Player.update()		110,	1010,	1010,	1100,	1001,	110,	101
2017-01-05 16:37:43 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-05 16:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()	update
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()	update
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:43 AI_Player.update()	Search took133ms
2017-01-05 16:37:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:37:43 AI_Player.update()		1001,	11,	110,	1101,	1101,	1100,	11
2017-01-05 16:37:43 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-05 16:37:43 AI_Player.update()		1010,	1001,	1110,	11,	1100,	101,	111
2017-01-05 16:37:43 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-05 16:37:43 AI_Player.update()		110,	1010,	1010,	1100,	1001,	11,	101
2017-01-05 16:37:43 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()	update
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:43 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:43 AI_Player.update()	update
2017-01-05 16:37:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:44 AI_Player.update()	Search took99ms
2017-01-05 16:37:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-05 16:37:44 AI_Player.update()		1001,	11,	110,	1101,	1101,	101,	11
2017-01-05 16:37:44 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-05 16:37:44 AI_Player.update()		1010,	1001,	1110,	11,	1100,	1001,	111
2017-01-05 16:37:44 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:44 AI_Player.update()		110,	1010,	1010,	1100,	1001,	110,	101
2017-01-05 16:37:44 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-05 16:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()	update
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()	update
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:44 AI_Player.update()	Search took51ms
2017-01-05 16:37:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-05 16:37:44 AI_Player.update()		1001,	11,	110,	1101,	1101,	101,	11
2017-01-05 16:37:44 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-05 16:37:44 AI_Player.update()		111,	1010,	1001,	1110,	11,	1100,	1001
2017-01-05 16:37:44 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 16:37:44 AI_Player.update()		110,	1010,	1010,	1100,	1001,	110,	101
2017-01-05 16:37:44 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-05 16:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()	update
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()	update
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:44 AI_Player.update()	Search took399ms
2017-01-05 16:37:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()		110,	101,	111,	1101,	111,	1001,	11
2017-01-05 16:37:44 AI_Player.update()		1001,	11,	110,	110,	1101,	101,	11
2017-01-05 16:37:44 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1100,	1011
2017-01-05 16:37:44 AI_Player.update()		111,	1010,	1001,	110,	11,	1100,	1001
2017-01-05 16:37:44 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:37:44 AI_Player.update()		110,	1010,	1010,	1010,	1001,	110,	101
2017-01-05 16:37:44 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()	update
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()	update
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:44 AI_Player.update()	Search took18ms
2017-01-05 16:37:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()		110,	101,	111,	1101,	111,	1001,	11
2017-01-05 16:37:44 AI_Player.update()		1001,	11,	110,	110,	1101,	101,	11
2017-01-05 16:37:44 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1100,	1011
2017-01-05 16:37:44 AI_Player.update()		1001,	111,	1010,	1001,	110,	11,	1100
2017-01-05 16:37:44 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:37:44 AI_Player.update()		110,	1010,	1010,	1010,	1001,	110,	101
2017-01-05 16:37:44 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()	update
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()	update
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:44 AI_Player.update()	Search took129ms
2017-01-05 16:37:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()		110,	101,	111,	1101,	111,	1001,	11
2017-01-05 16:37:44 AI_Player.update()		1001,	11,	110,	110,	1101,	101,	11
2017-01-05 16:37:44 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1100,	1011
2017-01-05 16:37:44 AI_Player.update()		1001,	111,	1010,	1001,	110,	11,	1100
2017-01-05 16:37:44 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:37:44 AI_Player.update()		101,	110,	1010,	1010,	1010,	1001,	110
2017-01-05 16:37:44 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()	update
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:37:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()	update
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:44 AI_Player.update()	Search took20ms
2017-01-05 16:37:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()		110,	110,	111,	1101,	111,	1001,	11
2017-01-05 16:37:44 AI_Player.update()		1001,	101,	110,	110,	1101,	101,	11
2017-01-05 16:37:44 AI_Player.update()		1110,	11,	1110,	1110,	111,	1100,	1011
2017-01-05 16:37:44 AI_Player.update()		1001,	1010,	1010,	1001,	110,	11,	1100
2017-01-05 16:37:44 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 16:37:44 AI_Player.update()		101,	1010,	1010,	1010,	1010,	1001,	110
2017-01-05 16:37:44 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()	update
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:44 AI_Player.update()	update
2017-01-05 16:37:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:45 AI_Player.update()	Search took314ms
2017-01-05 16:37:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()		110,	110,	111,	1101,	111,	1001,	11
2017-01-05 16:37:45 AI_Player.update()		11,	1001,	101,	110,	110,	1101,	101
2017-01-05 16:37:45 AI_Player.update()		1110,	11,	1110,	1110,	111,	1100,	1011
2017-01-05 16:37:45 AI_Player.update()		1001,	1010,	1010,	1001,	110,	11,	1100
2017-01-05 16:37:45 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 16:37:45 AI_Player.update()		101,	1010,	1010,	1010,	1010,	1001,	110
2017-01-05 16:37:45 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()	update
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()	update
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:45 AI_Player.update()	Search took120ms
2017-01-05 16:37:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()		110,	110,	111,	1101,	111,	1001,	11
2017-01-05 16:37:45 AI_Player.update()		11,	1001,	101,	110,	110,	1101,	101
2017-01-05 16:37:45 AI_Player.update()		1110,	11,	1110,	1110,	111,	1100,	1011
2017-01-05 16:37:45 AI_Player.update()		1010,	1010,	1001,	110,	11,	1100,	1001
2017-01-05 16:37:45 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 16:37:45 AI_Player.update()		101,	1010,	1010,	1010,	1010,	1001,	110
2017-01-05 16:37:45 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 16:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()	update
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()	update
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:45 AI_Player.update()	Search took279ms
2017-01-05 16:37:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-05 16:37:45 AI_Player.update()		11,	1001,	101,	1110,	110,	1101,	101
2017-01-05 16:37:45 AI_Player.update()		1110,	11,	1110,	110,	111,	1100,	1011
2017-01-05 16:37:45 AI_Player.update()		1010,	1010,	1001,	1100,	11,	1100,	1001
2017-01-05 16:37:45 AI_Player.update()		1110,	111,	1101,	1010,	1011,	101,	1011
2017-01-05 16:37:45 AI_Player.update()		101,	1010,	1010,	101,	1010,	1001,	110
2017-01-05 16:37:45 AI_Player.update()		1100,	110,	1101,	1101,	1101,	11,	1001
2017-01-05 16:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()	update
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()	update
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:45 AI_Player.update()	Search took160ms
2017-01-05 16:37:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-05 16:37:45 AI_Player.update()		11,	11,	101,	1110,	110,	1101,	101
2017-01-05 16:37:45 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-05 16:37:45 AI_Player.update()		1010,	111,	1001,	1100,	11,	1100,	1001
2017-01-05 16:37:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:37:45 AI_Player.update()		101,	110,	1010,	101,	1010,	1001,	110
2017-01-05 16:37:45 AI_Player.update()		1100,	110,	1101,	1101,	1101,	11,	1001
2017-01-05 16:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()	update
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()	update
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:45 AI_Player.update()	Search took225ms
2017-01-05 16:37:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-05 16:37:45 AI_Player.update()		11,	11,	101,	1110,	110,	1101,	101
2017-01-05 16:37:45 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-05 16:37:45 AI_Player.update()		111,	1001,	1100,	11,	1100,	1001,	1010
2017-01-05 16:37:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:37:45 AI_Player.update()		101,	110,	1010,	101,	1010,	1001,	110
2017-01-05 16:37:45 AI_Player.update()		1100,	110,	1101,	1101,	1101,	11,	1001
2017-01-05 16:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()	update
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()	update
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:45 AI_Player.update()	Search took98ms
2017-01-05 16:37:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()		110,	1001,	111,	110,	111,	1101,	11
2017-01-05 16:37:45 AI_Player.update()		11,	11,	101,	1110,	110,	1100,	101
2017-01-05 16:37:45 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-05 16:37:45 AI_Player.update()		111,	1001,	1100,	11,	1100,	101,	1010
2017-01-05 16:37:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:37:45 AI_Player.update()		101,	110,	1010,	101,	1010,	11,	110
2017-01-05 16:37:45 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1001,	1001
2017-01-05 16:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()	update
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:37:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:45 AI_Player.update()	update
2017-01-05 16:37:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:46 AI_Player.update()	Search took102ms
2017-01-05 16:37:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()		110,	1001,	111,	110,	111,	1101,	11
2017-01-05 16:37:46 AI_Player.update()		11,	11,	101,	1110,	110,	1100,	101
2017-01-05 16:37:46 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-05 16:37:46 AI_Player.update()		111,	1001,	1100,	11,	1100,	101,	1010
2017-01-05 16:37:46 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:37:46 AI_Player.update()		110,	1010,	101,	1010,	11,	110,	101
2017-01-05 16:37:46 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1001,	1001
2017-01-05 16:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()	update
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()	update
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:46 AI_Player.update()	Search took71ms
2017-01-05 16:37:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()		110,	11,	111,	110,	111,	1101,	11
2017-01-05 16:37:46 AI_Player.update()		11,	1010,	101,	1110,	110,	1100,	101
2017-01-05 16:37:46 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-05 16:37:46 AI_Player.update()		111,	1010,	1100,	11,	1100,	101,	1010
2017-01-05 16:37:46 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:37:46 AI_Player.update()		110,	110,	101,	1010,	11,	110,	101
2017-01-05 16:37:46 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1001,	1001
2017-01-05 16:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()	update
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()	update
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:46 AI_Player.update()	Search took228ms
2017-01-05 16:37:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()		110,	11,	111,	110,	111,	1100,	11
2017-01-05 16:37:46 AI_Player.update()		11,	1010,	101,	1110,	110,	1001,	101
2017-01-05 16:37:46 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-05 16:37:46 AI_Player.update()		111,	1010,	1100,	11,	1100,	1001,	1010
2017-01-05 16:37:46 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-05 16:37:46 AI_Player.update()		110,	110,	101,	1010,	11,	1001,	101
2017-01-05 16:37:46 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1101,	1001
2017-01-05 16:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()	update
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()	update
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:46 AI_Player.update()	Search took172ms
2017-01-05 16:37:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()		110,	11,	111,	110,	111,	1100,	11
2017-01-05 16:37:46 AI_Player.update()		11,	1010,	101,	1110,	110,	1001,	101
2017-01-05 16:37:46 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-05 16:37:46 AI_Player.update()		1010,	111,	1010,	1100,	11,	1100,	1001
2017-01-05 16:37:46 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-05 16:37:46 AI_Player.update()		110,	110,	101,	1010,	11,	1001,	101
2017-01-05 16:37:46 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1101,	1001
2017-01-05 16:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()	update
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:46 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:37:46 AI_Player.update()	Player a has won!
2017-01-05 16:37:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:46 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:46 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()	update
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:46 AI_Player.update()	Search took85ms
2017-01-05 16:37:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()		110,	1011,	111,	110,	111,	1100,	11
2017-01-05 16:37:46 AI_Player.update()		1011,	1010,	1010,	1010,	11,	101,	1001
2017-01-05 16:37:46 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:37:46 AI_Player.update()		1010,	110,	11,	101,	110,	1110,	101
2017-01-05 16:37:46 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 16:37:46 AI_Player.update()		11,	11,	1010,	110,	1010,	110,	110
2017-01-05 16:37:46 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()	update
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()	update
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:46 AI_Player.update()	Search took66ms
2017-01-05 16:37:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()		110,	1011,	111,	110,	111,	1100,	11
2017-01-05 16:37:46 AI_Player.update()		1010,	1010,	1010,	11,	101,	1001,	1011
2017-01-05 16:37:46 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:37:46 AI_Player.update()		1010,	110,	11,	101,	110,	1110,	101
2017-01-05 16:37:46 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 16:37:46 AI_Player.update()		11,	11,	1010,	110,	1010,	110,	110
2017-01-05 16:37:46 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()	update
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:46 AI_Player.update()	update
2017-01-05 16:37:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:47 AI_Player.update()	Search took367ms
2017-01-05 16:37:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()		110,	1011,	111,	110,	111,	1100,	11
2017-01-05 16:37:47 AI_Player.update()		1010,	1010,	1010,	11,	101,	1001,	1011
2017-01-05 16:37:47 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:37:47 AI_Player.update()		1010,	110,	11,	101,	110,	1110,	101
2017-01-05 16:37:47 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 16:37:47 AI_Player.update()		11,	1010,	110,	1010,	110,	110,	11
2017-01-05 16:37:47 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:47 AI_Player.update()	Search took173ms
2017-01-05 16:37:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()		110,	1011,	111,	110,	111,	1011,	11
2017-01-05 16:37:47 AI_Player.update()		1010,	1010,	1010,	11,	101,	1100,	1011
2017-01-05 16:37:47 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-05 16:37:47 AI_Player.update()		1010,	110,	11,	101,	110,	101,	101
2017-01-05 16:37:47 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-05 16:37:47 AI_Player.update()		11,	1010,	110,	1010,	110,	1010,	11
2017-01-05 16:37:47 AI_Player.update()		1100,	11,	1101,	1001,	1101,	110,	1001
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:47 AI_Player.update()	Search took51ms
2017-01-05 16:37:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()		110,	1011,	111,	11,	111,	1011,	11
2017-01-05 16:37:47 AI_Player.update()		1010,	1010,	1010,	1010,	101,	1100,	1011
2017-01-05 16:37:47 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 16:37:47 AI_Player.update()		1010,	110,	11,	101,	110,	101,	101
2017-01-05 16:37:47 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:47 AI_Player.update()		11,	1010,	110,	1001,	110,	1010,	11
2017-01-05 16:37:47 AI_Player.update()		1100,	11,	1101,	110,	1101,	110,	1001
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:47 AI_Player.update()	Search took210ms
2017-01-05 16:37:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()		110,	1010,	111,	11,	111,	1011,	11
2017-01-05 16:37:47 AI_Player.update()		1010,	101,	1010,	1010,	101,	1100,	1011
2017-01-05 16:37:47 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 16:37:47 AI_Player.update()		1010,	1001,	11,	101,	110,	101,	101
2017-01-05 16:37:47 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:47 AI_Player.update()		11,	11,	110,	1001,	110,	1010,	11
2017-01-05 16:37:47 AI_Player.update()		1100,	1011,	1101,	110,	1101,	110,	1001
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:47 AI_Player.update()	Search took51ms
2017-01-05 16:37:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()		110,	1010,	111,	11,	111,	1011,	11
2017-01-05 16:37:47 AI_Player.update()		1010,	101,	1010,	1010,	101,	1100,	1011
2017-01-05 16:37:47 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 16:37:47 AI_Player.update()		1001,	11,	101,	110,	101,	101,	1010
2017-01-05 16:37:47 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:47 AI_Player.update()		11,	11,	110,	1001,	110,	1010,	11
2017-01-05 16:37:47 AI_Player.update()		1100,	1011,	1101,	110,	1101,	110,	1001
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:47 AI_Player.update()	Search took202ms
2017-01-05 16:37:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()		110,	1010,	111,	11,	111,	1011,	11
2017-01-05 16:37:47 AI_Player.update()		1010,	101,	1010,	1010,	101,	1100,	1011
2017-01-05 16:37:47 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 16:37:47 AI_Player.update()		11,	101,	110,	101,	101,	1010,	1001
2017-01-05 16:37:47 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:47 AI_Player.update()		11,	11,	110,	1001,	110,	1010,	11
2017-01-05 16:37:47 AI_Player.update()		1100,	1011,	1101,	110,	1101,	110,	1001
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:37:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:47 AI_Player.update()	Search took64ms
2017-01-05 16:37:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()		110,	1010,	111,	11,	111,	1011,	11
2017-01-05 16:37:47 AI_Player.update()		1010,	101,	1010,	1010,	101,	1100,	1011
2017-01-05 16:37:47 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 16:37:47 AI_Player.update()		1001,	11,	101,	110,	101,	101,	1010
2017-01-05 16:37:47 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:37:47 AI_Player.update()		11,	11,	110,	1001,	110,	1010,	11
2017-01-05 16:37:47 AI_Player.update()		1100,	1011,	1101,	110,	1101,	110,	1001
2017-01-05 16:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:47 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:47 AI_Player.update()	update
2017-01-05 16:37:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:48 AI_Player.update()	Search took198ms
2017-01-05 16:37:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 16:37:48 AI_Player.update()		1010,	101,	1010,	1010,	101,	1001,	1011
2017-01-05 16:37:48 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 16:37:48 AI_Player.update()		1001,	11,	101,	110,	101,	1110,	1010
2017-01-05 16:37:48 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:37:48 AI_Player.update()		11,	11,	110,	1001,	110,	110,	11
2017-01-05 16:37:48 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1011,	1001
2017-01-05 16:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()	update
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:37:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()	update
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:48 AI_Player.update()	Search took349ms
2017-01-05 16:37:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 16:37:48 AI_Player.update()		1011,	1010,	101,	1010,	1010,	101,	1001
2017-01-05 16:37:48 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 16:37:48 AI_Player.update()		1001,	11,	101,	110,	101,	1110,	1010
2017-01-05 16:37:48 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:37:48 AI_Player.update()		11,	11,	110,	1001,	110,	110,	11
2017-01-05 16:37:48 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1011,	1001
2017-01-05 16:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()	update
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:37:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()	update
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:48 AI_Player.update()	Search took165ms
2017-01-05 16:37:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 16:37:48 AI_Player.update()		1001,	1011,	1010,	101,	1010,	1010,	101
2017-01-05 16:37:48 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 16:37:48 AI_Player.update()		1001,	11,	101,	110,	101,	1110,	1010
2017-01-05 16:37:48 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:37:48 AI_Player.update()		11,	11,	110,	1001,	110,	110,	11
2017-01-05 16:37:48 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1011,	1001
2017-01-05 16:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()	update
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:37:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()	update
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:48 AI_Player.update()	Search took215ms
2017-01-05 16:37:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-05 16:37:48 AI_Player.update()		1001,	1011,	1010,	101,	1010,	1010,	101
2017-01-05 16:37:48 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 16:37:48 AI_Player.update()		1001,	11,	101,	1010,	101,	1110,	1010
2017-01-05 16:37:48 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:37:48 AI_Player.update()		11,	11,	110,	110,	110,	110,	11
2017-01-05 16:37:48 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1011,	1001
2017-01-05 16:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()	update
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:37:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()	update
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:48 AI_Player.update()	Search took105ms
2017-01-05 16:37:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-05 16:37:48 AI_Player.update()		1001,	1011,	1010,	101,	1010,	1010,	101
2017-01-05 16:37:48 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 16:37:48 AI_Player.update()		11,	101,	1010,	101,	1110,	1010,	1001
2017-01-05 16:37:48 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:37:48 AI_Player.update()		11,	11,	110,	110,	110,	110,	11
2017-01-05 16:37:48 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1011,	1001
2017-01-05 16:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()	update
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:48 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:48 AI_Player.update()	update
2017-01-05 16:37:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:49 AI_Player.update()	Search took225ms
2017-01-05 16:37:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-05 16:37:49 AI_Player.update()		1001,	1011,	1010,	110,	1010,	1010,	101
2017-01-05 16:37:49 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 16:37:49 AI_Player.update()		11,	101,	1010,	1001,	1110,	1010,	1001
2017-01-05 16:37:49 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-05 16:37:49 AI_Player.update()		11,	11,	110,	11,	110,	110,	11
2017-01-05 16:37:49 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1011,	1001
2017-01-05 16:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()	update
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()	update
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:49 AI_Player.update()	Search took355ms
2017-01-05 16:37:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:37:49 AI_Player.update()		1001,	1011,	1010,	110,	1010,	101,	101
2017-01-05 16:37:49 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:37:49 AI_Player.update()		11,	101,	1010,	1001,	1110,	1010,	1001
2017-01-05 16:37:49 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-05 16:37:49 AI_Player.update()		11,	11,	110,	11,	110,	1011,	11
2017-01-05 16:37:49 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-05 16:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()	update
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:37:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()	update
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:49 AI_Player.update()	Search took71ms
2017-01-05 16:37:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:37:49 AI_Player.update()		1001,	1011,	1010,	110,	1010,	101,	101
2017-01-05 16:37:49 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:37:49 AI_Player.update()		1001,	11,	101,	1010,	1001,	1110,	1010
2017-01-05 16:37:49 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-05 16:37:49 AI_Player.update()		11,	11,	110,	11,	110,	1011,	11
2017-01-05 16:37:49 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-05 16:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()	update
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:37:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()	update
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:49 AI_Player.update()	Search took95ms
2017-01-05 16:37:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:37:49 AI_Player.update()		1001,	1011,	1010,	110,	1010,	101,	101
2017-01-05 16:37:49 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:37:49 AI_Player.update()		11,	101,	1010,	1001,	1110,	1010,	1001
2017-01-05 16:37:49 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-05 16:37:49 AI_Player.update()		11,	11,	110,	11,	110,	1011,	11
2017-01-05 16:37:49 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-05 16:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()	update
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()	update
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:49 AI_Player.update()	Search took17ms
2017-01-05 16:37:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()		110,	1011,	111,	101,	111,	1010,	11
2017-01-05 16:37:49 AI_Player.update()		1001,	1010,	1010,	110,	1010,	101,	101
2017-01-05 16:37:49 AI_Player.update()		1110,	1011,	1110,	101,	111,	1010,	1011
2017-01-05 16:37:49 AI_Player.update()		11,	110,	1010,	1001,	1110,	1010,	1001
2017-01-05 16:37:49 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-05 16:37:49 AI_Player.update()		11,	1010,	110,	11,	110,	1011,	11
2017-01-05 16:37:49 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 16:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()	update
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:49 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:49 AI_Player.update()	update
2017-01-05 16:37:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:50 AI_Player.update()	Search took345ms
2017-01-05 16:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()		110,	1011,	111,	101,	111,	101,	11
2017-01-05 16:37:50 AI_Player.update()		1001,	1010,	1010,	110,	1010,	1010,	101
2017-01-05 16:37:50 AI_Player.update()		1110,	1011,	1110,	101,	111,	1010,	1011
2017-01-05 16:37:50 AI_Player.update()		11,	110,	1010,	1001,	1110,	110,	1001
2017-01-05 16:37:50 AI_Player.update()		1110,	101,	1101,	110,	1011,	1011,	1011
2017-01-05 16:37:50 AI_Player.update()		11,	1010,	110,	11,	110,	1100,	11
2017-01-05 16:37:50 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:37:50 AI_Player.update()	Player b has won!
2017-01-05 16:37:50 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:50 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:50 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:50 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:50 AI_Player.update()	Search took31ms
2017-01-05 16:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-05 16:37:50 AI_Player.update()		1011,	1010,	1100,	1010,	1101,	1001,	1001
2017-01-05 16:37:50 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-05 16:37:50 AI_Player.update()		101,	1001,	110,	11,	1001,	110,	1001
2017-01-05 16:37:50 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:37:50 AI_Player.update()		101,	11,	1101,	1010,	101,	11,	110
2017-01-05 16:37:50 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:50 AI_Player.update()	Search took169ms
2017-01-05 16:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-05 16:37:50 AI_Player.update()		1010,	1100,	1010,	1101,	1001,	1001,	1011
2017-01-05 16:37:50 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-05 16:37:50 AI_Player.update()		101,	1001,	110,	11,	1001,	110,	1001
2017-01-05 16:37:50 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:37:50 AI_Player.update()		101,	11,	1101,	1010,	101,	11,	110
2017-01-05 16:37:50 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:50 AI_Player.update()	Search took295ms
2017-01-05 16:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-05 16:37:50 AI_Player.update()		1010,	1100,	1010,	1101,	1001,	1001,	1011
2017-01-05 16:37:50 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-05 16:37:50 AI_Player.update()		101,	110,	110,	11,	1001,	110,	1001
2017-01-05 16:37:50 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:37:50 AI_Player.update()		101,	101,	1101,	1010,	101,	11,	110
2017-01-05 16:37:50 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1110,	1001
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:50 AI_Player.update()	Search took301ms
2017-01-05 16:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-05 16:37:50 AI_Player.update()		1011,	1010,	1100,	1010,	1101,	1001,	1001
2017-01-05 16:37:50 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-05 16:37:50 AI_Player.update()		101,	110,	110,	11,	1001,	110,	1001
2017-01-05 16:37:50 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:37:50 AI_Player.update()		101,	101,	1101,	1010,	101,	11,	110
2017-01-05 16:37:50 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1110,	1001
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:37:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:50 AI_Player.update()	Search took82ms
2017-01-05 16:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-05 16:37:50 AI_Player.update()		1011,	1010,	1100,	1010,	1101,	1001,	1001
2017-01-05 16:37:50 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-05 16:37:50 AI_Player.update()		110,	110,	11,	1001,	110,	1001,	101
2017-01-05 16:37:50 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:37:50 AI_Player.update()		101,	101,	1101,	1010,	101,	11,	110
2017-01-05 16:37:50 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1110,	1001
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:50 AI_Player.update()	Search took48ms
2017-01-05 16:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-05 16:37:50 AI_Player.update()		1011,	1010,	1100,	1010,	1101,	1001,	1001
2017-01-05 16:37:50 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-05 16:37:50 AI_Player.update()		110,	11,	1001,	110,	1001,	101,	110
2017-01-05 16:37:50 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:37:50 AI_Player.update()		101,	101,	1101,	1010,	101,	11,	110
2017-01-05 16:37:50 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1110,	1001
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:50 AI_Player.update()	Search took28ms
2017-01-05 16:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:37:50 AI_Player.update()		1011,	1010,	1100,	1010,	1101,	1001,	1001
2017-01-05 16:37:50 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-05 16:37:50 AI_Player.update()		110,	11,	1001,	1011,	1001,	101,	110
2017-01-05 16:37:50 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:37:50 AI_Player.update()		101,	101,	1101,	101,	101,	11,	110
2017-01-05 16:37:50 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-05 16:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:50 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:50 AI_Player.update()	update
2017-01-05 16:37:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:51 AI_Player.update()	Search took46ms
2017-01-05 16:37:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:37:51 AI_Player.update()		1001,	1011,	1010,	1100,	1010,	1101,	1001
2017-01-05 16:37:51 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-05 16:37:51 AI_Player.update()		110,	11,	1001,	1011,	1001,	101,	110
2017-01-05 16:37:51 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:37:51 AI_Player.update()		101,	101,	1101,	101,	101,	11,	110
2017-01-05 16:37:51 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:51 AI_Player.update()	Search took26ms
2017-01-05 16:37:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:37:51 AI_Player.update()		1001,	1011,	1010,	1100,	1010,	1101,	1001
2017-01-05 16:37:51 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-05 16:37:51 AI_Player.update()		110,	110,	11,	1001,	1011,	1001,	101
2017-01-05 16:37:51 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:37:51 AI_Player.update()		101,	101,	1101,	101,	101,	11,	110
2017-01-05 16:37:51 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:51 AI_Player.update()	Search took49ms
2017-01-05 16:37:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-05 16:37:51 AI_Player.update()		1001,	1001,	1010,	1100,	1010,	1101,	1001
2017-01-05 16:37:51 AI_Player.update()		1110,	110,	1110,	110,	111,	1100,	1011
2017-01-05 16:37:51 AI_Player.update()		110,	11,	11,	1001,	1011,	1001,	101
2017-01-05 16:37:51 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:37:51 AI_Player.update()		101,	1010,	1101,	101,	101,	11,	110
2017-01-05 16:37:51 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1110,	1001
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:51 AI_Player.update()	Search took160ms
2017-01-05 16:37:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()		110,	1011,	111,	1100,	111,	101,	11
2017-01-05 16:37:51 AI_Player.update()		1001,	1001,	1010,	110,	1010,	1101,	1001
2017-01-05 16:37:51 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:51 AI_Player.update()		110,	11,	11,	1010,	1011,	1001,	101
2017-01-05 16:37:51 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 16:37:51 AI_Player.update()		101,	1010,	1101,	110,	101,	11,	110
2017-01-05 16:37:51 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:51 AI_Player.update()	Search took52ms
2017-01-05 16:37:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()		110,	1011,	111,	1100,	111,	101,	11
2017-01-05 16:37:51 AI_Player.update()		1001,	1001,	1010,	110,	1010,	1101,	1001
2017-01-05 16:37:51 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:51 AI_Player.update()		110,	11,	11,	1010,	1011,	1001,	101
2017-01-05 16:37:51 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 16:37:51 AI_Player.update()		1010,	1101,	110,	101,	11,	110,	101
2017-01-05 16:37:51 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:51 AI_Player.update()	Search took262ms
2017-01-05 16:37:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()		110,	1011,	111,	1100,	111,	101,	11
2017-01-05 16:37:51 AI_Player.update()		1001,	1001,	1010,	110,	1010,	1101,	1001
2017-01-05 16:37:51 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:51 AI_Player.update()		11,	11,	1010,	1011,	1001,	101,	110
2017-01-05 16:37:51 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 16:37:51 AI_Player.update()		1010,	1101,	110,	101,	11,	110,	101
2017-01-05 16:37:51 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:51 AI_Player.update()	Search took309ms
2017-01-05 16:37:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-05 16:37:51 AI_Player.update()		1001,	1011,	1010,	110,	1010,	1101,	1001
2017-01-05 16:37:51 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:51 AI_Player.update()		11,	110,	1010,	1011,	1001,	101,	110
2017-01-05 16:37:51 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 16:37:51 AI_Player.update()		1010,	101,	110,	101,	11,	110,	101
2017-01-05 16:37:51 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:51 AI_Player.update()	Search took38ms
2017-01-05 16:37:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()		110,	1100,	111,	1100,	111,	1101,	11
2017-01-05 16:37:51 AI_Player.update()		1001,	1011,	1010,	110,	1010,	1100,	1001
2017-01-05 16:37:51 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-05 16:37:51 AI_Player.update()		11,	110,	1010,	1011,	1001,	1010,	110
2017-01-05 16:37:51 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 16:37:51 AI_Player.update()		1010,	101,	110,	101,	11,	1110,	101
2017-01-05 16:37:51 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:51 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:51 AI_Player.update()	update
2017-01-05 16:37:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:52 AI_Player.update()	Search took214ms
2017-01-05 16:37:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()		110,	1011,	111,	1100,	111,	1101,	11
2017-01-05 16:37:52 AI_Player.update()		1001,	1001,	1010,	110,	1010,	1100,	1001
2017-01-05 16:37:52 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-05 16:37:52 AI_Player.update()		11,	11,	1010,	1011,	1001,	1010,	110
2017-01-05 16:37:52 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 16:37:52 AI_Player.update()		1010,	1101,	110,	101,	11,	1110,	101
2017-01-05 16:37:52 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()	update
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()	update
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:52 AI_Player.update()	Search took201ms
2017-01-05 16:37:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()		110,	1011,	111,	1100,	111,	1101,	11
2017-01-05 16:37:52 AI_Player.update()		1001,	1001,	1010,	110,	1010,	1100,	1001
2017-01-05 16:37:52 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-05 16:37:52 AI_Player.update()		110,	11,	11,	1010,	1011,	1001,	1010
2017-01-05 16:37:52 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 16:37:52 AI_Player.update()		1010,	1101,	110,	101,	11,	1110,	101
2017-01-05 16:37:52 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()	update
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()	update
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:52 AI_Player.update()	Search took165ms
2017-01-05 16:37:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()		110,	1011,	111,	1100,	111,	101,	11
2017-01-05 16:37:52 AI_Player.update()		1001,	1001,	1010,	110,	1010,	1101,	1001
2017-01-05 16:37:52 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:52 AI_Player.update()		110,	11,	11,	1010,	1011,	101,	1010
2017-01-05 16:37:52 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:37:52 AI_Player.update()		1010,	1101,	110,	101,	11,	110,	101
2017-01-05 16:37:52 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()	update
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()	update
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:52 AI_Player.update()	Search took159ms
2017-01-05 16:37:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()		110,	1011,	111,	1100,	111,	101,	11
2017-01-05 16:37:52 AI_Player.update()		1001,	1001,	1001,	1010,	110,	1010,	1101
2017-01-05 16:37:52 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:52 AI_Player.update()		110,	11,	11,	1010,	1011,	101,	1010
2017-01-05 16:37:52 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:37:52 AI_Player.update()		1010,	1101,	110,	101,	11,	110,	101
2017-01-05 16:37:52 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()	update
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()	update
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:52 AI_Player.update()	Search took112ms
2017-01-05 16:37:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-05 16:37:52 AI_Player.update()		1001,	1011,	1001,	1010,	110,	1010,	1101
2017-01-05 16:37:52 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:52 AI_Player.update()		110,	110,	11,	1010,	1011,	101,	1010
2017-01-05 16:37:52 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 16:37:52 AI_Player.update()		1010,	101,	110,	101,	11,	110,	101
2017-01-05 16:37:52 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()	update
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:37:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()	update
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:52 AI_Player.update()	Search took97ms
2017-01-05 16:37:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-05 16:37:52 AI_Player.update()		1101,	1001,	1011,	1001,	1010,	110,	1010
2017-01-05 16:37:52 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:52 AI_Player.update()		110,	110,	11,	1010,	1011,	101,	1010
2017-01-05 16:37:52 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 16:37:52 AI_Player.update()		1010,	101,	110,	101,	11,	110,	101
2017-01-05 16:37:52 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()	update
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:52 AI_Player.update()	update
2017-01-05 16:37:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:53 AI_Player.update()	Search took248ms
2017-01-05 16:37:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()		110,	1100,	111,	1100,	111,	110,	11
2017-01-05 16:37:53 AI_Player.update()		1101,	1001,	1011,	1001,	1010,	1100,	1010
2017-01-05 16:37:53 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-05 16:37:53 AI_Player.update()		110,	110,	11,	1010,	1011,	1001,	1010
2017-01-05 16:37:53 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 16:37:53 AI_Player.update()		1010,	101,	110,	101,	11,	1110,	101
2017-01-05 16:37:53 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()	update
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()	update
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:53 AI_Player.update()	Search took51ms
2017-01-05 16:37:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-05 16:37:53 AI_Player.update()		1101,	1001,	1011,	1001,	1010,	110,	1010
2017-01-05 16:37:53 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:53 AI_Player.update()		110,	110,	11,	1010,	1011,	101,	1010
2017-01-05 16:37:53 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 16:37:53 AI_Player.update()		1010,	101,	110,	101,	11,	110,	101
2017-01-05 16:37:53 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()	update
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()	update
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:53 AI_Player.update()	Search took255ms
2017-01-05 16:37:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()		110,	1101,	111,	1100,	111,	101,	11
2017-01-05 16:37:53 AI_Player.update()		1101,	1100,	1011,	1001,	1010,	110,	1010
2017-01-05 16:37:53 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:53 AI_Player.update()		110,	1001,	11,	1010,	1011,	101,	1010
2017-01-05 16:37:53 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-05 16:37:53 AI_Player.update()		1010,	11,	110,	101,	11,	110,	101
2017-01-05 16:37:53 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()	update
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()	update
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:53 AI_Player.update()	Search took246ms
2017-01-05 16:37:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()		110,	1101,	111,	1100,	111,	101,	11
2017-01-05 16:37:53 AI_Player.update()		1010,	1101,	1100,	1011,	1001,	1010,	110
2017-01-05 16:37:53 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-05 16:37:53 AI_Player.update()		110,	1001,	11,	1010,	1011,	101,	1010
2017-01-05 16:37:53 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-05 16:37:53 AI_Player.update()		1010,	11,	110,	101,	11,	110,	101
2017-01-05 16:37:53 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()	update
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:53 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:37:53 AI_Player.update()	Player a has won!
2017-01-05 16:37:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:53 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:53 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()	update
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:53 AI_Player.update()	Search took78ms
2017-01-05 16:37:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()		110,	101,	111,	1011,	111,	11,	11
2017-01-05 16:37:53 AI_Player.update()		1011,	1001,	1110,	1010,	1001,	1101,	1110
2017-01-05 16:37:53 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-05 16:37:53 AI_Player.update()		110,	1110,	1010,	101,	1001,	1001,	110
2017-01-05 16:37:53 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:53 AI_Player.update()		1011,	1001,	1100,	1110,	11,	111,	1101
2017-01-05 16:37:53 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-05 16:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()	update
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()	update
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:53 AI_Player.update()	Search took72ms
2017-01-05 16:37:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 16:37:53 AI_Player.update()		1011,	1001,	1110,	1011,	1001,	1101,	1110
2017-01-05 16:37:53 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:37:53 AI_Player.update()		110,	1110,	1010,	101,	1001,	1001,	110
2017-01-05 16:37:53 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1100,	1011
2017-01-05 16:37:53 AI_Player.update()		1011,	1001,	1100,	111,	11,	111,	1101
2017-01-05 16:37:53 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 16:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()	update
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:53 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:53 AI_Player.update()	update
2017-01-05 16:37:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:54 AI_Player.update()	Search took155ms
2017-01-05 16:37:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:54 AI_Player.update()		110,	101,	111,	1011,	111,	11,	11
2017-01-05 16:37:54 AI_Player.update()		1011,	1001,	1110,	1010,	1001,	1101,	1110
2017-01-05 16:37:54 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-05 16:37:54 AI_Player.update()		110,	1110,	1010,	101,	1001,	1001,	110
2017-01-05 16:37:54 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:54 AI_Player.update()		1011,	1001,	1100,	1110,	11,	111,	1101
2017-01-05 16:37:54 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-05 16:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:54 AI_Player.update()	update
2017-01-05 16:37:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:54 AI_Player.update()	update
2017-01-05 16:37:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:54 AI_Player.update()	Search took70ms
2017-01-05 16:37:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:54 AI_Player.update()		110,	1001,	111,	1011,	111,	11,	11
2017-01-05 16:37:54 AI_Player.update()		1011,	110,	1110,	1010,	1001,	1101,	1110
2017-01-05 16:37:54 AI_Player.update()		1110,	1110,	1110,	1011,	111,	1010,	1011
2017-01-05 16:37:54 AI_Player.update()		110,	1001,	1010,	101,	1001,	1001,	110
2017-01-05 16:37:54 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:54 AI_Player.update()		1011,	1010,	1100,	1110,	11,	111,	1101
2017-01-05 16:37:54 AI_Player.update()		1100,	101,	1101,	111,	1101,	1001,	1001
2017-01-05 16:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:54 AI_Player.update()	update
2017-01-05 16:37:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:54 AI_Player.update()	update
2017-01-05 16:37:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:54 AI_Player.update()	Search took420ms
2017-01-05 16:37:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:54 AI_Player.update()		110,	1001,	111,	1011,	111,	11,	11
2017-01-05 16:37:54 AI_Player.update()		1011,	110,	1110,	1010,	1001,	1101,	1110
2017-01-05 16:37:54 AI_Player.update()		1110,	1110,	1110,	1011,	111,	1010,	1011
2017-01-05 16:37:54 AI_Player.update()		110,	110,	1001,	1010,	101,	1001,	1001
2017-01-05 16:37:54 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:54 AI_Player.update()		1011,	1010,	1100,	1110,	11,	111,	1101
2017-01-05 16:37:54 AI_Player.update()		1100,	101,	1101,	111,	1101,	1001,	1001
2017-01-05 16:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:54 AI_Player.update()	update
2017-01-05 16:37:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	4 1
2017-01-05 16:37:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:54 AI_Player.update()	update
2017-01-05 16:37:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:54 AI_Player.update()	Search took100ms
2017-01-05 16:37:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:54 AI_Player.update()		110,	1001,	111,	1011,	111,	11,	11
2017-01-05 16:37:54 AI_Player.update()		1110,	1011,	110,	1110,	1010,	1001,	1101
2017-01-05 16:37:54 AI_Player.update()		1110,	1110,	1110,	1011,	111,	1010,	1011
2017-01-05 16:37:54 AI_Player.update()		110,	110,	1001,	1010,	101,	1001,	1001
2017-01-05 16:37:54 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:54 AI_Player.update()		1011,	1010,	1100,	1110,	11,	111,	1101
2017-01-05 16:37:54 AI_Player.update()		1100,	101,	1101,	111,	1101,	1001,	1001
2017-01-05 16:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	4 1
2017-01-05 16:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:54 AI_Player.update()	update
2017-01-05 16:37:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:54 AI_Player.update()	update
2017-01-05 16:37:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:55 AI_Player.update()	Search took601ms
2017-01-05 16:37:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:55 AI_Player.update()		110,	1001,	111,	1011,	111,	11,	11
2017-01-05 16:37:55 AI_Player.update()		1101,	1110,	1011,	110,	1110,	1010,	1001
2017-01-05 16:37:55 AI_Player.update()		1110,	1110,	1110,	1011,	111,	1010,	1011
2017-01-05 16:37:55 AI_Player.update()		110,	110,	1001,	1010,	101,	1001,	1001
2017-01-05 16:37:55 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:55 AI_Player.update()		1011,	1010,	1100,	1110,	11,	111,	1101
2017-01-05 16:37:55 AI_Player.update()		1100,	101,	1101,	111,	1101,	1001,	1001
2017-01-05 16:37:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:55 AI_Player.update()	update
2017-01-05 16:37:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:37:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:55 AI_Player.update()	update
2017-01-05 16:37:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:55 AI_Player.update()	Search took16ms
2017-01-05 16:37:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:55 AI_Player.update()		110,	1001,	111,	1011,	111,	11,	11
2017-01-05 16:37:55 AI_Player.update()		1110,	1011,	110,	1110,	1010,	1001,	1101
2017-01-05 16:37:55 AI_Player.update()		1110,	1110,	1110,	1011,	111,	1010,	1011
2017-01-05 16:37:55 AI_Player.update()		110,	110,	1001,	1010,	101,	1001,	1001
2017-01-05 16:37:55 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:55 AI_Player.update()		1011,	1010,	1100,	1110,	11,	111,	1101
2017-01-05 16:37:55 AI_Player.update()		1100,	101,	1101,	111,	1101,	1001,	1001
2017-01-05 16:37:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:37:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:55 AI_Player.update()	update
2017-01-05 16:37:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:55 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:37:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:55 AI_Player.update()	update
2017-01-05 16:37:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:56 AI_Player.update()	Search took755ms
2017-01-05 16:37:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:56 AI_Player.update()		110,	1001,	111,	1011,	111,	11,	11
2017-01-05 16:37:56 AI_Player.update()		1110,	1011,	110,	1110,	1010,	1001,	1101
2017-01-05 16:37:56 AI_Player.update()		1110,	1110,	1110,	1011,	111,	1010,	1011
2017-01-05 16:37:56 AI_Player.update()		1001,	110,	110,	1001,	1010,	101,	1001
2017-01-05 16:37:56 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:56 AI_Player.update()		1011,	1010,	1100,	1110,	11,	111,	1101
2017-01-05 16:37:56 AI_Player.update()		1100,	101,	1101,	111,	1101,	1001,	1001
2017-01-05 16:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:56 AI_Player.update()	update
2017-01-05 16:37:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	6 2
2017-01-05 16:37:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:56 AI_Player.update()	update
2017-01-05 16:37:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:56 AI_Player.update()	Search took191ms
2017-01-05 16:37:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:56 AI_Player.update()		110,	1001,	111,	1011,	111,	11,	11
2017-01-05 16:37:56 AI_Player.update()		1101,	1110,	1011,	110,	1110,	1010,	1001
2017-01-05 16:37:56 AI_Player.update()		1110,	1110,	1110,	1011,	111,	1010,	1011
2017-01-05 16:37:56 AI_Player.update()		1001,	110,	110,	1001,	1010,	101,	1001
2017-01-05 16:37:56 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:56 AI_Player.update()		1011,	1010,	1100,	1110,	11,	111,	1101
2017-01-05 16:37:56 AI_Player.update()		1100,	101,	1101,	111,	1101,	1001,	1001
2017-01-05 16:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	6 2
2017-01-05 16:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:56 AI_Player.update()	update
2017-01-05 16:37:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	6 2
2017-01-05 16:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:56 AI_Player.update()	update
2017-01-05 16:37:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:56 AI_Player.update()	Search took408ms
2017-01-05 16:37:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:56 AI_Player.update()		110,	101,	111,	1011,	111,	11,	11
2017-01-05 16:37:56 AI_Player.update()		1101,	1001,	1011,	110,	1110,	1010,	1001
2017-01-05 16:37:56 AI_Player.update()		1110,	1110,	1110,	1011,	111,	1010,	1011
2017-01-05 16:37:56 AI_Player.update()		1001,	1110,	110,	1001,	1010,	101,	1001
2017-01-05 16:37:56 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:37:56 AI_Player.update()		1011,	1001,	1100,	1110,	11,	111,	1101
2017-01-05 16:37:56 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-05 16:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	6 2
2017-01-05 16:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:56 AI_Player.update()	update
2017-01-05 16:37:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:56 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:37:56 AI_Player.update()	Player a has won!
2017-01-05 16:37:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:56 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:37:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:37:56 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:37:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:56 AI_Player.update()	update
2017-01-05 16:37:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:56 AI_Player.update()	Search took191ms
2017-01-05 16:37:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:56 AI_Player.update()		110,	1110,	111,	101,	111,	111,	11
2017-01-05 16:37:56 AI_Player.update()		1100,	1011,	101,	110,	1100,	1100,	1110
2017-01-05 16:37:56 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 16:37:56 AI_Player.update()		11,	101,	1100,	111,	1010,	101,	1100
2017-01-05 16:37:56 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 16:37:56 AI_Player.update()		101,	1010,	110,	1010,	11,	1001,	101
2017-01-05 16:37:56 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-05 16:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:56 AI_Player.update()	update
2017-01-05 16:37:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:56 AI_Player.update()	update
2017-01-05 16:37:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:57 AI_Player.update()	Search took822ms
2017-01-05 16:37:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:57 AI_Player.update()		110,	1110,	111,	110,	111,	111,	11
2017-01-05 16:37:57 AI_Player.update()		1100,	1011,	101,	101,	1100,	1100,	1110
2017-01-05 16:37:57 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-05 16:37:57 AI_Player.update()		11,	101,	1100,	1010,	1010,	101,	1100
2017-01-05 16:37:57 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 16:37:57 AI_Player.update()		101,	1010,	110,	1001,	11,	1001,	101
2017-01-05 16:37:57 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-05 16:37:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:57 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:57 AI_Player.update()	update
2017-01-05 16:37:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:57 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:57 AI_Player.update()	update
2017-01-05 16:37:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:58 AI_Player.update()	Search took758ms
2017-01-05 16:37:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:58 AI_Player.update()		110,	1110,	111,	110,	111,	1100,	11
2017-01-05 16:37:58 AI_Player.update()		1100,	1011,	101,	101,	1100,	101,	1110
2017-01-05 16:37:58 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-05 16:37:58 AI_Player.update()		11,	101,	1100,	1010,	1010,	101,	1100
2017-01-05 16:37:58 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:37:58 AI_Player.update()		101,	1010,	110,	1001,	11,	110,	101
2017-01-05 16:37:58 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-05 16:37:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:37:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:58 AI_Player.update()	update
2017-01-05 16:37:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:58 AI_Player.update()	update
2017-01-05 16:37:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:59 AI_Player.update()	Search took528ms
2017-01-05 16:37:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:59 AI_Player.update()		110,	1110,	111,	110,	111,	1100,	11
2017-01-05 16:37:59 AI_Player.update()		1100,	1011,	101,	101,	1100,	101,	1110
2017-01-05 16:37:59 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-05 16:37:59 AI_Player.update()		11,	101,	1100,	1010,	1010,	101,	1100
2017-01-05 16:37:59 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:37:59 AI_Player.update()		1010,	110,	1001,	11,	110,	101,	101
2017-01-05 16:37:59 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-05 16:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:59 AI_Player.update()	update
2017-01-05 16:37:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:59 AI_Player.update()	update
2017-01-05 16:37:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:37:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:37:59 AI_Player.update()	Search took464ms
2017-01-05 16:37:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:59 AI_Player.update()		110,	1110,	111,	110,	111,	1100,	11
2017-01-05 16:37:59 AI_Player.update()		1100,	1011,	101,	101,	1100,	101,	1110
2017-01-05 16:37:59 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-05 16:37:59 AI_Player.update()		11,	101,	1100,	1010,	1010,	101,	1100
2017-01-05 16:37:59 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:37:59 AI_Player.update()		101,	1010,	110,	1001,	11,	110,	101
2017-01-05 16:37:59 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-05 16:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:59 AI_Player.update()	update
2017-01-05 16:37:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:37:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:37:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:37:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:59 AI_Player.update()	update
2017-01-05 16:37:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:37:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:37:59 AI_Player.update()	Search took20ms
2017-01-05 16:37:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:59 AI_Player.update()		110,	1100,	111,	110,	111,	1100,	11
2017-01-05 16:37:59 AI_Player.update()		1100,	1110,	101,	101,	1100,	101,	1110
2017-01-05 16:37:59 AI_Player.update()		1110,	1011,	1110,	111,	111,	101,	1011
2017-01-05 16:37:59 AI_Player.update()		11,	11,	1100,	1010,	1010,	101,	1100
2017-01-05 16:37:59 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:37:59 AI_Player.update()		101,	1100,	110,	1001,	11,	110,	101
2017-01-05 16:37:59 AI_Player.update()		1100,	1010,	1101,	101,	1101,	111,	1001
2017-01-05 16:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:37:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:59 AI_Player.update()	update
2017-01-05 16:37:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:37:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:37:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:37:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:37:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:37:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:37:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:37:59 AI_Player.update()	update
2017-01-05 16:37:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:00 AI_Player.update()	Search took683ms
2017-01-05 16:38:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:00 AI_Player.update()		110,	1100,	111,	110,	111,	1100,	11
2017-01-05 16:38:00 AI_Player.update()		1110,	101,	101,	1100,	101,	1110,	1100
2017-01-05 16:38:00 AI_Player.update()		1110,	1011,	1110,	111,	111,	101,	1011
2017-01-05 16:38:00 AI_Player.update()		11,	11,	1100,	1010,	1010,	101,	1100
2017-01-05 16:38:00 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:38:00 AI_Player.update()		101,	1100,	110,	1001,	11,	110,	101
2017-01-05 16:38:00 AI_Player.update()		1100,	1010,	1101,	101,	1101,	111,	1001
2017-01-05 16:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:00 AI_Player.update()	update
2017-01-05 16:38:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:00 AI_Player.update()	update
2017-01-05 16:38:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:00 AI_Player.update()	Search took157ms
2017-01-05 16:38:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:00 AI_Player.update()		110,	1100,	111,	1100,	111,	1100,	11
2017-01-05 16:38:00 AI_Player.update()		1110,	101,	101,	111,	101,	1110,	1100
2017-01-05 16:38:00 AI_Player.update()		1110,	1011,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:00 AI_Player.update()		11,	11,	1100,	1010,	1010,	101,	1100
2017-01-05 16:38:00 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:38:00 AI_Player.update()		101,	1100,	110,	101,	11,	110,	101
2017-01-05 16:38:00 AI_Player.update()		1100,	1010,	1101,	110,	1101,	111,	1001
2017-01-05 16:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:00 AI_Player.update()	update
2017-01-05 16:38:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:00 AI_Player.update()	update
2017-01-05 16:38:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:00 AI_Player.update()	Search took210ms
2017-01-05 16:38:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:00 AI_Player.update()		110,	101,	111,	1100,	111,	1100,	11
2017-01-05 16:38:00 AI_Player.update()		1110,	1011,	101,	111,	101,	1110,	1100
2017-01-05 16:38:00 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:00 AI_Player.update()		11,	101,	1100,	1010,	1010,	101,	1100
2017-01-05 16:38:00 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:38:00 AI_Player.update()		101,	1010,	110,	101,	11,	110,	101
2017-01-05 16:38:00 AI_Player.update()		1100,	1100,	1101,	110,	1101,	111,	1001
2017-01-05 16:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:00 AI_Player.update()	update
2017-01-05 16:38:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:00 AI_Player.update()	update
2017-01-05 16:38:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:00 AI_Player.update()	Search took227ms
2017-01-05 16:38:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:00 AI_Player.update()		110,	101,	111,	111,	111,	1100,	11
2017-01-05 16:38:00 AI_Player.update()		1110,	1011,	101,	1010,	101,	1110,	1100
2017-01-05 16:38:00 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:00 AI_Player.update()		11,	101,	1100,	1001,	1010,	101,	1100
2017-01-05 16:38:00 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-05 16:38:00 AI_Player.update()		101,	1010,	110,	110,	11,	110,	101
2017-01-05 16:38:00 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 16:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:00 AI_Player.update()	update
2017-01-05 16:38:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:00 AI_Player.update()	update
2017-01-05 16:38:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:01 AI_Player.update()	Search took254ms
2017-01-05 16:38:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()		110,	101,	111,	111,	111,	1100,	11
2017-01-05 16:38:01 AI_Player.update()		1110,	1011,	101,	1010,	101,	1110,	1100
2017-01-05 16:38:01 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:01 AI_Player.update()		101,	1100,	1001,	1010,	101,	1100,	11
2017-01-05 16:38:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-05 16:38:01 AI_Player.update()		101,	1010,	110,	110,	11,	110,	101
2017-01-05 16:38:01 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 16:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()	update
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()	update
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:01 AI_Player.update()	Search took247ms
2017-01-05 16:38:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()		110,	1011,	111,	111,	111,	1100,	11
2017-01-05 16:38:01 AI_Player.update()		1110,	11,	101,	1010,	101,	1110,	1100
2017-01-05 16:38:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:01 AI_Player.update()		101,	1100,	1001,	1010,	101,	1100,	11
2017-01-05 16:38:01 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 16:38:01 AI_Player.update()		101,	1100,	110,	110,	11,	110,	101
2017-01-05 16:38:01 AI_Player.update()		1100,	101,	1101,	1100,	1101,	111,	1001
2017-01-05 16:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()	update
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()	update
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:01 AI_Player.update()	Search took35ms
2017-01-05 16:38:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()		110,	1011,	111,	111,	111,	1100,	11
2017-01-05 16:38:01 AI_Player.update()		11,	101,	1010,	101,	1110,	1100,	1110
2017-01-05 16:38:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:01 AI_Player.update()		101,	1100,	1001,	1010,	101,	1100,	11
2017-01-05 16:38:01 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 16:38:01 AI_Player.update()		101,	1100,	110,	110,	11,	110,	101
2017-01-05 16:38:01 AI_Player.update()		1100,	101,	1101,	1100,	1101,	111,	1001
2017-01-05 16:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()	update
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()	update
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:01 AI_Player.update()	Search took75ms
2017-01-05 16:38:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()		110,	1011,	111,	111,	111,	1100,	11
2017-01-05 16:38:01 AI_Player.update()		11,	101,	1010,	101,	1110,	1100,	1110
2017-01-05 16:38:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:01 AI_Player.update()		11,	101,	1100,	1001,	1010,	101,	1100
2017-01-05 16:38:01 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 16:38:01 AI_Player.update()		101,	1100,	110,	110,	11,	110,	101
2017-01-05 16:38:01 AI_Player.update()		1100,	101,	1101,	1100,	1101,	111,	1001
2017-01-05 16:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()	update
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:38:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()	update
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:01 AI_Player.update()	Search took293ms
2017-01-05 16:38:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-05 16:38:01 AI_Player.update()		11,	101,	1010,	1010,	1110,	1100,	1110
2017-01-05 16:38:01 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-05 16:38:01 AI_Player.update()		11,	101,	1100,	101,	1010,	101,	1100
2017-01-05 16:38:01 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 16:38:01 AI_Player.update()		101,	1100,	110,	1100,	11,	110,	101
2017-01-05 16:38:01 AI_Player.update()		1100,	101,	1101,	111,	1101,	111,	1001
2017-01-05 16:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()	update
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:01 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:01 AI_Player.update()	update
2017-01-05 16:38:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:02 AI_Player.update()	Search took397ms
2017-01-05 16:38:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 16:38:02 AI_Player.update()		11,	1100,	1010,	1010,	1110,	1100,	1110
2017-01-05 16:38:02 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 16:38:02 AI_Player.update()		11,	1010,	1100,	101,	1010,	101,	1100
2017-01-05 16:38:02 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1001,	1011
2017-01-05 16:38:02 AI_Player.update()		101,	101,	110,	1100,	11,	110,	101
2017-01-05 16:38:02 AI_Player.update()		1100,	1011,	1101,	111,	1101,	111,	1001
2017-01-05 16:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()	update
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()	update
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:02 AI_Player.update()	Search took74ms
2017-01-05 16:38:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-05 16:38:02 AI_Player.update()		11,	101,	1010,	1010,	1110,	1100,	1110
2017-01-05 16:38:02 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-05 16:38:02 AI_Player.update()		11,	101,	1100,	101,	1010,	101,	1100
2017-01-05 16:38:02 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 16:38:02 AI_Player.update()		101,	1100,	110,	1100,	11,	110,	101
2017-01-05 16:38:02 AI_Player.update()		1100,	101,	1101,	111,	1101,	111,	1001
2017-01-05 16:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()	update
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()	update
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:02 AI_Player.update()	Search took377ms
2017-01-05 16:38:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-05 16:38:02 AI_Player.update()		1110,	11,	101,	1010,	1010,	1110,	1100
2017-01-05 16:38:02 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-05 16:38:02 AI_Player.update()		11,	101,	1100,	101,	1010,	101,	1100
2017-01-05 16:38:02 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 16:38:02 AI_Player.update()		101,	1100,	110,	1100,	11,	110,	101
2017-01-05 16:38:02 AI_Player.update()		1100,	101,	1101,	111,	1101,	111,	1001
2017-01-05 16:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()	update
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()	update
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:02 AI_Player.update()	Search took301ms
2017-01-05 16:38:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 16:38:02 AI_Player.update()		1110,	1011,	101,	1010,	1010,	1110,	1100
2017-01-05 16:38:02 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-05 16:38:02 AI_Player.update()		11,	1100,	1100,	101,	1010,	101,	1100
2017-01-05 16:38:02 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 16:38:02 AI_Player.update()		101,	1010,	110,	1100,	11,	110,	101
2017-01-05 16:38:02 AI_Player.update()		1100,	1100,	1101,	111,	1101,	111,	1001
2017-01-05 16:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()	update
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:02 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:38:02 AI_Player.update()	Player a has won!
2017-01-05 16:38:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:02 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:38:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:02 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:38:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()	update
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:02 AI_Player.update()	Search took72ms
2017-01-05 16:38:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()		110,	1001,	111,	110,	111,	11,	11
2017-01-05 16:38:02 AI_Player.update()		1011,	1101,	1100,	1100,	1100,	1010,	1100
2017-01-05 16:38:02 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-05 16:38:02 AI_Player.update()		1011,	1010,	101,	11,	101,	101,	11
2017-01-05 16:38:02 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:38:02 AI_Player.update()		1010,	111,	110,	1010,	1010,	11,	101
2017-01-05 16:38:02 AI_Player.update()		1100,	110,	1101,	111,	1101,	1010,	1001
2017-01-05 16:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()	update
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:02 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:02 AI_Player.update()	update
2017-01-05 16:38:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:03 AI_Player.update()	Search took34ms
2017-01-05 16:38:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()		110,	1001,	111,	110,	111,	11,	11
2017-01-05 16:38:03 AI_Player.update()		1101,	1100,	1100,	1100,	1010,	1100,	1011
2017-01-05 16:38:03 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-05 16:38:03 AI_Player.update()		1011,	1010,	101,	11,	101,	101,	11
2017-01-05 16:38:03 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:38:03 AI_Player.update()		1010,	111,	110,	1010,	1010,	11,	101
2017-01-05 16:38:03 AI_Player.update()		1100,	110,	1101,	111,	1101,	1010,	1001
2017-01-05 16:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()	update
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()	update
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:03 AI_Player.update()	Search took159ms
2017-01-05 16:38:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()		110,	1100,	111,	110,	111,	11,	11
2017-01-05 16:38:03 AI_Player.update()		1101,	1100,	1100,	1100,	1010,	1100,	1011
2017-01-05 16:38:03 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-05 16:38:03 AI_Player.update()		1011,	1100,	101,	11,	101,	101,	11
2017-01-05 16:38:03 AI_Player.update()		1110,	111,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:38:03 AI_Player.update()		1010,	110,	110,	1010,	1010,	11,	101
2017-01-05 16:38:03 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1010,	1001
2017-01-05 16:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()	update
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()	update
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:03 AI_Player.update()	Search took137ms
2017-01-05 16:38:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()		110,	1100,	111,	111,	111,	11,	11
2017-01-05 16:38:03 AI_Player.update()		1101,	1100,	1100,	110,	1010,	1100,	1011
2017-01-05 16:38:03 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-05 16:38:03 AI_Player.update()		1011,	1100,	101,	1100,	101,	101,	11
2017-01-05 16:38:03 AI_Player.update()		1110,	111,	1101,	11,	1011,	1100,	1011
2017-01-05 16:38:03 AI_Player.update()		1010,	110,	110,	1101,	1010,	11,	101
2017-01-05 16:38:03 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()	update
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()	update
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:03 AI_Player.update()	Search took110ms
2017-01-05 16:38:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()		110,	1100,	111,	110,	111,	11,	11
2017-01-05 16:38:03 AI_Player.update()		1101,	1100,	1100,	1100,	1010,	1100,	1011
2017-01-05 16:38:03 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-05 16:38:03 AI_Player.update()		1011,	1100,	101,	11,	101,	101,	11
2017-01-05 16:38:03 AI_Player.update()		1110,	111,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:38:03 AI_Player.update()		1010,	110,	110,	1010,	1010,	11,	101
2017-01-05 16:38:03 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1010,	1001
2017-01-05 16:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()	update
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()	update
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:03 AI_Player.update()	Search took43ms
2017-01-05 16:38:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-05 16:38:03 AI_Player.update()		1101,	1100,	1100,	1100,	1010,	11,	1011
2017-01-05 16:38:03 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 16:38:03 AI_Player.update()		1011,	1100,	101,	11,	101,	1010,	11
2017-01-05 16:38:03 AI_Player.update()		1110,	111,	1101,	1101,	1011,	101,	1011
2017-01-05 16:38:03 AI_Player.update()		1010,	110,	110,	1010,	1010,	1100,	101
2017-01-05 16:38:03 AI_Player.update()		1100,	1001,	1101,	111,	1101,	11,	1001
2017-01-05 16:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()	update
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:03 AI_Player.update()	update
2017-01-05 16:38:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:04 AI_Player.update()	Search took535ms
2017-01-05 16:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1101,	1100,	1100,	110,	1010,	11,	1011
2017-01-05 16:38:04 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 16:38:04 AI_Player.update()		1011,	1100,	101,	1100,	101,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1110,	111,	1101,	11,	1011,	101,	1011
2017-01-05 16:38:04 AI_Player.update()		1010,	110,	110,	1101,	1010,	1100,	101
2017-01-05 16:38:04 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:04 AI_Player.update()	Search took53ms
2017-01-05 16:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1101,	1100,	1100,	111,	1010,	11,	1011
2017-01-05 16:38:04 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-05 16:38:04 AI_Player.update()		1011,	1100,	101,	1100,	101,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 16:38:04 AI_Player.update()		1010,	110,	110,	11,	1010,	1100,	101
2017-01-05 16:38:04 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:04 AI_Player.update()	Search took39ms
2017-01-05 16:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1101,	1100,	1100,	1010,	1010,	11,	1011
2017-01-05 16:38:04 AI_Player.update()		1110,	1010,	1110,	111,	111,	1100,	1011
2017-01-05 16:38:04 AI_Player.update()		1011,	1100,	101,	110,	101,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 16:38:04 AI_Player.update()		1010,	110,	110,	1100,	1010,	1100,	101
2017-01-05 16:38:04 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:04 AI_Player.update()	Search took53ms
2017-01-05 16:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1101,	1010,	1100,	1010,	1010,	11,	1011
2017-01-05 16:38:04 AI_Player.update()		1110,	1100,	1110,	111,	111,	1100,	1011
2017-01-05 16:38:04 AI_Player.update()		1011,	111,	101,	110,	101,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-05 16:38:04 AI_Player.update()		1010,	1001,	110,	1100,	1010,	1100,	101
2017-01-05 16:38:04 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:04 AI_Player.update()	Search took73ms
2017-01-05 16:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1101,	1100,	1100,	1010,	1010,	11,	1011
2017-01-05 16:38:04 AI_Player.update()		1110,	1010,	1110,	111,	111,	1100,	1011
2017-01-05 16:38:04 AI_Player.update()		1011,	1100,	101,	110,	101,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 16:38:04 AI_Player.update()		1010,	110,	110,	1100,	1010,	1100,	101
2017-01-05 16:38:04 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:04 AI_Player.update()	Search took53ms
2017-01-05 16:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1101,	1100,	1100,	1010,	1010,	11,	1011
2017-01-05 16:38:04 AI_Player.update()		1110,	1010,	1110,	111,	111,	1100,	1011
2017-01-05 16:38:04 AI_Player.update()		1011,	1100,	101,	110,	101,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 16:38:04 AI_Player.update()		101,	1010,	110,	110,	1100,	1010,	1100
2017-01-05 16:38:04 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:04 AI_Player.update()	Search took105ms
2017-01-05 16:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1011,	1101
2017-01-05 16:38:04 AI_Player.update()		1110,	1010,	1110,	111,	111,	1100,	1011
2017-01-05 16:38:04 AI_Player.update()		1011,	1100,	101,	110,	101,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 16:38:04 AI_Player.update()		101,	1010,	110,	110,	1100,	1010,	1100
2017-01-05 16:38:04 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:38:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:04 AI_Player.update()	Search took48ms
2017-01-05 16:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1011,	1101
2017-01-05 16:38:04 AI_Player.update()		1110,	1010,	1110,	111,	111,	1100,	1011
2017-01-05 16:38:04 AI_Player.update()		1011,	1100,	101,	110,	101,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 16:38:04 AI_Player.update()		1010,	110,	110,	1100,	1010,	1100,	101
2017-01-05 16:38:04 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:04 AI_Player.update()	Search took176ms
2017-01-05 16:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1100,	1100,	1010,	111,	11,	1011,	1101
2017-01-05 16:38:04 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-05 16:38:04 AI_Player.update()		1011,	1100,	101,	1100,	101,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 16:38:04 AI_Player.update()		1010,	110,	110,	11,	1010,	1100,	101
2017-01-05 16:38:04 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:04 AI_Player.update()	Search took139ms
2017-01-05 16:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1100,	1100,	1010,	110,	11,	1011,	1101
2017-01-05 16:38:04 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 16:38:04 AI_Player.update()		1011,	1100,	101,	1100,	101,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1110,	111,	1101,	11,	1011,	101,	1011
2017-01-05 16:38:04 AI_Player.update()		1010,	110,	110,	1101,	1010,	1100,	101
2017-01-05 16:38:04 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:04 AI_Player.update()	Search took134ms
2017-01-05 16:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1100,	1100,	1010,	1100,	11,	1011,	1101
2017-01-05 16:38:04 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 16:38:04 AI_Player.update()		1011,	1100,	101,	11,	101,	1010,	11
2017-01-05 16:38:04 AI_Player.update()		1110,	111,	1101,	1101,	1011,	101,	1011
2017-01-05 16:38:04 AI_Player.update()		1010,	110,	110,	1010,	1010,	1100,	101
2017-01-05 16:38:04 AI_Player.update()		1100,	1001,	1101,	111,	1101,	11,	1001
2017-01-05 16:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:04 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:04 AI_Player.update()	update
2017-01-05 16:38:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:05 AI_Player.update()	Search took537ms
2017-01-05 16:38:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:05 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-05 16:38:05 AI_Player.update()		1100,	1010,	1010,	1100,	11,	1011,	1101
2017-01-05 16:38:05 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-05 16:38:05 AI_Player.update()		1011,	111,	101,	11,	101,	1010,	11
2017-01-05 16:38:05 AI_Player.update()		1110,	110,	1101,	1101,	1011,	101,	1011
2017-01-05 16:38:05 AI_Player.update()		1010,	1001,	110,	1010,	1010,	1100,	101
2017-01-05 16:38:05 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 16:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:05 AI_Player.update()	update
2017-01-05 16:38:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:05 AI_Player.update()	update
2017-01-05 16:38:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:05 AI_Player.update()	Search took79ms
2017-01-05 16:38:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:05 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-05 16:38:05 AI_Player.update()		1010,	1010,	1100,	11,	1011,	1101,	1100
2017-01-05 16:38:05 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-05 16:38:05 AI_Player.update()		1011,	111,	101,	11,	101,	1010,	11
2017-01-05 16:38:05 AI_Player.update()		1110,	110,	1101,	1101,	1011,	101,	1011
2017-01-05 16:38:05 AI_Player.update()		1010,	1001,	110,	1010,	1010,	1100,	101
2017-01-05 16:38:05 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 16:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:05 AI_Player.update()	update
2017-01-05 16:38:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:05 AI_Player.update()	update
2017-01-05 16:38:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:05 AI_Player.update()	Search took217ms
2017-01-05 16:38:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:05 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-05 16:38:05 AI_Player.update()		1010,	1010,	1100,	11,	1011,	1101,	1100
2017-01-05 16:38:05 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-05 16:38:05 AI_Player.update()		111,	101,	11,	101,	1010,	11,	1011
2017-01-05 16:38:05 AI_Player.update()		1110,	110,	1101,	1101,	1011,	101,	1011
2017-01-05 16:38:05 AI_Player.update()		1010,	1001,	110,	1010,	1010,	1100,	101
2017-01-05 16:38:05 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 16:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:05 AI_Player.update()	update
2017-01-05 16:38:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:05 AI_Player.update()	update
2017-01-05 16:38:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:05 AI_Player.update()	Search took113ms
2017-01-05 16:38:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:05 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 16:38:05 AI_Player.update()		1010,	1010,	1100,	1100,	1011,	1101,	1100
2017-01-05 16:38:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-05 16:38:05 AI_Player.update()		111,	101,	11,	1101,	1010,	11,	1011
2017-01-05 16:38:05 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:05 AI_Player.update()		1010,	1001,	110,	111,	1010,	1100,	101
2017-01-05 16:38:05 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-05 16:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:05 AI_Player.update()	update
2017-01-05 16:38:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:05 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:05 AI_Player.update()	update
2017-01-05 16:38:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:06 AI_Player.update()	Search took175ms
2017-01-05 16:38:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-05 16:38:06 AI_Player.update()		1010,	1010,	1100,	1100,	1011,	1010,	1100
2017-01-05 16:38:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-05 16:38:06 AI_Player.update()		111,	101,	11,	1101,	1010,	1100,	1011
2017-01-05 16:38:06 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 16:38:06 AI_Player.update()		1010,	1001,	110,	111,	1010,	101,	101
2017-01-05 16:38:06 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-05 16:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()	update
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()	update
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:06 AI_Player.update()	Search took140ms
2017-01-05 16:38:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-05 16:38:06 AI_Player.update()		1010,	1100,	1100,	1011,	1010,	1100,	1010
2017-01-05 16:38:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-05 16:38:06 AI_Player.update()		111,	101,	11,	1101,	1010,	1100,	1011
2017-01-05 16:38:06 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 16:38:06 AI_Player.update()		1010,	1001,	110,	111,	1010,	101,	101
2017-01-05 16:38:06 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-05 16:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()	update
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()	update
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:06 AI_Player.update()	Search took552ms
2017-01-05 16:38:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()		110,	1100,	111,	1011,	111,	11,	11
2017-01-05 16:38:06 AI_Player.update()		1010,	1100,	1100,	101,	1010,	1100,	1010
2017-01-05 16:38:06 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1101,	1011
2017-01-05 16:38:06 AI_Player.update()		111,	101,	11,	1010,	1010,	1100,	1011
2017-01-05 16:38:06 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 16:38:06 AI_Player.update()		1010,	1001,	110,	110,	1010,	101,	101
2017-01-05 16:38:06 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 16:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()	update
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:38:06 AI_Player.update()	Player b has won!
2017-01-05 16:38:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:06 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:38:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:06 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:38:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()	update
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:06 AI_Player.update()	Search took19ms
2017-01-05 16:38:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 16:38:06 AI_Player.update()		1011,	101,	101,	1001,	1010,	110,	101
2017-01-05 16:38:06 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-05 16:38:06 AI_Player.update()		1001,	1001,	101,	1010,	1100,	1010,	101
2017-01-05 16:38:06 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:06 AI_Player.update()		1100,	1010,	111,	11,	111,	101,	101
2017-01-05 16:38:06 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-05 16:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()	update
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()	update
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:06 AI_Player.update()	Search took53ms
2017-01-05 16:38:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 16:38:06 AI_Player.update()		101,	101,	1001,	1010,	110,	101,	1011
2017-01-05 16:38:06 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-05 16:38:06 AI_Player.update()		1001,	1001,	101,	1010,	1100,	1010,	101
2017-01-05 16:38:06 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:06 AI_Player.update()		1100,	1010,	111,	11,	111,	101,	101
2017-01-05 16:38:06 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-05 16:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()	update
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()	update
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:06 AI_Player.update()	Search took44ms
2017-01-05 16:38:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 16:38:06 AI_Player.update()		101,	110,	1001,	1010,	110,	101,	1011
2017-01-05 16:38:06 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-05 16:38:06 AI_Player.update()		1001,	11,	101,	1010,	1100,	1010,	101
2017-01-05 16:38:06 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:06 AI_Player.update()		1100,	1001,	111,	11,	111,	101,	101
2017-01-05 16:38:06 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-05 16:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()	update
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:06 AI_Player.update()	update
2017-01-05 16:38:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:07 AI_Player.update()	Search took151ms
2017-01-05 16:38:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:07 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 16:38:07 AI_Player.update()		101,	110,	1001,	1010,	110,	101,	1011
2017-01-05 16:38:07 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-05 16:38:07 AI_Player.update()		11,	101,	1010,	1100,	1010,	101,	1001
2017-01-05 16:38:07 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:07 AI_Player.update()		1100,	1001,	111,	11,	111,	101,	101
2017-01-05 16:38:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-05 16:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:07 AI_Player.update()	update
2017-01-05 16:38:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:07 AI_Player.update()	update
2017-01-05 16:38:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:07 AI_Player.update()	Search took83ms
2017-01-05 16:38:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:07 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:38:07 AI_Player.update()		101,	101,	1001,	1010,	110,	101,	1011
2017-01-05 16:38:07 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 16:38:07 AI_Player.update()		11,	101,	1010,	1100,	1010,	101,	1001
2017-01-05 16:38:07 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:07 AI_Player.update()		1100,	1001,	111,	11,	111,	101,	101
2017-01-05 16:38:07 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-05 16:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:07 AI_Player.update()	update
2017-01-05 16:38:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:07 AI_Player.update()	update
2017-01-05 16:38:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:07 AI_Player.update()	Search took354ms
2017-01-05 16:38:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:07 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-05 16:38:07 AI_Player.update()		101,	1010,	1001,	1010,	110,	101,	1011
2017-01-05 16:38:07 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-05 16:38:07 AI_Player.update()		11,	110,	1010,	1100,	1010,	101,	1001
2017-01-05 16:38:07 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:07 AI_Player.update()		1100,	101,	111,	11,	111,	101,	101
2017-01-05 16:38:07 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-05 16:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:07 AI_Player.update()	update
2017-01-05 16:38:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:07 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:07 AI_Player.update()	update
2017-01-05 16:38:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:08 AI_Player.update()	Search took510ms
2017-01-05 16:38:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:38:08 AI_Player.update()		101,	101,	1001,	1010,	110,	101,	1011
2017-01-05 16:38:08 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 16:38:08 AI_Player.update()		11,	101,	1010,	1100,	1010,	101,	1001
2017-01-05 16:38:08 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:08 AI_Player.update()		1100,	1001,	111,	11,	111,	101,	101
2017-01-05 16:38:08 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-05 16:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()	update
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()	update
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:08 AI_Player.update()	Search took347ms
2017-01-05 16:38:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:38:08 AI_Player.update()		101,	101,	1001,	1010,	110,	101,	1011
2017-01-05 16:38:08 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 16:38:08 AI_Player.update()		101,	1010,	1100,	1010,	101,	1001,	11
2017-01-05 16:38:08 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:08 AI_Player.update()		1100,	1001,	111,	11,	111,	101,	101
2017-01-05 16:38:08 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-05 16:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()	update
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()	update
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:08 AI_Player.update()	Search took102ms
2017-01-05 16:38:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:38:08 AI_Player.update()		101,	101,	1001,	110,	110,	101,	1011
2017-01-05 16:38:08 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-05 16:38:08 AI_Player.update()		101,	1010,	1100,	101,	101,	1001,	11
2017-01-05 16:38:08 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 16:38:08 AI_Player.update()		1100,	1001,	111,	1001,	111,	101,	101
2017-01-05 16:38:08 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-05 16:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()	update
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()	update
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:08 AI_Player.update()	Search took49ms
2017-01-05 16:38:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:38:08 AI_Player.update()		101,	101,	1001,	110,	110,	110,	1011
2017-01-05 16:38:08 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-05 16:38:08 AI_Player.update()		101,	1010,	1100,	101,	101,	101,	11
2017-01-05 16:38:08 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 16:38:08 AI_Player.update()		1100,	1001,	111,	1001,	111,	11,	101
2017-01-05 16:38:08 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 16:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()	update
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()	update
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:08 AI_Player.update()	Search took129ms
2017-01-05 16:38:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:38:08 AI_Player.update()		101,	101,	1001,	110,	110,	110,	1011
2017-01-05 16:38:08 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-05 16:38:08 AI_Player.update()		101,	1010,	1100,	101,	101,	101,	11
2017-01-05 16:38:08 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 16:38:08 AI_Player.update()		1001,	111,	1001,	111,	11,	101,	1100
2017-01-05 16:38:08 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 16:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()	update
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()	update
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:08 AI_Player.update()	Search took217ms
2017-01-05 16:38:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-05 16:38:08 AI_Player.update()		101,	101,	1001,	1010,	110,	110,	1011
2017-01-05 16:38:08 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 16:38:08 AI_Player.update()		101,	1010,	1100,	11,	101,	101,	11
2017-01-05 16:38:08 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-05 16:38:08 AI_Player.update()		1001,	111,	1001,	1010,	11,	101,	1100
2017-01-05 16:38:08 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 16:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()	update
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:08 AI_Player.update()	update
2017-01-05 16:38:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:09 AI_Player.update()	Search took96ms
2017-01-05 16:38:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-05 16:38:09 AI_Player.update()		101,	101,	1001,	1010,	110,	110,	1011
2017-01-05 16:38:09 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 16:38:09 AI_Player.update()		101,	1010,	1100,	11,	101,	101,	11
2017-01-05 16:38:09 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-05 16:38:09 AI_Player.update()		1100,	1001,	111,	1001,	1010,	11,	101
2017-01-05 16:38:09 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 16:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()	update
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()	update
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:09 AI_Player.update()	Search took337ms
2017-01-05 16:38:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:38:09 AI_Player.update()		101,	101,	1001,	101,	110,	110,	1011
2017-01-05 16:38:09 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-05 16:38:09 AI_Player.update()		101,	1010,	1100,	111,	101,	101,	11
2017-01-05 16:38:09 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:38:09 AI_Player.update()		1100,	1001,	111,	1010,	1010,	11,	101
2017-01-05 16:38:09 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-05 16:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()	update
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()	update
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:09 AI_Player.update()	Search took61ms
2017-01-05 16:38:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:38:09 AI_Player.update()		101,	101,	1001,	101,	110,	110,	1011
2017-01-05 16:38:09 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-05 16:38:09 AI_Player.update()		101,	1010,	1100,	111,	101,	101,	11
2017-01-05 16:38:09 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:38:09 AI_Player.update()		101,	1100,	1001,	111,	1010,	1010,	11
2017-01-05 16:38:09 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-05 16:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()	update
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()	update
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:09 AI_Player.update()	Search took249ms
2017-01-05 16:38:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:38:09 AI_Player.update()		101,	101,	1001,	11,	110,	110,	1011
2017-01-05 16:38:09 AI_Player.update()		1110,	110,	1110,	111,	111,	1001,	1011
2017-01-05 16:38:09 AI_Player.update()		101,	1010,	1100,	1001,	101,	101,	11
2017-01-05 16:38:09 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-05 16:38:09 AI_Player.update()		101,	1100,	1001,	110,	1010,	1010,	11
2017-01-05 16:38:09 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 16:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()	update
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()	update
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:09 AI_Player.update()	Search took41ms
2017-01-05 16:38:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-05 16:38:09 AI_Player.update()		101,	1010,	1001,	11,	110,	110,	1011
2017-01-05 16:38:09 AI_Player.update()		1110,	101,	1110,	111,	111,	1001,	1011
2017-01-05 16:38:09 AI_Player.update()		101,	110,	1100,	1001,	101,	101,	11
2017-01-05 16:38:09 AI_Player.update()		1110,	1010,	1101,	111,	1011,	101,	1011
2017-01-05 16:38:09 AI_Player.update()		101,	101,	1001,	110,	1010,	1010,	11
2017-01-05 16:38:09 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-05 16:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()	update
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:09 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:09 AI_Player.update()	update
2017-01-05 16:38:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:10 AI_Player.update()	Search took303ms
2017-01-05 16:38:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-05 16:38:10 AI_Player.update()		101,	1010,	1001,	111,	110,	110,	1011
2017-01-05 16:38:10 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:10 AI_Player.update()		101,	110,	1100,	111,	101,	101,	11
2017-01-05 16:38:10 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 16:38:10 AI_Player.update()		101,	101,	1001,	1010,	1010,	1010,	11
2017-01-05 16:38:10 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()	update
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:38:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()	update
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:10 AI_Player.update()	Search took280ms
2017-01-05 16:38:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-05 16:38:10 AI_Player.update()		101,	1001,	1001,	111,	110,	110,	1011
2017-01-05 16:38:10 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:10 AI_Player.update()		101,	101,	1100,	111,	101,	101,	11
2017-01-05 16:38:10 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-05 16:38:10 AI_Player.update()		101,	1010,	1001,	1010,	1010,	1010,	11
2017-01-05 16:38:10 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()	update
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()	update
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:10 AI_Player.update()	Search took367ms
2017-01-05 16:38:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-05 16:38:10 AI_Player.update()		101,	1001,	1001,	111,	110,	1001,	1011
2017-01-05 16:38:10 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 16:38:10 AI_Player.update()		101,	101,	1100,	111,	101,	101,	11
2017-01-05 16:38:10 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-05 16:38:10 AI_Player.update()		101,	1010,	1001,	1010,	1010,	101,	11
2017-01-05 16:38:10 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()	update
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()	update
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:10 AI_Player.update()	Search took52ms
2017-01-05 16:38:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()		110,	1100,	111,	111,	111,	110,	11
2017-01-05 16:38:10 AI_Player.update()		101,	1001,	1001,	1001,	110,	1001,	1011
2017-01-05 16:38:10 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-05 16:38:10 AI_Player.update()		101,	101,	1100,	110,	101,	101,	11
2017-01-05 16:38:10 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:38:10 AI_Player.update()		101,	1010,	1001,	101,	1010,	101,	11
2017-01-05 16:38:10 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()	update
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()	update
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:10 AI_Player.update()	Search took210ms
2017-01-05 16:38:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()		110,	1100,	111,	111,	111,	101,	11
2017-01-05 16:38:10 AI_Player.update()		101,	1001,	1001,	1001,	110,	110,	1011
2017-01-05 16:38:10 AI_Player.update()		1110,	1010,	1110,	111,	111,	1001,	1011
2017-01-05 16:38:10 AI_Player.update()		101,	101,	1100,	110,	101,	101,	11
2017-01-05 16:38:10 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:10 AI_Player.update()		101,	1010,	1001,	101,	1010,	1010,	11
2017-01-05 16:38:10 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()	update
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:38:10 AI_Player.update()	Player b has won!
2017-01-05 16:38:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:10 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:38:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:10 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:38:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()	update
2017-01-05 16:38:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:10 AI_Player.update()	Search took30ms
2017-01-05 16:38:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:10 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-05 16:38:10 AI_Player.update()		111,	1100,	11,	11,	1001,	1100,	1010
2017-01-05 16:38:10 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 16:38:10 AI_Player.update()		101,	11,	110,	1001,	101,	1001,	1100
2017-01-05 16:38:10 AI_Player.update()		1110,	101,	1101,	1011,	1011,	111,	1011
2017-01-05 16:38:10 AI_Player.update()		110,	1001,	1010,	1010,	110,	1001,	1011
2017-01-05 16:38:10 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:11 AI_Player.update()	update
2017-01-05 16:38:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:11 AI_Player.update()	update
2017-01-05 16:38:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:11 AI_Player.update()	Search took283ms
2017-01-05 16:38:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:11 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-05 16:38:11 AI_Player.update()		1100,	11,	11,	1001,	1100,	1010,	111
2017-01-05 16:38:11 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 16:38:11 AI_Player.update()		101,	11,	110,	1001,	101,	1001,	1100
2017-01-05 16:38:11 AI_Player.update()		1110,	101,	1101,	1011,	1011,	111,	1011
2017-01-05 16:38:11 AI_Player.update()		110,	1001,	1010,	1010,	110,	1001,	1011
2017-01-05 16:38:11 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:11 AI_Player.update()	update
2017-01-05 16:38:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:11 AI_Player.update()	update
2017-01-05 16:38:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:11 AI_Player.update()	Search took336ms
2017-01-05 16:38:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:11 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-05 16:38:11 AI_Player.update()		1100,	11,	11,	1010,	1100,	1010,	111
2017-01-05 16:38:11 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:11 AI_Player.update()		101,	11,	110,	1011,	101,	1001,	1100
2017-01-05 16:38:11 AI_Player.update()		1110,	101,	1101,	1010,	1011,	111,	1011
2017-01-05 16:38:11 AI_Player.update()		110,	1001,	1010,	1100,	110,	1001,	1011
2017-01-05 16:38:11 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:11 AI_Player.update()	update
2017-01-05 16:38:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:11 AI_Player.update()	update
2017-01-05 16:38:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:11 AI_Player.update()	Search took113ms
2017-01-05 16:38:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:11 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-05 16:38:11 AI_Player.update()		1100,	11,	11,	1001,	1100,	1010,	111
2017-01-05 16:38:11 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 16:38:11 AI_Player.update()		101,	11,	110,	1001,	101,	1001,	1100
2017-01-05 16:38:11 AI_Player.update()		1110,	101,	1101,	1011,	1011,	111,	1011
2017-01-05 16:38:11 AI_Player.update()		110,	1001,	1010,	1010,	110,	1001,	1011
2017-01-05 16:38:11 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:11 AI_Player.update()	update
2017-01-05 16:38:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:11 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:11 AI_Player.update()	update
2017-01-05 16:38:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:12 AI_Player.update()	Search took489ms
2017-01-05 16:38:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:12 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-05 16:38:12 AI_Player.update()		1100,	11,	11,	1001,	1100,	1010,	111
2017-01-05 16:38:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 16:38:12 AI_Player.update()		101,	11,	110,	1001,	101,	1001,	1100
2017-01-05 16:38:12 AI_Player.update()		1110,	101,	1101,	1011,	1011,	111,	1011
2017-01-05 16:38:12 AI_Player.update()		1001,	1010,	1010,	110,	1001,	1011,	110
2017-01-05 16:38:12 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:12 AI_Player.update()	update
2017-01-05 16:38:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:12 AI_Player.update()	update
2017-01-05 16:38:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:12 AI_Player.update()	Search took242ms
2017-01-05 16:38:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:12 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-05 16:38:12 AI_Player.update()		1100,	11,	11,	1010,	1100,	1010,	111
2017-01-05 16:38:12 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:12 AI_Player.update()		101,	11,	110,	1011,	101,	1001,	1100
2017-01-05 16:38:12 AI_Player.update()		1110,	101,	1101,	110,	1011,	111,	1011
2017-01-05 16:38:12 AI_Player.update()		1001,	1010,	1010,	1100,	1001,	1011,	110
2017-01-05 16:38:12 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:12 AI_Player.update()	update
2017-01-05 16:38:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:12 AI_Player.update()	update
2017-01-05 16:38:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:12 AI_Player.update()	Search took150ms
2017-01-05 16:38:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:12 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-05 16:38:12 AI_Player.update()		1100,	11,	11,	1010,	1100,	1010,	111
2017-01-05 16:38:12 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:12 AI_Player.update()		101,	11,	110,	1011,	101,	1001,	1100
2017-01-05 16:38:12 AI_Player.update()		1110,	101,	1101,	110,	1011,	111,	1011
2017-01-05 16:38:12 AI_Player.update()		1010,	1010,	1100,	1001,	1011,	110,	1001
2017-01-05 16:38:12 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:12 AI_Player.update()	update
2017-01-05 16:38:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:12 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:12 AI_Player.update()	update
2017-01-05 16:38:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:13 AI_Player.update()	Search took516ms
2017-01-05 16:38:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:13 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 16:38:13 AI_Player.update()		1100,	1001,	11,	1010,	1100,	1010,	111
2017-01-05 16:38:13 AI_Player.update()		1110,	11,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:13 AI_Player.update()		101,	101,	110,	1011,	101,	1001,	1100
2017-01-05 16:38:13 AI_Player.update()		1110,	1010,	1101,	110,	1011,	111,	1011
2017-01-05 16:38:13 AI_Player.update()		1010,	101,	1100,	1001,	1011,	110,	1001
2017-01-05 16:38:13 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:13 AI_Player.update()	update
2017-01-05 16:38:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:38:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:13 AI_Player.update()	update
2017-01-05 16:38:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:13 AI_Player.update()	Search took75ms
2017-01-05 16:38:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:13 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-05 16:38:13 AI_Player.update()		1100,	11,	11,	1010,	1100,	1010,	111
2017-01-05 16:38:13 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:13 AI_Player.update()		101,	11,	110,	1011,	101,	1001,	1100
2017-01-05 16:38:13 AI_Player.update()		1110,	101,	1101,	110,	1011,	111,	1011
2017-01-05 16:38:13 AI_Player.update()		1010,	1010,	1100,	1001,	1011,	110,	1001
2017-01-05 16:38:13 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:13 AI_Player.update()	update
2017-01-05 16:38:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:13 AI_Player.update()	update
2017-01-05 16:38:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:13 AI_Player.update()	Search took524ms
2017-01-05 16:38:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:13 AI_Player.update()		110,	1101,	111,	1001,	111,	1010,	11
2017-01-05 16:38:13 AI_Player.update()		1100,	11,	11,	1010,	1100,	1001,	111
2017-01-05 16:38:13 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:13 AI_Player.update()		101,	11,	110,	1011,	101,	111,	1100
2017-01-05 16:38:13 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-05 16:38:13 AI_Player.update()		1010,	1010,	1100,	1001,	1011,	1100,	1001
2017-01-05 16:38:13 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:13 AI_Player.update()	update
2017-01-05 16:38:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	2 5
2017-01-05 16:38:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:13 AI_Player.update()	update
2017-01-05 16:38:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:14 AI_Player.update()	Search took599ms
2017-01-05 16:38:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:14 AI_Player.update()		110,	1101,	111,	1001,	111,	1010,	11
2017-01-05 16:38:14 AI_Player.update()		1100,	11,	11,	1010,	1100,	1001,	111
2017-01-05 16:38:14 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:14 AI_Player.update()		1100,	101,	11,	110,	1011,	101,	111
2017-01-05 16:38:14 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-05 16:38:14 AI_Player.update()		1010,	1010,	1100,	1001,	1011,	1100,	1001
2017-01-05 16:38:14 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:38:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:14 GameBoard.setupTreasurePanel()	2 5
2017-01-05 16:38:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:14 AI_Player.update()	update
2017-01-05 16:38:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:14 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:38:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:14 AI_Player.update()	update
2017-01-05 16:38:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:15 AI_Player.update()	Search took1009ms
2017-01-05 16:38:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:15 AI_Player.update()		110,	1101,	111,	1001,	111,	1001,	11
2017-01-05 16:38:15 AI_Player.update()		1100,	11,	11,	1010,	1100,	1001,	111
2017-01-05 16:38:15 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-05 16:38:15 AI_Player.update()		1100,	101,	11,	110,	1011,	110,	111
2017-01-05 16:38:15 AI_Player.update()		1110,	101,	1101,	110,	1011,	1100,	1011
2017-01-05 16:38:15 AI_Player.update()		1010,	1010,	1100,	1001,	1011,	101,	1001
2017-01-05 16:38:15 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 16:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:15 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:15 AI_Player.update()	update
2017-01-05 16:38:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:15 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:38:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:15 AI_Player.update()	update
2017-01-05 16:38:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:16 AI_Player.update()	Search took683ms
2017-01-05 16:38:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:16 AI_Player.update()		110,	1101,	111,	1001,	111,	1001,	11
2017-01-05 16:38:16 AI_Player.update()		1100,	11,	11,	1010,	1100,	1001,	111
2017-01-05 16:38:16 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-05 16:38:16 AI_Player.update()		1100,	101,	11,	110,	1011,	110,	111
2017-01-05 16:38:16 AI_Player.update()		1110,	101,	1101,	110,	1011,	1100,	1011
2017-01-05 16:38:16 AI_Player.update()		1010,	1100,	1001,	1011,	101,	1001,	1010
2017-01-05 16:38:16 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 16:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:16 AI_Player.update()	update
2017-01-05 16:38:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:16 AI_Player.update()	update
2017-01-05 16:38:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:16 AI_Player.update()	Search took344ms
2017-01-05 16:38:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:16 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-05 16:38:16 AI_Player.update()		1100,	11,	11,	1001,	1100,	1001,	111
2017-01-05 16:38:16 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-05 16:38:16 AI_Player.update()		1100,	101,	11,	110,	1011,	110,	111
2017-01-05 16:38:16 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1100,	1011
2017-01-05 16:38:16 AI_Player.update()		1010,	1100,	1001,	101,	101,	1001,	1010
2017-01-05 16:38:16 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:16 AI_Player.update()	update
2017-01-05 16:38:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:16 AI_Player.update()	update
2017-01-05 16:38:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:16 AI_Player.update()	Search took562ms
2017-01-05 16:38:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:16 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-05 16:38:16 AI_Player.update()		1100,	11,	11,	1001,	1100,	1001,	111
2017-01-05 16:38:16 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-05 16:38:16 AI_Player.update()		1100,	101,	11,	110,	1011,	110,	111
2017-01-05 16:38:16 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1100,	1011
2017-01-05 16:38:16 AI_Player.update()		1100,	1001,	101,	101,	1001,	1010,	1010
2017-01-05 16:38:16 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:16 AI_Player.update()	update
2017-01-05 16:38:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:38:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:16 AI_Player.update()	update
2017-01-05 16:38:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:17 AI_Player.update()	Search took488ms
2017-01-05 16:38:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:17 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-05 16:38:17 AI_Player.update()		11,	11,	1001,	1100,	1001,	111,	1100
2017-01-05 16:38:17 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-05 16:38:17 AI_Player.update()		1100,	101,	11,	110,	1011,	110,	111
2017-01-05 16:38:17 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1100,	1011
2017-01-05 16:38:17 AI_Player.update()		1100,	1001,	101,	101,	1001,	1010,	1010
2017-01-05 16:38:17 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:17 AI_Player.update()	update
2017-01-05 16:38:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:17 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:38:17 AI_Player.update()	Player b has won!
2017-01-05 16:38:17 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:17 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:38:17 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:17 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:38:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:17 AI_Player.update()	update
2017-01-05 16:38:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:17 AI_Player.update()	Search took385ms
2017-01-05 16:38:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:17 AI_Player.update()		110,	101,	111,	111,	111,	110,	11
2017-01-05 16:38:17 AI_Player.update()		110,	1010,	110,	1001,	1100,	11,	11
2017-01-05 16:38:17 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 16:38:17 AI_Player.update()		1001,	1101,	1010,	110,	1010,	101,	110
2017-01-05 16:38:17 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:38:17 AI_Player.update()		110,	110,	1011,	1100,	1100,	1100,	1001
2017-01-05 16:38:17 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-05 16:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:17 AI_Player.update()	update
2017-01-05 16:38:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:17 AI_Player.update()	update
2017-01-05 16:38:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:17 AI_Player.update()	Search took87ms
2017-01-05 16:38:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:17 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-05 16:38:17 AI_Player.update()		110,	1010,	110,	1001,	1100,	110,	11
2017-01-05 16:38:17 AI_Player.update()		1110,	1001,	1110,	1010,	111,	11,	1011
2017-01-05 16:38:17 AI_Player.update()		1001,	1101,	1010,	110,	1010,	1010,	110
2017-01-05 16:38:17 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:17 AI_Player.update()		110,	110,	1011,	1100,	1100,	1001,	1001
2017-01-05 16:38:17 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:17 AI_Player.update()	update
2017-01-05 16:38:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:17 AI_Player.update()	update
2017-01-05 16:38:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:18 AI_Player.update()	Search took531ms
2017-01-05 16:38:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:18 AI_Player.update()		110,	1010,	111,	111,	111,	101,	11
2017-01-05 16:38:18 AI_Player.update()		110,	1001,	110,	1001,	1100,	110,	11
2017-01-05 16:38:18 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-05 16:38:18 AI_Player.update()		1001,	101,	1010,	110,	1010,	1010,	110
2017-01-05 16:38:18 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:18 AI_Player.update()		110,	11,	1011,	1100,	1100,	1001,	1001
2017-01-05 16:38:18 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:18 AI_Player.update()	update
2017-01-05 16:38:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:18 AI_Player.update()	update
2017-01-05 16:38:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:18 AI_Player.update()	Search took76ms
2017-01-05 16:38:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:18 AI_Player.update()		110,	1010,	111,	111,	111,	1100,	11
2017-01-05 16:38:18 AI_Player.update()		110,	1001,	110,	1001,	1100,	101,	11
2017-01-05 16:38:18 AI_Player.update()		1110,	1101,	1110,	1010,	111,	110,	1011
2017-01-05 16:38:18 AI_Player.update()		1001,	101,	1010,	110,	1010,	11,	110
2017-01-05 16:38:18 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 16:38:18 AI_Player.update()		110,	11,	1011,	1100,	1100,	101,	1001
2017-01-05 16:38:18 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:18 AI_Player.update()	update
2017-01-05 16:38:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:18 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:18 AI_Player.update()	update
2017-01-05 16:38:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:19 AI_Player.update()	Search took474ms
2017-01-05 16:38:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:19 AI_Player.update()		110,	1001,	111,	111,	111,	1100,	11
2017-01-05 16:38:19 AI_Player.update()		110,	1101,	110,	1001,	1100,	101,	11
2017-01-05 16:38:19 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-05 16:38:19 AI_Player.update()		1001,	110,	1010,	110,	1010,	11,	110
2017-01-05 16:38:19 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 16:38:19 AI_Player.update()		110,	101,	1011,	1100,	1100,	101,	1001
2017-01-05 16:38:19 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:19 AI_Player.update()	update
2017-01-05 16:38:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:38:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:19 AI_Player.update()	update
2017-01-05 16:38:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:19 AI_Player.update()	Search took100ms
2017-01-05 16:38:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:19 AI_Player.update()		110,	1101,	111,	111,	111,	1100,	11
2017-01-05 16:38:19 AI_Player.update()		110,	101,	110,	1001,	1100,	101,	11
2017-01-05 16:38:19 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-05 16:38:19 AI_Player.update()		1001,	11,	1010,	110,	1010,	11,	110
2017-01-05 16:38:19 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 16:38:19 AI_Player.update()		110,	1010,	1011,	1100,	1100,	101,	1001
2017-01-05 16:38:19 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:19 AI_Player.update()	update
2017-01-05 16:38:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:19 AI_Player.update()	update
2017-01-05 16:38:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:19 AI_Player.update()	Search took490ms
2017-01-05 16:38:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:19 AI_Player.update()		110,	1101,	111,	111,	111,	1001,	11
2017-01-05 16:38:19 AI_Player.update()		110,	101,	110,	1001,	1100,	1100,	11
2017-01-05 16:38:19 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:19 AI_Player.update()		1001,	11,	1010,	110,	1010,	110,	110
2017-01-05 16:38:19 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:38:19 AI_Player.update()		110,	1010,	1011,	1100,	1100,	1010,	1001
2017-01-05 16:38:19 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-05 16:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:19 AI_Player.update()	update
2017-01-05 16:38:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:19 AI_Player.update()	update
2017-01-05 16:38:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:19 AI_Player.update()	Search took129ms
2017-01-05 16:38:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:19 AI_Player.update()		110,	1101,	111,	111,	111,	1100,	11
2017-01-05 16:38:19 AI_Player.update()		110,	101,	110,	1001,	1100,	101,	11
2017-01-05 16:38:19 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-05 16:38:19 AI_Player.update()		1001,	11,	1010,	110,	1010,	11,	110
2017-01-05 16:38:19 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 16:38:19 AI_Player.update()		110,	1010,	1011,	1100,	1100,	101,	1001
2017-01-05 16:38:19 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:19 AI_Player.update()	update
2017-01-05 16:38:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:19 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:19 AI_Player.update()	update
2017-01-05 16:38:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:20 AI_Player.update()	Search took486ms
2017-01-05 16:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:20 AI_Player.update()		110,	1101,	111,	111,	111,	1001,	11
2017-01-05 16:38:20 AI_Player.update()		110,	101,	110,	1001,	1100,	1100,	11
2017-01-05 16:38:20 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:20 AI_Player.update()		1001,	11,	1010,	110,	1010,	110,	110
2017-01-05 16:38:20 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:38:20 AI_Player.update()		110,	1010,	1011,	1100,	1100,	1010,	1001
2017-01-05 16:38:20 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-05 16:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:20 AI_Player.update()	update
2017-01-05 16:38:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:38:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:20 AI_Player.update()	update
2017-01-05 16:38:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:20 AI_Player.update()	Search took393ms
2017-01-05 16:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:20 AI_Player.update()		110,	101,	111,	111,	111,	1001,	11
2017-01-05 16:38:20 AI_Player.update()		110,	110,	110,	1001,	1100,	1100,	11
2017-01-05 16:38:20 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:20 AI_Player.update()		1001,	101,	1010,	110,	1010,	110,	110
2017-01-05 16:38:20 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-05 16:38:20 AI_Player.update()		110,	1001,	1011,	1100,	1100,	1010,	1001
2017-01-05 16:38:20 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	101,	1001
2017-01-05 16:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:20 AI_Player.update()	update
2017-01-05 16:38:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:20 AI_Player.update()	update
2017-01-05 16:38:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:21 AI_Player.update()	Search took433ms
2017-01-05 16:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()		110,	101,	111,	111,	111,	1100,	11
2017-01-05 16:38:21 AI_Player.update()		110,	110,	110,	1001,	1100,	101,	11
2017-01-05 16:38:21 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-05 16:38:21 AI_Player.update()		1001,	101,	1010,	110,	1010,	11,	110
2017-01-05 16:38:21 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-05 16:38:21 AI_Player.update()		110,	1001,	1011,	1100,	1100,	101,	1001
2017-01-05 16:38:21 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:38:21 AI_Player.update()	Player a has won!
2017-01-05 16:38:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:21 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:38:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:21 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:21 AI_Player.update()	Search took70ms
2017-01-05 16:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:38:21 AI_Player.update()		1010,	1010,	1010,	101,	101,	110,	1100
2017-01-05 16:38:21 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:21 AI_Player.update()		1001,	101,	1110,	1001,	101,	1010,	101
2017-01-05 16:38:21 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-05 16:38:21 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1001,	111
2017-01-05 16:38:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:21 AI_Player.update()	Search took72ms
2017-01-05 16:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:38:21 AI_Player.update()		1010,	1010,	101,	101,	110,	1100,	1010
2017-01-05 16:38:21 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:21 AI_Player.update()		1001,	101,	1110,	1001,	101,	1010,	101
2017-01-05 16:38:21 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-05 16:38:21 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1001,	111
2017-01-05 16:38:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:21 AI_Player.update()	Search took188ms
2017-01-05 16:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-05 16:38:21 AI_Player.update()		1010,	1010,	101,	101,	110,	101,	1010
2017-01-05 16:38:21 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-05 16:38:21 AI_Player.update()		1001,	101,	1110,	1001,	101,	101,	101
2017-01-05 16:38:21 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:38:21 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1101,	111
2017-01-05 16:38:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:21 AI_Player.update()	Search took49ms
2017-01-05 16:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:38:21 AI_Player.update()		1010,	1010,	101,	101,	110,	1100,	1010
2017-01-05 16:38:21 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:21 AI_Player.update()		1001,	101,	1110,	1001,	101,	1010,	101
2017-01-05 16:38:21 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-05 16:38:21 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1001,	111
2017-01-05 16:38:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:21 AI_Player.update()	Search took193ms
2017-01-05 16:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:38:21 AI_Player.update()		1010,	1010,	101,	1010,	110,	1100,	1010
2017-01-05 16:38:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 16:38:21 AI_Player.update()		1001,	101,	1110,	1010,	101,	1010,	101
2017-01-05 16:38:21 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-05 16:38:21 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1001,	111
2017-01-05 16:38:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:21 AI_Player.update()	Search took256ms
2017-01-05 16:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:38:21 AI_Player.update()		1010,	1010,	101,	1010,	110,	1100,	1010
2017-01-05 16:38:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 16:38:21 AI_Player.update()		101,	1001,	101,	1110,	1010,	101,	1010
2017-01-05 16:38:21 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-05 16:38:21 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1001,	111
2017-01-05 16:38:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-05 16:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:21 AI_Player.update()	update
2017-01-05 16:38:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:22 AI_Player.update()	Search took461ms
2017-01-05 16:38:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:22 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:38:22 AI_Player.update()		1010,	1010,	101,	1001,	110,	1100,	1010
2017-01-05 16:38:22 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 16:38:22 AI_Player.update()		101,	1001,	101,	1010,	1010,	101,	1010
2017-01-05 16:38:22 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-05 16:38:22 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1001,	111
2017-01-05 16:38:22 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:22 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:22 AI_Player.update()	update
2017-01-05 16:38:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:22 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:22 AI_Player.update()	update
2017-01-05 16:38:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:23 AI_Player.update()	Search took637ms
2017-01-05 16:38:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:23 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 16:38:23 AI_Player.update()		1010,	1010,	101,	1001,	110,	101,	1010
2017-01-05 16:38:23 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 16:38:23 AI_Player.update()		101,	1001,	101,	1010,	1010,	1101,	1010
2017-01-05 16:38:23 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:38:23 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1101,	111
2017-01-05 16:38:23 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:23 AI_Player.update()	update
2017-01-05 16:38:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:23 AI_Player.update()	update
2017-01-05 16:38:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:23 AI_Player.update()	Search took683ms
2017-01-05 16:38:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:23 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 16:38:23 AI_Player.update()		1010,	101,	101,	1001,	110,	101,	1010
2017-01-05 16:38:23 AI_Player.update()		1110,	1001,	1110,	1110,	111,	101,	1011
2017-01-05 16:38:23 AI_Player.update()		101,	1001,	101,	1010,	1010,	1101,	1010
2017-01-05 16:38:23 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:38:23 AI_Player.update()		1010,	1100,	1100,	1010,	1100,	1101,	111
2017-01-05 16:38:23 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 16:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:23 AI_Player.update()	update
2017-01-05 16:38:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:23 AI_Player.update()	update
2017-01-05 16:38:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:24 AI_Player.update()	Search took824ms
2017-01-05 16:38:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:24 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 16:38:24 AI_Player.update()		1010,	1010,	101,	1001,	110,	101,	1010
2017-01-05 16:38:24 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 16:38:24 AI_Player.update()		101,	1001,	101,	1010,	1010,	1101,	1010
2017-01-05 16:38:24 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:38:24 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1101,	111
2017-01-05 16:38:24 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:24 AI_Player.update()	update
2017-01-05 16:38:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:24 AI_Player.update()	update
2017-01-05 16:38:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:25 AI_Player.update()	Search took744ms
2017-01-05 16:38:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:25 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 16:38:25 AI_Player.update()		1010,	1010,	101,	1001,	110,	101,	1010
2017-01-05 16:38:25 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 16:38:25 AI_Player.update()		1001,	101,	1010,	1010,	1101,	1010,	101
2017-01-05 16:38:25 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:38:25 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1101,	111
2017-01-05 16:38:25 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:25 AI_Player.update()	update
2017-01-05 16:38:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:25 AI_Player.update()	update
2017-01-05 16:38:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:25 AI_Player.update()	Search took204ms
2017-01-05 16:38:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:25 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 16:38:25 AI_Player.update()		1010,	1010,	101,	1001,	110,	101,	1010
2017-01-05 16:38:25 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 16:38:25 AI_Player.update()		101,	1001,	101,	1010,	1010,	1101,	1010
2017-01-05 16:38:25 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:38:25 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1101,	111
2017-01-05 16:38:25 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:25 AI_Player.update()	update
2017-01-05 16:38:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:25 AI_Player.update()	update
2017-01-05 16:38:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:25 AI_Player.update()	Search took19ms
2017-01-05 16:38:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:25 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 16:38:25 AI_Player.update()		1010,	1010,	1010,	101,	1001,	110,	101
2017-01-05 16:38:25 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 16:38:25 AI_Player.update()		101,	1001,	101,	1010,	1010,	1101,	1010
2017-01-05 16:38:25 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:38:25 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1101,	111
2017-01-05 16:38:25 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:25 AI_Player.update()	update
2017-01-05 16:38:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:25 AI_Player.update()	update
2017-01-05 16:38:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:26 AI_Player.update()	Search took648ms
2017-01-05 16:38:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:26 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 16:38:26 AI_Player.update()		1010,	1010,	1010,	101,	1001,	110,	101
2017-01-05 16:38:26 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 16:38:26 AI_Player.update()		1010,	101,	1001,	101,	1010,	1010,	1101
2017-01-05 16:38:26 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:38:26 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1101,	111
2017-01-05 16:38:26 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:26 AI_Player.update()	update
2017-01-05 16:38:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:26 AI_Player.update()	update
2017-01-05 16:38:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:26 AI_Player.update()	Search took216ms
2017-01-05 16:38:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:26 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-05 16:38:26 AI_Player.update()		1010,	1010,	1010,	1010,	1001,	110,	101
2017-01-05 16:38:26 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 16:38:26 AI_Player.update()		1010,	101,	1001,	1110,	1010,	1010,	1101
2017-01-05 16:38:26 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1001,	1011
2017-01-05 16:38:26 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1101,	111
2017-01-05 16:38:26 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-05 16:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:26 AI_Player.update()	update
2017-01-05 16:38:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:26 AI_Player.update()	update
2017-01-05 16:38:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:26 AI_Player.update()	Search took249ms
2017-01-05 16:38:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:26 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-05 16:38:26 AI_Player.update()		1010,	1010,	1010,	1010,	1001,	110,	101
2017-01-05 16:38:26 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:38:26 AI_Player.update()		1010,	101,	1001,	1110,	1010,	1010,	1101
2017-01-05 16:38:26 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:38:26 AI_Player.update()		1010,	1001,	1100,	1010,	1100,	1101,	111
2017-01-05 16:38:26 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-05 16:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:26 AI_Player.update()	update
2017-01-05 16:38:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:38:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:26 AI_Player.update()	update
2017-01-05 16:38:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:27 AI_Player.update()	Search took1165ms
2017-01-05 16:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:27 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 16:38:27 AI_Player.update()		1010,	1010,	1010,	101,	1001,	110,	101
2017-01-05 16:38:27 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 16:38:27 AI_Player.update()		1010,	101,	1001,	101,	1010,	1010,	1101
2017-01-05 16:38:27 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:38:27 AI_Player.update()		1010,	1001,	1100,	1010,	1100,	1101,	111
2017-01-05 16:38:27 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 16:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:27 AI_Player.update()	update
2017-01-05 16:38:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:27 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:38:27 AI_Player.update()	Player a has won!
2017-01-05 16:38:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:27 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:38:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:27 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:27 AI_Player.update()	update
2017-01-05 16:38:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:27 AI_Player.update()	Search took14ms
2017-01-05 16:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:27 AI_Player.update()		110,	1100,	111,	1001,	111,	110,	11
2017-01-05 16:38:27 AI_Player.update()		1100,	1100,	11,	1001,	101,	1011,	1100
2017-01-05 16:38:27 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-05 16:38:27 AI_Player.update()		1101,	1001,	1101,	110,	101,	110,	1100
2017-01-05 16:38:27 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-05 16:38:27 AI_Player.update()		1010,	1100,	1100,	101,	11,	1100,	1001
2017-01-05 16:38:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	111,	1001
2017-01-05 16:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:27 AI_Player.update()	update
2017-01-05 16:38:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:27 AI_Player.update()	update
2017-01-05 16:38:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:28 AI_Player.update()	Search took145ms
2017-01-05 16:38:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:28 AI_Player.update()		110,	1100,	111,	1001,	111,	110,	11
2017-01-05 16:38:28 AI_Player.update()		1100,	1100,	11,	11,	101,	1011,	1100
2017-01-05 16:38:28 AI_Player.update()		1110,	1010,	1110,	110,	111,	1101,	1011
2017-01-05 16:38:28 AI_Player.update()		1101,	1001,	1101,	1001,	101,	110,	1100
2017-01-05 16:38:28 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:38:28 AI_Player.update()		1010,	1100,	1100,	11,	11,	1100,	1001
2017-01-05 16:38:28 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:28 AI_Player.update()	update
2017-01-05 16:38:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:28 AI_Player.update()	update
2017-01-05 16:38:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:28 AI_Player.update()	Search took22ms
2017-01-05 16:38:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:28 AI_Player.update()		110,	1100,	111,	1001,	111,	110,	11
2017-01-05 16:38:28 AI_Player.update()		1100,	11,	11,	101,	1011,	1100,	1100
2017-01-05 16:38:28 AI_Player.update()		1110,	1010,	1110,	110,	111,	1101,	1011
2017-01-05 16:38:28 AI_Player.update()		1101,	1001,	1101,	1001,	101,	110,	1100
2017-01-05 16:38:28 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:38:28 AI_Player.update()		1010,	1100,	1100,	11,	11,	1100,	1001
2017-01-05 16:38:28 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:28 AI_Player.update()	update
2017-01-05 16:38:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:28 AI_Player.update()	update
2017-01-05 16:38:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:28 AI_Player.update()	Search took218ms
2017-01-05 16:38:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:28 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-05 16:38:28 AI_Player.update()		1100,	1010,	11,	101,	1011,	1100,	1100
2017-01-05 16:38:28 AI_Player.update()		1110,	1001,	1110,	110,	111,	1101,	1011
2017-01-05 16:38:28 AI_Player.update()		1101,	101,	1101,	1001,	101,	110,	1100
2017-01-05 16:38:28 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 16:38:28 AI_Player.update()		1010,	1010,	1100,	11,	11,	1100,	1001
2017-01-05 16:38:28 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:28 AI_Player.update()	update
2017-01-05 16:38:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:38:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:28 AI_Player.update()	update
2017-01-05 16:38:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:28 AI_Player.update()	Search took332ms
2017-01-05 16:38:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:28 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-05 16:38:28 AI_Player.update()		1100,	1100,	1010,	11,	101,	1011,	1100
2017-01-05 16:38:28 AI_Player.update()		1110,	1001,	1110,	110,	111,	1101,	1011
2017-01-05 16:38:28 AI_Player.update()		1101,	101,	1101,	1001,	101,	110,	1100
2017-01-05 16:38:28 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 16:38:28 AI_Player.update()		1010,	1010,	1100,	11,	11,	1100,	1001
2017-01-05 16:38:28 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:28 AI_Player.update()	update
2017-01-05 16:38:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:28 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:28 AI_Player.update()	update
2017-01-05 16:38:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:29 AI_Player.update()	Search took406ms
2017-01-05 16:38:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:29 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 16:38:29 AI_Player.update()		1100,	1100,	1010,	110,	101,	1011,	1100
2017-01-05 16:38:29 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-05 16:38:29 AI_Player.update()		1101,	101,	1101,	101,	101,	110,	1100
2017-01-05 16:38:29 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-05 16:38:29 AI_Player.update()		1010,	1010,	1100,	1001,	11,	1100,	1001
2017-01-05 16:38:29 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:29 AI_Player.update()	update
2017-01-05 16:38:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:29 AI_Player.update()	update
2017-01-05 16:38:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:29 AI_Player.update()	Search took437ms
2017-01-05 16:38:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:29 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-05 16:38:29 AI_Player.update()		1100,	11,	1010,	110,	101,	1011,	1100
2017-01-05 16:38:29 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1101,	1011
2017-01-05 16:38:29 AI_Player.update()		1101,	1001,	1101,	101,	101,	110,	1100
2017-01-05 16:38:29 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 16:38:29 AI_Player.update()		1010,	1100,	1100,	1001,	11,	1100,	1001
2017-01-05 16:38:29 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:29 AI_Player.update()	update
2017-01-05 16:38:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:29 AI_Player.update()	update
2017-01-05 16:38:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:29 AI_Player.update()	Search took420ms
2017-01-05 16:38:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:29 AI_Player.update()		110,	1100,	111,	1001,	111,	110,	11
2017-01-05 16:38:29 AI_Player.update()		1100,	11,	1010,	11,	101,	1011,	1100
2017-01-05 16:38:29 AI_Player.update()		1110,	1100,	1110,	110,	111,	1101,	1011
2017-01-05 16:38:29 AI_Player.update()		1101,	1001,	1101,	1001,	101,	110,	1100
2017-01-05 16:38:29 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:38:29 AI_Player.update()		1010,	1100,	1100,	11,	11,	1100,	1001
2017-01-05 16:38:29 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:29 AI_Player.update()	update
2017-01-05 16:38:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:38:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:29 AI_Player.update()	update
2017-01-05 16:38:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:30 AI_Player.update()	Search took116ms
2017-01-05 16:38:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-05 16:38:30 AI_Player.update()		1100,	11,	1010,	110,	101,	1011,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1101,	1011
2017-01-05 16:38:30 AI_Player.update()		1101,	1001,	1101,	101,	101,	110,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 16:38:30 AI_Player.update()		1010,	1100,	1100,	1001,	11,	1100,	1001
2017-01-05 16:38:30 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()	update
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()	update
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:30 AI_Player.update()	Search took37ms
2017-01-05 16:38:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()		110,	1100,	111,	1001,	111,	110,	11
2017-01-05 16:38:30 AI_Player.update()		1100,	11,	1010,	11,	101,	1011,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	1100,	1110,	110,	111,	1101,	1011
2017-01-05 16:38:30 AI_Player.update()		1101,	1001,	1101,	1001,	101,	110,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:38:30 AI_Player.update()		1010,	1100,	1100,	11,	11,	1100,	1001
2017-01-05 16:38:30 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()	update
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	2 5
2017-01-05 16:38:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()	update
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:30 AI_Player.update()	Search took161ms
2017-01-05 16:38:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-05 16:38:30 AI_Player.update()		1100,	1100,	1010,	11,	101,	1011,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	1001,	1110,	110,	111,	1101,	1011
2017-01-05 16:38:30 AI_Player.update()		1101,	101,	1101,	1001,	101,	110,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 16:38:30 AI_Player.update()		1010,	1010,	1100,	11,	11,	1100,	1001
2017-01-05 16:38:30 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	2 5
2017-01-05 16:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()	update
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:38:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()	update
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:30 AI_Player.update()	Search took72ms
2017-01-05 16:38:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 16:38:30 AI_Player.update()		1100,	1100,	1010,	110,	101,	1011,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-05 16:38:30 AI_Player.update()		1101,	101,	1101,	101,	101,	110,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-05 16:38:30 AI_Player.update()		1010,	1010,	1100,	1001,	11,	1100,	1001
2017-01-05 16:38:30 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()	update
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()	update
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:30 AI_Player.update()	Search took531ms
2017-01-05 16:38:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-05 16:38:30 AI_Player.update()		1100,	1100,	1010,	1001,	101,	1011,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-05 16:38:30 AI_Player.update()		1101,	101,	1101,	11,	101,	110,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	11,	1011
2017-01-05 16:38:30 AI_Player.update()		1010,	1010,	1100,	1001,	11,	1100,	1001
2017-01-05 16:38:30 AI_Player.update()		1100,	1100,	1101,	11,	1101,	111,	1001
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()	update
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()	update
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:30 AI_Player.update()	Search took28ms
2017-01-05 16:38:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-05 16:38:30 AI_Player.update()		1100,	1001,	1010,	1001,	101,	1011,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	101,	1110,	101,	111,	1101,	1011
2017-01-05 16:38:30 AI_Player.update()		1101,	1100,	1101,	11,	101,	110,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 16:38:30 AI_Player.update()		1010,	1100,	1100,	1001,	11,	1100,	1001
2017-01-05 16:38:30 AI_Player.update()		1100,	11,	1101,	11,	1101,	111,	1001
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()	update
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:30 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()	update
2017-01-05 16:38:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:30 AI_Player.update()	Search took97ms
2017-01-05 16:38:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:30 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-05 16:38:30 AI_Player.update()		1100,	1100,	1010,	1001,	101,	1011,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-05 16:38:30 AI_Player.update()		1101,	101,	1101,	11,	101,	110,	1100
2017-01-05 16:38:30 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	11,	1011
2017-01-05 16:38:30 AI_Player.update()		1010,	1010,	1100,	1001,	11,	1100,	1001
2017-01-05 16:38:30 AI_Player.update()		1100,	1100,	1101,	11,	1101,	111,	1001
2017-01-05 16:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:31 AI_Player.update()	update
2017-01-05 16:38:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:31 AI_Player.update()	update
2017-01-05 16:38:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:31 AI_Player.update()	Search took24ms
2017-01-05 16:38:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:31 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 16:38:31 AI_Player.update()		1100,	1100,	1010,	110,	101,	1011,	1100
2017-01-05 16:38:31 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-05 16:38:31 AI_Player.update()		1101,	101,	1101,	101,	101,	110,	1100
2017-01-05 16:38:31 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-05 16:38:31 AI_Player.update()		1010,	1010,	1100,	1001,	11,	1100,	1001
2017-01-05 16:38:31 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:31 AI_Player.update()	update
2017-01-05 16:38:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:31 AI_Player.update()	update
2017-01-05 16:38:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:31 AI_Player.update()	Search took475ms
2017-01-05 16:38:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:31 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-05 16:38:31 AI_Player.update()		1100,	1100,	1010,	1001,	101,	1011,	1100
2017-01-05 16:38:31 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-05 16:38:31 AI_Player.update()		1101,	101,	1101,	11,	101,	110,	1100
2017-01-05 16:38:31 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	11,	1011
2017-01-05 16:38:31 AI_Player.update()		1010,	1010,	1100,	1001,	11,	1100,	1001
2017-01-05 16:38:31 AI_Player.update()		1100,	1100,	1101,	11,	1101,	111,	1001
2017-01-05 16:38:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:31 AI_Player.update()	update
2017-01-05 16:38:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:31 AI_Player.update()	update
2017-01-05 16:38:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:31 AI_Player.update()	Search took43ms
2017-01-05 16:38:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:31 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 16:38:31 AI_Player.update()		1100,	1100,	1010,	110,	101,	1011,	1100
2017-01-05 16:38:31 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-05 16:38:31 AI_Player.update()		1101,	101,	1101,	101,	101,	110,	1100
2017-01-05 16:38:31 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-05 16:38:31 AI_Player.update()		1010,	1010,	1100,	1001,	11,	1100,	1001
2017-01-05 16:38:31 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:31 AI_Player.update()	update
2017-01-05 16:38:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:31 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:31 AI_Player.update()	update
2017-01-05 16:38:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:32 AI_Player.update()	Search took569ms
2017-01-05 16:38:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()		110,	11,	111,	11,	111,	1011,	11
2017-01-05 16:38:32 AI_Player.update()		1100,	1100,	1010,	110,	101,	1101,	1100
2017-01-05 16:38:32 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:38:32 AI_Player.update()		1101,	101,	1101,	101,	101,	11,	1100
2017-01-05 16:38:32 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-05 16:38:32 AI_Player.update()		1010,	1010,	1100,	1001,	11,	111,	1001
2017-01-05 16:38:32 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:32 AI_Player.update()	Search took96ms
2017-01-05 16:38:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()		110,	1100,	111,	11,	111,	1011,	11
2017-01-05 16:38:32 AI_Player.update()		1100,	11,	1010,	110,	101,	1101,	1100
2017-01-05 16:38:32 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-05 16:38:32 AI_Player.update()		1101,	1001,	1101,	101,	101,	11,	1100
2017-01-05 16:38:32 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-05 16:38:32 AI_Player.update()		1010,	1100,	1100,	1001,	11,	111,	1001
2017-01-05 16:38:32 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	110,	1001
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:32 AI_Player.update()	Search took308ms
2017-01-05 16:38:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()		110,	1100,	111,	11,	111,	1101,	11
2017-01-05 16:38:32 AI_Player.update()		1100,	11,	1010,	110,	101,	110,	1100
2017-01-05 16:38:32 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-05 16:38:32 AI_Player.update()		1101,	1001,	1101,	101,	101,	1100,	1100
2017-01-05 16:38:32 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-05 16:38:32 AI_Player.update()		1010,	1100,	1100,	1001,	11,	110,	1001
2017-01-05 16:38:32 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:32 AI_Player.update()	Search took87ms
2017-01-05 16:38:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()		110,	1100,	111,	11,	111,	1101,	11
2017-01-05 16:38:32 AI_Player.update()		1100,	1100,	11,	1010,	110,	101,	110
2017-01-05 16:38:32 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-05 16:38:32 AI_Player.update()		1101,	1001,	1101,	101,	101,	1100,	1100
2017-01-05 16:38:32 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-05 16:38:32 AI_Player.update()		1010,	1100,	1100,	1001,	11,	110,	1001
2017-01-05 16:38:32 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:38:32 AI_Player.update()	Player b has won!
2017-01-05 16:38:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:32 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:38:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:32 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:38:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:32 AI_Player.update()	Search took47ms
2017-01-05 16:38:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-05 16:38:32 AI_Player.update()		101,	11,	1001,	1010,	1010,	1101,	1101
2017-01-05 16:38:32 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1011,	1011
2017-01-05 16:38:32 AI_Player.update()		11,	111,	101,	1010,	1010,	1010,	1011
2017-01-05 16:38:32 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:32 AI_Player.update()		1101,	110,	11,	1011,	1001,	1010,	1001
2017-01-05 16:38:32 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:32 AI_Player.update()	Search took130ms
2017-01-05 16:38:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-05 16:38:32 AI_Player.update()		1101,	101,	11,	1001,	1010,	1010,	1101
2017-01-05 16:38:32 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1011,	1011
2017-01-05 16:38:32 AI_Player.update()		11,	111,	101,	1010,	1010,	1010,	1011
2017-01-05 16:38:32 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:32 AI_Player.update()		1101,	110,	11,	1011,	1001,	1010,	1001
2017-01-05 16:38:32 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:32 AI_Player.update()	Search took94ms
2017-01-05 16:38:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:38:32 AI_Player.update()		1101,	1001,	11,	1001,	1010,	1010,	1101
2017-01-05 16:38:32 AI_Player.update()		1110,	111,	1110,	1010,	111,	1011,	1011
2017-01-05 16:38:32 AI_Player.update()		11,	11,	101,	1010,	1010,	1010,	1011
2017-01-05 16:38:32 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:32 AI_Player.update()		1101,	1010,	11,	1011,	1001,	1010,	1001
2017-01-05 16:38:32 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:32 AI_Player.update()	update
2017-01-05 16:38:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:33 AI_Player.update()	Search took140ms
2017-01-05 16:38:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:38:33 AI_Player.update()		1101,	1101,	1001,	11,	1001,	1010,	1010
2017-01-05 16:38:33 AI_Player.update()		1110,	111,	1110,	1010,	111,	1011,	1011
2017-01-05 16:38:33 AI_Player.update()		11,	11,	101,	1010,	1010,	1010,	1011
2017-01-05 16:38:33 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:33 AI_Player.update()		1101,	1010,	11,	1011,	1001,	1010,	1001
2017-01-05 16:38:33 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()	update
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()	update
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:33 AI_Player.update()	Search took92ms
2017-01-05 16:38:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:38:33 AI_Player.update()		1101,	1101,	1001,	11,	1001,	1010,	1010
2017-01-05 16:38:33 AI_Player.update()		1110,	111,	1110,	1010,	111,	1011,	1011
2017-01-05 16:38:33 AI_Player.update()		11,	101,	1010,	1010,	1010,	1011,	11
2017-01-05 16:38:33 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:33 AI_Player.update()		1101,	1010,	11,	1011,	1001,	1010,	1001
2017-01-05 16:38:33 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()	update
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()	update
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:33 AI_Player.update()	Search took136ms
2017-01-05 16:38:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-05 16:38:33 AI_Player.update()		1101,	111,	1001,	11,	1001,	1010,	1010
2017-01-05 16:38:33 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-05 16:38:33 AI_Player.update()		11,	110,	1010,	1010,	1010,	1011,	11
2017-01-05 16:38:33 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:33 AI_Player.update()		1101,	1001,	11,	1011,	1001,	1010,	1001
2017-01-05 16:38:33 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()	update
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()	update
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:33 AI_Player.update()	Search took107ms
2017-01-05 16:38:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-05 16:38:33 AI_Player.update()		1101,	111,	1001,	101,	1001,	1010,	1010
2017-01-05 16:38:33 AI_Player.update()		1110,	101,	1110,	11,	111,	1011,	1011
2017-01-05 16:38:33 AI_Player.update()		11,	110,	1010,	1010,	1010,	1011,	11
2017-01-05 16:38:33 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:33 AI_Player.update()		1101,	1001,	11,	1010,	1001,	1010,	1001
2017-01-05 16:38:33 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-05 16:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()	update
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()	update
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:33 AI_Player.update()	Search took153ms
2017-01-05 16:38:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-05 16:38:33 AI_Player.update()		1101,	111,	1001,	101,	1001,	1010,	1010
2017-01-05 16:38:33 AI_Player.update()		1110,	101,	1110,	11,	111,	1011,	1011
2017-01-05 16:38:33 AI_Player.update()		11,	11,	110,	1010,	1010,	1010,	1011
2017-01-05 16:38:33 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:33 AI_Player.update()		1101,	1001,	11,	1010,	1001,	1010,	1001
2017-01-05 16:38:33 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-05 16:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()	update
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()	update
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:33 AI_Player.update()	Search took250ms
2017-01-05 16:38:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-05 16:38:33 AI_Player.update()		1101,	111,	1001,	101,	1001,	1010,	1010
2017-01-05 16:38:33 AI_Player.update()		1110,	101,	1110,	11,	111,	1011,	1011
2017-01-05 16:38:33 AI_Player.update()		11,	11,	110,	1010,	1010,	1010,	1011
2017-01-05 16:38:33 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:33 AI_Player.update()		1001,	1101,	1001,	11,	1010,	1001,	1010
2017-01-05 16:38:33 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-05 16:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()	update
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:33 AI_Player.update()	update
2017-01-05 16:38:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:34 AI_Player.update()	Search took264ms
2017-01-05 16:38:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:34 AI_Player.update()		110,	1101,	111,	1001,	111,	1010,	11
2017-01-05 16:38:34 AI_Player.update()		1101,	111,	1001,	101,	1001,	1011,	1010
2017-01-05 16:38:34 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 16:38:34 AI_Player.update()		11,	11,	110,	1010,	1010,	101,	1011
2017-01-05 16:38:34 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:38:34 AI_Player.update()		1001,	1101,	1001,	11,	1010,	1001,	1010
2017-01-05 16:38:34 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-05 16:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:34 AI_Player.update()	update
2017-01-05 16:38:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:34 AI_Player.update()	update
2017-01-05 16:38:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:34 AI_Player.update()	Search took292ms
2017-01-05 16:38:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:34 AI_Player.update()		110,	1101,	111,	1011,	111,	1010,	11
2017-01-05 16:38:34 AI_Player.update()		1101,	111,	1001,	1001,	1001,	1011,	1010
2017-01-05 16:38:34 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 16:38:34 AI_Player.update()		11,	11,	110,	11,	1010,	101,	1011
2017-01-05 16:38:34 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:38:34 AI_Player.update()		1001,	1101,	1001,	1010,	1010,	1001,	1010
2017-01-05 16:38:34 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:34 AI_Player.update()	update
2017-01-05 16:38:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:34 AI_Player.update()	update
2017-01-05 16:38:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:34 AI_Player.update()	Search took355ms
2017-01-05 16:38:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:34 AI_Player.update()		110,	1101,	111,	1001,	111,	1010,	11
2017-01-05 16:38:34 AI_Player.update()		1101,	111,	1001,	101,	1001,	1011,	1010
2017-01-05 16:38:34 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 16:38:34 AI_Player.update()		11,	11,	110,	1010,	1010,	101,	1011
2017-01-05 16:38:34 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:38:34 AI_Player.update()		1001,	1101,	1001,	11,	1010,	1001,	1010
2017-01-05 16:38:34 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-05 16:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:34 AI_Player.update()	update
2017-01-05 16:38:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:34 AI_Player.update()	update
2017-01-05 16:38:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:34 AI_Player.update()	Search took122ms
2017-01-05 16:38:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:34 AI_Player.update()		110,	1101,	111,	1011,	111,	1010,	11
2017-01-05 16:38:34 AI_Player.update()		1101,	111,	1001,	1001,	1001,	1011,	1010
2017-01-05 16:38:34 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 16:38:34 AI_Player.update()		11,	11,	110,	11,	1010,	101,	1011
2017-01-05 16:38:34 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:38:34 AI_Player.update()		1001,	1101,	1001,	1010,	1010,	1001,	1010
2017-01-05 16:38:34 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 16:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:34 AI_Player.update()	update
2017-01-05 16:38:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:34 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:34 AI_Player.update()	update
2017-01-05 16:38:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:35 AI_Player.update()	Search took324ms
2017-01-05 16:38:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:35 AI_Player.update()		110,	1101,	111,	1011,	111,	101,	11
2017-01-05 16:38:35 AI_Player.update()		1101,	111,	1001,	1001,	1001,	1010,	1010
2017-01-05 16:38:35 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-05 16:38:35 AI_Player.update()		11,	11,	110,	11,	1010,	1010,	1011
2017-01-05 16:38:35 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:35 AI_Player.update()		1001,	1101,	1001,	1010,	1010,	1001,	1010
2017-01-05 16:38:35 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 16:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:35 AI_Player.update()	update
2017-01-05 16:38:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:35 AI_Player.update()	update
2017-01-05 16:38:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:35 AI_Player.update()	Search took278ms
2017-01-05 16:38:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:35 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-05 16:38:35 AI_Player.update()		1101,	111,	1001,	1011,	1001,	1010,	1010
2017-01-05 16:38:35 AI_Player.update()		1110,	101,	1110,	1001,	111,	1011,	1011
2017-01-05 16:38:35 AI_Player.update()		11,	11,	110,	101,	1010,	1010,	1011
2017-01-05 16:38:35 AI_Player.update()		1110,	1010,	1101,	11,	1011,	101,	1011
2017-01-05 16:38:35 AI_Player.update()		1001,	1101,	1001,	1010,	1010,	1001,	1010
2017-01-05 16:38:35 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:35 AI_Player.update()	update
2017-01-05 16:38:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:35 AI_Player.update()	update
2017-01-05 16:38:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:35 AI_Player.update()	Search took189ms
2017-01-05 16:38:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:35 AI_Player.update()		110,	111,	111,	11,	111,	101,	11
2017-01-05 16:38:35 AI_Player.update()		1101,	101,	1001,	1011,	1001,	1010,	1010
2017-01-05 16:38:35 AI_Player.update()		1110,	11,	1110,	1001,	111,	1011,	1011
2017-01-05 16:38:35 AI_Player.update()		11,	1010,	110,	101,	1010,	1010,	1011
2017-01-05 16:38:35 AI_Player.update()		1110,	1101,	1101,	11,	1011,	101,	1011
2017-01-05 16:38:35 AI_Player.update()		1001,	101,	1001,	1010,	1010,	1001,	1010
2017-01-05 16:38:35 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:35 AI_Player.update()	update
2017-01-05 16:38:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:35 AI_Player.update()	update
2017-01-05 16:38:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:35 AI_Player.update()	Search took281ms
2017-01-05 16:38:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:35 AI_Player.update()		110,	111,	111,	11,	111,	101,	11
2017-01-05 16:38:35 AI_Player.update()		1010,	1101,	101,	1001,	1011,	1001,	1010
2017-01-05 16:38:35 AI_Player.update()		1110,	11,	1110,	1001,	111,	1011,	1011
2017-01-05 16:38:35 AI_Player.update()		11,	1010,	110,	101,	1010,	1010,	1011
2017-01-05 16:38:35 AI_Player.update()		1110,	1101,	1101,	11,	1011,	101,	1011
2017-01-05 16:38:35 AI_Player.update()		1001,	101,	1001,	1010,	1010,	1001,	1010
2017-01-05 16:38:35 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:35 AI_Player.update()	update
2017-01-05 16:38:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:35 AI_Player.update()	update
2017-01-05 16:38:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:36 AI_Player.update()	Search took334ms
2017-01-05 16:38:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:36 AI_Player.update()		110,	111,	111,	11,	111,	101,	11
2017-01-05 16:38:36 AI_Player.update()		1010,	1101,	101,	1001,	1011,	1001,	1010
2017-01-05 16:38:36 AI_Player.update()		1110,	11,	1110,	1001,	111,	1011,	1011
2017-01-05 16:38:36 AI_Player.update()		11,	1010,	110,	101,	1010,	1010,	1011
2017-01-05 16:38:36 AI_Player.update()		1110,	1101,	1101,	11,	1011,	101,	1011
2017-01-05 16:38:36 AI_Player.update()		1010,	1001,	101,	1001,	1010,	1010,	1001
2017-01-05 16:38:36 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:36 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:36 AI_Player.update()	update
2017-01-05 16:38:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:36 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:36 AI_Player.update()	update
2017-01-05 16:38:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:37 AI_Player.update()	Search took798ms
2017-01-05 16:38:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:37 AI_Player.update()		110,	111,	111,	11,	111,	101,	11
2017-01-05 16:38:37 AI_Player.update()		1101,	101,	1001,	1011,	1001,	1010,	1010
2017-01-05 16:38:37 AI_Player.update()		1110,	11,	1110,	1001,	111,	1011,	1011
2017-01-05 16:38:37 AI_Player.update()		11,	1010,	110,	101,	1010,	1010,	1011
2017-01-05 16:38:37 AI_Player.update()		1110,	1101,	1101,	11,	1011,	101,	1011
2017-01-05 16:38:37 AI_Player.update()		1010,	1001,	101,	1001,	1010,	1010,	1001
2017-01-05 16:38:37 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:37 AI_Player.update()	update
2017-01-05 16:38:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:37 AI_Player.update()	update
2017-01-05 16:38:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:37 AI_Player.update()	Search took494ms
2017-01-05 16:38:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:37 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-05 16:38:37 AI_Player.update()		1101,	101,	1001,	11,	1001,	1010,	1010
2017-01-05 16:38:37 AI_Player.update()		1110,	11,	1110,	1011,	111,	1011,	1011
2017-01-05 16:38:37 AI_Player.update()		11,	1010,	110,	1001,	1010,	1010,	1011
2017-01-05 16:38:37 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:37 AI_Player.update()		1010,	1001,	101,	11,	1010,	1010,	1001
2017-01-05 16:38:37 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:38:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:37 AI_Player.update()	update
2017-01-05 16:38:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:37 AI_Player.update()	update
2017-01-05 16:38:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:37 AI_Player.update()	Search took215ms
2017-01-05 16:38:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:37 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 16:38:37 AI_Player.update()		1101,	11,	1001,	11,	1001,	1010,	1010
2017-01-05 16:38:37 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1011,	1011
2017-01-05 16:38:37 AI_Player.update()		11,	1101,	110,	1001,	1010,	1010,	1011
2017-01-05 16:38:37 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:37 AI_Player.update()		1010,	1101,	101,	11,	1010,	1010,	1001
2017-01-05 16:38:37 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:38:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:37 AI_Player.update()	update
2017-01-05 16:38:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:37 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:37 AI_Player.update()	update
2017-01-05 16:38:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:38 AI_Player.update()	Search took399ms
2017-01-05 16:38:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:38 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 16:38:38 AI_Player.update()		11,	1001,	11,	1001,	1010,	1010,	1101
2017-01-05 16:38:38 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1011,	1011
2017-01-05 16:38:38 AI_Player.update()		11,	1101,	110,	1001,	1010,	1010,	1011
2017-01-05 16:38:38 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:38 AI_Player.update()		1010,	1101,	101,	11,	1010,	1010,	1001
2017-01-05 16:38:38 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:38:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:38 AI_Player.update()	update
2017-01-05 16:38:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:38 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:38:38 AI_Player.update()	Player b has won!
2017-01-05 16:38:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:38 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:38:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:38 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:38:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:38 AI_Player.update()	update
2017-01-05 16:38:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:38 AI_Player.update()	Search took395ms
2017-01-05 16:38:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:38 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-05 16:38:38 AI_Player.update()		1001,	1100,	101,	11,	1010,	1010,	11
2017-01-05 16:38:38 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1101,	1011
2017-01-05 16:38:38 AI_Player.update()		1001,	1010,	1110,	101,	1110,	101,	1011
2017-01-05 16:38:38 AI_Player.update()		1110,	101,	1101,	1010,	1011,	111,	1011
2017-01-05 16:38:38 AI_Player.update()		101,	11,	110,	1010,	111,	110,	110
2017-01-05 16:38:38 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:38:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:38 AI_Player.update()	update
2017-01-05 16:38:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:38 AI_Player.update()	update
2017-01-05 16:38:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:38 AI_Player.update()	Search took190ms
2017-01-05 16:38:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:38 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-05 16:38:38 AI_Player.update()		1100,	101,	11,	1010,	1010,	11,	1001
2017-01-05 16:38:38 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1101,	1011
2017-01-05 16:38:38 AI_Player.update()		1001,	1010,	1110,	101,	1110,	101,	1011
2017-01-05 16:38:38 AI_Player.update()		1110,	101,	1101,	1010,	1011,	111,	1011
2017-01-05 16:38:38 AI_Player.update()		101,	11,	110,	1010,	111,	110,	110
2017-01-05 16:38:38 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:38:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:38 AI_Player.update()	update
2017-01-05 16:38:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:38 AI_Player.update()	update
2017-01-05 16:38:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:39 AI_Player.update()	Search took688ms
2017-01-05 16:38:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:39 AI_Player.update()		110,	11,	111,	111,	111,	11,	11
2017-01-05 16:38:39 AI_Player.update()		1100,	101,	11,	1010,	1010,	1101,	1001
2017-01-05 16:38:39 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 16:38:39 AI_Player.update()		1001,	1010,	1110,	101,	1110,	111,	1011
2017-01-05 16:38:39 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-05 16:38:39 AI_Player.update()		101,	11,	110,	1010,	111,	1011,	110
2017-01-05 16:38:39 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 16:38:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:39 AI_Player.update()	update
2017-01-05 16:38:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:39 AI_Player.update()	update
2017-01-05 16:38:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:40 AI_Player.update()	Search took967ms
2017-01-05 16:38:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:40 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 16:38:40 AI_Player.update()		1100,	101,	11,	1100,	1010,	1101,	1001
2017-01-05 16:38:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:38:40 AI_Player.update()		1001,	1010,	1110,	1010,	1110,	111,	1011
2017-01-05 16:38:40 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-05 16:38:40 AI_Player.update()		101,	11,	110,	1010,	111,	1011,	110
2017-01-05 16:38:40 AI_Player.update()		1100,	1001,	1101,	111,	1101,	101,	1001
2017-01-05 16:38:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:40 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:40 AI_Player.update()	update
2017-01-05 16:38:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:40 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:40 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:40 AI_Player.update()	update
2017-01-05 16:38:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:41 AI_Player.update()	Search took893ms
2017-01-05 16:38:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:41 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 16:38:41 AI_Player.update()		1100,	1010,	11,	1100,	1010,	1101,	1001
2017-01-05 16:38:41 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:38:41 AI_Player.update()		1001,	101,	1110,	1010,	1110,	111,	1011
2017-01-05 16:38:41 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-05 16:38:41 AI_Player.update()		101,	1001,	110,	1010,	111,	1011,	110
2017-01-05 16:38:41 AI_Player.update()		1100,	11,	1101,	111,	1101,	101,	1001
2017-01-05 16:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:41 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:41 AI_Player.update()	update
2017-01-05 16:38:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:41 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:41 AI_Player.update()	update
2017-01-05 16:38:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:42 AI_Player.update()	Search took731ms
2017-01-05 16:38:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:42 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 16:38:42 AI_Player.update()		1100,	1010,	11,	1100,	1010,	1101,	1001
2017-01-05 16:38:42 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 16:38:42 AI_Player.update()		1001,	11,	1110,	1010,	1110,	111,	1011
2017-01-05 16:38:42 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	110,	1011
2017-01-05 16:38:42 AI_Player.update()		101,	11,	110,	1010,	111,	1011,	110
2017-01-05 16:38:42 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-05 16:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:42 AI_Player.update()	update
2017-01-05 16:38:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:42 AI_Player.update()	update
2017-01-05 16:38:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:42 AI_Player.update()	Search took715ms
2017-01-05 16:38:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:42 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-05 16:38:42 AI_Player.update()		1100,	1010,	11,	1100,	1010,	101,	1001
2017-01-05 16:38:42 AI_Player.update()		1110,	101,	1110,	101,	111,	111,	1011
2017-01-05 16:38:42 AI_Player.update()		1001,	11,	1110,	1010,	1110,	110,	1011
2017-01-05 16:38:42 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1011,	1011
2017-01-05 16:38:42 AI_Player.update()		101,	11,	110,	1010,	111,	101,	110
2017-01-05 16:38:42 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-05 16:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:42 AI_Player.update()	update
2017-01-05 16:38:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:42 AI_Player.update()	update
2017-01-05 16:38:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:43 AI_Player.update()	Search took562ms
2017-01-05 16:38:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:43 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-05 16:38:43 AI_Player.update()		1100,	1010,	11,	1100,	1010,	101,	1001
2017-01-05 16:38:43 AI_Player.update()		1110,	101,	1110,	101,	111,	111,	1011
2017-01-05 16:38:43 AI_Player.update()		1011,	1001,	11,	1110,	1010,	1110,	110
2017-01-05 16:38:43 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1011,	1011
2017-01-05 16:38:43 AI_Player.update()		101,	11,	110,	1010,	111,	101,	110
2017-01-05 16:38:43 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-05 16:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:43 AI_Player.update()	update
2017-01-05 16:38:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:43 AI_Player.update()	update
2017-01-05 16:38:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:43 AI_Player.update()	Search took369ms
2017-01-05 16:38:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:43 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-05 16:38:43 AI_Player.update()		1001,	1100,	1010,	11,	1100,	1010,	101
2017-01-05 16:38:43 AI_Player.update()		1110,	101,	1110,	101,	111,	111,	1011
2017-01-05 16:38:43 AI_Player.update()		1011,	1001,	11,	1110,	1010,	1110,	110
2017-01-05 16:38:43 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1011,	1011
2017-01-05 16:38:43 AI_Player.update()		101,	11,	110,	1010,	111,	101,	110
2017-01-05 16:38:43 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-05 16:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:43 AI_Player.update()	update
2017-01-05 16:38:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:43 AI_Player.update()	update
2017-01-05 16:38:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:43 AI_Player.update()	Search took59ms
2017-01-05 16:38:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:43 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-05 16:38:43 AI_Player.update()		1100,	1010,	11,	1100,	1010,	101,	1001
2017-01-05 16:38:43 AI_Player.update()		1110,	101,	1110,	101,	111,	111,	1011
2017-01-05 16:38:43 AI_Player.update()		1011,	1001,	11,	1110,	1010,	1110,	110
2017-01-05 16:38:43 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1011,	1011
2017-01-05 16:38:43 AI_Player.update()		101,	11,	110,	1010,	111,	101,	110
2017-01-05 16:38:43 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-05 16:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:43 AI_Player.update()	update
2017-01-05 16:38:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:43 AI_Player.update()	update
2017-01-05 16:38:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:43 AI_Player.update()	Search took104ms
2017-01-05 16:38:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:43 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-05 16:38:43 AI_Player.update()		1100,	1010,	11,	1100,	1010,	101,	1001
2017-01-05 16:38:43 AI_Player.update()		1110,	1010,	1110,	101,	111,	111,	1011
2017-01-05 16:38:43 AI_Player.update()		1011,	101,	11,	1110,	1010,	1110,	110
2017-01-05 16:38:43 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1011,	1011
2017-01-05 16:38:43 AI_Player.update()		101,	1001,	110,	1010,	111,	101,	110
2017-01-05 16:38:43 AI_Player.update()		1100,	11,	1101,	111,	1101,	11,	1001
2017-01-05 16:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:43 AI_Player.update()	update
2017-01-05 16:38:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:43 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:38:43 AI_Player.update()	Player a has won!
2017-01-05 16:38:43 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:43 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:38:43 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:43 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:38:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:43 AI_Player.update()	update
2017-01-05 16:38:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:44 AI_Player.update()	Search took176ms
2017-01-05 16:38:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-05 16:38:44 AI_Player.update()		101,	11,	1010,	1010,	1001,	101,	1010
2017-01-05 16:38:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-05 16:38:44 AI_Player.update()		1010,	101,	1001,	1001,	101,	1001,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:38:44 AI_Player.update()		11,	1001,	1010,	101,	1011,	1001,	110
2017-01-05 16:38:44 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:44 AI_Player.update()	Search took108ms
2017-01-05 16:38:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-05 16:38:44 AI_Player.update()		101,	1100,	1010,	1010,	1001,	101,	1010
2017-01-05 16:38:44 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 16:38:44 AI_Player.update()		1010,	11,	1001,	1001,	101,	1001,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:38:44 AI_Player.update()		11,	1001,	1010,	101,	1011,	1001,	110
2017-01-05 16:38:44 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:44 AI_Player.update()	Search took106ms
2017-01-05 16:38:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()		110,	11,	111,	1010,	111,	1010,	11
2017-01-05 16:38:44 AI_Player.update()		101,	1100,	1010,	101,	1001,	101,	1010
2017-01-05 16:38:44 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-05 16:38:44 AI_Player.update()		1010,	11,	1001,	1001,	101,	1001,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-05 16:38:44 AI_Player.update()		11,	1001,	1010,	1001,	1011,	1001,	110
2017-01-05 16:38:44 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1010,	1001
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:44 AI_Player.update()	Search took100ms
2017-01-05 16:38:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()		110,	11,	111,	1010,	111,	1010,	11
2017-01-05 16:38:44 AI_Player.update()		1010,	101,	1100,	1010,	101,	1001,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-05 16:38:44 AI_Player.update()		1010,	11,	1001,	1001,	101,	1001,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-05 16:38:44 AI_Player.update()		11,	1001,	1010,	1001,	1011,	1001,	110
2017-01-05 16:38:44 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1010,	1001
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:44 AI_Player.update()	Search took15ms
2017-01-05 16:38:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-05 16:38:44 AI_Player.update()		1010,	101,	1100,	1010,	101,	1001,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-05 16:38:44 AI_Player.update()		1010,	11,	1001,	1001,	101,	1001,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:38:44 AI_Player.update()		11,	1001,	1010,	101,	1011,	1001,	110
2017-01-05 16:38:44 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:44 AI_Player.update()	Search took121ms
2017-01-05 16:38:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:38:44 AI_Player.update()		1010,	101,	1100,	1010,	101,	1001,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-05 16:38:44 AI_Player.update()		1010,	1001,	1001,	1001,	101,	1001,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:38:44 AI_Player.update()		11,	1101,	1010,	101,	1011,	1001,	110
2017-01-05 16:38:44 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:44 AI_Player.update()	Search took67ms
2017-01-05 16:38:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-05 16:38:44 AI_Player.update()		1010,	101,	1100,	1010,	101,	1001,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-05 16:38:44 AI_Player.update()		1010,	1001,	1001,	1001,	101,	1001,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-05 16:38:44 AI_Player.update()		11,	1101,	1010,	1001,	1011,	1001,	110
2017-01-05 16:38:44 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:44 AI_Player.update()	Search took172ms
2017-01-05 16:38:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-05 16:38:44 AI_Player.update()		1010,	101,	1100,	1001,	101,	1001,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-05 16:38:44 AI_Player.update()		1010,	1001,	1001,	101,	101,	1001,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:38:44 AI_Player.update()		11,	1101,	1010,	110,	1011,	1001,	110
2017-01-05 16:38:44 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:44 AI_Player.update()	Search took88ms
2017-01-05 16:38:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 16:38:44 AI_Player.update()		1010,	101,	1100,	1001,	101,	110,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	11,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:44 AI_Player.update()		1010,	1001,	1001,	101,	101,	1110,	101
2017-01-05 16:38:44 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:38:44 AI_Player.update()		11,	1101,	1010,	110,	1011,	1010,	110
2017-01-05 16:38:44 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:44 AI_Player.update()	update
2017-01-05 16:38:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:45 AI_Player.update()	Search took196ms
2017-01-05 16:38:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 16:38:45 AI_Player.update()		101,	1100,	1001,	101,	110,	101,	1010
2017-01-05 16:38:45 AI_Player.update()		1110,	11,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:45 AI_Player.update()		1010,	1001,	1001,	101,	101,	1110,	101
2017-01-05 16:38:45 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:38:45 AI_Player.update()		11,	1101,	1010,	110,	1011,	1010,	110
2017-01-05 16:38:45 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()	update
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:38:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()	update
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:45 AI_Player.update()	Search took90ms
2017-01-05 16:38:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 16:38:45 AI_Player.update()		101,	1100,	1001,	101,	110,	101,	1010
2017-01-05 16:38:45 AI_Player.update()		1110,	11,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:45 AI_Player.update()		1001,	1001,	101,	101,	1110,	101,	1010
2017-01-05 16:38:45 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:38:45 AI_Player.update()		11,	1101,	1010,	110,	1011,	1010,	110
2017-01-05 16:38:45 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:38:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()	update
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()	update
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:45 AI_Player.update()	Search took163ms
2017-01-05 16:38:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-05 16:38:45 AI_Player.update()		101,	11,	1001,	101,	110,	101,	1010
2017-01-05 16:38:45 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:45 AI_Player.update()		1001,	1001,	101,	101,	1110,	101,	1010
2017-01-05 16:38:45 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:38:45 AI_Player.update()		11,	11,	1010,	110,	1011,	1010,	110
2017-01-05 16:38:45 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()	update
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()	update
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:45 AI_Player.update()	Search took267ms
2017-01-05 16:38:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-05 16:38:45 AI_Player.update()		101,	1001,	1001,	101,	110,	101,	1010
2017-01-05 16:38:45 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-05 16:38:45 AI_Player.update()		1001,	1101,	101,	101,	1110,	101,	1010
2017-01-05 16:38:45 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:38:45 AI_Player.update()		11,	101,	1010,	110,	1011,	1010,	110
2017-01-05 16:38:45 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()	update
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()	update
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:45 AI_Player.update()	Search took157ms
2017-01-05 16:38:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 16:38:45 AI_Player.update()		101,	1001,	1001,	101,	110,	1001,	1010
2017-01-05 16:38:45 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-05 16:38:45 AI_Player.update()		1001,	1101,	101,	101,	1110,	1001,	1010
2017-01-05 16:38:45 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:38:45 AI_Player.update()		11,	101,	1010,	110,	1011,	1010,	110
2017-01-05 16:38:45 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()	update
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:38:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:45 AI_Player.update()	update
2017-01-05 16:38:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:46 AI_Player.update()	Search took426ms
2017-01-05 16:38:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:46 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 16:38:46 AI_Player.update()		101,	1001,	1001,	101,	110,	1001,	1010
2017-01-05 16:38:46 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-05 16:38:46 AI_Player.update()		1001,	1101,	101,	101,	1110,	1001,	1010
2017-01-05 16:38:46 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:38:46 AI_Player.update()		101,	1010,	110,	1011,	1010,	110,	11
2017-01-05 16:38:46 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:38:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:46 AI_Player.update()	update
2017-01-05 16:38:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:46 AI_Player.update()	update
2017-01-05 16:38:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:46 AI_Player.update()	Search took467ms
2017-01-05 16:38:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:46 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-05 16:38:46 AI_Player.update()		101,	1001,	1001,	101,	110,	1001,	1010
2017-01-05 16:38:46 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-05 16:38:46 AI_Player.update()		1001,	11,	101,	101,	1110,	1001,	1010
2017-01-05 16:38:46 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:38:46 AI_Player.update()		101,	1100,	110,	1011,	1010,	110,	11
2017-01-05 16:38:46 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:46 AI_Player.update()	update
2017-01-05 16:38:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:38:46 AI_Player.update()	Player b has won!
2017-01-05 16:38:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:46 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:38:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:46 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:38:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:46 AI_Player.update()	update
2017-01-05 16:38:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:46 AI_Player.update()	Search took10ms
2017-01-05 16:38:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:46 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-05 16:38:46 AI_Player.update()		1011,	101,	1001,	110,	101,	101,	1010
2017-01-05 16:38:46 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-05 16:38:46 AI_Player.update()		1001,	101,	1101,	11,	101,	101,	111
2017-01-05 16:38:46 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 16:38:46 AI_Player.update()		101,	1001,	1011,	11,	1011,	111,	1010
2017-01-05 16:38:46 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:46 AI_Player.update()	update
2017-01-05 16:38:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:46 AI_Player.update()	update
2017-01-05 16:38:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:46 AI_Player.update()	Search took72ms
2017-01-05 16:38:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:46 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-05 16:38:46 AI_Player.update()		1011,	101,	1001,	110,	101,	101,	1010
2017-01-05 16:38:46 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-05 16:38:46 AI_Player.update()		101,	1101,	11,	101,	101,	111,	1001
2017-01-05 16:38:46 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 16:38:46 AI_Player.update()		101,	1001,	1011,	11,	1011,	111,	1010
2017-01-05 16:38:46 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:46 AI_Player.update()	update
2017-01-05 16:38:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:46 AI_Player.update()	update
2017-01-05 16:38:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:47 AI_Player.update()	Search took192ms
2017-01-05 16:38:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-05 16:38:47 AI_Player.update()		1011,	101,	1001,	110,	101,	1010,	1010
2017-01-05 16:38:47 AI_Player.update()		1110,	1010,	1110,	1100,	111,	111,	1011
2017-01-05 16:38:47 AI_Player.update()		101,	1101,	11,	101,	101,	1001,	1001
2017-01-05 16:38:47 AI_Player.update()		1110,	1010,	1101,	101,	1011,	111,	1011
2017-01-05 16:38:47 AI_Player.update()		101,	1001,	1011,	11,	1011,	1001,	1010
2017-01-05 16:38:47 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()	update
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()	update
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:47 AI_Player.update()	Search took340ms
2017-01-05 16:38:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-05 16:38:47 AI_Player.update()		1011,	101,	1001,	110,	101,	101,	1010
2017-01-05 16:38:47 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-05 16:38:47 AI_Player.update()		101,	1101,	11,	101,	101,	111,	1001
2017-01-05 16:38:47 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 16:38:47 AI_Player.update()		101,	1001,	1011,	11,	1011,	111,	1010
2017-01-05 16:38:47 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()	update
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()	update
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:47 AI_Player.update()	Search took46ms
2017-01-05 16:38:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-05 16:38:47 AI_Player.update()		1011,	101,	1001,	1100,	101,	101,	1010
2017-01-05 16:38:47 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-05 16:38:47 AI_Player.update()		101,	1101,	11,	101,	101,	111,	1001
2017-01-05 16:38:47 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:38:47 AI_Player.update()		101,	1001,	1011,	1010,	1011,	111,	1010
2017-01-05 16:38:47 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:38:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()	update
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()	update
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:47 AI_Player.update()	Search took191ms
2017-01-05 16:38:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-05 16:38:47 AI_Player.update()		1011,	101,	1001,	1100,	101,	1010,	1010
2017-01-05 16:38:47 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:38:47 AI_Player.update()		101,	1101,	11,	101,	101,	1010,	1001
2017-01-05 16:38:47 AI_Player.update()		1110,	1010,	1101,	11,	1011,	111,	1011
2017-01-05 16:38:47 AI_Player.update()		101,	1001,	1011,	1010,	1011,	1001,	1010
2017-01-05 16:38:47 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()	update
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()	update
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:47 AI_Player.update()	Search took121ms
2017-01-05 16:38:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()		110,	101,	111,	110,	111,	1001,	11
2017-01-05 16:38:47 AI_Player.update()		1011,	1010,	1001,	1100,	101,	1010,	1010
2017-01-05 16:38:47 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-05 16:38:47 AI_Player.update()		101,	1010,	11,	101,	101,	1010,	1001
2017-01-05 16:38:47 AI_Player.update()		1110,	1001,	1101,	11,	1011,	111,	1011
2017-01-05 16:38:47 AI_Player.update()		101,	1001,	1011,	1010,	1011,	1001,	1010
2017-01-05 16:38:47 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()	update
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:47 AI_Player.update()	update
2017-01-05 16:38:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:48 AI_Player.update()	Search took292ms
2017-01-05 16:38:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:48 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-05 16:38:48 AI_Player.update()		1011,	1101,	1001,	1100,	101,	1010,	1010
2017-01-05 16:38:48 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:38:48 AI_Player.update()		101,	1001,	11,	101,	101,	1010,	1001
2017-01-05 16:38:48 AI_Player.update()		1110,	1001,	1101,	11,	1011,	111,	1011
2017-01-05 16:38:48 AI_Player.update()		101,	1010,	1011,	1010,	1011,	1001,	1010
2017-01-05 16:38:48 AI_Player.update()		1100,	101,	1101,	1001,	1101,	111,	1001
2017-01-05 16:38:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:48 AI_Player.update()	update
2017-01-05 16:38:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:48 AI_Player.update()	update
2017-01-05 16:38:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:48 AI_Player.update()	Search took128ms
2017-01-05 16:38:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:48 AI_Player.update()		110,	1010,	111,	1100,	111,	1001,	11
2017-01-05 16:38:48 AI_Player.update()		1011,	1101,	1001,	101,	101,	1010,	1010
2017-01-05 16:38:48 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:38:48 AI_Player.update()		101,	1001,	11,	11,	101,	1010,	1001
2017-01-05 16:38:48 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	111,	1011
2017-01-05 16:38:48 AI_Player.update()		101,	1010,	1011,	1001,	1011,	1001,	1010
2017-01-05 16:38:48 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-05 16:38:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:48 AI_Player.update()	update
2017-01-05 16:38:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:48 AI_Player.update()	update
2017-01-05 16:38:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:48 AI_Player.update()	Search took285ms
2017-01-05 16:38:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:48 AI_Player.update()		110,	1101,	111,	1100,	111,	1001,	11
2017-01-05 16:38:48 AI_Player.update()		1011,	1010,	1001,	101,	101,	1010,	1010
2017-01-05 16:38:48 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 16:38:48 AI_Player.update()		101,	1001,	11,	11,	101,	1010,	1001
2017-01-05 16:38:48 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	111,	1011
2017-01-05 16:38:48 AI_Player.update()		101,	101,	1011,	1001,	1011,	1001,	1010
2017-01-05 16:38:48 AI_Player.update()		1100,	1010,	1101,	110,	1101,	111,	1001
2017-01-05 16:38:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:48 AI_Player.update()	update
2017-01-05 16:38:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:48 AI_Player.update()	update
2017-01-05 16:38:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:48 AI_Player.update()	Search took271ms
2017-01-05 16:38:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:48 AI_Player.update()		110,	1101,	111,	101,	111,	1001,	11
2017-01-05 16:38:48 AI_Player.update()		1011,	1010,	1001,	101,	101,	1010,	1010
2017-01-05 16:38:48 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 16:38:48 AI_Player.update()		101,	1001,	11,	1010,	101,	1010,	1001
2017-01-05 16:38:48 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	111,	1011
2017-01-05 16:38:48 AI_Player.update()		101,	101,	1011,	110,	1011,	1001,	1010
2017-01-05 16:38:48 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-05 16:38:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:48 AI_Player.update()	update
2017-01-05 16:38:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:48 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:48 AI_Player.update()	update
2017-01-05 16:38:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:49 AI_Player.update()	Search took315ms
2017-01-05 16:38:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:49 AI_Player.update()		110,	1101,	111,	101,	111,	1001,	11
2017-01-05 16:38:49 AI_Player.update()		1011,	1010,	1001,	101,	101,	1010,	1010
2017-01-05 16:38:49 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 16:38:49 AI_Player.update()		101,	1001,	11,	1010,	101,	1010,	1001
2017-01-05 16:38:49 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	111,	1011
2017-01-05 16:38:49 AI_Player.update()		1010,	101,	101,	1011,	110,	1011,	1001
2017-01-05 16:38:49 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-05 16:38:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:49 AI_Player.update()	update
2017-01-05 16:38:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:38:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:49 AI_Player.update()	update
2017-01-05 16:38:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:49 AI_Player.update()	Search took367ms
2017-01-05 16:38:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:49 AI_Player.update()		110,	1101,	111,	101,	111,	1001,	11
2017-01-05 16:38:49 AI_Player.update()		1011,	1010,	1001,	11,	101,	1010,	1010
2017-01-05 16:38:49 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:49 AI_Player.update()		101,	1001,	11,	1001,	101,	1010,	1001
2017-01-05 16:38:49 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	111,	1011
2017-01-05 16:38:49 AI_Player.update()		1010,	101,	101,	1100,	110,	1011,	1001
2017-01-05 16:38:49 AI_Player.update()		1100,	1010,	1101,	101,	1101,	111,	1001
2017-01-05 16:38:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:38:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:49 AI_Player.update()	update
2017-01-05 16:38:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:38:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:49 AI_Player.update()	update
2017-01-05 16:38:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:49 AI_Player.update()	Search took146ms
2017-01-05 16:38:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:49 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-05 16:38:49 AI_Player.update()		1011,	1001,	1001,	11,	101,	1010,	1010
2017-01-05 16:38:49 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 16:38:49 AI_Player.update()		101,	1010,	11,	1001,	101,	1010,	1001
2017-01-05 16:38:49 AI_Player.update()		1110,	101,	1101,	1011,	1011,	111,	1011
2017-01-05 16:38:49 AI_Player.update()		1010,	1010,	101,	1100,	110,	1011,	1001
2017-01-05 16:38:49 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-05 16:38:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:38:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:49 AI_Player.update()	update
2017-01-05 16:38:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:49 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:38:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:49 AI_Player.update()	update
2017-01-05 16:38:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:50 AI_Player.update()	Search took716ms
2017-01-05 16:38:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:50 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-05 16:38:50 AI_Player.update()		1011,	1001,	1001,	101,	101,	1010,	1010
2017-01-05 16:38:50 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 16:38:50 AI_Player.update()		101,	1010,	11,	1010,	101,	1010,	1001
2017-01-05 16:38:50 AI_Player.update()		1110,	101,	1101,	1001,	1011,	111,	1011
2017-01-05 16:38:50 AI_Player.update()		1010,	1010,	101,	1011,	110,	1011,	1001
2017-01-05 16:38:50 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-05 16:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:38:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:50 AI_Player.update()	update
2017-01-05 16:38:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:50 AI_Player.update()	update
2017-01-05 16:38:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:50 AI_Player.update()	Search took413ms
2017-01-05 16:38:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:50 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:38:50 AI_Player.update()		1011,	1001,	1001,	101,	101,	101,	1010
2017-01-05 16:38:50 AI_Player.update()		1110,	1001,	1110,	11,	111,	1010,	1011
2017-01-05 16:38:50 AI_Player.update()		101,	1010,	11,	1010,	101,	111,	1001
2017-01-05 16:38:50 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1011,	1011
2017-01-05 16:38:50 AI_Player.update()		1010,	1010,	101,	1011,	110,	111,	1001
2017-01-05 16:38:50 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:50 AI_Player.update()	update
2017-01-05 16:38:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:50 AI_Player.update()	update
2017-01-05 16:38:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:50 AI_Player.update()	Search took260ms
2017-01-05 16:38:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:50 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:38:50 AI_Player.update()		1011,	1001,	1001,	11,	101,	101,	1010
2017-01-05 16:38:50 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 16:38:50 AI_Player.update()		101,	1010,	11,	1001,	101,	111,	1001
2017-01-05 16:38:50 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1011,	1011
2017-01-05 16:38:50 AI_Player.update()		1010,	1010,	101,	1100,	110,	111,	1001
2017-01-05 16:38:50 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-05 16:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:51 AI_Player.update()	Search took198ms
2017-01-05 16:38:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-05 16:38:51 AI_Player.update()		1011,	1001,	1001,	11,	101,	101,	1010
2017-01-05 16:38:51 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 16:38:51 AI_Player.update()		101,	101,	11,	1001,	101,	111,	1001
2017-01-05 16:38:51 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1011,	1011
2017-01-05 16:38:51 AI_Player.update()		1010,	1101,	101,	1100,	110,	111,	1001
2017-01-05 16:38:51 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:51 AI_Player.update()	Search took29ms
2017-01-05 16:38:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-05 16:38:51 AI_Player.update()		1011,	1001,	1001,	1010,	101,	101,	1010
2017-01-05 16:38:51 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:38:51 AI_Player.update()		101,	101,	11,	1011,	101,	111,	1001
2017-01-05 16:38:51 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:38:51 AI_Player.update()		1010,	1101,	101,	101,	110,	111,	1001
2017-01-05 16:38:51 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:51 AI_Player.update()	Search took149ms
2017-01-05 16:38:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-05 16:38:51 AI_Player.update()		1010,	1011,	1001,	1001,	1010,	101,	101
2017-01-05 16:38:51 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:38:51 AI_Player.update()		101,	101,	11,	1011,	101,	111,	1001
2017-01-05 16:38:51 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:38:51 AI_Player.update()		1010,	1101,	101,	101,	110,	111,	1001
2017-01-05 16:38:51 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:51 AI_Player.update()	Search took47ms
2017-01-05 16:38:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-05 16:38:51 AI_Player.update()		1011,	1001,	1001,	1010,	101,	101,	1010
2017-01-05 16:38:51 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:38:51 AI_Player.update()		101,	101,	11,	1011,	101,	111,	1001
2017-01-05 16:38:51 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:38:51 AI_Player.update()		1010,	1101,	101,	101,	110,	111,	1001
2017-01-05 16:38:51 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:51 AI_Player.update()	Search took40ms
2017-01-05 16:38:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-05 16:38:51 AI_Player.update()		1011,	1010,	1001,	1010,	101,	101,	1010
2017-01-05 16:38:51 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:38:51 AI_Player.update()		101,	1010,	11,	1011,	101,	111,	1001
2017-01-05 16:38:51 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:38:51 AI_Player.update()		1010,	1010,	101,	101,	110,	111,	1001
2017-01-05 16:38:51 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:51 AI_Player.update()	Search took168ms
2017-01-05 16:38:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-05 16:38:51 AI_Player.update()		1011,	1010,	1001,	1010,	101,	101,	1010
2017-01-05 16:38:51 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:38:51 AI_Player.update()		1001,	101,	1010,	11,	1011,	101,	111
2017-01-05 16:38:51 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:38:51 AI_Player.update()		1010,	1010,	101,	101,	110,	111,	1001
2017-01-05 16:38:51 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:51 AI_Player.update()	Search took55ms
2017-01-05 16:38:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-05 16:38:51 AI_Player.update()		1010,	1001,	1010,	101,	101,	1010,	1011
2017-01-05 16:38:51 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:38:51 AI_Player.update()		1001,	101,	1010,	11,	1011,	101,	111
2017-01-05 16:38:51 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:38:51 AI_Player.update()		1010,	1010,	101,	101,	110,	111,	1001
2017-01-05 16:38:51 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:38:51 AI_Player.update()	Player b has won!
2017-01-05 16:38:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:38:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:51 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:38:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:51 AI_Player.update()	Search took44ms
2017-01-05 16:38:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()		110,	1010,	111,	1100,	111,	1001,	11
2017-01-05 16:38:51 AI_Player.update()		1011,	101,	111,	1010,	11,	110,	101
2017-01-05 16:38:51 AI_Player.update()		1110,	1100,	1110,	11,	111,	1001,	1011
2017-01-05 16:38:51 AI_Player.update()		111,	110,	101,	110,	1110,	1001,	111
2017-01-05 16:38:51 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:38:51 AI_Player.update()		101,	1001,	101,	1010,	110,	101,	11
2017-01-05 16:38:51 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:51 AI_Player.update()	Search took22ms
2017-01-05 16:38:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-05 16:38:51 AI_Player.update()		1011,	101,	111,	1010,	11,	1001,	101
2017-01-05 16:38:51 AI_Player.update()		1110,	1100,	1110,	11,	111,	1001,	1011
2017-01-05 16:38:51 AI_Player.update()		111,	110,	101,	110,	1110,	1010,	111
2017-01-05 16:38:51 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:51 AI_Player.update()		101,	1001,	101,	1010,	110,	101,	11
2017-01-05 16:38:51 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:51 AI_Player.update()	Search took26ms
2017-01-05 16:38:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 16:38:51 AI_Player.update()		1011,	1100,	111,	1010,	11,	1001,	101
2017-01-05 16:38:51 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-05 16:38:51 AI_Player.update()		111,	1001,	101,	110,	1110,	1010,	111
2017-01-05 16:38:51 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:51 AI_Player.update()		101,	1001,	101,	1010,	110,	101,	11
2017-01-05 16:38:51 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:51 AI_Player.update()	Search took41ms
2017-01-05 16:38:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-05 16:38:51 AI_Player.update()		1011,	1100,	111,	1010,	11,	110,	101
2017-01-05 16:38:51 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-05 16:38:51 AI_Player.update()		111,	1001,	101,	110,	1110,	1001,	111
2017-01-05 16:38:51 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:38:51 AI_Player.update()		101,	1001,	101,	1010,	110,	101,	11
2017-01-05 16:38:51 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:51 AI_Player.update()	Search took52ms
2017-01-05 16:38:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 16:38:51 AI_Player.update()		1011,	1100,	111,	11,	11,	110,	101
2017-01-05 16:38:51 AI_Player.update()		1110,	110,	1110,	110,	111,	1001,	1011
2017-01-05 16:38:51 AI_Player.update()		111,	1001,	101,	1010,	1110,	1001,	111
2017-01-05 16:38:51 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:38:51 AI_Player.update()		101,	1001,	101,	1001,	110,	101,	11
2017-01-05 16:38:51 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 16:38:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:51 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:51 AI_Player.update()	update
2017-01-05 16:38:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:52 AI_Player.update()	Search took197ms
2017-01-05 16:38:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-05 16:38:52 AI_Player.update()		1011,	110,	111,	11,	11,	110,	101
2017-01-05 16:38:52 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-05 16:38:52 AI_Player.update()		111,	1001,	101,	1010,	1110,	1001,	111
2017-01-05 16:38:52 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:38:52 AI_Player.update()		101,	1010,	101,	1001,	110,	101,	11
2017-01-05 16:38:52 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-05 16:38:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()	update
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()	update
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:52 AI_Player.update()	Search took124ms
2017-01-05 16:38:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-05 16:38:52 AI_Player.update()		110,	111,	11,	11,	110,	101,	1011
2017-01-05 16:38:52 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-05 16:38:52 AI_Player.update()		111,	1001,	101,	1010,	1110,	1001,	111
2017-01-05 16:38:52 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:38:52 AI_Player.update()		101,	1010,	101,	1001,	110,	101,	11
2017-01-05 16:38:52 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-05 16:38:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()	update
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()	update
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:52 AI_Player.update()	Search took214ms
2017-01-05 16:38:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-05 16:38:52 AI_Player.update()		110,	111,	11,	11,	110,	101,	1011
2017-01-05 16:38:52 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-05 16:38:52 AI_Player.update()		1001,	101,	1010,	1110,	1001,	111,	111
2017-01-05 16:38:52 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:38:52 AI_Player.update()		101,	1010,	101,	1001,	110,	101,	11
2017-01-05 16:38:52 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-05 16:38:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()	update
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()	update
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:52 AI_Player.update()	Search took141ms
2017-01-05 16:38:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-05 16:38:52 AI_Player.update()		110,	1001,	11,	11,	110,	101,	1011
2017-01-05 16:38:52 AI_Player.update()		1110,	101,	1110,	110,	111,	1001,	1011
2017-01-05 16:38:52 AI_Player.update()		1001,	1001,	1010,	1110,	1001,	111,	111
2017-01-05 16:38:52 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:38:52 AI_Player.update()		101,	101,	101,	1001,	110,	101,	11
2017-01-05 16:38:52 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-05 16:38:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()	update
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()	update
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:52 AI_Player.update()	Search took108ms
2017-01-05 16:38:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-05 16:38:52 AI_Player.update()		110,	1001,	11,	110,	110,	101,	1011
2017-01-05 16:38:52 AI_Player.update()		1110,	101,	1110,	1110,	111,	1001,	1011
2017-01-05 16:38:52 AI_Player.update()		1001,	1001,	1010,	1010,	1001,	111,	111
2017-01-05 16:38:52 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:38:52 AI_Player.update()		101,	101,	101,	1100,	110,	101,	11
2017-01-05 16:38:52 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-05 16:38:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()	update
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:38:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()	update
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:52 AI_Player.update()	Search took203ms
2017-01-05 16:38:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-05 16:38:52 AI_Player.update()		1011,	110,	1001,	11,	110,	110,	101
2017-01-05 16:38:52 AI_Player.update()		1110,	101,	1110,	1110,	111,	1001,	1011
2017-01-05 16:38:52 AI_Player.update()		1001,	1001,	1010,	1010,	1001,	111,	111
2017-01-05 16:38:52 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:38:52 AI_Player.update()		101,	101,	101,	1100,	110,	101,	11
2017-01-05 16:38:52 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-05 16:38:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:38:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()	update
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:52 AI_Player.update()	update
2017-01-05 16:38:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:53 AI_Player.update()	Search took279ms
2017-01-05 16:38:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-05 16:38:53 AI_Player.update()		1011,	110,	1001,	11,	110,	110,	101
2017-01-05 16:38:53 AI_Player.update()		1110,	101,	1110,	1110,	111,	1001,	1011
2017-01-05 16:38:53 AI_Player.update()		111,	1001,	1001,	1010,	1010,	1001,	111
2017-01-05 16:38:53 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:38:53 AI_Player.update()		101,	101,	101,	1100,	110,	101,	11
2017-01-05 16:38:53 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-05 16:38:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()	update
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()	update
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:53 AI_Player.update()	Search took111ms
2017-01-05 16:38:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()		110,	111,	111,	11,	111,	110,	11
2017-01-05 16:38:53 AI_Player.update()		1011,	110,	1001,	11,	110,	1001,	101
2017-01-05 16:38:53 AI_Player.update()		1110,	101,	1110,	1110,	111,	1001,	1011
2017-01-05 16:38:53 AI_Player.update()		111,	1001,	1001,	1010,	1010,	1010,	111
2017-01-05 16:38:53 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-05 16:38:53 AI_Player.update()		101,	101,	101,	1100,	110,	101,	11
2017-01-05 16:38:53 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()	update
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()	update
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:53 AI_Player.update()	Search took186ms
2017-01-05 16:38:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()		110,	111,	111,	11,	111,	110,	11
2017-01-05 16:38:53 AI_Player.update()		110,	1001,	11,	110,	1001,	101,	1011
2017-01-05 16:38:53 AI_Player.update()		1110,	101,	1110,	1110,	111,	1001,	1011
2017-01-05 16:38:53 AI_Player.update()		111,	1001,	1001,	1010,	1010,	1010,	111
2017-01-05 16:38:53 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-05 16:38:53 AI_Player.update()		101,	101,	101,	1100,	110,	101,	11
2017-01-05 16:38:53 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()	update
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:38:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()	update
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:53 AI_Player.update()	Search took88ms
2017-01-05 16:38:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()		110,	1001,	111,	11,	111,	110,	11
2017-01-05 16:38:53 AI_Player.update()		110,	101,	11,	110,	1001,	101,	1011
2017-01-05 16:38:53 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1001,	1011
2017-01-05 16:38:53 AI_Player.update()		111,	1010,	1001,	1010,	1010,	1010,	111
2017-01-05 16:38:53 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:38:53 AI_Player.update()		101,	1100,	101,	1100,	110,	101,	11
2017-01-05 16:38:53 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:38:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:38:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()	update
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:38:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()	update
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:53 AI_Player.update()	Search took321ms
2017-01-05 16:38:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()		110,	1001,	111,	11,	111,	1001,	11
2017-01-05 16:38:53 AI_Player.update()		110,	101,	11,	110,	1001,	110,	1011
2017-01-05 16:38:53 AI_Player.update()		1110,	1001,	1110,	1110,	111,	101,	1011
2017-01-05 16:38:53 AI_Player.update()		111,	1010,	1001,	1010,	1010,	1001,	111
2017-01-05 16:38:53 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:38:53 AI_Player.update()		101,	1100,	101,	1100,	110,	101,	11
2017-01-05 16:38:53 AI_Player.update()		1100,	111,	1101,	1010,	1101,	101,	1001
2017-01-05 16:38:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:38:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()	update
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:38:53 AI_Player.update()	Player b has won!
2017-01-05 16:38:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:53 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:38:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:53 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:38:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:53 AI_Player.update()	update
2017-01-05 16:38:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:54 AI_Player.update()	Search took42ms
2017-01-05 16:38:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()		110,	111,	111,	1001,	111,	1100,	11
2017-01-05 16:38:54 AI_Player.update()		1001,	110,	110,	110,	1110,	110,	111
2017-01-05 16:38:54 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-05 16:38:54 AI_Player.update()		11,	11,	1001,	1010,	11,	101,	1010
2017-01-05 16:38:54 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-05 16:38:54 AI_Player.update()		101,	11,	101,	1001,	101,	110,	101
2017-01-05 16:38:54 AI_Player.update()		1100,	101,	1101,	110,	1101,	1011,	1001
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:54 AI_Player.update()	Search took26ms
2017-01-05 16:38:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()		110,	110,	111,	1001,	111,	1100,	11
2017-01-05 16:38:54 AI_Player.update()		1001,	1110,	110,	110,	1110,	110,	111
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-05 16:38:54 AI_Player.update()		11,	101,	1001,	1010,	11,	101,	1010
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1101,	1011,	1011,	101,	1011
2017-01-05 16:38:54 AI_Player.update()		101,	101,	101,	1001,	101,	110,	101
2017-01-05 16:38:54 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:54 AI_Player.update()	Search took77ms
2017-01-05 16:38:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()		110,	110,	111,	110,	111,	1100,	11
2017-01-05 16:38:54 AI_Player.update()		1001,	1110,	110,	101,	1110,	110,	111
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-05 16:38:54 AI_Player.update()		11,	101,	1001,	1011,	11,	101,	1010
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-05 16:38:54 AI_Player.update()		101,	101,	101,	110,	101,	110,	101
2017-01-05 16:38:54 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:54 AI_Player.update()	Search took87ms
2017-01-05 16:38:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()		110,	110,	111,	110,	111,	1011,	11
2017-01-05 16:38:54 AI_Player.update()		1001,	1110,	110,	101,	1110,	1100,	111
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-05 16:38:54 AI_Player.update()		11,	101,	1001,	1011,	11,	1010,	1010
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-05 16:38:54 AI_Player.update()		101,	101,	101,	110,	101,	101,	101
2017-01-05 16:38:54 AI_Player.update()		1100,	111,	1101,	1001,	1101,	110,	1001
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:54 AI_Player.update()	Search took129ms
2017-01-05 16:38:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()		110,	110,	111,	1001,	111,	1011,	11
2017-01-05 16:38:54 AI_Player.update()		1001,	1110,	110,	110,	1110,	1100,	111
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-05 16:38:54 AI_Player.update()		11,	101,	1001,	1010,	11,	1010,	1010
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1101,	1011,	1011,	101,	1011
2017-01-05 16:38:54 AI_Player.update()		101,	101,	101,	1001,	101,	101,	101
2017-01-05 16:38:54 AI_Player.update()		1100,	111,	1101,	110,	1101,	110,	1001
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:54 AI_Player.update()	Search took211ms
2017-01-05 16:38:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()		110,	110,	111,	110,	111,	1011,	11
2017-01-05 16:38:54 AI_Player.update()		1001,	1110,	110,	1001,	1110,	1100,	111
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-05 16:38:54 AI_Player.update()		11,	101,	1001,	101,	11,	1010,	1010
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:54 AI_Player.update()		101,	101,	101,	1011,	101,	101,	101
2017-01-05 16:38:54 AI_Player.update()		1100,	111,	1101,	1001,	1101,	110,	1001
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:54 AI_Player.update()	Search took32ms
2017-01-05 16:38:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()		110,	110,	111,	110,	111,	1011,	11
2017-01-05 16:38:54 AI_Player.update()		1001,	1110,	110,	1001,	1110,	1100,	111
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-05 16:38:54 AI_Player.update()		11,	101,	1001,	101,	11,	1010,	1010
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:54 AI_Player.update()		101,	101,	101,	101,	1011,	101,	101
2017-01-05 16:38:54 AI_Player.update()		1100,	111,	1101,	1001,	1101,	110,	1001
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:54 AI_Player.update()	Search took275ms
2017-01-05 16:38:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()		110,	110,	111,	110,	111,	1011,	11
2017-01-05 16:38:54 AI_Player.update()		111,	1001,	1110,	110,	1001,	1110,	1100
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-05 16:38:54 AI_Player.update()		11,	101,	1001,	101,	11,	1010,	1010
2017-01-05 16:38:54 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:38:54 AI_Player.update()		101,	101,	101,	101,	1011,	101,	101
2017-01-05 16:38:54 AI_Player.update()		1100,	111,	1101,	1001,	1101,	110,	1001
2017-01-05 16:38:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:54 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:54 AI_Player.update()	update
2017-01-05 16:38:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:55 AI_Player.update()	Search took162ms
2017-01-05 16:38:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:55 AI_Player.update()		110,	110,	111,	110,	111,	1011,	11
2017-01-05 16:38:55 AI_Player.update()		111,	1001,	1110,	110,	1001,	1110,	1100
2017-01-05 16:38:55 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-05 16:38:55 AI_Player.update()		11,	101,	1001,	1010,	11,	1010,	1010
2017-01-05 16:38:55 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:55 AI_Player.update()		101,	101,	101,	1001,	1011,	101,	101
2017-01-05 16:38:55 AI_Player.update()		1100,	111,	1101,	110,	1101,	110,	1001
2017-01-05 16:38:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:38:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:55 AI_Player.update()	update
2017-01-05 16:38:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:55 AI_Player.update()	update
2017-01-05 16:38:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:55 AI_Player.update()	Search took253ms
2017-01-05 16:38:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:55 AI_Player.update()		110,	1001,	111,	110,	111,	1011,	11
2017-01-05 16:38:55 AI_Player.update()		111,	11,	1110,	110,	1001,	1110,	1100
2017-01-05 16:38:55 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 16:38:55 AI_Player.update()		11,	11,	1001,	1010,	11,	1010,	1010
2017-01-05 16:38:55 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:55 AI_Player.update()		101,	111,	101,	1001,	1011,	101,	101
2017-01-05 16:38:55 AI_Player.update()		1100,	110,	1101,	110,	1101,	110,	1001
2017-01-05 16:38:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:55 AI_Player.update()	update
2017-01-05 16:38:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:38:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:55 AI_Player.update()	update
2017-01-05 16:38:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:55 AI_Player.update()	Search took245ms
2017-01-05 16:38:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:55 AI_Player.update()		110,	1001,	111,	110,	111,	1011,	11
2017-01-05 16:38:55 AI_Player.update()		11,	1110,	110,	1001,	1110,	1100,	111
2017-01-05 16:38:55 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 16:38:55 AI_Player.update()		11,	11,	1001,	1010,	11,	1010,	1010
2017-01-05 16:38:55 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:55 AI_Player.update()		101,	111,	101,	1001,	1011,	101,	101
2017-01-05 16:38:55 AI_Player.update()		1100,	110,	1101,	110,	1101,	110,	1001
2017-01-05 16:38:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:38:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:55 AI_Player.update()	update
2017-01-05 16:38:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:55 AI_Player.update()	update
2017-01-05 16:38:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:55 AI_Player.update()	Search took61ms
2017-01-05 16:38:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:55 AI_Player.update()		110,	1001,	111,	110,	111,	1011,	11
2017-01-05 16:38:55 AI_Player.update()		11,	1110,	110,	1001,	1110,	1100,	111
2017-01-05 16:38:55 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 16:38:55 AI_Player.update()		11,	11,	1001,	1010,	11,	1010,	1010
2017-01-05 16:38:55 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:55 AI_Player.update()		101,	101,	111,	101,	1001,	1011,	101
2017-01-05 16:38:55 AI_Player.update()		1100,	110,	1101,	110,	1101,	110,	1001
2017-01-05 16:38:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:38:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:55 AI_Player.update()	update
2017-01-05 16:38:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:55 AI_Player.update()	update
2017-01-05 16:38:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:56 AI_Player.update()	Search took594ms
2017-01-05 16:38:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:56 AI_Player.update()		110,	1001,	111,	110,	111,	1011,	11
2017-01-05 16:38:56 AI_Player.update()		11,	1110,	110,	1001,	1110,	1100,	111
2017-01-05 16:38:56 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 16:38:56 AI_Player.update()		11,	1001,	1010,	11,	1010,	1010,	11
2017-01-05 16:38:56 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:56 AI_Player.update()		101,	101,	111,	101,	1001,	1011,	101
2017-01-05 16:38:56 AI_Player.update()		1100,	110,	1101,	110,	1101,	110,	1001
2017-01-05 16:38:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:56 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:38:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:56 AI_Player.update()	update
2017-01-05 16:38:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:56 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:56 AI_Player.update()	update
2017-01-05 16:38:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:57 AI_Player.update()	Search took802ms
2017-01-05 16:38:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:57 AI_Player.update()		110,	1110,	111,	110,	111,	1011,	11
2017-01-05 16:38:57 AI_Player.update()		11,	101,	110,	1001,	1110,	1100,	111
2017-01-05 16:38:57 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 16:38:57 AI_Player.update()		11,	101,	1010,	11,	1010,	1010,	11
2017-01-05 16:38:57 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:57 AI_Player.update()		101,	110,	111,	101,	1001,	1011,	101
2017-01-05 16:38:57 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-05 16:38:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:38:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:57 AI_Player.update()	update
2017-01-05 16:38:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:57 AI_Player.update()	update
2017-01-05 16:38:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:57 AI_Player.update()	Search took805ms
2017-01-05 16:38:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:57 AI_Player.update()		110,	101,	111,	110,	111,	1011,	11
2017-01-05 16:38:57 AI_Player.update()		11,	1001,	110,	1001,	1110,	1100,	111
2017-01-05 16:38:57 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 16:38:57 AI_Player.update()		11,	101,	1010,	11,	1010,	1010,	11
2017-01-05 16:38:57 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:57 AI_Player.update()		101,	1001,	111,	101,	1001,	1011,	101
2017-01-05 16:38:57 AI_Player.update()		1100,	1110,	1101,	110,	1101,	110,	1001
2017-01-05 16:38:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:57 AI_Player.update()	update
2017-01-05 16:38:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:57 AI_Player.update()	update
2017-01-05 16:38:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:57 AI_Player.update()	Search took129ms
2017-01-05 16:38:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:57 AI_Player.update()		110,	1110,	111,	110,	111,	1011,	11
2017-01-05 16:38:57 AI_Player.update()		11,	101,	110,	1001,	1110,	1100,	111
2017-01-05 16:38:57 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 16:38:57 AI_Player.update()		11,	101,	1010,	11,	1010,	1010,	11
2017-01-05 16:38:57 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:38:57 AI_Player.update()		101,	110,	111,	101,	1001,	1011,	101
2017-01-05 16:38:57 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-05 16:38:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:57 AI_Player.update()	update
2017-01-05 16:38:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:57 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:57 AI_Player.update()	update
2017-01-05 16:38:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:58 AI_Player.update()	Search took114ms
2017-01-05 16:38:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()		110,	1110,	111,	110,	111,	1011,	11
2017-01-05 16:38:58 AI_Player.update()		11,	101,	110,	110,	1110,	1100,	111
2017-01-05 16:38:58 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:38:58 AI_Player.update()		11,	101,	1010,	101,	1010,	1010,	11
2017-01-05 16:38:58 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 16:38:58 AI_Player.update()		101,	110,	111,	101,	1001,	1011,	101
2017-01-05 16:38:58 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-05 16:38:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:38:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()	update
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()	update
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:58 AI_Player.update()	Search took303ms
2017-01-05 16:38:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()		110,	1110,	111,	110,	111,	1100,	11
2017-01-05 16:38:58 AI_Player.update()		11,	101,	110,	110,	1110,	110,	111
2017-01-05 16:38:58 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-05 16:38:58 AI_Player.update()		11,	101,	1010,	101,	1010,	101,	11
2017-01-05 16:38:58 AI_Player.update()		1110,	101,	1101,	11,	1011,	1011,	1011
2017-01-05 16:38:58 AI_Player.update()		101,	110,	111,	101,	1001,	110,	101
2017-01-05 16:38:58 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-05 16:38:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:38:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()	update
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:38:58 AI_Player.update()	Player b has won!
2017-01-05 16:38:58 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:58 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:38:58 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:38:58 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:38:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()	update
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:58 AI_Player.update()	Search took9ms
2017-01-05 16:38:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-05 16:38:58 AI_Player.update()		110,	101,	1100,	1110,	101,	110,	1001
2017-01-05 16:38:58 AI_Player.update()		1110,	1100,	1110,	1110,	111,	110,	1011
2017-01-05 16:38:58 AI_Player.update()		1001,	101,	1011,	101,	1100,	1101,	1110
2017-01-05 16:38:58 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 16:38:58 AI_Player.update()		110,	110,	11,	1100,	101,	1100,	1011
2017-01-05 16:38:58 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:38:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()	update
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()	update
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:58 AI_Player.update()	Search took103ms
2017-01-05 16:38:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()		110,	1110,	111,	1010,	111,	110,	11
2017-01-05 16:38:58 AI_Player.update()		110,	101,	1100,	1110,	101,	110,	1001
2017-01-05 16:38:58 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1101,	1011
2017-01-05 16:38:58 AI_Player.update()		1001,	101,	1011,	101,	1100,	110,	1110
2017-01-05 16:38:58 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-05 16:38:58 AI_Player.update()		110,	110,	11,	1100,	101,	1110,	1011
2017-01-05 16:38:58 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()	update
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()	update
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:58 AI_Player.update()	Search took10ms
2017-01-05 16:38:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 16:38:58 AI_Player.update()		110,	1100,	1100,	1110,	101,	110,	1001
2017-01-05 16:38:58 AI_Player.update()		1110,	101,	1110,	1110,	111,	1101,	1011
2017-01-05 16:38:58 AI_Player.update()		1001,	1100,	1011,	101,	1100,	110,	1110
2017-01-05 16:38:58 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:38:58 AI_Player.update()		110,	110,	11,	1100,	101,	1110,	1011
2017-01-05 16:38:58 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:38:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()	update
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:58 AI_Player.update()	update
2017-01-05 16:38:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:59 AI_Player.update()	Search took574ms
2017-01-05 16:38:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 16:38:59 AI_Player.update()		110,	1100,	1100,	1110,	101,	110,	1001
2017-01-05 16:38:59 AI_Player.update()		1110,	101,	1110,	1110,	111,	1101,	1011
2017-01-05 16:38:59 AI_Player.update()		1110,	1001,	1100,	1011,	101,	1100,	110
2017-01-05 16:38:59 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:38:59 AI_Player.update()		110,	110,	11,	1100,	101,	1110,	1011
2017-01-05 16:38:59 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:38:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()	update
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()	update
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:59 AI_Player.update()	Search took59ms
2017-01-05 16:38:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 16:38:59 AI_Player.update()		1001,	110,	1100,	1100,	1110,	101,	110
2017-01-05 16:38:59 AI_Player.update()		1110,	101,	1110,	1110,	111,	1101,	1011
2017-01-05 16:38:59 AI_Player.update()		1110,	1001,	1100,	1011,	101,	1100,	110
2017-01-05 16:38:59 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:38:59 AI_Player.update()		110,	110,	11,	1100,	101,	1110,	1011
2017-01-05 16:38:59 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()	update
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()	update
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:59 AI_Player.update()	Search took59ms
2017-01-05 16:38:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 16:38:59 AI_Player.update()		1001,	101,	1100,	1100,	1110,	101,	110
2017-01-05 16:38:59 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1101,	1011
2017-01-05 16:38:59 AI_Player.update()		1110,	110,	1100,	1011,	101,	1100,	110
2017-01-05 16:38:59 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:38:59 AI_Player.update()		110,	1110,	11,	1100,	101,	1110,	1011
2017-01-05 16:38:59 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()	update
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()	update
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:59 AI_Player.update()	Search took62ms
2017-01-05 16:38:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 16:38:59 AI_Player.update()		110,	1001,	101,	1100,	1100,	1110,	101
2017-01-05 16:38:59 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1101,	1011
2017-01-05 16:38:59 AI_Player.update()		1110,	110,	1100,	1011,	101,	1100,	110
2017-01-05 16:38:59 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:38:59 AI_Player.update()		110,	1110,	11,	1100,	101,	1110,	1011
2017-01-05 16:38:59 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:38:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()	update
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()	update
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:38:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:38:59 AI_Player.update()	Search took173ms
2017-01-05 16:38:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 16:38:59 AI_Player.update()		110,	1001,	101,	1100,	1100,	1110,	101
2017-01-05 16:38:59 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1101,	1011
2017-01-05 16:38:59 AI_Player.update()		110,	1100,	1011,	101,	1100,	110,	1110
2017-01-05 16:38:59 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:38:59 AI_Player.update()		110,	1110,	11,	1100,	101,	1110,	1011
2017-01-05 16:38:59 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:38:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()	update
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:38:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:38:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:38:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()	update
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:38:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:38:59 AI_Player.update()	Search took70ms
2017-01-05 16:38:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:38:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()		110,	110,	111,	1100,	111,	110,	11
2017-01-05 16:38:59 AI_Player.update()		110,	1001,	101,	1110,	1100,	1110,	101
2017-01-05 16:38:59 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-05 16:38:59 AI_Player.update()		110,	1100,	1011,	101,	1100,	110,	1110
2017-01-05 16:38:59 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:38:59 AI_Player.update()		110,	1110,	11,	1010,	101,	1110,	1011
2017-01-05 16:38:59 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:38:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:38:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()	update
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:38:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:38:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:38:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:38:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:38:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:38:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:38:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:38:59 AI_Player.update()	update
2017-01-05 16:38:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:00 AI_Player.update()	Search took785ms
2017-01-05 16:39:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:00 AI_Player.update()		110,	110,	111,	1100,	111,	110,	11
2017-01-05 16:39:00 AI_Player.update()		110,	1001,	101,	1110,	1100,	1110,	101
2017-01-05 16:39:00 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-05 16:39:00 AI_Player.update()		1110,	110,	1100,	1011,	101,	1100,	110
2017-01-05 16:39:00 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:39:00 AI_Player.update()		110,	1110,	11,	1010,	101,	1110,	1011
2017-01-05 16:39:00 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:39:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:39:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:00 AI_Player.update()	update
2017-01-05 16:39:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:00 AI_Player.update()	update
2017-01-05 16:39:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:00 AI_Player.update()	Search took153ms
2017-01-05 16:39:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:00 AI_Player.update()		110,	110,	111,	1100,	111,	110,	11
2017-01-05 16:39:00 AI_Player.update()		110,	1001,	101,	1110,	1100,	1110,	101
2017-01-05 16:39:00 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-05 16:39:00 AI_Player.update()		1110,	110,	1100,	1011,	101,	1100,	110
2017-01-05 16:39:00 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:39:00 AI_Player.update()		1011,	110,	1110,	11,	1010,	101,	1110
2017-01-05 16:39:00 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:39:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:00 AI_Player.update()	update
2017-01-05 16:39:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:00 AI_Player.update()	update
2017-01-05 16:39:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:00 AI_Player.update()	Search took329ms
2017-01-05 16:39:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:00 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-05 16:39:00 AI_Player.update()		110,	1001,	101,	101,	1100,	1110,	101
2017-01-05 16:39:00 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1101,	1011
2017-01-05 16:39:00 AI_Player.update()		1110,	110,	1100,	1100,	101,	1100,	110
2017-01-05 16:39:00 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-05 16:39:00 AI_Player.update()		1011,	110,	1110,	1010,	1010,	101,	1110
2017-01-05 16:39:00 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:39:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:00 AI_Player.update()	update
2017-01-05 16:39:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:00 AI_Player.update()	update
2017-01-05 16:39:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:01 AI_Player.update()	Search took251ms
2017-01-05 16:39:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:01 AI_Player.update()		110,	1001,	111,	1110,	111,	110,	11
2017-01-05 16:39:01 AI_Player.update()		110,	1001,	101,	101,	1100,	1110,	101
2017-01-05 16:39:01 AI_Player.update()		1110,	110,	1110,	1011,	111,	1101,	1011
2017-01-05 16:39:01 AI_Player.update()		1110,	110,	1100,	1100,	101,	1100,	110
2017-01-05 16:39:01 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-05 16:39:01 AI_Player.update()		1011,	101,	1110,	1010,	1010,	101,	1110
2017-01-05 16:39:01 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:39:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:01 AI_Player.update()	update
2017-01-05 16:39:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:39:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:01 AI_Player.update()	update
2017-01-05 16:39:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:01 AI_Player.update()	Search took228ms
2017-01-05 16:39:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:01 AI_Player.update()		110,	1001,	111,	1110,	111,	1010,	11
2017-01-05 16:39:01 AI_Player.update()		110,	1001,	101,	101,	1100,	110,	101
2017-01-05 16:39:01 AI_Player.update()		1110,	110,	1110,	1011,	111,	1110,	1011
2017-01-05 16:39:01 AI_Player.update()		1110,	110,	1100,	1100,	101,	1101,	110
2017-01-05 16:39:01 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-05 16:39:01 AI_Player.update()		1011,	101,	1110,	1010,	1010,	1100,	1110
2017-01-05 16:39:01 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-05 16:39:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:39:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:01 AI_Player.update()	update
2017-01-05 16:39:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:01 AI_Player.update()	update
2017-01-05 16:39:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:01 AI_Player.update()	Search took448ms
2017-01-05 16:39:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:01 AI_Player.update()		110,	1001,	111,	1110,	111,	1010,	11
2017-01-05 16:39:01 AI_Player.update()		110,	110,	101,	101,	1100,	110,	101
2017-01-05 16:39:01 AI_Player.update()		1110,	110,	1110,	1011,	111,	1110,	1011
2017-01-05 16:39:01 AI_Player.update()		1110,	110,	1100,	1100,	101,	1101,	110
2017-01-05 16:39:01 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-05 16:39:01 AI_Player.update()		1011,	110,	1110,	1010,	1010,	1100,	1110
2017-01-05 16:39:01 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-05 16:39:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:01 AI_Player.update()	update
2017-01-05 16:39:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:01 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:01 AI_Player.update()	update
2017-01-05 16:39:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:02 AI_Player.update()	Search took513ms
2017-01-05 16:39:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:02 AI_Player.update()		110,	1001,	111,	1110,	111,	110,	11
2017-01-05 16:39:02 AI_Player.update()		110,	110,	101,	101,	1100,	1110,	101
2017-01-05 16:39:02 AI_Player.update()		1110,	110,	1110,	1011,	111,	1101,	1011
2017-01-05 16:39:02 AI_Player.update()		1110,	110,	1100,	1100,	101,	1100,	110
2017-01-05 16:39:02 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-05 16:39:02 AI_Player.update()		1011,	110,	1110,	1010,	1010,	101,	1110
2017-01-05 16:39:02 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:39:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:02 AI_Player.update()	update
2017-01-05 16:39:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:02 AI_Player.update()	update
2017-01-05 16:39:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:02 AI_Player.update()	Search took349ms
2017-01-05 16:39:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:02 AI_Player.update()		110,	1001,	111,	1100,	111,	110,	11
2017-01-05 16:39:02 AI_Player.update()		110,	110,	101,	1110,	1100,	1110,	101
2017-01-05 16:39:02 AI_Player.update()		1110,	110,	1110,	101,	111,	1101,	1011
2017-01-05 16:39:02 AI_Player.update()		1110,	110,	1100,	1011,	101,	1100,	110
2017-01-05 16:39:02 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:39:02 AI_Player.update()		1011,	110,	1110,	11,	1010,	101,	1110
2017-01-05 16:39:02 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:39:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:02 AI_Player.update()	update
2017-01-05 16:39:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:39:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:02 AI_Player.update()	update
2017-01-05 16:39:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:02 AI_Player.update()	Search took230ms
2017-01-05 16:39:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:02 AI_Player.update()		110,	1001,	111,	1100,	111,	110,	11
2017-01-05 16:39:02 AI_Player.update()		110,	110,	101,	1110,	1100,	1110,	101
2017-01-05 16:39:02 AI_Player.update()		1110,	110,	1110,	101,	111,	1101,	1011
2017-01-05 16:39:02 AI_Player.update()		110,	1100,	1011,	101,	1100,	110,	1110
2017-01-05 16:39:02 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:39:02 AI_Player.update()		1011,	110,	1110,	11,	1010,	101,	1110
2017-01-05 16:39:02 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:39:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:39:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:02 AI_Player.update()	update
2017-01-05 16:39:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:02 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:39:02 AI_Player.update()	Player b has won!
2017-01-05 16:39:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:02 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:39:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:02 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:39:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:02 AI_Player.update()	update
2017-01-05 16:39:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:03 AI_Player.update()	Search took381ms
2017-01-05 16:39:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-05 16:39:03 AI_Player.update()		1010,	110,	1010,	1010,	111,	1100,	1010
2017-01-05 16:39:03 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:03 AI_Player.update()		110,	1001,	1010,	1010,	1001,	101,	110
2017-01-05 16:39:03 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-05 16:39:03 AI_Player.update()		110,	1001,	1010,	101,	1100,	11,	1100
2017-01-05 16:39:03 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:03 AI_Player.update()	Search took42ms
2017-01-05 16:39:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:39:03 AI_Player.update()		1010,	101,	1010,	1010,	111,	1100,	1010
2017-01-05 16:39:03 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:03 AI_Player.update()		110,	101,	1010,	1010,	1001,	101,	110
2017-01-05 16:39:03 AI_Player.update()		1110,	1001,	1101,	111,	1011,	101,	1011
2017-01-05 16:39:03 AI_Player.update()		110,	1001,	1010,	101,	1100,	11,	1100
2017-01-05 16:39:03 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:03 AI_Player.update()	Search took125ms
2017-01-05 16:39:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:39:03 AI_Player.update()		1010,	101,	1010,	1010,	111,	1100,	1010
2017-01-05 16:39:03 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:03 AI_Player.update()		101,	1010,	1010,	1001,	101,	110,	110
2017-01-05 16:39:03 AI_Player.update()		1110,	1001,	1101,	111,	1011,	101,	1011
2017-01-05 16:39:03 AI_Player.update()		110,	1001,	1010,	101,	1100,	11,	1100
2017-01-05 16:39:03 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:03 AI_Player.update()	Search took43ms
2017-01-05 16:39:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:39:03 AI_Player.update()		1010,	1010,	101,	1010,	1010,	111,	1100
2017-01-05 16:39:03 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:03 AI_Player.update()		101,	1010,	1010,	1001,	101,	110,	110
2017-01-05 16:39:03 AI_Player.update()		1110,	1001,	1101,	111,	1011,	101,	1011
2017-01-05 16:39:03 AI_Player.update()		110,	1001,	1010,	101,	1100,	11,	1100
2017-01-05 16:39:03 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:03 AI_Player.update()	Search took46ms
2017-01-05 16:39:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:39:03 AI_Player.update()		1010,	1010,	101,	1010,	1010,	111,	1100
2017-01-05 16:39:03 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:03 AI_Player.update()		1010,	1010,	1001,	101,	110,	110,	101
2017-01-05 16:39:03 AI_Player.update()		1110,	1001,	1101,	111,	1011,	101,	1011
2017-01-05 16:39:03 AI_Player.update()		110,	1001,	1010,	101,	1100,	11,	1100
2017-01-05 16:39:03 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:03 AI_Player.update()	Search took185ms
2017-01-05 16:39:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-05 16:39:03 AI_Player.update()		1010,	110,	101,	1010,	1010,	111,	1100
2017-01-05 16:39:03 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:03 AI_Player.update()		1010,	1001,	1001,	101,	110,	110,	101
2017-01-05 16:39:03 AI_Player.update()		1110,	1010,	1101,	111,	1011,	101,	1011
2017-01-05 16:39:03 AI_Player.update()		110,	1001,	1010,	101,	1100,	11,	1100
2017-01-05 16:39:03 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:03 AI_Player.update()	Search took45ms
2017-01-05 16:39:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-05 16:39:03 AI_Player.update()		1010,	110,	101,	1010,	1010,	111,	1100
2017-01-05 16:39:03 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:03 AI_Player.update()		1010,	1001,	1001,	101,	110,	110,	101
2017-01-05 16:39:03 AI_Player.update()		1110,	1010,	1101,	111,	1011,	101,	1011
2017-01-05 16:39:03 AI_Player.update()		1100,	110,	1001,	1010,	101,	1100,	11
2017-01-05 16:39:03 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:03 AI_Player.update()	Search took103ms
2017-01-05 16:39:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:39:03 AI_Player.update()		1010,	1010,	101,	1010,	1010,	111,	1100
2017-01-05 16:39:03 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:03 AI_Player.update()		1010,	1010,	1001,	101,	110,	110,	101
2017-01-05 16:39:03 AI_Player.update()		1110,	110,	1101,	111,	1011,	101,	1011
2017-01-05 16:39:03 AI_Player.update()		1100,	1001,	1001,	1010,	101,	1100,	11
2017-01-05 16:39:03 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:39:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:03 AI_Player.update()	update
2017-01-05 16:39:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:04 AI_Player.update()	Search took134ms
2017-01-05 16:39:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:39:04 AI_Player.update()		1010,	1010,	101,	1011,	1010,	111,	1100
2017-01-05 16:39:04 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-05 16:39:04 AI_Player.update()		1010,	1010,	1001,	111,	110,	110,	101
2017-01-05 16:39:04 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:04 AI_Player.update()		1100,	1001,	1001,	101,	101,	1100,	11
2017-01-05 16:39:04 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:39:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:04 AI_Player.update()	Search took18ms
2017-01-05 16:39:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-05 16:39:04 AI_Player.update()		1010,	1010,	101,	101,	1010,	111,	1100
2017-01-05 16:39:04 AI_Player.update()		1110,	1001,	1110,	111,	111,	1010,	1011
2017-01-05 16:39:04 AI_Player.update()		1010,	1010,	1001,	1010,	110,	110,	101
2017-01-05 16:39:04 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-05 16:39:04 AI_Player.update()		1100,	1001,	1001,	1010,	101,	1100,	11
2017-01-05 16:39:04 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:04 AI_Player.update()	Search took38ms
2017-01-05 16:39:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:39:04 AI_Player.update()		1010,	1010,	101,	111,	1010,	111,	1100
2017-01-05 16:39:04 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 16:39:04 AI_Player.update()		1010,	1010,	1001,	101,	110,	110,	101
2017-01-05 16:39:04 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:04 AI_Player.update()		1100,	1001,	1001,	1010,	101,	1100,	11
2017-01-05 16:39:04 AI_Player.update()		1100,	1101,	1101,	1011,	1101,	1100,	1001
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:04 AI_Player.update()	Search took21ms
2017-01-05 16:39:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:39:04 AI_Player.update()		1010,	1010,	101,	111,	1010,	111,	1100
2017-01-05 16:39:04 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 16:39:04 AI_Player.update()		1010,	1010,	1001,	101,	110,	110,	101
2017-01-05 16:39:04 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:04 AI_Player.update()		11,	1100,	1001,	1001,	1010,	101,	1100
2017-01-05 16:39:04 AI_Player.update()		1100,	1101,	1101,	1011,	1101,	1100,	1001
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:04 AI_Player.update()	Search took139ms
2017-01-05 16:39:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()		110,	110,	111,	111,	111,	1001,	11
2017-01-05 16:39:04 AI_Player.update()		1010,	1010,	101,	1010,	1010,	111,	1100
2017-01-05 16:39:04 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-05 16:39:04 AI_Player.update()		1010,	1010,	1001,	1010,	110,	110,	101
2017-01-05 16:39:04 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-05 16:39:04 AI_Player.update()		11,	1100,	1001,	1011,	1010,	101,	1100
2017-01-05 16:39:04 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:04 AI_Player.update()	Search took291ms
2017-01-05 16:39:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()		110,	110,	111,	111,	111,	1001,	11
2017-01-05 16:39:04 AI_Player.update()		1010,	1010,	101,	1010,	1010,	111,	1100
2017-01-05 16:39:04 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-05 16:39:04 AI_Player.update()		101,	1010,	1010,	1001,	1010,	110,	110
2017-01-05 16:39:04 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-05 16:39:04 AI_Player.update()		11,	1100,	1001,	1011,	1010,	101,	1100
2017-01-05 16:39:04 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:04 AI_Player.update()	Search took40ms
2017-01-05 16:39:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-05 16:39:04 AI_Player.update()		1010,	1010,	101,	1010,	1010,	1010,	1100
2017-01-05 16:39:04 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 16:39:04 AI_Player.update()		101,	1010,	1010,	1001,	1010,	101,	110
2017-01-05 16:39:04 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-05 16:39:04 AI_Player.update()		11,	1100,	1001,	1011,	1010,	1100,	1100
2017-01-05 16:39:04 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-05 16:39:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:04 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:04 AI_Player.update()	update
2017-01-05 16:39:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:05 AI_Player.update()	Search took648ms
2017-01-05 16:39:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:05 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-05 16:39:05 AI_Player.update()		1010,	101,	1010,	1010,	1010,	1100,	1010
2017-01-05 16:39:05 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 16:39:05 AI_Player.update()		101,	1010,	1010,	1001,	1010,	101,	110
2017-01-05 16:39:05 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-05 16:39:05 AI_Player.update()		11,	1100,	1001,	1011,	1010,	1100,	1100
2017-01-05 16:39:05 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-05 16:39:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:05 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:05 AI_Player.update()	update
2017-01-05 16:39:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:05 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:39:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:05 AI_Player.update()	update
2017-01-05 16:39:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:06 AI_Player.update()	Search took991ms
2017-01-05 16:39:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:06 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-05 16:39:06 AI_Player.update()		1010,	101,	1010,	1010,	1010,	1100,	1010
2017-01-05 16:39:06 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 16:39:06 AI_Player.update()		1010,	1010,	1001,	1010,	101,	110,	101
2017-01-05 16:39:06 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-05 16:39:06 AI_Player.update()		11,	1100,	1001,	1011,	1010,	1100,	1100
2017-01-05 16:39:06 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-05 16:39:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:39:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:06 AI_Player.update()	update
2017-01-05 16:39:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:06 AI_Player.update()	update
2017-01-05 16:39:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:06 AI_Player.update()	Search took696ms
2017-01-05 16:39:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:06 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-05 16:39:06 AI_Player.update()		1010,	1010,	101,	1010,	1010,	1010,	1100
2017-01-05 16:39:06 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 16:39:06 AI_Player.update()		1010,	1010,	1001,	1010,	101,	110,	101
2017-01-05 16:39:06 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-05 16:39:06 AI_Player.update()		11,	1100,	1001,	1011,	1010,	1100,	1100
2017-01-05 16:39:06 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-05 16:39:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:06 AI_Player.update()	update
2017-01-05 16:39:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:06 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:39:06 AI_Player.update()	Player b has won!
2017-01-05 16:39:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:06 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:39:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:06 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:39:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:06 AI_Player.update()	update
2017-01-05 16:39:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:07 AI_Player.update()	Search took530ms
2017-01-05 16:39:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:07 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-05 16:39:07 AI_Player.update()		1010,	101,	11,	101,	1010,	1010,	110
2017-01-05 16:39:07 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-05 16:39:07 AI_Player.update()		101,	1010,	1001,	1001,	1110,	111,	110
2017-01-05 16:39:07 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:39:07 AI_Player.update()		1101,	1010,	110,	101,	11,	111,	1100
2017-01-05 16:39:07 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	101,	1001
2017-01-05 16:39:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:07 AI_Player.update()	update
2017-01-05 16:39:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:07 AI_Player.update()	update
2017-01-05 16:39:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:07 AI_Player.update()	Search took16ms
2017-01-05 16:39:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:07 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-05 16:39:07 AI_Player.update()		101,	11,	101,	1010,	1010,	110,	1010
2017-01-05 16:39:07 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-05 16:39:07 AI_Player.update()		101,	1010,	1001,	1001,	1110,	111,	110
2017-01-05 16:39:07 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:39:07 AI_Player.update()		1101,	1010,	110,	101,	11,	111,	1100
2017-01-05 16:39:07 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	101,	1001
2017-01-05 16:39:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:07 AI_Player.update()	update
2017-01-05 16:39:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:07 AI_Player.update()	update
2017-01-05 16:39:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:07 AI_Player.update()	Search took379ms
2017-01-05 16:39:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:07 AI_Player.update()		110,	11,	111,	1001,	111,	1010,	11
2017-01-05 16:39:07 AI_Player.update()		101,	11,	101,	1010,	1010,	110,	1010
2017-01-05 16:39:07 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-05 16:39:07 AI_Player.update()		101,	1101,	1001,	1001,	1110,	111,	110
2017-01-05 16:39:07 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:39:07 AI_Player.update()		1101,	1100,	110,	101,	11,	111,	1100
2017-01-05 16:39:07 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-05 16:39:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:07 AI_Player.update()	update
2017-01-05 16:39:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:07 AI_Player.update()	update
2017-01-05 16:39:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:07 AI_Player.update()	Search took57ms
2017-01-05 16:39:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:07 AI_Player.update()		110,	11,	111,	1001,	111,	1010,	11
2017-01-05 16:39:07 AI_Player.update()		101,	1010,	101,	1010,	1010,	110,	1010
2017-01-05 16:39:07 AI_Player.update()		1110,	1101,	1110,	11,	111,	11,	1011
2017-01-05 16:39:07 AI_Player.update()		101,	1010,	1001,	1001,	1110,	111,	110
2017-01-05 16:39:07 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:39:07 AI_Player.update()		1101,	101,	110,	101,	11,	111,	1100
2017-01-05 16:39:07 AI_Player.update()		1100,	11,	1101,	1011,	1101,	101,	1001
2017-01-05 16:39:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:07 AI_Player.update()	update
2017-01-05 16:39:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:07 AI_Player.update()	update
2017-01-05 16:39:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:08 AI_Player.update()	Search took224ms
2017-01-05 16:39:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()		110,	11,	111,	1001,	111,	1010,	11
2017-01-05 16:39:08 AI_Player.update()		101,	1010,	101,	1010,	1010,	110,	1010
2017-01-05 16:39:08 AI_Player.update()		1110,	1101,	1110,	11,	111,	11,	1011
2017-01-05 16:39:08 AI_Player.update()		110,	101,	1010,	1001,	1001,	1110,	111
2017-01-05 16:39:08 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:39:08 AI_Player.update()		1101,	101,	110,	101,	11,	111,	1100
2017-01-05 16:39:08 AI_Player.update()		1100,	11,	1101,	1011,	1101,	101,	1001
2017-01-05 16:39:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()	update
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	4 1
2017-01-05 16:39:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()	update
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:08 AI_Player.update()	Search took55ms
2017-01-05 16:39:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()		110,	11,	111,	1001,	111,	1010,	11
2017-01-05 16:39:08 AI_Player.update()		1010,	101,	1010,	101,	1010,	1010,	110
2017-01-05 16:39:08 AI_Player.update()		1110,	1101,	1110,	11,	111,	11,	1011
2017-01-05 16:39:08 AI_Player.update()		110,	101,	1010,	1001,	1001,	1110,	111
2017-01-05 16:39:08 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:39:08 AI_Player.update()		1101,	101,	110,	101,	11,	111,	1100
2017-01-05 16:39:08 AI_Player.update()		1100,	11,	1101,	1011,	1101,	101,	1001
2017-01-05 16:39:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	4 1
2017-01-05 16:39:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()	update
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()	update
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:08 AI_Player.update()	Search took186ms
2017-01-05 16:39:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()		110,	11,	111,	1001,	111,	1010,	11
2017-01-05 16:39:08 AI_Player.update()		1010,	101,	1010,	101,	1010,	1010,	110
2017-01-05 16:39:08 AI_Player.update()		1110,	1101,	1110,	11,	111,	11,	1011
2017-01-05 16:39:08 AI_Player.update()		111,	110,	101,	1010,	1001,	1001,	1110
2017-01-05 16:39:08 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:39:08 AI_Player.update()		1101,	101,	110,	101,	11,	111,	1100
2017-01-05 16:39:08 AI_Player.update()		1100,	11,	1101,	1011,	1101,	101,	1001
2017-01-05 16:39:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()	update
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:39:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()	update
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:08 AI_Player.update()	Search took165ms
2017-01-05 16:39:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-05 16:39:08 AI_Player.update()		1010,	1101,	1010,	101,	1010,	1010,	110
2017-01-05 16:39:08 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-05 16:39:08 AI_Player.update()		111,	1100,	101,	1010,	1001,	1001,	1110
2017-01-05 16:39:08 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:39:08 AI_Player.update()		1101,	11,	110,	101,	11,	111,	1100
2017-01-05 16:39:08 AI_Player.update()		1100,	11,	1101,	1011,	1101,	101,	1001
2017-01-05 16:39:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:39:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()	update
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:39:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()	update
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:08 AI_Player.update()	Search took86ms
2017-01-05 16:39:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 16:39:08 AI_Player.update()		1010,	1101,	1010,	101,	1010,	1010,	110
2017-01-05 16:39:08 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-05 16:39:08 AI_Player.update()		111,	1100,	101,	1010,	1001,	11,	1110
2017-01-05 16:39:08 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-05 16:39:08 AI_Player.update()		1101,	11,	110,	101,	11,	1010,	1100
2017-01-05 16:39:08 AI_Player.update()		1100,	11,	1101,	1011,	1101,	111,	1001
2017-01-05 16:39:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:39:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()	update
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:08 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:39:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:08 AI_Player.update()	update
2017-01-05 16:39:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:09 AI_Player.update()	Search took462ms
2017-01-05 16:39:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:09 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 16:39:09 AI_Player.update()		1010,	1101,	1010,	101,	1010,	1010,	110
2017-01-05 16:39:09 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-05 16:39:09 AI_Player.update()		111,	1100,	101,	1010,	1001,	11,	1110
2017-01-05 16:39:09 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-05 16:39:09 AI_Player.update()		1100,	1101,	11,	110,	101,	11,	1010
2017-01-05 16:39:09 AI_Player.update()		1100,	11,	1101,	1011,	1101,	111,	1001
2017-01-05 16:39:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:39:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:09 AI_Player.update()	update
2017-01-05 16:39:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:09 AI_Player.update()	update
2017-01-05 16:39:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:09 AI_Player.update()	Search took594ms
2017-01-05 16:39:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:09 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:39:09 AI_Player.update()		1010,	1101,	1010,	11,	1010,	1010,	110
2017-01-05 16:39:09 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-05 16:39:09 AI_Player.update()		111,	1100,	101,	1101,	1001,	11,	1110
2017-01-05 16:39:09 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 16:39:09 AI_Player.update()		1100,	1101,	11,	1011,	101,	11,	1010
2017-01-05 16:39:09 AI_Player.update()		1100,	11,	1101,	1001,	1101,	111,	1001
2017-01-05 16:39:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:09 AI_Player.update()	update
2017-01-05 16:39:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:09 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:09 AI_Player.update()	update
2017-01-05 16:39:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:10 AI_Player.update()	Search took520ms
2017-01-05 16:39:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:10 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:39:10 AI_Player.update()		1010,	1101,	1010,	1010,	1010,	1010,	110
2017-01-05 16:39:10 AI_Player.update()		1110,	110,	1110,	1101,	111,	1010,	1011
2017-01-05 16:39:10 AI_Player.update()		111,	1100,	101,	110,	1001,	11,	1110
2017-01-05 16:39:10 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:39:10 AI_Player.update()		1100,	1101,	11,	1001,	101,	11,	1010
2017-01-05 16:39:10 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:10 AI_Player.update()	update
2017-01-05 16:39:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:39:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:10 AI_Player.update()	update
2017-01-05 16:39:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:10 AI_Player.update()	Search took55ms
2017-01-05 16:39:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:10 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:39:10 AI_Player.update()		1010,	1101,	1010,	1010,	1010,	1010,	110
2017-01-05 16:39:10 AI_Player.update()		1110,	110,	1110,	1101,	111,	1010,	1011
2017-01-05 16:39:10 AI_Player.update()		1110,	111,	1100,	101,	110,	1001,	11
2017-01-05 16:39:10 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:39:10 AI_Player.update()		1100,	1101,	11,	1001,	101,	11,	1010
2017-01-05 16:39:10 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:39:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:10 AI_Player.update()	update
2017-01-05 16:39:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:10 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:39:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:10 AI_Player.update()	update
2017-01-05 16:39:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:11 AI_Player.update()	Search took697ms
2017-01-05 16:39:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:11 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:39:11 AI_Player.update()		1010,	1101,	1010,	1010,	1010,	1010,	110
2017-01-05 16:39:11 AI_Player.update()		1110,	110,	1110,	1101,	111,	1010,	1011
2017-01-05 16:39:11 AI_Player.update()		111,	1100,	101,	110,	1001,	11,	1110
2017-01-05 16:39:11 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:39:11 AI_Player.update()		1100,	1101,	11,	1001,	101,	11,	1010
2017-01-05 16:39:11 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:39:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:11 AI_Player.update()	update
2017-01-05 16:39:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:39:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:11 AI_Player.update()	update
2017-01-05 16:39:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:11 AI_Player.update()	Search took343ms
2017-01-05 16:39:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:11 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:39:11 AI_Player.update()		1101,	1010,	1010,	1010,	1010,	110,	1010
2017-01-05 16:39:11 AI_Player.update()		1110,	110,	1110,	1101,	111,	1010,	1011
2017-01-05 16:39:11 AI_Player.update()		111,	1100,	101,	110,	1001,	11,	1110
2017-01-05 16:39:11 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 16:39:11 AI_Player.update()		1100,	1101,	11,	1001,	101,	11,	1010
2017-01-05 16:39:11 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:39:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:11 AI_Player.update()	update
2017-01-05 16:39:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:39:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:11 AI_Player.update()	update
2017-01-05 16:39:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:12 AI_Player.update()	Search took898ms
2017-01-05 16:39:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 16:39:12 AI_Player.update()		1101,	1010,	1010,	1010,	1010,	1010,	1010
2017-01-05 16:39:12 AI_Player.update()		1110,	110,	1110,	1101,	111,	11,	1011
2017-01-05 16:39:12 AI_Player.update()		111,	1100,	101,	110,	1001,	1001,	1110
2017-01-05 16:39:12 AI_Player.update()		1110,	101,	1101,	1011,	1011,	11,	1011
2017-01-05 16:39:12 AI_Player.update()		1100,	1101,	11,	1001,	101,	111,	1010
2017-01-05 16:39:12 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 16:39:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:39:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()	update
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:39:12 AI_Player.update()	Player b has won!
2017-01-05 16:39:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:12 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:39:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:12 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:39:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()	update
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:12 AI_Player.update()	Search took15ms
2017-01-05 16:39:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:39:12 AI_Player.update()		101,	101,	11,	1001,	1001,	101,	11
2017-01-05 16:39:12 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 16:39:12 AI_Player.update()		1011,	1010,	1001,	1010,	1010,	111,	101
2017-01-05 16:39:12 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:12 AI_Player.update()		1110,	1100,	11,	1100,	110,	11,	101
2017-01-05 16:39:12 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()	update
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()	update
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:12 AI_Player.update()	Search took110ms
2017-01-05 16:39:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 16:39:12 AI_Player.update()		101,	101,	11,	101,	1001,	101,	11
2017-01-05 16:39:12 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 16:39:12 AI_Player.update()		1011,	1010,	1001,	1010,	1010,	111,	101
2017-01-05 16:39:12 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-05 16:39:12 AI_Player.update()		1110,	1100,	11,	1110,	110,	11,	101
2017-01-05 16:39:12 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:39:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()	update
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()	update
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:12 AI_Player.update()	Search took89ms
2017-01-05 16:39:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 16:39:12 AI_Player.update()		101,	11,	11,	101,	1001,	101,	11
2017-01-05 16:39:12 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-05 16:39:12 AI_Player.update()		1011,	101,	1001,	1010,	1010,	111,	101
2017-01-05 16:39:12 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-05 16:39:12 AI_Player.update()		1110,	1100,	11,	1110,	110,	11,	101
2017-01-05 16:39:12 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:39:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()	update
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()	update
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:12 AI_Player.update()	Search took92ms
2017-01-05 16:39:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:39:12 AI_Player.update()		101,	11,	11,	1001,	1001,	101,	11
2017-01-05 16:39:12 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:39:12 AI_Player.update()		1011,	101,	1001,	1010,	1010,	111,	101
2017-01-05 16:39:12 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:12 AI_Player.update()		1110,	1100,	11,	1100,	110,	11,	101
2017-01-05 16:39:12 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()	update
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()	update
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:12 AI_Player.update()	Search took178ms
2017-01-05 16:39:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:39:12 AI_Player.update()		101,	1010,	11,	1001,	1001,	101,	11
2017-01-05 16:39:12 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 16:39:12 AI_Player.update()		1011,	1100,	1001,	1010,	1010,	111,	101
2017-01-05 16:39:12 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:12 AI_Player.update()		1110,	101,	11,	1100,	110,	11,	101
2017-01-05 16:39:12 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()	update
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:12 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:12 AI_Player.update()	update
2017-01-05 16:39:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:13 AI_Player.update()	Search took326ms
2017-01-05 16:39:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:13 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:39:13 AI_Player.update()		101,	101,	11,	1001,	1001,	101,	11
2017-01-05 16:39:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 16:39:13 AI_Player.update()		1011,	1100,	1001,	1010,	1010,	111,	101
2017-01-05 16:39:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:13 AI_Player.update()		1110,	101,	11,	1100,	110,	11,	101
2017-01-05 16:39:13 AI_Player.update()		1100,	11,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:13 AI_Player.update()	update
2017-01-05 16:39:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:39:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:13 AI_Player.update()	update
2017-01-05 16:39:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:13 AI_Player.update()	Search took298ms
2017-01-05 16:39:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:13 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-05 16:39:13 AI_Player.update()		101,	101,	11,	101,	1001,	101,	11
2017-01-05 16:39:13 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-05 16:39:13 AI_Player.update()		1011,	1100,	1001,	1010,	1010,	111,	101
2017-01-05 16:39:13 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-05 16:39:13 AI_Player.update()		1110,	101,	11,	1110,	110,	11,	101
2017-01-05 16:39:13 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 16:39:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:39:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:13 AI_Player.update()	update
2017-01-05 16:39:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:39:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:13 AI_Player.update()	update
2017-01-05 16:39:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:13 AI_Player.update()	Search took295ms
2017-01-05 16:39:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:13 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 16:39:13 AI_Player.update()		101,	1100,	11,	101,	1001,	101,	11
2017-01-05 16:39:13 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-05 16:39:13 AI_Player.update()		1011,	101,	1001,	1010,	1010,	111,	101
2017-01-05 16:39:13 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-05 16:39:13 AI_Player.update()		1110,	11,	11,	1110,	110,	11,	101
2017-01-05 16:39:13 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 16:39:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:39:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:13 AI_Player.update()	update
2017-01-05 16:39:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:39:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:13 AI_Player.update()	update
2017-01-05 16:39:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:13 AI_Player.update()	Search took100ms
2017-01-05 16:39:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:13 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:39:13 AI_Player.update()		101,	1100,	11,	1001,	1001,	101,	11
2017-01-05 16:39:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 16:39:13 AI_Player.update()		1011,	101,	1001,	1010,	1010,	111,	101
2017-01-05 16:39:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:13 AI_Player.update()		1110,	11,	11,	1100,	110,	11,	101
2017-01-05 16:39:13 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:39:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:13 AI_Player.update()	update
2017-01-05 16:39:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:13 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:39:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:13 AI_Player.update()	update
2017-01-05 16:39:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:14 AI_Player.update()	Search took286ms
2017-01-05 16:39:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:39:14 AI_Player.update()		101,	1100,	11,	1001,	1001,	101,	11
2017-01-05 16:39:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	111,	1011
2017-01-05 16:39:14 AI_Player.update()		1011,	101,	1001,	1010,	1010,	101,	101
2017-01-05 16:39:14 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 16:39:14 AI_Player.update()		1110,	11,	11,	1100,	110,	101,	101
2017-01-05 16:39:14 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:14 AI_Player.update()	Search took138ms
2017-01-05 16:39:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:39:14 AI_Player.update()		101,	1100,	11,	1001,	1001,	111,	11
2017-01-05 16:39:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 16:39:14 AI_Player.update()		1011,	101,	1001,	1010,	1010,	11,	101
2017-01-05 16:39:14 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:14 AI_Player.update()		1110,	11,	11,	1100,	110,	101,	101
2017-01-05 16:39:14 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:14 AI_Player.update()	Search took118ms
2017-01-05 16:39:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:39:14 AI_Player.update()		101,	1100,	11,	1001,	1001,	111,	11
2017-01-05 16:39:14 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 16:39:14 AI_Player.update()		1011,	101,	1001,	1010,	1010,	11,	101
2017-01-05 16:39:14 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:14 AI_Player.update()		1110,	1010,	11,	1100,	110,	101,	101
2017-01-05 16:39:14 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:14 AI_Player.update()	Search took188ms
2017-01-05 16:39:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-05 16:39:14 AI_Player.update()		101,	1100,	11,	1001,	1001,	101,	11
2017-01-05 16:39:14 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 16:39:14 AI_Player.update()		1011,	101,	1001,	1010,	1010,	101,	101
2017-01-05 16:39:14 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:14 AI_Player.update()		1110,	1010,	11,	1100,	110,	101,	101
2017-01-05 16:39:14 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:39:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:14 AI_Player.update()	Search took116ms
2017-01-05 16:39:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-05 16:39:14 AI_Player.update()		101,	101,	11,	1001,	1001,	101,	11
2017-01-05 16:39:14 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 16:39:14 AI_Player.update()		1011,	11,	1001,	1010,	1010,	101,	101
2017-01-05 16:39:14 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:14 AI_Player.update()		1110,	101,	11,	1100,	110,	101,	101
2017-01-05 16:39:14 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:39:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:14 AI_Player.update()	Search took68ms
2017-01-05 16:39:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-05 16:39:14 AI_Player.update()		101,	101,	11,	1001,	1001,	101,	11
2017-01-05 16:39:14 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 16:39:14 AI_Player.update()		1011,	11,	1001,	1010,	1010,	101,	101
2017-01-05 16:39:14 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:14 AI_Player.update()		101,	11,	1100,	110,	101,	101,	1110
2017-01-05 16:39:14 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:14 AI_Player.update()	Search took65ms
2017-01-05 16:39:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-05 16:39:14 AI_Player.update()		101,	101,	11,	1001,	1001,	101,	11
2017-01-05 16:39:14 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 16:39:14 AI_Player.update()		1011,	11,	1001,	1010,	1010,	101,	101
2017-01-05 16:39:14 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:14 AI_Player.update()		1110,	101,	11,	1100,	110,	101,	101
2017-01-05 16:39:14 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:14 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:39:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:14 AI_Player.update()	update
2017-01-05 16:39:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:15 AI_Player.update()	Search took222ms
2017-01-05 16:39:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-05 16:39:15 AI_Player.update()		101,	101,	11,	1001,	1001,	101,	11
2017-01-05 16:39:15 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 16:39:15 AI_Player.update()		1011,	11,	1001,	1010,	1010,	101,	101
2017-01-05 16:39:15 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:15 AI_Player.update()		101,	1110,	101,	11,	1100,	110,	101
2017-01-05 16:39:15 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:39:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()	update
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:39:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()	update
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:15 AI_Player.update()	Search took245ms
2017-01-05 16:39:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-05 16:39:15 AI_Player.update()		101,	1100,	11,	1001,	1001,	101,	11
2017-01-05 16:39:15 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 16:39:15 AI_Player.update()		1011,	101,	1001,	1010,	1010,	101,	101
2017-01-05 16:39:15 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:15 AI_Player.update()		101,	1010,	101,	11,	1100,	110,	101
2017-01-05 16:39:15 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:39:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()	update
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:39:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()	update
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:15 AI_Player.update()	Search took126ms
2017-01-05 16:39:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-05 16:39:15 AI_Player.update()		101,	101,	11,	1001,	1001,	101,	11
2017-01-05 16:39:15 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 16:39:15 AI_Player.update()		1011,	11,	1001,	1010,	1010,	101,	101
2017-01-05 16:39:15 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:15 AI_Player.update()		101,	1110,	101,	11,	1100,	110,	101
2017-01-05 16:39:15 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:39:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()	update
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:39:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()	update
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:15 AI_Player.update()	Search took92ms
2017-01-05 16:39:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 16:39:15 AI_Player.update()		101,	101,	11,	1001,	1001,	101,	11
2017-01-05 16:39:15 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-05 16:39:15 AI_Player.update()		1011,	1010,	1001,	1010,	1010,	101,	101
2017-01-05 16:39:15 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:15 AI_Player.update()		101,	1100,	101,	11,	1100,	110,	101
2017-01-05 16:39:15 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-05 16:39:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:39:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()	update
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:39:15 AI_Player.update()	Player b has won!
2017-01-05 16:39:15 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:15 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:39:15 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:15 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:39:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()	update
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:15 AI_Player.update()	Search took399ms
2017-01-05 16:39:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-05 16:39:15 AI_Player.update()		1110,	1100,	110,	101,	1100,	101,	111
2017-01-05 16:39:15 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-05 16:39:15 AI_Player.update()		1110,	1010,	1010,	101,	101,	101,	1001
2017-01-05 16:39:15 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 16:39:15 AI_Player.update()		110,	1110,	111,	11,	11,	11,	1011
2017-01-05 16:39:15 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:39:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()	update
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:15 AI_Player.update()	update
2017-01-05 16:39:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:16 AI_Player.update()	Search took67ms
2017-01-05 16:39:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:16 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-05 16:39:16 AI_Player.update()		1110,	1100,	110,	110,	1100,	101,	111
2017-01-05 16:39:16 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 16:39:16 AI_Player.update()		1110,	1010,	1010,	101,	101,	101,	1001
2017-01-05 16:39:16 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:39:16 AI_Player.update()		110,	1110,	111,	1001,	11,	11,	1011
2017-01-05 16:39:16 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-05 16:39:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:16 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:16 AI_Player.update()	update
2017-01-05 16:39:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:16 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:16 AI_Player.update()	update
2017-01-05 16:39:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:17 AI_Player.update()	Search took1325ms
2017-01-05 16:39:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:17 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:39:17 AI_Player.update()		1110,	1100,	110,	110,	1100,	101,	111
2017-01-05 16:39:17 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 16:39:17 AI_Player.update()		1110,	1010,	1010,	101,	101,	1001,	1001
2017-01-05 16:39:17 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 16:39:17 AI_Player.update()		110,	1110,	111,	1001,	11,	101,	1011
2017-01-05 16:39:17 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-05 16:39:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:17 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:17 AI_Player.update()	update
2017-01-05 16:39:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:17 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:17 AI_Player.update()	update
2017-01-05 16:39:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:18 AI_Player.update()	Search took1276ms
2017-01-05 16:39:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:18 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:39:18 AI_Player.update()		1110,	11,	110,	110,	1100,	101,	111
2017-01-05 16:39:18 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:39:18 AI_Player.update()		1110,	1010,	1010,	101,	101,	1001,	1001
2017-01-05 16:39:18 AI_Player.update()		1110,	1110,	1101,	11,	1011,	11,	1011
2017-01-05 16:39:18 AI_Player.update()		110,	1001,	111,	1001,	11,	101,	1011
2017-01-05 16:39:18 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 16:39:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:18 AI_Player.update()	update
2017-01-05 16:39:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:18 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:18 AI_Player.update()	update
2017-01-05 16:39:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:20 AI_Player.update()	Search took1509ms
2017-01-05 16:39:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:20 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:39:20 AI_Player.update()		1110,	11,	110,	110,	1100,	101,	111
2017-01-05 16:39:20 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:39:20 AI_Player.update()		1110,	1010,	1010,	101,	101,	1001,	1001
2017-01-05 16:39:20 AI_Player.update()		1110,	1110,	1101,	11,	1011,	11,	1011
2017-01-05 16:39:20 AI_Player.update()		1011,	110,	1001,	111,	1001,	11,	101
2017-01-05 16:39:20 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 16:39:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:20 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:20 AI_Player.update()	update
2017-01-05 16:39:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:20 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:20 AI_Player.update()	update
2017-01-05 16:39:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:21 AI_Player.update()	Search took1021ms
2017-01-05 16:39:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:21 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:39:21 AI_Player.update()		1110,	1010,	110,	110,	1100,	101,	111
2017-01-05 16:39:21 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:39:21 AI_Player.update()		1110,	1110,	1010,	101,	101,	1001,	1001
2017-01-05 16:39:21 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-05 16:39:21 AI_Player.update()		1011,	101,	1001,	111,	1001,	11,	101
2017-01-05 16:39:21 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 16:39:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:21 AI_Player.update()	update
2017-01-05 16:39:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:21 AI_Player.update()	update
2017-01-05 16:39:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:21 AI_Player.update()	Search took787ms
2017-01-05 16:39:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:21 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:39:21 AI_Player.update()		1110,	1010,	110,	110,	1100,	101,	111
2017-01-05 16:39:21 AI_Player.update()		1110,	1110,	1110,	101,	111,	101,	1011
2017-01-05 16:39:21 AI_Player.update()		1110,	110,	1010,	101,	101,	1001,	1001
2017-01-05 16:39:21 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 16:39:21 AI_Player.update()		1011,	1100,	1001,	111,	1001,	11,	101
2017-01-05 16:39:21 AI_Player.update()		1100,	11,	1101,	11,	1101,	1001,	1001
2017-01-05 16:39:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:21 AI_Player.update()	update
2017-01-05 16:39:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:39:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:21 AI_Player.update()	update
2017-01-05 16:39:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:22 AI_Player.update()	Search took705ms
2017-01-05 16:39:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:22 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:39:22 AI_Player.update()		1110,	1010,	110,	110,	1100,	101,	111
2017-01-05 16:39:22 AI_Player.update()		1110,	1110,	1110,	101,	111,	101,	1011
2017-01-05 16:39:22 AI_Player.update()		110,	1010,	101,	101,	1001,	1001,	1110
2017-01-05 16:39:22 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 16:39:22 AI_Player.update()		1011,	1100,	1001,	111,	1001,	11,	101
2017-01-05 16:39:22 AI_Player.update()		1100,	11,	1101,	11,	1101,	1001,	1001
2017-01-05 16:39:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:39:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:22 AI_Player.update()	update
2017-01-05 16:39:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:39:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:22 AI_Player.update()	update
2017-01-05 16:39:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:22 AI_Player.update()	Search took229ms
2017-01-05 16:39:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:22 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:39:22 AI_Player.update()		1110,	1010,	110,	110,	1100,	101,	111
2017-01-05 16:39:22 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:39:22 AI_Player.update()		110,	1110,	101,	101,	1001,	1001,	1110
2017-01-05 16:39:22 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 16:39:22 AI_Player.update()		1011,	101,	1001,	111,	1001,	11,	101
2017-01-05 16:39:22 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 16:39:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:39:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:22 AI_Player.update()	update
2017-01-05 16:39:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:22 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:39:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:22 AI_Player.update()	update
2017-01-05 16:39:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:23 AI_Player.update()	Search took703ms
2017-01-05 16:39:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:23 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 16:39:23 AI_Player.update()		1110,	1010,	110,	101,	1100,	101,	111
2017-01-05 16:39:23 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:39:23 AI_Player.update()		110,	1110,	101,	11,	1001,	1001,	1110
2017-01-05 16:39:23 AI_Player.update()		1110,	1010,	1101,	111,	1011,	11,	1011
2017-01-05 16:39:23 AI_Player.update()		1011,	101,	1001,	11,	1001,	11,	101
2017-01-05 16:39:23 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:39:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:39:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:23 AI_Player.update()	update
2017-01-05 16:39:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:23 AI_Player.update()	update
2017-01-05 16:39:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:23 AI_Player.update()	Search took252ms
2017-01-05 16:39:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:23 AI_Player.update()		110,	11,	111,	110,	111,	1001,	11
2017-01-05 16:39:23 AI_Player.update()		1110,	1010,	110,	101,	1100,	101,	111
2017-01-05 16:39:23 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:39:23 AI_Player.update()		110,	1110,	101,	11,	1001,	101,	1110
2017-01-05 16:39:23 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-05 16:39:23 AI_Player.update()		1011,	101,	1001,	11,	1001,	11,	101
2017-01-05 16:39:23 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-05 16:39:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:23 AI_Player.update()	update
2017-01-05 16:39:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:39:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:23 AI_Player.update()	update
2017-01-05 16:39:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:24 AI_Player.update()	Search took538ms
2017-01-05 16:39:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:24 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-05 16:39:24 AI_Player.update()		1110,	1010,	110,	101,	1100,	101,	111
2017-01-05 16:39:24 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 16:39:24 AI_Player.update()		110,	1110,	101,	111,	1001,	101,	1110
2017-01-05 16:39:24 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:39:24 AI_Player.update()		1011,	101,	1001,	101,	1001,	11,	101
2017-01-05 16:39:24 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-05 16:39:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:39:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:24 AI_Player.update()	update
2017-01-05 16:39:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:24 AI_Player.update()	update
2017-01-05 16:39:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:24 AI_Player.update()	Search took54ms
2017-01-05 16:39:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:24 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:39:24 AI_Player.update()		1110,	1010,	110,	101,	1100,	101,	111
2017-01-05 16:39:24 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 16:39:24 AI_Player.update()		110,	1110,	101,	111,	1001,	1001,	1110
2017-01-05 16:39:24 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 16:39:24 AI_Player.update()		1011,	101,	1001,	101,	1001,	11,	101
2017-01-05 16:39:24 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1001,	1001
2017-01-05 16:39:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:24 AI_Player.update()	update
2017-01-05 16:39:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:24 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:24 AI_Player.update()	update
2017-01-05 16:39:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:24 AI_Player.update()	Search took515ms
2017-01-05 16:39:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:24 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:39:24 AI_Player.update()		1110,	1010,	110,	101,	1100,	101,	111
2017-01-05 16:39:24 AI_Player.update()		1110,	1110,	1110,	11,	111,	101,	1011
2017-01-05 16:39:24 AI_Player.update()		110,	1010,	101,	111,	1001,	1001,	1110
2017-01-05 16:39:24 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 16:39:24 AI_Player.update()		1011,	1100,	1001,	101,	1001,	11,	101
2017-01-05 16:39:24 AI_Player.update()		1100,	11,	1101,	110,	1101,	1001,	1001
2017-01-05 16:39:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:25 AI_Player.update()	Search took91ms
2017-01-05 16:39:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:39:25 AI_Player.update()		1110,	1010,	110,	101,	1100,	101,	111
2017-01-05 16:39:25 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 16:39:25 AI_Player.update()		110,	1110,	101,	111,	1001,	1001,	1110
2017-01-05 16:39:25 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 16:39:25 AI_Player.update()		1011,	101,	1001,	101,	1001,	11,	101
2017-01-05 16:39:25 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1001,	1001
2017-01-05 16:39:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:25 AI_Player.update()	Search took568ms
2017-01-05 16:39:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 16:39:25 AI_Player.update()		1110,	1010,	110,	101,	1100,	101,	111
2017-01-05 16:39:25 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:39:25 AI_Player.update()		110,	1110,	101,	11,	1001,	1001,	1110
2017-01-05 16:39:25 AI_Player.update()		1110,	1010,	1101,	111,	1011,	11,	1011
2017-01-05 16:39:25 AI_Player.update()		1011,	101,	1001,	11,	1001,	11,	101
2017-01-05 16:39:25 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:39:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:39:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:25 AI_Player.update()	Search took177ms
2017-01-05 16:39:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 16:39:25 AI_Player.update()		1110,	1010,	110,	101,	1100,	101,	111
2017-01-05 16:39:25 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:39:25 AI_Player.update()		110,	1110,	101,	11,	1001,	1001,	1110
2017-01-05 16:39:25 AI_Player.update()		1110,	1010,	1101,	111,	1011,	11,	1011
2017-01-05 16:39:25 AI_Player.update()		101,	1011,	101,	1001,	11,	1001,	11
2017-01-05 16:39:25 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:39:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:39:25 AI_Player.update()	Player a has won!
2017-01-05 16:39:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:25 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:39:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:25 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:39:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:25 AI_Player.update()	Search took13ms
2017-01-05 16:39:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()		110,	1100,	111,	1101,	111,	1101,	11
2017-01-05 16:39:25 AI_Player.update()		101,	1101,	1100,	110,	110,	110,	101
2017-01-05 16:39:25 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 16:39:25 AI_Player.update()		1010,	111,	1010,	101,	1001,	11,	11
2017-01-05 16:39:25 AI_Player.update()		1110,	1100,	1101,	111,	1011,	11,	1011
2017-01-05 16:39:25 AI_Player.update()		111,	11,	1001,	101,	11,	1110,	1010
2017-01-05 16:39:25 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-05 16:39:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:25 AI_Player.update()	Search took67ms
2017-01-05 16:39:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()		110,	1100,	111,	1010,	111,	1101,	11
2017-01-05 16:39:25 AI_Player.update()		101,	1101,	1100,	1101,	110,	110,	101
2017-01-05 16:39:25 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 16:39:25 AI_Player.update()		1010,	111,	1010,	110,	1001,	11,	11
2017-01-05 16:39:25 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 16:39:25 AI_Player.update()		111,	11,	1001,	111,	11,	1110,	1010
2017-01-05 16:39:25 AI_Player.update()		1100,	1001,	1101,	101,	1101,	11,	1001
2017-01-05 16:39:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:39:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:25 AI_Player.update()	Search took17ms
2017-01-05 16:39:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()		110,	1101,	111,	1010,	111,	1101,	11
2017-01-05 16:39:25 AI_Player.update()		101,	1010,	1100,	1101,	110,	110,	101
2017-01-05 16:39:25 AI_Player.update()		1110,	111,	1110,	110,	111,	1010,	1011
2017-01-05 16:39:25 AI_Player.update()		1010,	1100,	1010,	110,	1001,	11,	11
2017-01-05 16:39:25 AI_Player.update()		1110,	11,	1101,	101,	1011,	11,	1011
2017-01-05 16:39:25 AI_Player.update()		111,	1001,	1001,	111,	11,	1110,	1010
2017-01-05 16:39:25 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-05 16:39:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:25 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:39:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:25 AI_Player.update()	update
2017-01-05 16:39:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:26 AI_Player.update()	Search took58ms
2017-01-05 16:39:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()		110,	1101,	111,	1101,	111,	1101,	11
2017-01-05 16:39:26 AI_Player.update()		101,	1010,	1100,	110,	110,	110,	101
2017-01-05 16:39:26 AI_Player.update()		1110,	111,	1110,	110,	111,	1010,	1011
2017-01-05 16:39:26 AI_Player.update()		1010,	1100,	1010,	101,	1001,	11,	11
2017-01-05 16:39:26 AI_Player.update()		1110,	11,	1101,	111,	1011,	11,	1011
2017-01-05 16:39:26 AI_Player.update()		111,	1001,	1001,	101,	11,	1110,	1010
2017-01-05 16:39:26 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-05 16:39:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:39:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()	update
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:39:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()	update
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:26 AI_Player.update()	Search took131ms
2017-01-05 16:39:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()		110,	1101,	111,	1101,	111,	110,	11
2017-01-05 16:39:26 AI_Player.update()		101,	1010,	1100,	110,	110,	1010,	101
2017-01-05 16:39:26 AI_Player.update()		1110,	111,	1110,	110,	111,	11,	1011
2017-01-05 16:39:26 AI_Player.update()		1010,	1100,	1010,	101,	1001,	11,	11
2017-01-05 16:39:26 AI_Player.update()		1110,	11,	1101,	111,	1011,	1110,	1011
2017-01-05 16:39:26 AI_Player.update()		111,	1001,	1001,	101,	11,	11,	1010
2017-01-05 16:39:26 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-05 16:39:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:39:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()	update
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:39:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()	update
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:26 AI_Player.update()	Search took97ms
2017-01-05 16:39:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()		110,	1101,	111,	1101,	111,	110,	11
2017-01-05 16:39:26 AI_Player.update()		101,	101,	1010,	1100,	110,	110,	1010
2017-01-05 16:39:26 AI_Player.update()		1110,	111,	1110,	110,	111,	11,	1011
2017-01-05 16:39:26 AI_Player.update()		1010,	1100,	1010,	101,	1001,	11,	11
2017-01-05 16:39:26 AI_Player.update()		1110,	11,	1101,	111,	1011,	1110,	1011
2017-01-05 16:39:26 AI_Player.update()		111,	1001,	1001,	101,	11,	11,	1010
2017-01-05 16:39:26 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-05 16:39:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:39:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()	update
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:39:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()	update
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:26 AI_Player.update()	Search took237ms
2017-01-05 16:39:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()		110,	1101,	111,	1100,	111,	110,	11
2017-01-05 16:39:26 AI_Player.update()		101,	101,	1010,	110,	110,	110,	1010
2017-01-05 16:39:26 AI_Player.update()		1110,	111,	1110,	101,	111,	11,	1011
2017-01-05 16:39:26 AI_Player.update()		1010,	1100,	1010,	111,	1001,	11,	11
2017-01-05 16:39:26 AI_Player.update()		1110,	11,	1101,	101,	1011,	1110,	1011
2017-01-05 16:39:26 AI_Player.update()		111,	1001,	1001,	1010,	11,	11,	1010
2017-01-05 16:39:26 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1101,	1001
2017-01-05 16:39:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:39:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()	update
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:39:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()	update
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:26 AI_Player.update()	Search took424ms
2017-01-05 16:39:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()		110,	1101,	111,	1100,	111,	110,	11
2017-01-05 16:39:26 AI_Player.update()		101,	101,	1010,	110,	110,	110,	1010
2017-01-05 16:39:26 AI_Player.update()		1110,	111,	1110,	101,	111,	11,	1011
2017-01-05 16:39:26 AI_Player.update()		1010,	1100,	1010,	111,	1001,	11,	11
2017-01-05 16:39:26 AI_Player.update()		1110,	11,	1101,	101,	1011,	1110,	1011
2017-01-05 16:39:26 AI_Player.update()		1010,	111,	1001,	1001,	1010,	11,	11
2017-01-05 16:39:26 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1101,	1001
2017-01-05 16:39:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:39:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()	update
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:39:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:26 AI_Player.update()	update
2017-01-05 16:39:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:27 AI_Player.update()	Search took871ms
2017-01-05 16:39:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:27 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 16:39:27 AI_Player.update()		101,	111,	1010,	110,	110,	110,	1010
2017-01-05 16:39:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 16:39:27 AI_Player.update()		1010,	11,	1010,	111,	1001,	11,	11
2017-01-05 16:39:27 AI_Player.update()		1110,	111,	1101,	101,	1011,	1110,	1011
2017-01-05 16:39:27 AI_Player.update()		1010,	1100,	1001,	1001,	1010,	11,	11
2017-01-05 16:39:27 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	1101,	1001
2017-01-05 16:39:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:27 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:39:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:27 AI_Player.update()	update
2017-01-05 16:39:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:27 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:27 AI_Player.update()	update
2017-01-05 16:39:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:29 AI_Player.update()	Search took1341ms
2017-01-05 16:39:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:29 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-05 16:39:29 AI_Player.update()		101,	1100,	1010,	110,	110,	110,	1010
2017-01-05 16:39:29 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-05 16:39:29 AI_Player.update()		1010,	111,	1010,	111,	1001,	11,	11
2017-01-05 16:39:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1110,	1011
2017-01-05 16:39:29 AI_Player.update()		1010,	1101,	1001,	1001,	1010,	11,	11
2017-01-05 16:39:29 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1101,	1001
2017-01-05 16:39:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:29 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:29 AI_Player.update()	update
2017-01-05 16:39:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:29 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:29 AI_Player.update()	update
2017-01-05 16:39:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:30 AI_Player.update()	Search took1046ms
2017-01-05 16:39:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:30 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-05 16:39:30 AI_Player.update()		101,	1100,	1010,	110,	110,	11,	1010
2017-01-05 16:39:30 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-05 16:39:30 AI_Player.update()		1010,	111,	1010,	111,	1001,	1110,	11
2017-01-05 16:39:30 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 16:39:30 AI_Player.update()		1010,	1101,	1001,	1001,	1010,	1101,	11
2017-01-05 16:39:30 AI_Player.update()		1100,	101,	1101,	1101,	1101,	110,	1001
2017-01-05 16:39:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:30 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:30 AI_Player.update()	update
2017-01-05 16:39:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:30 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:30 AI_Player.update()	update
2017-01-05 16:39:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:31 AI_Player.update()	Search took1202ms
2017-01-05 16:39:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:31 AI_Player.update()		110,	1100,	111,	1100,	111,	110,	11
2017-01-05 16:39:31 AI_Player.update()		101,	11,	1010,	110,	110,	11,	1010
2017-01-05 16:39:31 AI_Player.update()		1110,	111,	1110,	101,	111,	11,	1011
2017-01-05 16:39:31 AI_Player.update()		1010,	1100,	1010,	111,	1001,	1110,	11
2017-01-05 16:39:31 AI_Player.update()		1110,	1101,	1101,	101,	1011,	11,	1011
2017-01-05 16:39:31 AI_Player.update()		1010,	101,	1001,	1001,	1010,	1101,	11
2017-01-05 16:39:31 AI_Player.update()		1100,	111,	1101,	1101,	1101,	110,	1001
2017-01-05 16:39:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:31 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:31 AI_Player.update()	update
2017-01-05 16:39:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:31 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:39:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:31 AI_Player.update()	update
2017-01-05 16:39:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:32 AI_Player.update()	Search took925ms
2017-01-05 16:39:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:32 AI_Player.update()		110,	1100,	111,	1100,	111,	11,	11
2017-01-05 16:39:32 AI_Player.update()		101,	11,	1010,	110,	110,	11,	1010
2017-01-05 16:39:32 AI_Player.update()		1110,	111,	1110,	101,	111,	1110,	1011
2017-01-05 16:39:32 AI_Player.update()		1010,	1100,	1010,	111,	1001,	11,	11
2017-01-05 16:39:32 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1101,	1011
2017-01-05 16:39:32 AI_Player.update()		1010,	101,	1001,	1001,	1010,	110,	11
2017-01-05 16:39:32 AI_Player.update()		1100,	111,	1101,	1101,	1101,	110,	1001
2017-01-05 16:39:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:32 GameBoard.setupTreasurePanel()	3 6
2017-01-05 16:39:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:32 AI_Player.update()	update
2017-01-05 16:39:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:32 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:32 AI_Player.update()	update
2017-01-05 16:39:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:33 AI_Player.update()	Search took1027ms
2017-01-05 16:39:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()		110,	1100,	111,	1100,	111,	11,	11
2017-01-05 16:39:33 AI_Player.update()		101,	11,	1010,	110,	110,	11,	1010
2017-01-05 16:39:33 AI_Player.update()		1110,	111,	1110,	101,	111,	1110,	1011
2017-01-05 16:39:33 AI_Player.update()		11,	1010,	1100,	1010,	111,	1001,	11
2017-01-05 16:39:33 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1101,	1011
2017-01-05 16:39:33 AI_Player.update()		1010,	101,	1001,	1001,	1010,	110,	11
2017-01-05 16:39:33 AI_Player.update()		1100,	111,	1101,	1101,	1101,	110,	1001
2017-01-05 16:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()	update
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:39:33 AI_Player.update()	Player b has won!
2017-01-05 16:39:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:33 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:39:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:33 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:39:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()	update
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:33 AI_Player.update()	Search took12ms
2017-01-05 16:39:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 16:39:33 AI_Player.update()		1010,	101,	1110,	101,	111,	110,	111
2017-01-05 16:39:33 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-05 16:39:33 AI_Player.update()		1100,	1010,	11,	11,	1100,	101,	110
2017-01-05 16:39:33 AI_Player.update()		1110,	1110,	1101,	110,	1011,	11,	1011
2017-01-05 16:39:33 AI_Player.update()		101,	1100,	1100,	101,	1010,	1011,	1011
2017-01-05 16:39:33 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 16:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()	update
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()	update
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:33 AI_Player.update()	Search took79ms
2017-01-05 16:39:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 16:39:33 AI_Player.update()		1010,	101,	1110,	101,	111,	1101,	111
2017-01-05 16:39:33 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 16:39:33 AI_Player.update()		1100,	1010,	11,	11,	1100,	11,	110
2017-01-05 16:39:33 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1011,	1011
2017-01-05 16:39:33 AI_Player.update()		101,	1100,	1100,	101,	1010,	11,	1011
2017-01-05 16:39:33 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-05 16:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()	update
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()	update
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:33 AI_Player.update()	Search took125ms
2017-01-05 16:39:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 16:39:33 AI_Player.update()		111,	1010,	101,	1110,	101,	111,	1101
2017-01-05 16:39:33 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 16:39:33 AI_Player.update()		1100,	1010,	11,	11,	1100,	11,	110
2017-01-05 16:39:33 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1011,	1011
2017-01-05 16:39:33 AI_Player.update()		101,	1100,	1100,	101,	1010,	11,	1011
2017-01-05 16:39:33 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-05 16:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()	update
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()	update
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:33 AI_Player.update()	Search took184ms
2017-01-05 16:39:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 16:39:33 AI_Player.update()		111,	1010,	101,	1110,	101,	111,	1101
2017-01-05 16:39:33 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 16:39:33 AI_Player.update()		1010,	11,	11,	1100,	11,	110,	1100
2017-01-05 16:39:33 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1011,	1011
2017-01-05 16:39:33 AI_Player.update()		101,	1100,	1100,	101,	1010,	11,	1011
2017-01-05 16:39:33 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-05 16:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()	update
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()	update
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:33 AI_Player.update()	Search took96ms
2017-01-05 16:39:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 16:39:33 AI_Player.update()		111,	1100,	101,	1110,	101,	111,	1101
2017-01-05 16:39:33 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 16:39:33 AI_Player.update()		1010,	1010,	11,	1100,	11,	110,	1100
2017-01-05 16:39:33 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-05 16:39:33 AI_Player.update()		101,	1110,	1100,	101,	1010,	11,	1011
2017-01-05 16:39:33 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 16:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()	update
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:33 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:33 AI_Player.update()	update
2017-01-05 16:39:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:34 AI_Player.update()	Search took217ms
2017-01-05 16:39:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 16:39:34 AI_Player.update()		111,	1100,	101,	1010,	101,	111,	1101
2017-01-05 16:39:34 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 16:39:34 AI_Player.update()		1010,	1010,	11,	11,	11,	110,	1100
2017-01-05 16:39:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:39:34 AI_Player.update()		101,	1110,	1100,	110,	1010,	11,	1011
2017-01-05 16:39:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:34 AI_Player.update()	Search took27ms
2017-01-05 16:39:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 16:39:34 AI_Player.update()		111,	1100,	101,	1010,	101,	111,	1101
2017-01-05 16:39:34 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 16:39:34 AI_Player.update()		1100,	1010,	1010,	11,	11,	11,	110
2017-01-05 16:39:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:39:34 AI_Player.update()		101,	1110,	1100,	110,	1010,	11,	1011
2017-01-05 16:39:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:34 AI_Player.update()	Search took51ms
2017-01-05 16:39:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 16:39:34 AI_Player.update()		111,	1100,	101,	1010,	101,	111,	1101
2017-01-05 16:39:34 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 16:39:34 AI_Player.update()		1010,	1010,	11,	11,	11,	110,	1100
2017-01-05 16:39:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:39:34 AI_Player.update()		101,	1110,	1100,	110,	1010,	11,	1011
2017-01-05 16:39:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:34 AI_Player.update()	Search took34ms
2017-01-05 16:39:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 16:39:34 AI_Player.update()		111,	1100,	101,	1110,	101,	111,	1101
2017-01-05 16:39:34 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 16:39:34 AI_Player.update()		1010,	1010,	11,	1100,	11,	110,	1100
2017-01-05 16:39:34 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-05 16:39:34 AI_Player.update()		101,	1110,	1100,	101,	1010,	11,	1011
2017-01-05 16:39:34 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:34 AI_Player.update()	Search took148ms
2017-01-05 16:39:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 16:39:34 AI_Player.update()		111,	1100,	101,	1110,	101,	111,	1101
2017-01-05 16:39:34 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 16:39:34 AI_Player.update()		1010,	11,	1100,	11,	110,	1100,	1010
2017-01-05 16:39:34 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-05 16:39:34 AI_Player.update()		101,	1110,	1100,	101,	1010,	11,	1011
2017-01-05 16:39:34 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:34 AI_Player.update()	Search took107ms
2017-01-05 16:39:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 16:39:34 AI_Player.update()		111,	1100,	101,	1010,	101,	111,	1101
2017-01-05 16:39:34 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 16:39:34 AI_Player.update()		1010,	11,	1100,	11,	110,	1100,	1010
2017-01-05 16:39:34 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-05 16:39:34 AI_Player.update()		101,	1110,	1100,	110,	1010,	11,	1011
2017-01-05 16:39:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:34 AI_Player.update()	Search took289ms
2017-01-05 16:39:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 16:39:34 AI_Player.update()		1101,	111,	1100,	101,	1010,	101,	111
2017-01-05 16:39:34 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 16:39:34 AI_Player.update()		1010,	11,	1100,	11,	110,	1100,	1010
2017-01-05 16:39:34 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-05 16:39:34 AI_Player.update()		101,	1110,	1100,	110,	1010,	11,	1011
2017-01-05 16:39:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:39:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:34 AI_Player.update()	update
2017-01-05 16:39:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:35 AI_Player.update()	Search took258ms
2017-01-05 16:39:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-05 16:39:35 AI_Player.update()		1101,	11,	1100,	101,	1010,	101,	111
2017-01-05 16:39:35 AI_Player.update()		1110,	111,	1110,	1110,	111,	101,	1011
2017-01-05 16:39:35 AI_Player.update()		1010,	1010,	1100,	11,	110,	1100,	1010
2017-01-05 16:39:35 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-05 16:39:35 AI_Player.update()		101,	11,	1100,	110,	1010,	11,	1011
2017-01-05 16:39:35 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()	update
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()	update
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:35 AI_Player.update()	Search took294ms
2017-01-05 16:39:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 16:39:35 AI_Player.update()		1101,	111,	1100,	101,	1010,	101,	111
2017-01-05 16:39:35 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 16:39:35 AI_Player.update()		1010,	11,	1100,	11,	110,	1100,	1010
2017-01-05 16:39:35 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-05 16:39:35 AI_Player.update()		101,	1110,	1100,	110,	1010,	11,	1011
2017-01-05 16:39:35 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()	update
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()	update
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:35 AI_Player.update()	Search took88ms
2017-01-05 16:39:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 16:39:35 AI_Player.update()		111,	1100,	101,	1010,	101,	111,	1101
2017-01-05 16:39:35 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 16:39:35 AI_Player.update()		1010,	11,	1100,	11,	110,	1100,	1010
2017-01-05 16:39:35 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-05 16:39:35 AI_Player.update()		101,	1110,	1100,	110,	1010,	11,	1011
2017-01-05 16:39:35 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()	update
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:39:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()	update
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:35 AI_Player.update()	Search took141ms
2017-01-05 16:39:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()		110,	11,	111,	11,	111,	111,	11
2017-01-05 16:39:35 AI_Player.update()		111,	1100,	101,	1010,	101,	101,	1101
2017-01-05 16:39:35 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1100,	1011
2017-01-05 16:39:35 AI_Player.update()		1010,	11,	1100,	11,	110,	1011,	1010
2017-01-05 16:39:35 AI_Player.update()		1110,	11,	1101,	11,	1011,	11,	1011
2017-01-05 16:39:35 AI_Player.update()		101,	1110,	1100,	110,	1010,	1100,	1011
2017-01-05 16:39:35 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-05 16:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()	update
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()	update
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:35 AI_Player.update()	Search took311ms
2017-01-05 16:39:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-05 16:39:35 AI_Player.update()		111,	1100,	101,	1010,	101,	1100,	1101
2017-01-05 16:39:35 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1011,	1011
2017-01-05 16:39:35 AI_Player.update()		1010,	11,	1100,	11,	110,	11,	1010
2017-01-05 16:39:35 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-05 16:39:35 AI_Player.update()		101,	1110,	1100,	110,	1010,	110,	1011
2017-01-05 16:39:35 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()	update
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:35 AI_Player.update()	update
2017-01-05 16:39:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:36 AI_Player.update()	Search took175ms
2017-01-05 16:39:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:36 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-05 16:39:36 AI_Player.update()		1100,	101,	1010,	101,	1100,	1101,	111
2017-01-05 16:39:36 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1011,	1011
2017-01-05 16:39:36 AI_Player.update()		1010,	11,	1100,	11,	110,	11,	1010
2017-01-05 16:39:36 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-05 16:39:36 AI_Player.update()		101,	1110,	1100,	110,	1010,	110,	1011
2017-01-05 16:39:36 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:36 AI_Player.update()	update
2017-01-05 16:39:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:39:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:36 AI_Player.update()	update
2017-01-05 16:39:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:36 AI_Player.update()	Search took839ms
2017-01-05 16:39:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:36 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-05 16:39:36 AI_Player.update()		111,	1100,	101,	1010,	101,	1100,	1101
2017-01-05 16:39:36 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1011,	1011
2017-01-05 16:39:36 AI_Player.update()		1010,	11,	1100,	11,	110,	11,	1010
2017-01-05 16:39:36 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-05 16:39:36 AI_Player.update()		101,	1110,	1100,	110,	1010,	110,	1011
2017-01-05 16:39:36 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:39:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:36 AI_Player.update()	update
2017-01-05 16:39:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:36 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:39:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:36 AI_Player.update()	update
2017-01-05 16:39:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:37 AI_Player.update()	Search took627ms
2017-01-05 16:39:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:37 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-05 16:39:37 AI_Player.update()		1100,	101,	1010,	101,	1100,	1101,	111
2017-01-05 16:39:37 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1011,	1011
2017-01-05 16:39:37 AI_Player.update()		1010,	11,	1100,	11,	110,	11,	1010
2017-01-05 16:39:37 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-05 16:39:37 AI_Player.update()		101,	1110,	1100,	110,	1010,	110,	1011
2017-01-05 16:39:37 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:39:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:37 AI_Player.update()	update
2017-01-05 16:39:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:37 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:39:37 AI_Player.update()	Player b has won!
2017-01-05 16:39:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:37 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:39:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:37 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:39:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:37 AI_Player.update()	update
2017-01-05 16:39:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:37 AI_Player.update()	Search took70ms
2017-01-05 16:39:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:37 AI_Player.update()		110,	1001,	111,	1011,	111,	11,	11
2017-01-05 16:39:37 AI_Player.update()		1110,	11,	1001,	11,	1010,	1011,	1100
2017-01-05 16:39:37 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-05 16:39:37 AI_Player.update()		1101,	111,	101,	101,	1100,	1010,	1010
2017-01-05 16:39:37 AI_Player.update()		1110,	101,	1101,	11,	1011,	1110,	1011
2017-01-05 16:39:37 AI_Player.update()		101,	101,	110,	1110,	110,	11,	1010
2017-01-05 16:39:37 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1011,	1001
2017-01-05 16:39:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:37 AI_Player.update()	update
2017-01-05 16:39:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:37 AI_Player.update()	update
2017-01-05 16:39:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:37 AI_Player.update()	Search took63ms
2017-01-05 16:39:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:37 AI_Player.update()		110,	1001,	111,	1101,	111,	11,	11
2017-01-05 16:39:37 AI_Player.update()		1110,	11,	1001,	1011,	1010,	1011,	1100
2017-01-05 16:39:37 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-05 16:39:37 AI_Player.update()		1101,	111,	101,	1011,	1100,	1010,	1010
2017-01-05 16:39:37 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-05 16:39:37 AI_Player.update()		101,	101,	110,	11,	110,	11,	1010
2017-01-05 16:39:37 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1011,	1001
2017-01-05 16:39:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:37 AI_Player.update()	update
2017-01-05 16:39:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:37 AI_Player.update()	update
2017-01-05 16:39:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:38 AI_Player.update()	Search took364ms
2017-01-05 16:39:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:38 AI_Player.update()		110,	1001,	111,	1101,	111,	11,	11
2017-01-05 16:39:38 AI_Player.update()		1110,	11,	1001,	1011,	1010,	1011,	1100
2017-01-05 16:39:38 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-05 16:39:38 AI_Player.update()		111,	101,	1011,	1100,	1010,	1010,	1101
2017-01-05 16:39:38 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-05 16:39:38 AI_Player.update()		101,	101,	110,	11,	110,	11,	1010
2017-01-05 16:39:38 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1011,	1001
2017-01-05 16:39:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:38 AI_Player.update()	update
2017-01-05 16:39:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:38 AI_Player.update()	update
2017-01-05 16:39:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:38 AI_Player.update()	Search took77ms
2017-01-05 16:39:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:38 AI_Player.update()		110,	1001,	111,	1101,	111,	11,	11
2017-01-05 16:39:38 AI_Player.update()		11,	1001,	1011,	1010,	1011,	1100,	1110
2017-01-05 16:39:38 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-05 16:39:38 AI_Player.update()		111,	101,	1011,	1100,	1010,	1010,	1101
2017-01-05 16:39:38 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-05 16:39:38 AI_Player.update()		101,	101,	110,	11,	110,	11,	1010
2017-01-05 16:39:38 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1011,	1001
2017-01-05 16:39:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:38 AI_Player.update()	update
2017-01-05 16:39:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:38 AI_Player.update()	update
2017-01-05 16:39:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:38 AI_Player.update()	Search took554ms
2017-01-05 16:39:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:38 AI_Player.update()		110,	1001,	111,	1101,	111,	1100,	11
2017-01-05 16:39:38 AI_Player.update()		11,	1001,	1011,	1010,	1011,	110,	1110
2017-01-05 16:39:38 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 16:39:38 AI_Player.update()		111,	101,	1011,	1100,	1010,	1110,	1101
2017-01-05 16:39:38 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:39:38 AI_Player.update()		101,	101,	110,	11,	110,	1011,	1010
2017-01-05 16:39:38 AI_Player.update()		1100,	101,	1101,	1110,	1101,	11,	1001
2017-01-05 16:39:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:38 AI_Player.update()	update
2017-01-05 16:39:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:38 AI_Player.update()	update
2017-01-05 16:39:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:39 AI_Player.update()	Search took519ms
2017-01-05 16:39:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:39 AI_Player.update()		110,	1001,	111,	1101,	111,	1100,	11
2017-01-05 16:39:39 AI_Player.update()		11,	101,	1011,	1010,	1011,	110,	1110
2017-01-05 16:39:39 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 16:39:39 AI_Player.update()		111,	101,	1011,	1100,	1010,	1110,	1101
2017-01-05 16:39:39 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:39:39 AI_Player.update()		101,	101,	110,	11,	110,	1011,	1010
2017-01-05 16:39:39 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	11,	1001
2017-01-05 16:39:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:39 AI_Player.update()	update
2017-01-05 16:39:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:39 AI_Player.update()	update
2017-01-05 16:39:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:39 AI_Player.update()	Search took563ms
2017-01-05 16:39:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:39 AI_Player.update()		110,	1001,	111,	1101,	111,	110,	11
2017-01-05 16:39:39 AI_Player.update()		11,	101,	1011,	1010,	1011,	1010,	1110
2017-01-05 16:39:39 AI_Player.update()		1110,	101,	1110,	11,	111,	1110,	1011
2017-01-05 16:39:39 AI_Player.update()		111,	101,	1011,	1100,	1010,	11,	1101
2017-01-05 16:39:39 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-05 16:39:39 AI_Player.update()		101,	101,	110,	11,	110,	11,	1010
2017-01-05 16:39:39 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1100,	1001
2017-01-05 16:39:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:39 AI_Player.update()	update
2017-01-05 16:39:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:39 AI_Player.update()	update
2017-01-05 16:39:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:39 AI_Player.update()	Search took66ms
2017-01-05 16:39:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:39 AI_Player.update()		110,	1001,	111,	1101,	111,	110,	11
2017-01-05 16:39:39 AI_Player.update()		11,	101,	1011,	1010,	1011,	1010,	1110
2017-01-05 16:39:39 AI_Player.update()		1110,	101,	1110,	11,	111,	1110,	1011
2017-01-05 16:39:39 AI_Player.update()		1101,	111,	101,	1011,	1100,	1010,	11
2017-01-05 16:39:39 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-05 16:39:39 AI_Player.update()		101,	101,	110,	11,	110,	11,	1010
2017-01-05 16:39:39 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1100,	1001
2017-01-05 16:39:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:39 AI_Player.update()	update
2017-01-05 16:39:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:39 AI_Player.update()	update
2017-01-05 16:39:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:40 AI_Player.update()	Search took218ms
2017-01-05 16:39:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:40 AI_Player.update()		110,	1001,	111,	1010,	111,	110,	11
2017-01-05 16:39:40 AI_Player.update()		11,	101,	1011,	11,	1011,	1010,	1110
2017-01-05 16:39:40 AI_Player.update()		1110,	101,	1110,	1011,	111,	1110,	1011
2017-01-05 16:39:40 AI_Player.update()		1101,	111,	101,	101,	1100,	1010,	11
2017-01-05 16:39:40 AI_Player.update()		1110,	101,	1101,	11,	1011,	1011,	1011
2017-01-05 16:39:40 AI_Player.update()		101,	101,	110,	1110,	110,	11,	1010
2017-01-05 16:39:40 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:39:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:40 AI_Player.update()	update
2017-01-05 16:39:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:40 AI_Player.update()	update
2017-01-05 16:39:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:40 AI_Player.update()	Search took503ms
2017-01-05 16:39:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:40 AI_Player.update()		110,	1001,	111,	1010,	111,	1100,	11
2017-01-05 16:39:40 AI_Player.update()		11,	101,	1011,	11,	1011,	110,	1110
2017-01-05 16:39:40 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:40 AI_Player.update()		1101,	111,	101,	101,	1100,	1110,	11
2017-01-05 16:39:40 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 16:39:40 AI_Player.update()		101,	101,	110,	1110,	110,	1011,	1010
2017-01-05 16:39:40 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-05 16:39:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:40 AI_Player.update()	update
2017-01-05 16:39:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:40 AI_Player.update()	update
2017-01-05 16:39:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:41 AI_Player.update()	Search took540ms
2017-01-05 16:39:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:41 AI_Player.update()		110,	1001,	111,	1010,	111,	1100,	11
2017-01-05 16:39:41 AI_Player.update()		1110,	11,	101,	1011,	11,	1011,	110
2017-01-05 16:39:41 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:41 AI_Player.update()		1101,	111,	101,	101,	1100,	1110,	11
2017-01-05 16:39:41 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 16:39:41 AI_Player.update()		101,	101,	110,	1110,	110,	1011,	1010
2017-01-05 16:39:41 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-05 16:39:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:41 AI_Player.update()	update
2017-01-05 16:39:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:41 AI_Player.update()	update
2017-01-05 16:39:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:41 AI_Player.update()	Search took616ms
2017-01-05 16:39:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:41 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-05 16:39:41 AI_Player.update()		1110,	101,	101,	1011,	11,	1011,	110
2017-01-05 16:39:41 AI_Player.update()		1110,	111,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:41 AI_Player.update()		1101,	101,	101,	101,	1100,	1110,	11
2017-01-05 16:39:41 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 16:39:41 AI_Player.update()		101,	1001,	110,	1110,	110,	1011,	1010
2017-01-05 16:39:41 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-05 16:39:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:41 AI_Player.update()	update
2017-01-05 16:39:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:39:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:41 AI_Player.update()	update
2017-01-05 16:39:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:42 AI_Player.update()	Search took340ms
2017-01-05 16:39:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-05 16:39:42 AI_Player.update()		1110,	111,	101,	1011,	11,	1011,	110
2017-01-05 16:39:42 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:42 AI_Player.update()		1101,	101,	101,	101,	1100,	1110,	11
2017-01-05 16:39:42 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 16:39:42 AI_Player.update()		101,	1001,	110,	1110,	110,	1011,	1010
2017-01-05 16:39:42 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-05 16:39:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:39:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()	update
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()	update
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:42 AI_Player.update()	Search took89ms
2017-01-05 16:39:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-05 16:39:42 AI_Player.update()		1110,	101,	101,	1011,	11,	1011,	110
2017-01-05 16:39:42 AI_Player.update()		1110,	111,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:42 AI_Player.update()		1101,	101,	101,	101,	1100,	1110,	11
2017-01-05 16:39:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 16:39:42 AI_Player.update()		101,	1001,	110,	1110,	110,	1011,	1010
2017-01-05 16:39:42 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-05 16:39:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()	update
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:39:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()	update
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:42 AI_Player.update()	Search took254ms
2017-01-05 16:39:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()		110,	11,	111,	1011,	111,	1100,	11
2017-01-05 16:39:42 AI_Player.update()		1110,	101,	101,	1011,	11,	1011,	110
2017-01-05 16:39:42 AI_Player.update()		1110,	111,	1110,	101,	111,	1010,	1011
2017-01-05 16:39:42 AI_Player.update()		1101,	101,	101,	11,	1100,	1110,	11
2017-01-05 16:39:42 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-05 16:39:42 AI_Player.update()		101,	1001,	110,	1101,	110,	1011,	1010
2017-01-05 16:39:42 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-05 16:39:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:39:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()	update
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()	update
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:42 AI_Player.update()	Search took125ms
2017-01-05 16:39:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-05 16:39:42 AI_Player.update()		1110,	101,	101,	1011,	11,	1011,	110
2017-01-05 16:39:42 AI_Player.update()		1110,	111,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:42 AI_Player.update()		1101,	101,	101,	101,	1100,	1110,	11
2017-01-05 16:39:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 16:39:42 AI_Player.update()		101,	1001,	110,	1110,	110,	1011,	1010
2017-01-05 16:39:42 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-05 16:39:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()	update
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()	update
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:42 AI_Player.update()	Search took151ms
2017-01-05 16:39:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 16:39:42 AI_Player.update()		1110,	101,	101,	1011,	11,	1100,	110
2017-01-05 16:39:42 AI_Player.update()		1110,	111,	1110,	1011,	111,	1011,	1011
2017-01-05 16:39:42 AI_Player.update()		1101,	101,	101,	101,	1100,	1010,	11
2017-01-05 16:39:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	1110,	1011
2017-01-05 16:39:42 AI_Player.update()		101,	1001,	110,	1110,	110,	1010,	1010
2017-01-05 16:39:42 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1011,	1001
2017-01-05 16:39:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()	update
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:42 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:42 AI_Player.update()	update
2017-01-05 16:39:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:43 AI_Player.update()	Search took559ms
2017-01-05 16:39:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:43 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 16:39:43 AI_Player.update()		110,	1110,	101,	101,	1011,	11,	1100
2017-01-05 16:39:43 AI_Player.update()		1110,	111,	1110,	1011,	111,	1011,	1011
2017-01-05 16:39:43 AI_Player.update()		1101,	101,	101,	101,	1100,	1010,	11
2017-01-05 16:39:43 AI_Player.update()		1110,	101,	1101,	11,	1011,	1110,	1011
2017-01-05 16:39:43 AI_Player.update()		101,	1001,	110,	1110,	110,	1010,	1010
2017-01-05 16:39:43 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1011,	1001
2017-01-05 16:39:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:43 AI_Player.update()	update
2017-01-05 16:39:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:43 AI_Player.update()	update
2017-01-05 16:39:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:43 AI_Player.update()	Search took518ms
2017-01-05 16:39:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:43 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 16:39:43 AI_Player.update()		110,	1110,	101,	101,	1011,	1011,	1100
2017-01-05 16:39:43 AI_Player.update()		1110,	111,	1110,	1011,	111,	1010,	1011
2017-01-05 16:39:43 AI_Player.update()		1101,	101,	101,	101,	1100,	1110,	11
2017-01-05 16:39:43 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 16:39:43 AI_Player.update()		101,	1001,	110,	1110,	110,	1011,	1010
2017-01-05 16:39:43 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-05 16:39:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:43 AI_Player.update()	update
2017-01-05 16:39:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:43 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:39:43 AI_Player.update()	Player a has won!
2017-01-05 16:39:43 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:43 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:39:43 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:43 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:39:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:43 AI_Player.update()	update
2017-01-05 16:39:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:43 AI_Player.update()	Search took20ms
2017-01-05 16:39:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:43 AI_Player.update()		110,	1010,	111,	101,	111,	111,	11
2017-01-05 16:39:43 AI_Player.update()		1110,	1001,	1100,	1001,	1010,	101,	110
2017-01-05 16:39:43 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-05 16:39:43 AI_Player.update()		101,	1001,	101,	1011,	1010,	1010,	1101
2017-01-05 16:39:43 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1011,	1011
2017-01-05 16:39:43 AI_Player.update()		110,	101,	101,	1010,	1010,	101,	1110
2017-01-05 16:39:43 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-05 16:39:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:43 AI_Player.update()	update
2017-01-05 16:39:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:43 AI_Player.update()	update
2017-01-05 16:39:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:44 AI_Player.update()	Search took170ms
2017-01-05 16:39:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-05 16:39:44 AI_Player.update()		1110,	11,	1100,	1001,	1010,	101,	110
2017-01-05 16:39:44 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-05 16:39:44 AI_Player.update()		101,	1010,	101,	1011,	1010,	1010,	1101
2017-01-05 16:39:44 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1011,	1011
2017-01-05 16:39:44 AI_Player.update()		110,	1011,	101,	1010,	1010,	101,	1110
2017-01-05 16:39:44 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-05 16:39:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()	update
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()	update
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:44 AI_Player.update()	Search took74ms
2017-01-05 16:39:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-05 16:39:44 AI_Player.update()		1110,	11,	1100,	1001,	1010,	101,	110
2017-01-05 16:39:44 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-05 16:39:44 AI_Player.update()		101,	1010,	101,	1011,	1010,	1010,	1101
2017-01-05 16:39:44 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1011,	1011
2017-01-05 16:39:44 AI_Player.update()		1110,	110,	1011,	101,	1010,	1010,	101
2017-01-05 16:39:44 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-05 16:39:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()	update
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()	update
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:44 AI_Player.update()	Search took193ms
2017-01-05 16:39:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()		110,	1001,	111,	1001,	111,	111,	11
2017-01-05 16:39:44 AI_Player.update()		1110,	11,	1100,	1010,	1010,	101,	110
2017-01-05 16:39:44 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1100,	1011
2017-01-05 16:39:44 AI_Player.update()		101,	1010,	101,	1010,	1010,	1010,	1101
2017-01-05 16:39:44 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-05 16:39:44 AI_Player.update()		1110,	110,	1011,	101,	1010,	1010,	101
2017-01-05 16:39:44 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-05 16:39:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()	update
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:39:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()	update
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:44 AI_Player.update()	Search took56ms
2017-01-05 16:39:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-05 16:39:44 AI_Player.update()		1110,	11,	1100,	1001,	1010,	101,	110
2017-01-05 16:39:44 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-05 16:39:44 AI_Player.update()		101,	1010,	101,	1011,	1010,	1010,	1101
2017-01-05 16:39:44 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1011,	1011
2017-01-05 16:39:44 AI_Player.update()		1110,	110,	1011,	101,	1010,	1010,	101
2017-01-05 16:39:44 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-05 16:39:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:39:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()	update
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:39:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()	update
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:44 AI_Player.update()	Search took313ms
2017-01-05 16:39:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-05 16:39:44 AI_Player.update()		1110,	1001,	1100,	1001,	1010,	101,	110
2017-01-05 16:39:44 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-05 16:39:44 AI_Player.update()		101,	101,	101,	1011,	1010,	1010,	1101
2017-01-05 16:39:44 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1011,	1011
2017-01-05 16:39:44 AI_Player.update()		1110,	1010,	1011,	101,	1010,	1010,	101
2017-01-05 16:39:44 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-05 16:39:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:39:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()	update
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:39:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()	update
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:44 AI_Player.update()	Search took219ms
2017-01-05 16:39:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-05 16:39:44 AI_Player.update()		1110,	1001,	1100,	101,	1010,	101,	110
2017-01-05 16:39:44 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-05 16:39:44 AI_Player.update()		101,	101,	101,	1010,	1010,	1010,	1101
2017-01-05 16:39:44 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1011,	1011
2017-01-05 16:39:44 AI_Player.update()		1110,	1010,	1011,	1010,	1010,	1010,	101
2017-01-05 16:39:44 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-05 16:39:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:39:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()	update
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:39:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:44 AI_Player.update()	update
2017-01-05 16:39:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:45 AI_Player.update()	Search took211ms
2017-01-05 16:39:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-05 16:39:45 AI_Player.update()		1110,	1010,	1100,	101,	1010,	101,	110
2017-01-05 16:39:45 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 16:39:45 AI_Player.update()		101,	110,	101,	1010,	1010,	1010,	1101
2017-01-05 16:39:45 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1011,	1011
2017-01-05 16:39:45 AI_Player.update()		1110,	1001,	1011,	1010,	1010,	1010,	101
2017-01-05 16:39:45 AI_Player.update()		1100,	11,	1101,	101,	1101,	110,	1001
2017-01-05 16:39:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:39:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()	update
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:39:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()	update
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:45 AI_Player.update()	Search took145ms
2017-01-05 16:39:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-05 16:39:45 AI_Player.update()		1010,	1100,	101,	1010,	101,	110,	1110
2017-01-05 16:39:45 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 16:39:45 AI_Player.update()		101,	110,	101,	1010,	1010,	1010,	1101
2017-01-05 16:39:45 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1011,	1011
2017-01-05 16:39:45 AI_Player.update()		1110,	1001,	1011,	1010,	1010,	1010,	101
2017-01-05 16:39:45 AI_Player.update()		1100,	11,	1101,	101,	1101,	110,	1001
2017-01-05 16:39:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:39:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()	update
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:39:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()	update
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:45 AI_Player.update()	Search took172ms
2017-01-05 16:39:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 16:39:45 AI_Player.update()		1010,	1100,	101,	1010,	101,	1100,	1110
2017-01-05 16:39:45 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:39:45 AI_Player.update()		101,	110,	101,	1010,	1010,	1011,	1101
2017-01-05 16:39:45 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:39:45 AI_Player.update()		1110,	1001,	1011,	1010,	1010,	110,	101
2017-01-05 16:39:45 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:39:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()	update
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:39:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()	update
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:45 AI_Player.update()	Search took113ms
2017-01-05 16:39:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 16:39:45 AI_Player.update()		1110,	1010,	1100,	101,	1010,	101,	1100
2017-01-05 16:39:45 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:39:45 AI_Player.update()		101,	110,	101,	1010,	1010,	1011,	1101
2017-01-05 16:39:45 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:39:45 AI_Player.update()		1110,	1001,	1011,	1010,	1010,	110,	101
2017-01-05 16:39:45 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:39:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()	update
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()	update
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:45 AI_Player.update()	Search took211ms
2017-01-05 16:39:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 16:39:45 AI_Player.update()		1110,	1010,	1100,	101,	1010,	101,	1100
2017-01-05 16:39:45 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:39:45 AI_Player.update()		101,	110,	101,	1010,	1010,	1011,	1101
2017-01-05 16:39:45 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:39:45 AI_Player.update()		1001,	1011,	1010,	1010,	110,	101,	1110
2017-01-05 16:39:45 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:39:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()	update
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()	update
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:45 AI_Player.update()	Search took49ms
2017-01-05 16:39:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 16:39:45 AI_Player.update()		1110,	101,	1100,	101,	1010,	101,	1100
2017-01-05 16:39:45 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-05 16:39:45 AI_Player.update()		101,	1010,	101,	1010,	1010,	1011,	1101
2017-01-05 16:39:45 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:39:45 AI_Player.update()		1001,	11,	1010,	1010,	110,	101,	1110
2017-01-05 16:39:45 AI_Player.update()		1100,	1001,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()	update
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:45 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:45 AI_Player.update()	update
2017-01-05 16:39:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:46 AI_Player.update()	Search took207ms
2017-01-05 16:39:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 16:39:46 AI_Player.update()		1110,	101,	1100,	101,	1010,	101,	1100
2017-01-05 16:39:46 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-05 16:39:46 AI_Player.update()		1010,	101,	1010,	1010,	1011,	1101,	101
2017-01-05 16:39:46 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:39:46 AI_Player.update()		1001,	11,	1010,	1010,	110,	101,	1110
2017-01-05 16:39:46 AI_Player.update()		1100,	1001,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:46 AI_Player.update()	Search took165ms
2017-01-05 16:39:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 16:39:46 AI_Player.update()		101,	1100,	101,	1010,	101,	1100,	1110
2017-01-05 16:39:46 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-05 16:39:46 AI_Player.update()		1010,	101,	1010,	1010,	1011,	1101,	101
2017-01-05 16:39:46 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:39:46 AI_Player.update()		1001,	11,	1010,	1010,	110,	101,	1110
2017-01-05 16:39:46 AI_Player.update()		1100,	1001,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:39:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:46 AI_Player.update()	Search took240ms
2017-01-05 16:39:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 16:39:46 AI_Player.update()		101,	1100,	101,	1010,	101,	1100,	1110
2017-01-05 16:39:46 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-05 16:39:46 AI_Player.update()		1010,	101,	1010,	1010,	1011,	1101,	101
2017-01-05 16:39:46 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:39:46 AI_Player.update()		1110,	1001,	11,	1010,	1010,	110,	101
2017-01-05 16:39:46 AI_Player.update()		1100,	1001,	1101,	101,	1101,	111,	1001
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:46 AI_Player.update()	Search took113ms
2017-01-05 16:39:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()		110,	1010,	111,	101,	111,	111,	11
2017-01-05 16:39:46 AI_Player.update()		101,	1100,	101,	1010,	101,	110,	1110
2017-01-05 16:39:46 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-05 16:39:46 AI_Player.update()		1010,	101,	1010,	1010,	1011,	1010,	101
2017-01-05 16:39:46 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1101,	1011
2017-01-05 16:39:46 AI_Player.update()		1110,	1001,	11,	1010,	1010,	1010,	101
2017-01-05 16:39:46 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:46 AI_Player.update()	Search took180ms
2017-01-05 16:39:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()		110,	1010,	111,	101,	111,	111,	11
2017-01-05 16:39:46 AI_Player.update()		1100,	101,	1010,	101,	110,	1110,	101
2017-01-05 16:39:46 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-05 16:39:46 AI_Player.update()		1010,	101,	1010,	1010,	1011,	1010,	101
2017-01-05 16:39:46 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1101,	1011
2017-01-05 16:39:46 AI_Player.update()		1110,	1001,	11,	1010,	1010,	1010,	101
2017-01-05 16:39:46 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:39:46 AI_Player.update()	Player b has won!
2017-01-05 16:39:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:46 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:39:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:46 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:39:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:46 AI_Player.update()	Search took33ms
2017-01-05 16:39:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:39:46 AI_Player.update()		1110,	1010,	1010,	110,	1001,	1010,	111
2017-01-05 16:39:46 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-05 16:39:46 AI_Player.update()		1001,	11,	101,	101,	1001,	111,	1001
2017-01-05 16:39:46 AI_Player.update()		1110,	111,	1101,	11,	1011,	11,	1011
2017-01-05 16:39:46 AI_Player.update()		11,	1110,	1010,	1010,	1100,	101,	1001
2017-01-05 16:39:46 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:46 AI_Player.update()	Search took96ms
2017-01-05 16:39:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-05 16:39:46 AI_Player.update()		1110,	1010,	1010,	1010,	1001,	1010,	111
2017-01-05 16:39:46 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 16:39:46 AI_Player.update()		1001,	11,	101,	11,	1001,	111,	1001
2017-01-05 16:39:46 AI_Player.update()		1110,	111,	1101,	1010,	1011,	11,	1011
2017-01-05 16:39:46 AI_Player.update()		11,	1110,	1010,	110,	1100,	101,	1001
2017-01-05 16:39:46 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:39:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:46 AI_Player.update()	update
2017-01-05 16:39:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:47 AI_Player.update()	Search took54ms
2017-01-05 16:39:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-05 16:39:47 AI_Player.update()		1110,	1010,	1010,	1010,	1001,	1010,	111
2017-01-05 16:39:47 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	101,	11,	1001,	111,	1001,	1001
2017-01-05 16:39:47 AI_Player.update()		1110,	111,	1101,	1010,	1011,	11,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1110,	1010,	110,	1100,	101,	1001
2017-01-05 16:39:47 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:47 AI_Player.update()	Search took106ms
2017-01-05 16:39:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-05 16:39:47 AI_Player.update()		1010,	1010,	1010,	1001,	1010,	111,	1110
2017-01-05 16:39:47 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	101,	11,	1001,	111,	1001,	1001
2017-01-05 16:39:47 AI_Player.update()		1110,	111,	1101,	1010,	1011,	11,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1110,	1010,	110,	1100,	101,	1001
2017-01-05 16:39:47 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:47 AI_Player.update()	Search took307ms
2017-01-05 16:39:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-05 16:39:47 AI_Player.update()		1010,	110,	1010,	1001,	1010,	111,	1110
2017-01-05 16:39:47 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	111,	11,	1001,	111,	1001,	1001
2017-01-05 16:39:47 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1100,	1010,	110,	1100,	101,	1001
2017-01-05 16:39:47 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:47 AI_Player.update()	Search took103ms
2017-01-05 16:39:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:39:47 AI_Player.update()		1010,	110,	1010,	110,	1010,	111,	1110
2017-01-05 16:39:47 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	111,	11,	101,	111,	1001,	1001
2017-01-05 16:39:47 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	11,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1100,	1010,	1010,	1100,	101,	1001
2017-01-05 16:39:47 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:47 AI_Player.update()	Search took98ms
2017-01-05 16:39:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:39:47 AI_Player.update()		110,	1010,	110,	1010,	111,	1110,	1010
2017-01-05 16:39:47 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	111,	11,	101,	111,	1001,	1001
2017-01-05 16:39:47 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	11,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1100,	1010,	1010,	1100,	101,	1001
2017-01-05 16:39:47 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:47 AI_Player.update()	Search took58ms
2017-01-05 16:39:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:39:47 AI_Player.update()		110,	101,	110,	1010,	111,	1110,	1010
2017-01-05 16:39:47 AI_Player.update()		1110,	111,	1110,	1001,	111,	110,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1110,	11,	101,	111,	1001,	1001
2017-01-05 16:39:47 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	11,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1010,	1010,	1010,	1100,	101,	1001
2017-01-05 16:39:47 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:47 AI_Player.update()	Search took81ms
2017-01-05 16:39:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:39:47 AI_Player.update()		110,	101,	110,	1001,	111,	1110,	1010
2017-01-05 16:39:47 AI_Player.update()		1110,	111,	1110,	101,	111,	110,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1110,	11,	1001,	111,	1001,	1001
2017-01-05 16:39:47 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	11,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1010,	1010,	110,	1100,	101,	1001
2017-01-05 16:39:47 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:47 AI_Player.update()	Search took71ms
2017-01-05 16:39:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-05 16:39:47 AI_Player.update()		110,	101,	110,	101,	111,	1110,	1010
2017-01-05 16:39:47 AI_Player.update()		1110,	111,	1110,	1001,	111,	110,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1110,	11,	1010,	111,	1001,	1001
2017-01-05 16:39:47 AI_Player.update()		1110,	1100,	1101,	110,	1011,	11,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1010,	1010,	1010,	1100,	101,	1001
2017-01-05 16:39:47 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:47 AI_Player.update()	Search took45ms
2017-01-05 16:39:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()		110,	1010,	111,	1001,	111,	1110,	11
2017-01-05 16:39:47 AI_Player.update()		110,	101,	110,	101,	111,	110,	1010
2017-01-05 16:39:47 AI_Player.update()		1110,	111,	1110,	1001,	111,	1001,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1110,	11,	1010,	111,	11,	1001
2017-01-05 16:39:47 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1010,	1010,	1010,	1100,	1010,	1001
2017-01-05 16:39:47 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:47 AI_Player.update()	Search took55ms
2017-01-05 16:39:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()		110,	1010,	111,	101,	111,	1110,	11
2017-01-05 16:39:47 AI_Player.update()		110,	101,	110,	1001,	111,	110,	1010
2017-01-05 16:39:47 AI_Player.update()		1110,	111,	1110,	1010,	111,	1001,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1110,	11,	110,	111,	11,	1001
2017-01-05 16:39:47 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:47 AI_Player.update()		11,	1010,	1010,	1010,	1100,	1010,	1001
2017-01-05 16:39:47 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 16:39:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:47 AI_Player.update()	update
2017-01-05 16:39:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:48 AI_Player.update()	Search took168ms
2017-01-05 16:39:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()		110,	1010,	111,	101,	111,	1110,	11
2017-01-05 16:39:48 AI_Player.update()		1010,	110,	101,	110,	1001,	111,	110
2017-01-05 16:39:48 AI_Player.update()		1110,	111,	1110,	1010,	111,	1001,	1011
2017-01-05 16:39:48 AI_Player.update()		11,	1110,	11,	110,	111,	11,	1001
2017-01-05 16:39:48 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:48 AI_Player.update()		11,	1010,	1010,	1010,	1100,	1010,	1001
2017-01-05 16:39:48 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:39:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:48 AI_Player.update()	Search took90ms
2017-01-05 16:39:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()		110,	1010,	111,	110,	111,	1110,	11
2017-01-05 16:39:48 AI_Player.update()		1010,	110,	101,	1010,	1001,	111,	110
2017-01-05 16:39:48 AI_Player.update()		1110,	111,	1110,	110,	111,	1001,	1011
2017-01-05 16:39:48 AI_Player.update()		11,	1110,	11,	1010,	111,	11,	1001
2017-01-05 16:39:48 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 16:39:48 AI_Player.update()		11,	1010,	1010,	1001,	1100,	1010,	1001
2017-01-05 16:39:48 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:48 AI_Player.update()	Search took100ms
2017-01-05 16:39:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()		110,	1010,	111,	110,	111,	111,	11
2017-01-05 16:39:48 AI_Player.update()		1010,	110,	101,	1010,	1001,	1001,	110
2017-01-05 16:39:48 AI_Player.update()		1110,	111,	1110,	110,	111,	11,	1011
2017-01-05 16:39:48 AI_Player.update()		11,	1110,	11,	1010,	111,	101,	1001
2017-01-05 16:39:48 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:39:48 AI_Player.update()		11,	1010,	1010,	1001,	1100,	101,	1001
2017-01-05 16:39:48 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1110,	1001
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:39:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:48 AI_Player.update()	Search took100ms
2017-01-05 16:39:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()		110,	1010,	111,	110,	111,	111,	11
2017-01-05 16:39:48 AI_Player.update()		1010,	110,	101,	1010,	1001,	1001,	110
2017-01-05 16:39:48 AI_Player.update()		1110,	111,	1110,	110,	111,	11,	1011
2017-01-05 16:39:48 AI_Player.update()		1110,	11,	1010,	111,	101,	1001,	11
2017-01-05 16:39:48 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:39:48 AI_Player.update()		11,	1010,	1010,	1001,	1100,	101,	1001
2017-01-05 16:39:48 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1110,	1001
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:48 AI_Player.update()	Search took166ms
2017-01-05 16:39:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()		110,	1010,	111,	101,	111,	111,	11
2017-01-05 16:39:48 AI_Player.update()		1010,	110,	101,	110,	1001,	1001,	110
2017-01-05 16:39:48 AI_Player.update()		1110,	111,	1110,	1010,	111,	11,	1011
2017-01-05 16:39:48 AI_Player.update()		1110,	11,	1010,	110,	101,	1001,	11
2017-01-05 16:39:48 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1010,	1011
2017-01-05 16:39:48 AI_Player.update()		11,	1010,	1010,	1010,	1100,	101,	1001
2017-01-05 16:39:48 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1110,	1001
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:39:48 AI_Player.update()	Player a has won!
2017-01-05 16:39:48 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:48 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:39:48 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:39:48 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:39:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:48 AI_Player.update()	Search took65ms
2017-01-05 16:39:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()		110,	111,	111,	1001,	111,	1100,	11
2017-01-05 16:39:48 AI_Player.update()		11,	1011,	1010,	101,	101,	1001,	101
2017-01-05 16:39:48 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 16:39:48 AI_Player.update()		1100,	1010,	1010,	1100,	11,	1010,	1010
2017-01-05 16:39:48 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:39:48 AI_Player.update()		101,	1010,	1010,	101,	11,	1100,	1001
2017-01-05 16:39:48 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:48 AI_Player.update()	Search took20ms
2017-01-05 16:39:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()		110,	111,	111,	1001,	111,	1100,	11
2017-01-05 16:39:48 AI_Player.update()		101,	11,	1011,	1010,	101,	101,	1001
2017-01-05 16:39:48 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 16:39:48 AI_Player.update()		1100,	1010,	1010,	1100,	11,	1010,	1010
2017-01-05 16:39:48 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:39:48 AI_Player.update()		101,	1010,	1010,	101,	11,	1100,	1001
2017-01-05 16:39:48 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:48 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:48 AI_Player.update()	update
2017-01-05 16:39:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:49 AI_Player.update()	Search took311ms
2017-01-05 16:39:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()		110,	111,	111,	1001,	111,	101,	11
2017-01-05 16:39:49 AI_Player.update()		101,	11,	1011,	1010,	101,	1010,	1001
2017-01-05 16:39:49 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 16:39:49 AI_Player.update()		1100,	1010,	1010,	1100,	11,	1001,	1010
2017-01-05 16:39:49 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:39:49 AI_Player.update()		101,	1010,	1010,	101,	11,	1100,	1001
2017-01-05 16:39:49 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:49 AI_Player.update()	Search took68ms
2017-01-05 16:39:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()		110,	111,	111,	1001,	111,	1100,	11
2017-01-05 16:39:49 AI_Player.update()		101,	11,	1011,	1010,	101,	101,	1001
2017-01-05 16:39:49 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 16:39:49 AI_Player.update()		1100,	1010,	1010,	1100,	11,	1010,	1010
2017-01-05 16:39:49 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:39:49 AI_Player.update()		101,	1010,	1010,	101,	11,	1100,	1001
2017-01-05 16:39:49 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:49 AI_Player.update()	Search took320ms
2017-01-05 16:39:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()		110,	111,	111,	1001,	111,	1100,	11
2017-01-05 16:39:49 AI_Player.update()		101,	11,	1011,	1010,	101,	101,	1001
2017-01-05 16:39:49 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 16:39:49 AI_Player.update()		1100,	1010,	1010,	1100,	11,	1010,	1010
2017-01-05 16:39:49 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:39:49 AI_Player.update()		1010,	1010,	101,	11,	1100,	1001,	101
2017-01-05 16:39:49 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:49 AI_Player.update()	Search took64ms
2017-01-05 16:39:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()		110,	111,	111,	1001,	111,	1100,	11
2017-01-05 16:39:49 AI_Player.update()		101,	11,	1011,	1010,	101,	1100,	1001
2017-01-05 16:39:49 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-05 16:39:49 AI_Player.update()		1100,	1010,	1010,	1100,	11,	1010,	1010
2017-01-05 16:39:49 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:39:49 AI_Player.update()		1010,	1010,	101,	11,	1100,	1001,	101
2017-01-05 16:39:49 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:49 AI_Player.update()	Search took72ms
2017-01-05 16:39:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()		110,	111,	111,	1001,	111,	1100,	11
2017-01-05 16:39:49 AI_Player.update()		101,	11,	1011,	1010,	101,	101,	1001
2017-01-05 16:39:49 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 16:39:49 AI_Player.update()		1100,	1010,	1010,	1100,	11,	1010,	1010
2017-01-05 16:39:49 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:39:49 AI_Player.update()		1010,	1010,	101,	11,	1100,	1001,	101
2017-01-05 16:39:49 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:49 AI_Player.update()	Search took29ms
2017-01-05 16:39:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()		110,	111,	111,	1010,	111,	1100,	11
2017-01-05 16:39:49 AI_Player.update()		101,	11,	1011,	11,	101,	101,	1001
2017-01-05 16:39:49 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 16:39:49 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-05 16:39:49 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-05 16:39:49 AI_Player.update()		1010,	1010,	101,	1001,	1100,	1001,	101
2017-01-05 16:39:49 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:49 AI_Player.update()	Search took187ms
2017-01-05 16:39:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()		110,	111,	111,	1010,	111,	1100,	11
2017-01-05 16:39:49 AI_Player.update()		101,	11,	1011,	11,	101,	101,	1001
2017-01-05 16:39:49 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 16:39:49 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-05 16:39:49 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-05 16:39:49 AI_Player.update()		101,	1010,	1010,	101,	1001,	1100,	1001
2017-01-05 16:39:49 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:49 AI_Player.update()	update
2017-01-05 16:39:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:50 AI_Player.update()	Search took239ms
2017-01-05 16:39:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:50 AI_Player.update()		110,	111,	111,	1001,	111,	1100,	11
2017-01-05 16:39:50 AI_Player.update()		101,	11,	1011,	1010,	101,	101,	1001
2017-01-05 16:39:50 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 16:39:50 AI_Player.update()		1100,	1010,	1010,	1100,	11,	1010,	1010
2017-01-05 16:39:50 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:39:50 AI_Player.update()		101,	1010,	1010,	11,	1001,	1100,	1001
2017-01-05 16:39:50 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:39:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:50 AI_Player.update()	update
2017-01-05 16:39:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:50 AI_Player.update()	update
2017-01-05 16:39:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:50 AI_Player.update()	Search took160ms
2017-01-05 16:39:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:50 AI_Player.update()		110,	111,	111,	1001,	111,	1100,	11
2017-01-05 16:39:50 AI_Player.update()		101,	11,	1011,	1010,	101,	101,	1001
2017-01-05 16:39:50 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 16:39:50 AI_Player.update()		1100,	1010,	1010,	1100,	11,	1010,	1010
2017-01-05 16:39:50 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:39:50 AI_Player.update()		1010,	1010,	11,	1001,	1100,	1001,	101
2017-01-05 16:39:50 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:50 AI_Player.update()	update
2017-01-05 16:39:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:50 AI_Player.update()	update
2017-01-05 16:39:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:50 AI_Player.update()	Search took659ms
2017-01-05 16:39:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:50 AI_Player.update()		110,	111,	111,	101,	111,	1100,	11
2017-01-05 16:39:50 AI_Player.update()		101,	11,	1011,	1001,	101,	101,	1001
2017-01-05 16:39:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-05 16:39:50 AI_Player.update()		1100,	1010,	1010,	11,	11,	1010,	1010
2017-01-05 16:39:50 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:39:50 AI_Player.update()		1010,	1010,	11,	1010,	1100,	1001,	101
2017-01-05 16:39:50 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:39:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:50 AI_Player.update()	update
2017-01-05 16:39:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:39:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:50 AI_Player.update()	update
2017-01-05 16:39:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:50 AI_Player.update()	Search took76ms
2017-01-05 16:39:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:50 AI_Player.update()		110,	111,	111,	101,	111,	1100,	11
2017-01-05 16:39:50 AI_Player.update()		101,	11,	1011,	1001,	101,	101,	1001
2017-01-05 16:39:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-05 16:39:50 AI_Player.update()		1010,	1100,	1010,	1010,	11,	11,	1010
2017-01-05 16:39:50 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:39:50 AI_Player.update()		1010,	1010,	11,	1010,	1100,	1001,	101
2017-01-05 16:39:50 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:39:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:50 AI_Player.update()	update
2017-01-05 16:39:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:50 AI_Player.update()	update
2017-01-05 16:39:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:51 AI_Player.update()	Search took176ms
2017-01-05 16:39:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-05 16:39:51 AI_Player.update()		101,	11,	1011,	1001,	101,	101,	1001
2017-01-05 16:39:51 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-05 16:39:51 AI_Player.update()		1010,	1100,	1010,	1010,	11,	11,	1010
2017-01-05 16:39:51 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:39:51 AI_Player.update()		1010,	101,	11,	1010,	1100,	1001,	101
2017-01-05 16:39:51 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()	update
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()	update
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:51 AI_Player.update()	Search took195ms
2017-01-05 16:39:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-05 16:39:51 AI_Player.update()		101,	1100,	1011,	1001,	101,	101,	1001
2017-01-05 16:39:51 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-05 16:39:51 AI_Player.update()		1010,	1010,	1010,	1010,	11,	11,	1010
2017-01-05 16:39:51 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:39:51 AI_Player.update()		1010,	111,	11,	1010,	1100,	1001,	101
2017-01-05 16:39:51 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()	update
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()	update
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:51 AI_Player.update()	Search took292ms
2017-01-05 16:39:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()		110,	11,	111,	1001,	111,	1100,	11
2017-01-05 16:39:51 AI_Player.update()		101,	1100,	1011,	1010,	101,	101,	1001
2017-01-05 16:39:51 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-05 16:39:51 AI_Player.update()		1010,	1010,	1010,	1100,	11,	11,	1010
2017-01-05 16:39:51 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:39:51 AI_Player.update()		1010,	111,	11,	1001,	1100,	1001,	101
2017-01-05 16:39:51 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:39:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()	update
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:39:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()	update
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:51 AI_Player.update()	Search took113ms
2017-01-05 16:39:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-05 16:39:51 AI_Player.update()		101,	1100,	1011,	1010,	101,	101,	1001
2017-01-05 16:39:51 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 16:39:51 AI_Player.update()		1010,	101,	1010,	1100,	11,	11,	1010
2017-01-05 16:39:51 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:39:51 AI_Player.update()		1010,	11,	11,	1001,	1100,	1001,	101
2017-01-05 16:39:51 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:39:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()	update
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()	update
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:51 AI_Player.update()	Search took53ms
2017-01-05 16:39:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-05 16:39:51 AI_Player.update()		101,	1010,	1011,	1010,	101,	101,	1001
2017-01-05 16:39:51 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 16:39:51 AI_Player.update()		1010,	111,	1010,	1100,	11,	11,	1010
2017-01-05 16:39:51 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:39:51 AI_Player.update()		1010,	11,	11,	1001,	1100,	1001,	101
2017-01-05 16:39:51 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()	update
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()	update
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:51 AI_Player.update()	Search took125ms
2017-01-05 16:39:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()		110,	1010,	111,	1001,	111,	1100,	11
2017-01-05 16:39:51 AI_Player.update()		101,	101,	1011,	1010,	101,	101,	1001
2017-01-05 16:39:51 AI_Player.update()		1110,	111,	1110,	1010,	111,	1010,	1011
2017-01-05 16:39:51 AI_Player.update()		1010,	11,	1010,	1100,	11,	11,	1010
2017-01-05 16:39:51 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:39:51 AI_Player.update()		1010,	1100,	11,	1001,	1100,	1001,	101
2017-01-05 16:39:51 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:39:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()	update
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:51 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:51 AI_Player.update()	update
2017-01-05 16:39:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:39:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:39:52 AI_Player.update()	Search took283ms
2017-01-05 16:39:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:52 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 16:39:52 AI_Player.update()		101,	101,	1011,	1010,	101,	101,	1001
2017-01-05 16:39:52 AI_Player.update()		1110,	111,	1110,	1100,	111,	1010,	1011
2017-01-05 16:39:52 AI_Player.update()		1010,	11,	1010,	1010,	11,	11,	1010
2017-01-05 16:39:52 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:39:52 AI_Player.update()		1010,	1100,	11,	101,	1100,	1001,	101
2017-01-05 16:39:52 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:52 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:39:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:52 AI_Player.update()	update
2017-01-05 16:39:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:39:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:39:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:39:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:39:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:52 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:39:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:39:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:39:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:39:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:39:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:39:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:39:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:39:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:39:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:39:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:39:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:39:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:39:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:52 AI_Player.update()	update
2017-01-05 16:39:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:39:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:39:52 AI_Player.update()	Search took134ms
2017-01-05 16:39:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:39:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:52 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-05 16:39:52 AI_Player.update()		101,	111,	1011,	1010,	101,	101,	1001
2017-01-05 16:39:52 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 16:39:52 AI_Player.update()		1010,	11,	1010,	1010,	11,	11,	1010
2017-01-05 16:39:52 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:39:52 AI_Player.update()		1010,	1100,	11,	101,	1100,	1001,	101
2017-01-05 16:39:52 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:39:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:39:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:39:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:39:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:39:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:39:52 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:39:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:39:52 AI_Player.update()	update
2017-01-05 16:39:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:39:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:39:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:39:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:39:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:39:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:39:52 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:39:52 AI_Player.update()	Player a has won!
2017-01-05 16:40:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:04 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:40:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:04 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:40:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:04 AI_Player.update()	update
2017-01-05 16:40:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:04 AI_Player.update()	Search took28ms
2017-01-05 16:40:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:04 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-05 16:40:04 AI_Player.update()		110,	111,	1010,	101,	101,	1001,	1001
2017-01-05 16:40:04 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 16:40:04 AI_Player.update()		1010,	1010,	1110,	11,	1010,	1010,	111
2017-01-05 16:40:04 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:40:04 AI_Player.update()		1010,	110,	1010,	11,	111,	110,	1010
2017-01-05 16:40:04 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 16:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:04 AI_Player.update()	update
2017-01-05 16:40:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:04 AI_Player.update()	update
2017-01-05 16:40:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:04 AI_Player.update()	Search took42ms
2017-01-05 16:40:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:04 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-05 16:40:04 AI_Player.update()		110,	111,	1010,	101,	101,	1010,	1001
2017-01-05 16:40:04 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 16:40:04 AI_Player.update()		1010,	1010,	1110,	11,	1010,	1001,	111
2017-01-05 16:40:04 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-05 16:40:04 AI_Player.update()		1010,	110,	1010,	11,	111,	1001,	1010
2017-01-05 16:40:04 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 16:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:04 AI_Player.update()	update
2017-01-05 16:40:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:04 AI_Player.update()	update
2017-01-05 16:40:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:04 AI_Player.update()	Search took97ms
2017-01-05 16:40:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:04 AI_Player.update()		110,	111,	111,	110,	111,	1001,	11
2017-01-05 16:40:04 AI_Player.update()		110,	101,	1010,	101,	101,	1010,	1001
2017-01-05 16:40:04 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 16:40:04 AI_Player.update()		1010,	1010,	1110,	11,	1010,	1001,	111
2017-01-05 16:40:04 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-05 16:40:04 AI_Player.update()		1010,	1100,	1010,	11,	111,	1001,	1010
2017-01-05 16:40:04 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-05 16:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:04 AI_Player.update()	update
2017-01-05 16:40:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:04 AI_Player.update()	update
2017-01-05 16:40:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:04 AI_Player.update()	Search took35ms
2017-01-05 16:40:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:04 AI_Player.update()		110,	111,	111,	110,	111,	1001,	11
2017-01-05 16:40:04 AI_Player.update()		1001,	110,	101,	1010,	101,	101,	1010
2017-01-05 16:40:04 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 16:40:04 AI_Player.update()		1010,	1010,	1110,	11,	1010,	1001,	111
2017-01-05 16:40:04 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-05 16:40:04 AI_Player.update()		1010,	1100,	1010,	11,	111,	1001,	1010
2017-01-05 16:40:04 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-05 16:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:04 AI_Player.update()	update
2017-01-05 16:40:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:04 AI_Player.update()	update
2017-01-05 16:40:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:05 AI_Player.update()	Search took109ms
2017-01-05 16:40:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:05 AI_Player.update()		110,	111,	111,	110,	111,	1001,	11
2017-01-05 16:40:05 AI_Player.update()		110,	101,	1010,	101,	101,	1010,	1001
2017-01-05 16:40:05 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 16:40:05 AI_Player.update()		1010,	1010,	1110,	11,	1010,	1001,	111
2017-01-05 16:40:05 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-05 16:40:05 AI_Player.update()		1010,	1100,	1010,	11,	111,	1001,	1010
2017-01-05 16:40:05 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-05 16:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:05 AI_Player.update()	update
2017-01-05 16:40:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:05 AI_Player.update()	update
2017-01-05 16:40:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:05 AI_Player.update()	Search took42ms
2017-01-05 16:40:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:05 AI_Player.update()		110,	111,	111,	110,	111,	1001,	11
2017-01-05 16:40:05 AI_Player.update()		110,	101,	1010,	101,	101,	1010,	1001
2017-01-05 16:40:05 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 16:40:05 AI_Player.update()		1010,	1110,	11,	1010,	1001,	111,	1010
2017-01-05 16:40:05 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-05 16:40:05 AI_Player.update()		1010,	1100,	1010,	11,	111,	1001,	1010
2017-01-05 16:40:05 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-05 16:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:05 AI_Player.update()	update
2017-01-05 16:40:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:05 AI_Player.update()	update
2017-01-05 16:40:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:05 AI_Player.update()	Search took93ms
2017-01-05 16:40:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:05 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-05 16:40:05 AI_Player.update()		110,	101,	1010,	101,	101,	1010,	1001
2017-01-05 16:40:05 AI_Player.update()		1110,	1010,	1110,	1010,	111,	111,	1011
2017-01-05 16:40:05 AI_Player.update()		1010,	1110,	11,	1010,	1001,	110,	1010
2017-01-05 16:40:05 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:40:05 AI_Player.update()		1010,	1100,	1010,	11,	111,	1100,	1010
2017-01-05 16:40:05 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-05 16:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:05 AI_Player.update()	update
2017-01-05 16:40:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:05 AI_Player.update()	update
2017-01-05 16:40:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:05 AI_Player.update()	Search took230ms
2017-01-05 16:40:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:05 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-05 16:40:05 AI_Player.update()		110,	101,	1010,	101,	101,	1010,	1001
2017-01-05 16:40:05 AI_Player.update()		1110,	1010,	1110,	1010,	111,	111,	1011
2017-01-05 16:40:05 AI_Player.update()		1010,	1010,	1110,	11,	1010,	1001,	110
2017-01-05 16:40:05 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:40:05 AI_Player.update()		1010,	1100,	1010,	11,	111,	1100,	1010
2017-01-05 16:40:05 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-05 16:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:05 AI_Player.update()	update
2017-01-05 16:40:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:40:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:05 AI_Player.update()	update
2017-01-05 16:40:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
