2017-01-05 13:55:12 GameBoard.<init>()	Hello World!
2017-01-05 13:55:12 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-05 13:55:12 QueryProlog.initialise()	setup(h3/h4). suceeded
2017-01-05 13:55:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:12 GameBoard.setupBoardFromString()	Board created
2017-01-05 13:55:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 13:55:12 GameBoard.initialise()	[map, book, crown, helmet, gem]
2017-01-05 13:55:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 13:55:12 GameBoard.initialise()	[chest, keys, sword, candle, gold]
2017-01-05 13:55:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:12 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-05 13:55:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 13:55:12 GameBoard.setupTreasurePanel()	null
2017-01-05 13:55:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 13:55:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 13:55:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 13:55:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 13:55:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 13:55:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 13:55:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 13:55:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 13:55:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 13:55:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 13:55:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 13:55:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 13:55:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:12 AI_Player.update()	update
2017-01-05 13:55:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:13 AI_Player.update()	Search took459ms
2017-01-05 13:55:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:13 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 13:55:13 AI_Player.update()		110,	1010,	101,	1001,	1001,	1001,	11
2017-01-05 13:55:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 13:55:13 AI_Player.update()		101,	111,	101,	110,	1010,	1101,	101
2017-01-05 13:55:13 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-05 13:55:13 AI_Player.update()		11,	1010,	110,	1100,	110,	1100,	1100
2017-01-05 13:55:13 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1011,	1001
2017-01-05 13:55:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 13:55:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 13:55:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 13:55:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:13 AI_Player.update()	update
2017-01-05 13:55:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 13:55:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:13 AI_Player.update()	update
2017-01-05 13:55:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:13 AI_Player.update()	Search took244ms
2017-01-05 13:55:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:13 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 13:55:13 AI_Player.update()		11,	110,	1010,	101,	1001,	1001,	1001
2017-01-05 13:55:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 13:55:13 AI_Player.update()		101,	111,	101,	110,	1010,	1101,	101
2017-01-05 13:55:13 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-05 13:55:13 AI_Player.update()		11,	1010,	110,	1100,	110,	1100,	1100
2017-01-05 13:55:13 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1011,	1001
2017-01-05 13:55:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 13:55:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:13 AI_Player.update()	update
2017-01-05 13:55:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 13:55:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 13:55:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 13:55:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	1 2
2017-01-05 13:55:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 13:55:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 13:55:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 13:55:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:13 AI_Player.update()	update
2017-01-05 13:55:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:14 AI_Player.update()	Search took479ms
2017-01-05 13:55:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:14 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-05 13:55:14 AI_Player.update()		11,	101,	1010,	101,	1001,	1001,	1001
2017-01-05 13:55:14 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 13:55:14 AI_Player.update()		101,	1100,	101,	110,	1010,	1101,	101
2017-01-05 13:55:14 AI_Player.update()		1110,	111,	1101,	11,	1011,	101,	1011
2017-01-05 13:55:14 AI_Player.update()		11,	11,	110,	1100,	110,	1100,	1100
2017-01-05 13:55:14 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1011,	1001
2017-01-05 13:55:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:14 GameBoard.setupTreasurePanel()	1 2
2017-01-05 13:55:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:14 AI_Player.update()	update
2017-01-05 13:55:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:14 GameBoard.setupTreasurePanel()	1 2
2017-01-05 13:55:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:14 AI_Player.update()	update
2017-01-05 13:55:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:14 AI_Player.update()	Search took409ms
2017-01-05 13:55:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:14 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 13:55:14 AI_Player.update()		11,	110,	1010,	101,	1001,	1001,	1001
2017-01-05 13:55:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 13:55:14 AI_Player.update()		101,	111,	101,	110,	1010,	1101,	101
2017-01-05 13:55:14 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-05 13:55:14 AI_Player.update()		11,	1010,	110,	1100,	110,	1100,	1100
2017-01-05 13:55:14 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1011,	1001
2017-01-05 13:55:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:14 GameBoard.setupTreasurePanel()	1 2
2017-01-05 13:55:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:15 AI_Player.update()	update
2017-01-05 13:55:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 13:55:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 13:55:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 13:55:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:15 GameBoard.setupTreasurePanel()	1 3
2017-01-05 13:55:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 13:55:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 13:55:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 13:55:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 13:55:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 13:55:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 13:55:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 13:55:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 13:55:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 13:55:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 13:55:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 13:55:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 13:55:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:15 AI_Player.update()	update
2017-01-05 13:55:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:15 AI_Player.update()	Search took455ms
2017-01-05 13:55:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:15 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-05 13:55:15 AI_Player.update()		11,	101,	1010,	101,	1001,	1001,	1001
2017-01-05 13:55:15 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 13:55:15 AI_Player.update()		101,	1100,	101,	110,	1010,	1101,	101
2017-01-05 13:55:15 AI_Player.update()		1110,	111,	1101,	11,	1011,	101,	1011
2017-01-05 13:55:15 AI_Player.update()		11,	11,	110,	1100,	110,	1100,	1100
2017-01-05 13:55:15 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1011,	1001
2017-01-05 13:55:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:15 GameBoard.setupTreasurePanel()	1 3
2017-01-05 13:55:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:15 AI_Player.update()	update
2017-01-05 13:55:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:15 GameBoard.setupTreasurePanel()	1 3
2017-01-05 13:55:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:15 AI_Player.update()	update
2017-01-05 13:55:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:16 AI_Player.update()	Search took512ms
2017-01-05 13:55:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:16 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 13:55:16 AI_Player.update()		11,	110,	1010,	101,	1001,	1001,	1001
2017-01-05 13:55:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 13:55:16 AI_Player.update()		101,	111,	101,	110,	1010,	1101,	101
2017-01-05 13:55:16 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-05 13:55:16 AI_Player.update()		11,	1010,	110,	1100,	110,	1100,	1100
2017-01-05 13:55:16 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1011,	1001
2017-01-05 13:55:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:16 GameBoard.setupTreasurePanel()	1 3
2017-01-05 13:55:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:16 AI_Player.update()	update
2017-01-05 13:55:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 13:55:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 13:55:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 13:55:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:16 GameBoard.setupTreasurePanel()	1 4
2017-01-05 13:55:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 13:55:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 13:55:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 13:55:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 13:55:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 13:55:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 13:55:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 13:55:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 13:55:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 13:55:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 13:55:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 13:55:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 13:55:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:16 AI_Player.update()	update
2017-01-05 13:55:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:17 AI_Player.update()	Search took494ms
2017-01-05 13:55:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:17 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-05 13:55:17 AI_Player.update()		11,	101,	1010,	101,	1001,	1001,	1001
2017-01-05 13:55:17 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 13:55:17 AI_Player.update()		101,	1100,	101,	110,	1010,	1101,	101
2017-01-05 13:55:17 AI_Player.update()		1110,	111,	1101,	11,	1011,	101,	1011
2017-01-05 13:55:17 AI_Player.update()		11,	11,	110,	1100,	110,	1100,	1100
2017-01-05 13:55:17 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1011,	1001
2017-01-05 13:55:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:17 GameBoard.setupTreasurePanel()	1 4
2017-01-05 13:55:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:17 AI_Player.update()	update
2017-01-05 13:55:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:17 GameBoard.setupTreasurePanel()	1 4
2017-01-05 13:55:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:17 AI_Player.update()	update
2017-01-05 13:55:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:17 AI_Player.update()	Search took494ms
2017-01-05 13:55:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:17 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 13:55:17 AI_Player.update()		11,	110,	1010,	101,	1001,	1001,	1001
2017-01-05 13:55:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 13:55:17 AI_Player.update()		101,	111,	101,	110,	1010,	1101,	101
2017-01-05 13:55:17 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-05 13:55:17 AI_Player.update()		11,	1010,	110,	1100,	110,	1100,	1100
2017-01-05 13:55:17 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1011,	1001
2017-01-05 13:55:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:17 GameBoard.setupTreasurePanel()	1 4
2017-01-05 13:55:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:17 AI_Player.update()	update
2017-01-05 13:55:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 13:55:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 13:55:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 13:55:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:17 GameBoard.setupTreasurePanel()	1 4
2017-01-05 13:55:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:18 AI_Player.update()	update
2017-01-05 13:55:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:18 AI_Player.update()	Search took443ms
2017-01-05 13:55:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:18 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-05 13:55:18 AI_Player.update()		11,	101,	1010,	101,	1001,	1001,	1001
2017-01-05 13:55:18 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 13:55:18 AI_Player.update()		101,	1100,	101,	110,	1010,	1101,	101
2017-01-05 13:55:18 AI_Player.update()		1110,	111,	1101,	11,	1011,	101,	1011
2017-01-05 13:55:18 AI_Player.update()		11,	11,	110,	1100,	110,	1100,	1100
2017-01-05 13:55:18 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1011,	1001
2017-01-05 13:55:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:18 GameBoard.setupTreasurePanel()	1 4
2017-01-05 13:55:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:18 AI_Player.update()	update
2017-01-05 13:55:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:18 GameBoard.setupTreasurePanel()	1 4
2017-01-05 13:55:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:18 AI_Player.update()	update
2017-01-05 13:55:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:19 AI_Player.update()	Search took428ms
2017-01-05 13:55:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:19 AI_Player.update()		110,	1100,	111,	101,	111,	1011,	11
2017-01-05 13:55:19 AI_Player.update()		11,	101,	1010,	101,	1001,	111,	1001
2017-01-05 13:55:19 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 13:55:19 AI_Player.update()		101,	1100,	101,	110,	1010,	11,	101
2017-01-05 13:55:19 AI_Player.update()		1110,	111,	1101,	11,	1011,	1101,	1011
2017-01-05 13:55:19 AI_Player.update()		11,	11,	110,	1100,	110,	101,	1100
2017-01-05 13:55:19 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 13:55:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	1 4
2017-01-05 13:55:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:19 AI_Player.update()	update
2017-01-05 13:55:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 13:55:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 13:55:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	1 5
2017-01-05 13:55:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 13:55:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 13:55:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:19 AI_Player.update()	update
2017-01-05 13:55:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:19 AI_Player.update()	Search took57ms
2017-01-05 13:55:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:19 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 13:55:19 AI_Player.update()		11,	1100,	1010,	101,	1001,	111,	1001
2017-01-05 13:55:19 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 13:55:19 AI_Player.update()		101,	110,	101,	110,	1010,	11,	101
2017-01-05 13:55:19 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1101,	1011
2017-01-05 13:55:19 AI_Player.update()		11,	111,	110,	1100,	110,	101,	1100
2017-01-05 13:55:19 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 13:55:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	1 5
2017-01-05 13:55:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:19 AI_Player.update()	update
2017-01-05 13:55:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	2 5
2017-01-05 13:55:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 13:55:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 13:55:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:19 AI_Player.update()	update
2017-01-05 13:55:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:19 AI_Player.update()	Search took64ms
2017-01-05 13:55:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:19 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 13:55:19 AI_Player.update()		11,	1100,	1010,	101,	1001,	111,	1001
2017-01-05 13:55:19 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 13:55:19 AI_Player.update()		101,	101,	110,	101,	110,	1010,	11
2017-01-05 13:55:19 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1101,	1011
2017-01-05 13:55:19 AI_Player.update()		11,	111,	110,	1100,	110,	101,	1100
2017-01-05 13:55:19 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 13:55:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	2 5
2017-01-05 13:55:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:19 AI_Player.update()	update
2017-01-05 13:55:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 13:55:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 13:55:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	2 5
2017-01-05 13:55:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:19 AI_Player.update()	update
2017-01-05 13:55:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:19 AI_Player.update()	Search took21ms
2017-01-05 13:55:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:19 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 13:55:19 AI_Player.update()		1100,	1010,	101,	1001,	111,	1001,	11
2017-01-05 13:55:19 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 13:55:19 AI_Player.update()		101,	101,	110,	101,	110,	1010,	11
2017-01-05 13:55:19 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1101,	1011
2017-01-05 13:55:19 AI_Player.update()		11,	111,	110,	1100,	110,	101,	1100
2017-01-05 13:55:19 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 13:55:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	2 5
2017-01-05 13:55:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:19 AI_Player.update()	update
2017-01-05 13:55:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:19 GameBoard.setupTreasurePanel()	2 5
2017-01-05 13:55:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:20 AI_Player.update()	update
2017-01-05 13:55:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:20 AI_Player.update()	Search took114ms
2017-01-05 13:55:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:20 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 13:55:20 AI_Player.update()		1100,	1010,	101,	1001,	111,	1001,	11
2017-01-05 13:55:20 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 13:55:20 AI_Player.update()		11,	101,	101,	110,	101,	110,	1010
2017-01-05 13:55:20 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1101,	1011
2017-01-05 13:55:20 AI_Player.update()		11,	111,	110,	1100,	110,	101,	1100
2017-01-05 13:55:20 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 13:55:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	2 5
2017-01-05 13:55:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:20 AI_Player.update()	update
2017-01-05 13:55:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 13:55:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 13:55:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 13:55:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 13:55:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 13:55:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:20 AI_Player.update()	update
2017-01-05 13:55:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:20 AI_Player.update()	Search took43ms
2017-01-05 13:55:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:20 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 13:55:20 AI_Player.update()		1100,	101,	101,	1001,	111,	1001,	11
2017-01-05 13:55:20 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 13:55:20 AI_Player.update()		11,	1100,	101,	110,	101,	110,	1010
2017-01-05 13:55:20 AI_Player.update()		1110,	111,	1101,	11,	1011,	1101,	1011
2017-01-05 13:55:20 AI_Player.update()		11,	11,	110,	1100,	110,	101,	1100
2017-01-05 13:55:20 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 13:55:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:20 AI_Player.update()	update
2017-01-05 13:55:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:20 AI_Player.update()	update
2017-01-05 13:55:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:20 AI_Player.update()	Search took175ms
2017-01-05 13:55:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:20 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 13:55:20 AI_Player.update()		101,	101,	1001,	111,	1001,	11,	1100
2017-01-05 13:55:20 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 13:55:20 AI_Player.update()		11,	1100,	101,	110,	101,	110,	1010
2017-01-05 13:55:20 AI_Player.update()		1110,	111,	1101,	11,	1011,	1101,	1011
2017-01-05 13:55:20 AI_Player.update()		11,	11,	110,	1100,	110,	101,	1100
2017-01-05 13:55:20 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 13:55:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:20 AI_Player.update()	update
2017-01-05 13:55:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 13:55:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 13:55:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 13:55:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:20 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:21 AI_Player.update()	update
2017-01-05 13:55:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:21 AI_Player.update()	Search took133ms
2017-01-05 13:55:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:21 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-05 13:55:21 AI_Player.update()		101,	101,	1001,	111,	1001,	11,	1100
2017-01-05 13:55:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 13:55:21 AI_Player.update()		11,	111,	101,	110,	101,	110,	1010
2017-01-05 13:55:21 AI_Player.update()		1110,	11,	1101,	11,	1011,	1101,	1011
2017-01-05 13:55:21 AI_Player.update()		11,	1010,	110,	1100,	110,	101,	1100
2017-01-05 13:55:21 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 13:55:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:21 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:21 AI_Player.update()	update
2017-01-05 13:55:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:21 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:21 AI_Player.update()	update
2017-01-05 13:55:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:21 AI_Player.update()	Search took165ms
2017-01-05 13:55:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:21 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 13:55:21 AI_Player.update()		101,	101,	1001,	111,	1001,	11,	1100
2017-01-05 13:55:21 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 13:55:21 AI_Player.update()		11,	1100,	101,	110,	101,	110,	1010
2017-01-05 13:55:21 AI_Player.update()		1110,	111,	1101,	11,	1011,	1101,	1011
2017-01-05 13:55:21 AI_Player.update()		11,	11,	110,	1100,	110,	101,	1100
2017-01-05 13:55:21 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 13:55:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:21 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:21 AI_Player.update()	update
2017-01-05 13:55:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 13:55:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 13:55:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 13:55:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:21 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:21 AI_Player.update()	update
2017-01-05 13:55:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:21 AI_Player.update()	Search took137ms
2017-01-05 13:55:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:21 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-05 13:55:21 AI_Player.update()		101,	101,	1001,	111,	1001,	11,	1100
2017-01-05 13:55:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 13:55:21 AI_Player.update()		11,	111,	101,	110,	101,	110,	1010
2017-01-05 13:55:21 AI_Player.update()		1110,	11,	1101,	11,	1011,	1101,	1011
2017-01-05 13:55:21 AI_Player.update()		11,	1010,	110,	1100,	110,	101,	1100
2017-01-05 13:55:21 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 13:55:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:21 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:21 AI_Player.update()	update
2017-01-05 13:55:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:21 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:22 AI_Player.update()	update
2017-01-05 13:55:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:22 AI_Player.update()	Search took147ms
2017-01-05 13:55:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:22 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 13:55:22 AI_Player.update()		101,	101,	1001,	111,	1001,	11,	1100
2017-01-05 13:55:22 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 13:55:22 AI_Player.update()		11,	1100,	101,	110,	101,	110,	1010
2017-01-05 13:55:22 AI_Player.update()		1110,	111,	1101,	11,	1011,	1101,	1011
2017-01-05 13:55:22 AI_Player.update()		11,	11,	110,	1100,	110,	101,	1100
2017-01-05 13:55:22 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 13:55:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:22 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:22 AI_Player.update()	update
2017-01-05 13:55:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 13:55:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 13:55:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 13:55:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:22 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:22 AI_Player.update()	update
2017-01-05 13:55:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:22 AI_Player.update()	Search took127ms
2017-01-05 13:55:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:22 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-05 13:55:22 AI_Player.update()		101,	101,	1001,	111,	1001,	11,	1100
2017-01-05 13:55:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 13:55:22 AI_Player.update()		11,	111,	101,	110,	101,	110,	1010
2017-01-05 13:55:22 AI_Player.update()		1110,	11,	1101,	11,	1011,	1101,	1011
2017-01-05 13:55:22 AI_Player.update()		11,	1010,	110,	1100,	110,	101,	1100
2017-01-05 13:55:22 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 13:55:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:22 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:22 AI_Player.update()	update
2017-01-05 13:55:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:22 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:22 AI_Player.update()	update
2017-01-05 13:55:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:22 AI_Player.update()	Search took143ms
2017-01-05 13:55:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:22 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 13:55:22 AI_Player.update()		101,	101,	1001,	111,	1001,	1011,	1100
2017-01-05 13:55:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 13:55:22 AI_Player.update()		11,	111,	101,	110,	101,	1001,	1010
2017-01-05 13:55:22 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-05 13:55:22 AI_Player.update()		11,	1010,	110,	1100,	110,	1101,	1100
2017-01-05 13:55:22 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 13:55:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:22 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:23 AI_Player.update()	update
2017-01-05 13:55:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 13:55:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 13:55:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 13:55:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:23 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:23 AI_Player.update()	update
2017-01-05 13:55:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:23 AI_Player.update()	Search took214ms
2017-01-05 13:55:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:23 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 13:55:23 AI_Player.update()		101,	1100,	1001,	111,	1001,	1011,	1100
2017-01-05 13:55:23 AI_Player.update()		1110,	111,	1110,	101,	111,	11,	1011
2017-01-05 13:55:23 AI_Player.update()		11,	11,	101,	110,	101,	1001,	1010
2017-01-05 13:55:23 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-05 13:55:23 AI_Player.update()		11,	1010,	110,	1100,	110,	1101,	1100
2017-01-05 13:55:23 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 13:55:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:23 GameBoard.setupTreasurePanel()	2 6
2017-01-05 13:55:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:23 AI_Player.update()	update
2017-01-05 13:55:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:23 GameBoard.setupTreasurePanel()	3 6
2017-01-05 13:55:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 13:55:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 13:55:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 13:55:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 13:55:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 13:55:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 13:55:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 13:55:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 13:55:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 13:55:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 13:55:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 13:55:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 13:55:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:23 AI_Player.update()	update
2017-01-05 13:55:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:24 AI_Player.update()	Search took480ms
2017-01-05 13:55:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:24 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 13:55:24 AI_Player.update()		1100,	101,	1100,	1001,	111,	1001,	1011
2017-01-05 13:55:24 AI_Player.update()		1110,	111,	1110,	101,	111,	11,	1011
2017-01-05 13:55:24 AI_Player.update()		11,	11,	101,	110,	101,	1001,	1010
2017-01-05 13:55:24 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-05 13:55:24 AI_Player.update()		11,	1010,	110,	1100,	110,	1101,	1100
2017-01-05 13:55:24 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 13:55:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:24 GameBoard.setupTreasurePanel()	3 6
2017-01-05 13:55:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:24 AI_Player.update()	update
2017-01-05 13:55:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 13:55:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 13:55:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 13:55:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:24 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 13:55:24 AI_Player.update()	Player b has won!
2017-01-05 13:55:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 13:55:25 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 13:55:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 13:55:25 QueryProlog.reset()	setup(h3/h4). suceeded
2017-01-05 13:55:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 13:55:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 13:55:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 13:55:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 13:55:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 13:55:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 13:55:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 13:55:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 13:55:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 13:55:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 13:55:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 13:55:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 13:55:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 13:55:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:25 AI_Player.update()	update
2017-01-05 13:55:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:26 AI_Player.update()	Search took368ms
2017-01-05 13:55:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:26 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-05 13:55:26 AI_Player.update()		1011,	1010,	110,	1010,	101,	1010,	101
2017-01-05 13:55:26 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-05 13:55:26 AI_Player.update()		1001,	1101,	101,	11,	101,	1010,	11
2017-01-05 13:55:26 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	111,	1011
2017-01-05 13:55:26 AI_Player.update()		101,	110,	1010,	110,	1010,	11,	1010
2017-01-05 13:55:26 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1010,	1001
2017-01-05 13:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 13:55:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:26 AI_Player.update()	update
2017-01-05 13:55:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 13:55:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:26 AI_Player.update()	update
2017-01-05 13:55:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:26 AI_Player.update()	Search took37ms
2017-01-05 13:55:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:26 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-05 13:55:26 AI_Player.update()		101,	1011,	1010,	110,	1010,	101,	1010
2017-01-05 13:55:26 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-05 13:55:26 AI_Player.update()		1001,	1101,	101,	11,	101,	1010,	11
2017-01-05 13:55:26 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	111,	1011
2017-01-05 13:55:26 AI_Player.update()		101,	110,	1010,	110,	1010,	11,	1010
2017-01-05 13:55:26 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1010,	1001
2017-01-05 13:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 13:55:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:26 AI_Player.update()	update
2017-01-05 13:55:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 13:55:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 13:55:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	1 2
2017-01-05 13:55:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 13:55:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 13:55:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:26 AI_Player.update()	update
2017-01-05 13:55:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 13:55:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 13:55:26 AI_Player.update()	Search took64ms
2017-01-05 13:55:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:26 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-05 13:55:26 AI_Player.update()		101,	1010,	1010,	110,	1010,	101,	1010
2017-01-05 13:55:26 AI_Player.update()		1110,	1011,	1110,	11,	111,	101,	1011
2017-01-05 13:55:26 AI_Player.update()		1001,	1100,	101,	11,	101,	1010,	11
2017-01-05 13:55:26 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	111,	1011
2017-01-05 13:55:26 AI_Player.update()		101,	1011,	1010,	110,	1010,	11,	1010
2017-01-05 13:55:26 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1010,	1001
2017-01-05 13:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	1 2
2017-01-05 13:55:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:26 AI_Player.update()	update
2017-01-05 13:55:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 13:55:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 13:55:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 13:55:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	1 2
2017-01-05 13:55:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 13:55:26 AI_Player.update()	update
2017-01-05 13:55:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 13:55:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 13:55:26 AI_Player.update()	Search took139ms
2017-01-05 13:55:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 13:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:26 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-05 13:55:26 AI_Player.update()		101,	1010,	1010,	110,	1010,	101,	1010
2017-01-05 13:55:26 AI_Player.update()		1110,	1011,	1110,	11,	111,	101,	1011
2017-01-05 13:55:26 AI_Player.update()		1100,	101,	11,	101,	1010,	11,	1001
2017-01-05 13:55:26 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	111,	1011
2017-01-05 13:55:26 AI_Player.update()		101,	1011,	1010,	110,	1010,	11,	1010
2017-01-05 13:55:26 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1010,	1001
2017-01-05 13:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 13:55:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 13:55:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 13:55:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 13:55:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 13:55:26 GameBoard.setupTreasurePanel()	1 2
