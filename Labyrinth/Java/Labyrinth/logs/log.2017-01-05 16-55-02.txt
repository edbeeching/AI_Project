2017-01-05 16:55:02 GameBoard.<init>()	Hello World!
2017-01-05 16:55:02 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-05 16:55:03 QueryProlog.initialise()	setup(h2/h2). suceeded
2017-01-05 16:55:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:03 GameBoard.setupBoardFromString()	Board created
2017-01-05 16:55:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:03 GameBoard.initialise()	[gold, fairy, ring, chest, helmet]
2017-01-05 16:55:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:03 GameBoard.initialise()	[book, gem, map, candle, sword]
2017-01-05 16:55:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:03 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-05 16:55:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	null
2017-01-05 16:55:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:55:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:03 AI_Player.update()	update
2017-01-05 16:55:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:03 AI_Player.update()	Search took62ms
2017-01-05 16:55:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:03 AI_Player.update()		110,	11,	111,	110,	111,	1001,	11
2017-01-05 16:55:03 AI_Player.update()		111,	1001,	1101,	101,	11,	11,	1010
2017-01-05 16:55:03 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-05 16:55:03 AI_Player.update()		1001,	1010,	1100,	111,	11,	11,	1110
2017-01-05 16:55:03 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-05 16:55:03 AI_Player.update()		110,	101,	101,	1100,	1010,	1010,	110
2017-01-05 16:55:03 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-05 16:55:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:55:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:03 AI_Player.update()	update
2017-01-05 16:55:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:03 AI_Player.update()	update
2017-01-05 16:55:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:03 AI_Player.update()	Search took207ms
2017-01-05 16:55:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:03 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-05 16:55:03 AI_Player.update()		111,	1010,	1101,	101,	11,	11,	1010
2017-01-05 16:55:03 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-05 16:55:03 AI_Player.update()		1001,	101,	1100,	111,	11,	11,	1110
2017-01-05 16:55:03 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-05 16:55:03 AI_Player.update()		110,	1010,	101,	1100,	1010,	1010,	110
2017-01-05 16:55:03 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:55:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:03 AI_Player.update()	update
2017-01-05 16:55:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:03 AI_Player.update()	update
2017-01-05 16:55:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:04 AI_Player.update()	Search took107ms
2017-01-05 16:55:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:04 AI_Player.update()		110,	1001,	111,	101,	111,	1001,	11
2017-01-05 16:55:04 AI_Player.update()		111,	1010,	1101,	111,	11,	11,	1010
2017-01-05 16:55:04 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-05 16:55:04 AI_Player.update()		1001,	101,	1100,	11,	11,	11,	1110
2017-01-05 16:55:04 AI_Player.update()		1110,	101,	1101,	1100,	1011,	111,	1011
2017-01-05 16:55:04 AI_Player.update()		110,	1010,	101,	101,	1010,	1010,	110
2017-01-05 16:55:04 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-05 16:55:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:04 AI_Player.update()	update
2017-01-05 16:55:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:04 AI_Player.update()	update
2017-01-05 16:55:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:04 AI_Player.update()	Search took186ms
2017-01-05 16:55:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:04 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-05 16:55:04 AI_Player.update()		111,	1010,	1101,	111,	11,	110,	1010
2017-01-05 16:55:04 AI_Player.update()		1110,	1010,	1110,	111,	111,	11,	1011
2017-01-05 16:55:04 AI_Player.update()		1001,	101,	1100,	11,	11,	111,	1110
2017-01-05 16:55:04 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:55:04 AI_Player.update()		110,	1010,	101,	101,	1010,	1010,	110
2017-01-05 16:55:04 AI_Player.update()		1100,	11,	1101,	110,	1101,	1001,	1001
2017-01-05 16:55:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:04 AI_Player.update()	update
2017-01-05 16:55:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:04 AI_Player.update()	update
2017-01-05 16:55:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:04 AI_Player.update()	Search took98ms
2017-01-05 16:55:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:04 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-05 16:55:04 AI_Player.update()		1010,	1101,	111,	11,	110,	1010,	111
2017-01-05 16:55:04 AI_Player.update()		1110,	1010,	1110,	111,	111,	11,	1011
2017-01-05 16:55:04 AI_Player.update()		1001,	101,	1100,	11,	11,	111,	1110
2017-01-05 16:55:04 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:55:04 AI_Player.update()		110,	1010,	101,	101,	1010,	1010,	110
2017-01-05 16:55:04 AI_Player.update()		1100,	11,	1101,	110,	1101,	1001,	1001
2017-01-05 16:55:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:04 AI_Player.update()	update
2017-01-05 16:55:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:55:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:04 AI_Player.update()	update
2017-01-05 16:55:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:05 AI_Player.update()	Search took697ms
2017-01-05 16:55:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:05 AI_Player.update()		110,	1001,	111,	110,	111,	11,	11
2017-01-05 16:55:05 AI_Player.update()		1010,	1101,	111,	101,	110,	1010,	111
2017-01-05 16:55:05 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-05 16:55:05 AI_Player.update()		1001,	101,	1100,	111,	11,	111,	1110
2017-01-05 16:55:05 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 16:55:05 AI_Player.update()		110,	1010,	101,	1100,	1010,	1010,	110
2017-01-05 16:55:05 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:05 AI_Player.update()	update
2017-01-05 16:55:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:55:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:55:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:55:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:05 AI_Player.update()	update
2017-01-05 16:55:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:06 AI_Player.update()	Search took171ms
2017-01-05 16:55:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:06 AI_Player.update()		110,	1101,	111,	110,	111,	11,	11
2017-01-05 16:55:06 AI_Player.update()		1010,	1010,	111,	101,	110,	1010,	111
2017-01-05 16:55:06 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 16:55:06 AI_Player.update()		1001,	101,	1100,	111,	11,	111,	1110
2017-01-05 16:55:06 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-05 16:55:06 AI_Player.update()		110,	11,	101,	1100,	1010,	1010,	110
2017-01-05 16:55:06 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:06 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:55:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:06 AI_Player.update()	update
2017-01-05 16:55:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:06 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:55:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:06 AI_Player.update()	update
2017-01-05 16:55:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:06 AI_Player.update()	Search took429ms
2017-01-05 16:55:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:06 AI_Player.update()		110,	1101,	111,	101,	111,	11,	11
2017-01-05 16:55:06 AI_Player.update()		1010,	1010,	111,	11,	110,	1010,	111
2017-01-05 16:55:06 AI_Player.update()		1110,	101,	1110,	111,	111,	11,	1011
2017-01-05 16:55:06 AI_Player.update()		1001,	101,	1100,	11,	11,	111,	1110
2017-01-05 16:55:06 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:55:06 AI_Player.update()		110,	11,	101,	101,	1010,	1010,	110
2017-01-05 16:55:06 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1001,	1001
2017-01-05 16:55:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:06 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:55:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:06 AI_Player.update()	update
2017-01-05 16:55:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:06 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:55:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:06 AI_Player.update()	update
2017-01-05 16:55:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:07 AI_Player.update()	Search took268ms
2017-01-05 16:55:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:07 AI_Player.update()		110,	1101,	111,	110,	111,	11,	11
2017-01-05 16:55:07 AI_Player.update()		1010,	1010,	111,	101,	110,	1010,	111
2017-01-05 16:55:07 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 16:55:07 AI_Player.update()		1001,	101,	1100,	111,	11,	111,	1110
2017-01-05 16:55:07 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-05 16:55:07 AI_Player.update()		110,	11,	101,	1100,	1010,	1010,	110
2017-01-05 16:55:07 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:07 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:55:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:07 AI_Player.update()	update
2017-01-05 16:55:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:07 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:55:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:07 AI_Player.update()	update
2017-01-05 16:55:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:07 AI_Player.update()	Search took426ms
2017-01-05 16:55:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:07 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-05 16:55:07 AI_Player.update()		1010,	1010,	111,	101,	110,	11,	111
2017-01-05 16:55:07 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-05 16:55:07 AI_Player.update()		1001,	101,	1100,	111,	11,	1010,	1110
2017-01-05 16:55:07 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-05 16:55:07 AI_Player.update()		110,	11,	101,	1100,	1010,	1001,	110
2017-01-05 16:55:07 AI_Player.update()		1100,	1001,	1101,	101,	1101,	11,	1001
2017-01-05 16:55:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:07 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:55:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:07 AI_Player.update()	update
2017-01-05 16:55:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:07 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:55:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:08 AI_Player.update()	update
2017-01-05 16:55:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:08 AI_Player.update()	Search took352ms
2017-01-05 16:55:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:08 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-05 16:55:08 AI_Player.update()		1010,	1010,	111,	101,	110,	11,	111
2017-01-05 16:55:08 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-05 16:55:08 AI_Player.update()		1110,	1001,	101,	1100,	111,	11,	1010
2017-01-05 16:55:08 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-05 16:55:08 AI_Player.update()		110,	11,	101,	1100,	1010,	1001,	110
2017-01-05 16:55:08 AI_Player.update()		1100,	1001,	1101,	101,	1101,	11,	1001
2017-01-05 16:55:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:08 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:55:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:08 AI_Player.update()	update
2017-01-05 16:55:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:08 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:55:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:55:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:08 AI_Player.update()	update
2017-01-05 16:55:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:09 AI_Player.update()	Search took426ms
2017-01-05 16:55:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:09 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-05 16:55:09 AI_Player.update()		111,	1010,	1010,	111,	101,	110,	11
2017-01-05 16:55:09 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-05 16:55:09 AI_Player.update()		1110,	1001,	101,	1100,	111,	11,	1010
2017-01-05 16:55:09 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-05 16:55:09 AI_Player.update()		110,	11,	101,	1100,	1010,	1001,	110
2017-01-05 16:55:09 AI_Player.update()		1100,	1001,	1101,	101,	1101,	11,	1001
2017-01-05 16:55:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:09 AI_Player.update()	update
2017-01-05 16:55:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:09 AI_Player.update()	update
2017-01-05 16:55:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:09 AI_Player.update()	Search took212ms
2017-01-05 16:55:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:09 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-05 16:55:09 AI_Player.update()		111,	1010,	1010,	110,	101,	110,	11
2017-01-05 16:55:09 AI_Player.update()		1110,	101,	1110,	111,	111,	111,	1011
2017-01-05 16:55:09 AI_Player.update()		1110,	1001,	101,	11,	111,	11,	1010
2017-01-05 16:55:09 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:55:09 AI_Player.update()		110,	11,	101,	11,	1010,	1001,	110
2017-01-05 16:55:09 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-05 16:55:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:09 AI_Player.update()	update
2017-01-05 16:55:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:09 AI_Player.update()	update
2017-01-05 16:55:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:10 AI_Player.update()	Search took369ms
2017-01-05 16:55:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:10 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-05 16:55:10 AI_Player.update()		11,	111,	1010,	1010,	110,	101,	110
2017-01-05 16:55:10 AI_Player.update()		1110,	101,	1110,	111,	111,	111,	1011
2017-01-05 16:55:10 AI_Player.update()		1110,	1001,	101,	11,	111,	11,	1010
2017-01-05 16:55:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:55:10 AI_Player.update()		110,	11,	101,	11,	1010,	1001,	110
2017-01-05 16:55:10 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-05 16:55:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:10 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:10 AI_Player.update()	update
2017-01-05 16:55:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:10 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:10 AI_Player.update()	update
2017-01-05 16:55:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:10 AI_Player.update()	Search took173ms
2017-01-05 16:55:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:10 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-05 16:55:10 AI_Player.update()		11,	111,	1010,	1010,	110,	101,	110
2017-01-05 16:55:10 AI_Player.update()		1110,	101,	1110,	111,	111,	111,	1011
2017-01-05 16:55:10 AI_Player.update()		1110,	1001,	101,	11,	111,	11,	1010
2017-01-05 16:55:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:55:10 AI_Player.update()		11,	101,	11,	1010,	1001,	110,	110
2017-01-05 16:55:10 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-05 16:55:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:10 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:10 AI_Player.update()	update
2017-01-05 16:55:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:10 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:10 AI_Player.update()	update
2017-01-05 16:55:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:10 AI_Player.update()	Search took113ms
2017-01-05 16:55:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:10 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-05 16:55:10 AI_Player.update()		11,	111,	1010,	111,	110,	101,	110
2017-01-05 16:55:10 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-05 16:55:10 AI_Player.update()		1110,	1001,	101,	1100,	111,	11,	1010
2017-01-05 16:55:10 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:55:10 AI_Player.update()		11,	101,	11,	1100,	1001,	110,	110
2017-01-05 16:55:10 AI_Player.update()		1100,	1001,	1101,	101,	1101,	11,	1001
2017-01-05 16:55:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:10 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:10 AI_Player.update()	update
2017-01-05 16:55:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:10 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:10 AI_Player.update()	update
2017-01-05 16:55:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:11 AI_Player.update()	Search took126ms
2017-01-05 16:55:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:11 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-05 16:55:11 AI_Player.update()		11,	111,	1010,	1010,	110,	101,	110
2017-01-05 16:55:11 AI_Player.update()		1110,	101,	1110,	111,	111,	111,	1011
2017-01-05 16:55:11 AI_Player.update()		1110,	1001,	101,	11,	111,	11,	1010
2017-01-05 16:55:11 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:55:11 AI_Player.update()		11,	101,	11,	1010,	1001,	110,	110
2017-01-05 16:55:11 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-05 16:55:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:11 AI_Player.update()	update
2017-01-05 16:55:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:11 AI_Player.update()	update
2017-01-05 16:55:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:11 AI_Player.update()	Search took124ms
2017-01-05 16:55:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:11 AI_Player.update()		110,	111,	111,	101,	111,	1010,	11
2017-01-05 16:55:11 AI_Player.update()		11,	101,	1010,	1010,	110,	101,	110
2017-01-05 16:55:11 AI_Player.update()		1110,	1001,	1110,	111,	111,	111,	1011
2017-01-05 16:55:11 AI_Player.update()		1110,	1010,	101,	11,	111,	11,	1010
2017-01-05 16:55:11 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:55:11 AI_Player.update()		11,	1001,	11,	1010,	1001,	110,	110
2017-01-05 16:55:11 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-05 16:55:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:11 AI_Player.update()	update
2017-01-05 16:55:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:55:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:11 AI_Player.update()	update
2017-01-05 16:55:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:11 AI_Player.update()	Search took320ms
2017-01-05 16:55:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:11 AI_Player.update()		110,	111,	111,	101,	111,	1010,	11
2017-01-05 16:55:11 AI_Player.update()		101,	1010,	1010,	110,	101,	110,	11
2017-01-05 16:55:11 AI_Player.update()		1110,	1001,	1110,	111,	111,	111,	1011
2017-01-05 16:55:11 AI_Player.update()		1110,	1010,	101,	11,	111,	11,	1010
2017-01-05 16:55:11 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:55:11 AI_Player.update()		11,	1001,	11,	1010,	1001,	110,	110
2017-01-05 16:55:11 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-05 16:55:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:11 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:12 AI_Player.update()	update
2017-01-05 16:55:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:55:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:55:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:12 AI_Player.update()	update
2017-01-05 16:55:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:12 AI_Player.update()	Search took534ms
2017-01-05 16:55:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:12 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-05 16:55:12 AI_Player.update()		101,	1010,	1010,	111,	101,	110,	11
2017-01-05 16:55:12 AI_Player.update()		1110,	1001,	1110,	11,	111,	111,	1011
2017-01-05 16:55:12 AI_Player.update()		1110,	1010,	101,	1100,	111,	11,	1010
2017-01-05 16:55:12 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:55:12 AI_Player.update()		11,	1001,	11,	1100,	1001,	110,	110
2017-01-05 16:55:12 AI_Player.update()		1100,	1101,	1101,	101,	1101,	11,	1001
2017-01-05 16:55:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:55:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:12 AI_Player.update()	update
2017-01-05 16:55:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:55:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:55:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:12 AI_Player.update()	update
2017-01-05 16:55:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:13 AI_Player.update()	Search took143ms
2017-01-05 16:55:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:13 AI_Player.update()		110,	111,	111,	111,	111,	1010,	11
2017-01-05 16:55:13 AI_Player.update()		101,	1010,	1010,	11,	101,	110,	11
2017-01-05 16:55:13 AI_Player.update()		1110,	1001,	1110,	1100,	111,	111,	1011
2017-01-05 16:55:13 AI_Player.update()		1110,	1010,	101,	1010,	111,	11,	1010
2017-01-05 16:55:13 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:55:13 AI_Player.update()		11,	1001,	11,	101,	1001,	110,	110
2017-01-05 16:55:13 AI_Player.update()		1100,	1101,	1101,	110,	1101,	11,	1001
2017-01-05 16:55:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:13 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:55:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:13 AI_Player.update()	update
2017-01-05 16:55:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:13 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:55:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:13 AI_Player.update()	update
2017-01-05 16:55:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:13 AI_Player.update()	Search took417ms
2017-01-05 16:55:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:13 AI_Player.update()		110,	1010,	111,	111,	111,	1010,	11
2017-01-05 16:55:13 AI_Player.update()		101,	1001,	1010,	11,	101,	110,	11
2017-01-05 16:55:13 AI_Player.update()		1110,	1010,	1110,	1100,	111,	111,	1011
2017-01-05 16:55:13 AI_Player.update()		1110,	101,	101,	1010,	111,	11,	1010
2017-01-05 16:55:13 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:55:13 AI_Player.update()		11,	1101,	11,	101,	1001,	110,	110
2017-01-05 16:55:13 AI_Player.update()		1100,	111,	1101,	110,	1101,	11,	1001
2017-01-05 16:55:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:13 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:55:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:13 AI_Player.update()	update
2017-01-05 16:55:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:13 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:55:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:13 AI_Player.update()	update
2017-01-05 16:55:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:13 AI_Player.update()	Search took111ms
2017-01-05 16:55:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:13 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-05 16:55:13 AI_Player.update()		101,	1001,	1010,	1100,	101,	110,	11
2017-01-05 16:55:13 AI_Player.update()		1110,	1010,	1110,	1010,	111,	111,	1011
2017-01-05 16:55:13 AI_Player.update()		1110,	101,	101,	1100,	111,	11,	1010
2017-01-05 16:55:13 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 16:55:13 AI_Player.update()		11,	1101,	11,	110,	1001,	110,	110
2017-01-05 16:55:13 AI_Player.update()		1100,	111,	1101,	111,	1101,	11,	1001
2017-01-05 16:55:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:13 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:55:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:14 AI_Player.update()	update
2017-01-05 16:55:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:55:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:14 AI_Player.update()	update
2017-01-05 16:55:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:14 AI_Player.update()	Search took282ms
2017-01-05 16:55:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:14 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-05 16:55:14 AI_Player.update()		101,	1001,	1010,	1100,	101,	110,	11
2017-01-05 16:55:14 AI_Player.update()		1110,	1010,	1110,	1010,	111,	111,	1011
2017-01-05 16:55:14 AI_Player.update()		101,	101,	1100,	111,	11,	1010,	1110
2017-01-05 16:55:14 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 16:55:14 AI_Player.update()		11,	1101,	11,	110,	1001,	110,	110
2017-01-05 16:55:14 AI_Player.update()		1100,	111,	1101,	111,	1101,	11,	1001
2017-01-05 16:55:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:14 AI_Player.update()	update
2017-01-05 16:55:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:55:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:55:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:14 AI_Player.update()	update
2017-01-05 16:55:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:15 AI_Player.update()	Search took470ms
2017-01-05 16:55:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:15 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-05 16:55:15 AI_Player.update()		101,	1001,	1010,	1100,	101,	110,	11
2017-01-05 16:55:15 AI_Player.update()		1110,	1010,	1110,	1010,	111,	111,	1011
2017-01-05 16:55:15 AI_Player.update()		101,	1100,	111,	11,	1010,	1110,	101
2017-01-05 16:55:15 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 16:55:15 AI_Player.update()		11,	1101,	11,	110,	1001,	110,	110
2017-01-05 16:55:15 AI_Player.update()		1100,	111,	1101,	111,	1101,	11,	1001
2017-01-05 16:55:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:55:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:15 AI_Player.update()	update
2017-01-05 16:55:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:55:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:15 AI_Player.update()	update
2017-01-05 16:55:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:15 AI_Player.update()	Search took81ms
2017-01-05 16:55:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:15 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 16:55:15 AI_Player.update()		101,	1001,	1010,	1100,	101,	111,	11
2017-01-05 16:55:15 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-05 16:55:15 AI_Player.update()		101,	1100,	111,	11,	1010,	1010,	101
2017-01-05 16:55:15 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 16:55:15 AI_Player.update()		11,	1101,	11,	110,	1001,	11,	110
2017-01-05 16:55:15 AI_Player.update()		1100,	111,	1101,	111,	1101,	1010,	1001
2017-01-05 16:55:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:15 AI_Player.update()	update
2017-01-05 16:55:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:15 AI_Player.update()	update
2017-01-05 16:55:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:15 AI_Player.update()	Search took275ms
2017-01-05 16:55:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:15 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 16:55:15 AI_Player.update()		101,	1001,	1010,	1100,	101,	111,	11
2017-01-05 16:55:15 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-05 16:55:15 AI_Player.update()		1100,	111,	11,	1010,	1010,	101,	101
2017-01-05 16:55:15 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 16:55:15 AI_Player.update()		11,	1101,	11,	110,	1001,	11,	110
2017-01-05 16:55:15 AI_Player.update()		1100,	111,	1101,	111,	1101,	1010,	1001
2017-01-05 16:55:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:15 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:16 AI_Player.update()	update
2017-01-05 16:55:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:16 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:16 AI_Player.update()	update
2017-01-05 16:55:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:16 AI_Player.update()	Search took71ms
2017-01-05 16:55:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:16 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 16:55:16 AI_Player.update()		101,	1001,	1010,	1100,	101,	111,	11
2017-01-05 16:55:16 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-05 16:55:16 AI_Player.update()		1100,	111,	11,	1010,	1010,	101,	101
2017-01-05 16:55:16 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 16:55:16 AI_Player.update()		110,	11,	1101,	11,	110,	1001,	11
2017-01-05 16:55:16 AI_Player.update()		1100,	111,	1101,	111,	1101,	1010,	1001
2017-01-05 16:55:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:16 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:16 AI_Player.update()	update
2017-01-05 16:55:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:16 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:16 AI_Player.update()	update
2017-01-05 16:55:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:16 AI_Player.update()	Search took264ms
2017-01-05 16:55:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:16 AI_Player.update()		110,	111,	111,	11,	111,	110,	11
2017-01-05 16:55:16 AI_Player.update()		101,	1010,	1010,	1100,	101,	111,	11
2017-01-05 16:55:16 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1110,	1011
2017-01-05 16:55:16 AI_Player.update()		1100,	1010,	11,	1010,	1010,	101,	101
2017-01-05 16:55:16 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 16:55:16 AI_Player.update()		110,	1001,	1101,	11,	110,	1001,	11
2017-01-05 16:55:16 AI_Player.update()		1100,	11,	1101,	111,	1101,	1010,	1001
2017-01-05 16:55:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:16 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:16 AI_Player.update()	update
2017-01-05 16:55:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:16 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:55:16 AI_Player.update()	Player a has won!
2017-01-05 16:55:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:55:19 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:55:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:55:19 QueryProlog.reset()	setup(h2/h2). suceeded
2017-01-05 16:55:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:19 AI_Player.update()	update
2017-01-05 16:55:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:19 AI_Player.update()	Search took36ms
2017-01-05 16:55:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:19 AI_Player.update()		110,	11,	111,	1100,	111,	1100,	11
2017-01-05 16:55:19 AI_Player.update()		1001,	1010,	1001,	1101,	11,	1101,	1100
2017-01-05 16:55:19 AI_Player.update()		1110,	111,	1110,	1011,	111,	1101,	1011
2017-01-05 16:55:19 AI_Player.update()		101,	1100,	111,	1010,	110,	1001,	101
2017-01-05 16:55:19 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:55:19 AI_Player.update()		1010,	1010,	110,	101,	11,	1001,	101
2017-01-05 16:55:19 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-05 16:55:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:19 AI_Player.update()	update
2017-01-05 16:55:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:19 AI_Player.update()	update
2017-01-05 16:55:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:19 AI_Player.update()	Search took45ms
2017-01-05 16:55:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:19 AI_Player.update()		110,	11,	111,	1100,	111,	1100,	11
2017-01-05 16:55:19 AI_Player.update()		1001,	1010,	1001,	1101,	11,	1101,	1100
2017-01-05 16:55:19 AI_Player.update()		1110,	111,	1110,	1011,	111,	1101,	1011
2017-01-05 16:55:19 AI_Player.update()		101,	1100,	111,	1010,	110,	1001,	101
2017-01-05 16:55:19 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:55:19 AI_Player.update()		1010,	110,	101,	11,	1001,	101,	1010
2017-01-05 16:55:19 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-05 16:55:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:20 AI_Player.update()	update
2017-01-05 16:55:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:20 AI_Player.update()	update
2017-01-05 16:55:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:20 AI_Player.update()	Search took90ms
2017-01-05 16:55:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:20 AI_Player.update()		110,	11,	111,	1100,	111,	1100,	11
2017-01-05 16:55:20 AI_Player.update()		1001,	1010,	1001,	1101,	11,	1100,	1100
2017-01-05 16:55:20 AI_Player.update()		1110,	111,	1110,	1011,	111,	1101,	1011
2017-01-05 16:55:20 AI_Player.update()		101,	1100,	111,	1010,	110,	1101,	101
2017-01-05 16:55:20 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:55:20 AI_Player.update()		1010,	110,	101,	11,	1001,	1100,	1010
2017-01-05 16:55:20 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-05 16:55:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:20 AI_Player.update()	update
2017-01-05 16:55:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:20 AI_Player.update()	update
2017-01-05 16:55:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:20 AI_Player.update()	Search took26ms
2017-01-05 16:55:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:20 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 16:55:20 AI_Player.update()		1001,	1010,	1001,	1101,	11,	1100,	1100
2017-01-05 16:55:20 AI_Player.update()		1110,	111,	1110,	1011,	111,	1100,	1011
2017-01-05 16:55:20 AI_Player.update()		101,	1100,	111,	1010,	110,	1101,	101
2017-01-05 16:55:20 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1101,	1011
2017-01-05 16:55:20 AI_Player.update()		1010,	110,	101,	11,	1001,	1001,	1010
2017-01-05 16:55:20 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-05 16:55:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:20 AI_Player.update()	update
2017-01-05 16:55:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:20 AI_Player.update()	update
2017-01-05 16:55:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:20 AI_Player.update()	Search took112ms
2017-01-05 16:55:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:20 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 16:55:20 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	11,	1100
2017-01-05 16:55:20 AI_Player.update()		1110,	111,	1110,	1011,	111,	1100,	1011
2017-01-05 16:55:20 AI_Player.update()		101,	1100,	111,	1010,	110,	1101,	101
2017-01-05 16:55:20 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1101,	1011
2017-01-05 16:55:20 AI_Player.update()		1010,	110,	101,	11,	1001,	1001,	1010
2017-01-05 16:55:20 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-05 16:55:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:20 AI_Player.update()	update
2017-01-05 16:55:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:21 AI_Player.update()	update
2017-01-05 16:55:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:21 AI_Player.update()	Search took168ms
2017-01-05 16:55:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:21 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-05 16:55:21 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1100,	1100
2017-01-05 16:55:21 AI_Player.update()		1110,	111,	1110,	1011,	111,	1101,	1011
2017-01-05 16:55:21 AI_Player.update()		101,	1100,	111,	1010,	110,	1101,	101
2017-01-05 16:55:21 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:55:21 AI_Player.update()		1010,	110,	101,	11,	1001,	1100,	1010
2017-01-05 16:55:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-05 16:55:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:21 AI_Player.update()	update
2017-01-05 16:55:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:21 AI_Player.update()	update
2017-01-05 16:55:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:21 AI_Player.update()	Search took127ms
2017-01-05 16:55:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:21 AI_Player.update()		110,	11,	111,	1100,	111,	1100,	11
2017-01-05 16:55:21 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1101,	1100
2017-01-05 16:55:21 AI_Player.update()		1110,	111,	1110,	1011,	111,	1101,	1011
2017-01-05 16:55:21 AI_Player.update()		101,	1100,	111,	1010,	110,	1001,	101
2017-01-05 16:55:21 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:55:21 AI_Player.update()		1010,	110,	101,	11,	1001,	101,	1010
2017-01-05 16:55:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-05 16:55:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:21 AI_Player.update()	update
2017-01-05 16:55:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:21 AI_Player.update()	update
2017-01-05 16:55:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:21 AI_Player.update()	Search took74ms
2017-01-05 16:55:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:21 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-05 16:55:21 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1100,	1100
2017-01-05 16:55:21 AI_Player.update()		1110,	111,	1110,	1011,	111,	1101,	1011
2017-01-05 16:55:21 AI_Player.update()		101,	1100,	111,	1010,	110,	1101,	101
2017-01-05 16:55:21 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:55:21 AI_Player.update()		1010,	110,	101,	11,	1001,	1100,	1010
2017-01-05 16:55:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-05 16:55:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:21 AI_Player.update()	update
2017-01-05 16:55:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:22 AI_Player.update()	update
2017-01-05 16:55:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:22 AI_Player.update()	Search took176ms
2017-01-05 16:55:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:22 AI_Player.update()		110,	11,	111,	1100,	111,	1100,	11
2017-01-05 16:55:22 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1101,	1100
2017-01-05 16:55:22 AI_Player.update()		1110,	111,	1110,	1011,	111,	1101,	1011
2017-01-05 16:55:22 AI_Player.update()		101,	1100,	111,	1010,	110,	1001,	101
2017-01-05 16:55:22 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:55:22 AI_Player.update()		1010,	110,	101,	11,	1001,	101,	1010
2017-01-05 16:55:22 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-05 16:55:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:22 AI_Player.update()	update
2017-01-05 16:55:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:22 AI_Player.update()	update
2017-01-05 16:55:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:22 AI_Player.update()	Search took66ms
2017-01-05 16:55:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:22 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-05 16:55:22 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1101,	1100
2017-01-05 16:55:22 AI_Player.update()		1110,	111,	1110,	1011,	111,	1001,	1011
2017-01-05 16:55:22 AI_Player.update()		101,	1100,	111,	1010,	110,	1100,	101
2017-01-05 16:55:22 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:22 AI_Player.update()		1010,	110,	101,	11,	1001,	11,	1010
2017-01-05 16:55:22 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-05 16:55:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:22 AI_Player.update()	update
2017-01-05 16:55:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:22 AI_Player.update()	update
2017-01-05 16:55:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:22 AI_Player.update()	Search took153ms
2017-01-05 16:55:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:22 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-05 16:55:22 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1101,	1100
2017-01-05 16:55:22 AI_Player.update()		1110,	111,	1110,	1011,	111,	1001,	1011
2017-01-05 16:55:22 AI_Player.update()		1100,	111,	1010,	110,	1100,	101,	101
2017-01-05 16:55:22 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:22 AI_Player.update()		1010,	110,	101,	11,	1001,	11,	1010
2017-01-05 16:55:22 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-05 16:55:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:22 AI_Player.update()	update
2017-01-05 16:55:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:23 AI_Player.update()	update
2017-01-05 16:55:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:23 AI_Player.update()	Search took127ms
2017-01-05 16:55:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:23 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-05 16:55:23 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1001,	1100
2017-01-05 16:55:23 AI_Player.update()		1110,	111,	1110,	1011,	111,	101,	1011
2017-01-05 16:55:23 AI_Player.update()		1100,	111,	1010,	110,	1100,	101,	101
2017-01-05 16:55:23 AI_Player.update()		1110,	1101,	1101,	101,	1011,	11,	1011
2017-01-05 16:55:23 AI_Player.update()		1010,	110,	101,	11,	1001,	1100,	1010
2017-01-05 16:55:23 AI_Player.update()		1100,	11,	1101,	110,	1101,	1101,	1001
2017-01-05 16:55:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:23 AI_Player.update()	update
2017-01-05 16:55:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:23 AI_Player.update()	update
2017-01-05 16:55:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:23 AI_Player.update()	Search took393ms
2017-01-05 16:55:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:23 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-05 16:55:23 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1001,	1100
2017-01-05 16:55:23 AI_Player.update()		1110,	111,	1110,	1011,	111,	101,	1011
2017-01-05 16:55:23 AI_Player.update()		111,	1010,	110,	1100,	101,	101,	1100
2017-01-05 16:55:23 AI_Player.update()		1110,	1101,	1101,	101,	1011,	11,	1011
2017-01-05 16:55:23 AI_Player.update()		1010,	110,	101,	11,	1001,	1100,	1010
2017-01-05 16:55:23 AI_Player.update()		1100,	11,	1101,	110,	1101,	1101,	1001
2017-01-05 16:55:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:55:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:23 AI_Player.update()	update
2017-01-05 16:55:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:55:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:23 AI_Player.update()	update
2017-01-05 16:55:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:24 AI_Player.update()	Search took196ms
2017-01-05 16:55:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:24 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-05 16:55:24 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1001,	1100
2017-01-05 16:55:24 AI_Player.update()		1110,	111,	1110,	1011,	111,	101,	1011
2017-01-05 16:55:24 AI_Player.update()		111,	1010,	110,	1100,	101,	101,	1100
2017-01-05 16:55:24 AI_Player.update()		1110,	1101,	1101,	101,	1011,	11,	1011
2017-01-05 16:55:24 AI_Player.update()		1010,	1010,	110,	101,	11,	1001,	1100
2017-01-05 16:55:24 AI_Player.update()		1100,	11,	1101,	110,	1101,	1101,	1001
2017-01-05 16:55:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:55:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:24 AI_Player.update()	update
2017-01-05 16:55:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:24 AI_Player.update()	update
2017-01-05 16:55:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:24 AI_Player.update()	Search took98ms
2017-01-05 16:55:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:24 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-05 16:55:24 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1001,	1100
2017-01-05 16:55:24 AI_Player.update()		1110,	111,	1110,	1011,	111,	101,	1011
2017-01-05 16:55:24 AI_Player.update()		111,	1010,	110,	1100,	101,	101,	1100
2017-01-05 16:55:24 AI_Player.update()		1110,	1101,	1101,	101,	1011,	11,	1011
2017-01-05 16:55:24 AI_Player.update()		1010,	110,	101,	11,	1001,	1100,	1010
2017-01-05 16:55:24 AI_Player.update()		1100,	11,	1101,	110,	1101,	1101,	1001
2017-01-05 16:55:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:24 AI_Player.update()	update
2017-01-05 16:55:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:24 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:24 AI_Player.update()	update
2017-01-05 16:55:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:25 AI_Player.update()	Search took395ms
2017-01-05 16:55:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:25 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-05 16:55:25 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1001,	1100
2017-01-05 16:55:25 AI_Player.update()		1110,	111,	1110,	1011,	111,	101,	1011
2017-01-05 16:55:25 AI_Player.update()		111,	1010,	110,	1100,	101,	101,	1100
2017-01-05 16:55:25 AI_Player.update()		1110,	1101,	1101,	101,	1011,	11,	1011
2017-01-05 16:55:25 AI_Player.update()		1010,	1010,	110,	101,	11,	1001,	1100
2017-01-05 16:55:25 AI_Player.update()		1100,	11,	1101,	110,	1101,	1101,	1001
2017-01-05 16:55:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:55:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:25 AI_Player.update()	update
2017-01-05 16:55:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:25 AI_Player.update()	update
2017-01-05 16:55:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:25 AI_Player.update()	Search took126ms
2017-01-05 16:55:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:25 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-05 16:55:25 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1001,	1100
2017-01-05 16:55:25 AI_Player.update()		1110,	111,	1110,	1011,	111,	101,	1011
2017-01-05 16:55:25 AI_Player.update()		1100,	111,	1010,	110,	1100,	101,	101
2017-01-05 16:55:25 AI_Player.update()		1110,	1101,	1101,	101,	1011,	11,	1011
2017-01-05 16:55:25 AI_Player.update()		1010,	1010,	110,	101,	11,	1001,	1100
2017-01-05 16:55:25 AI_Player.update()		1100,	11,	1101,	110,	1101,	1101,	1001
2017-01-05 16:55:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:25 AI_Player.update()	update
2017-01-05 16:55:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:25 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:25 AI_Player.update()	update
2017-01-05 16:55:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:26 AI_Player.update()	Search took421ms
2017-01-05 16:55:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:26 AI_Player.update()		110,	11,	111,	1001,	111,	1101,	11
2017-01-05 16:55:26 AI_Player.update()		1100,	1001,	1010,	1011,	1101,	1001,	1100
2017-01-05 16:55:26 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-05 16:55:26 AI_Player.update()		1100,	111,	1010,	101,	1100,	101,	101
2017-01-05 16:55:26 AI_Player.update()		1110,	1101,	1101,	101,	1011,	11,	1011
2017-01-05 16:55:26 AI_Player.update()		1010,	1010,	110,	110,	11,	1001,	1100
2017-01-05 16:55:26 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:26 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:26 AI_Player.update()	update
2017-01-05 16:55:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:26 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:26 AI_Player.update()	update
2017-01-05 16:55:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:26 AI_Player.update()	Search took137ms
2017-01-05 16:55:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:26 AI_Player.update()		110,	11,	111,	1011,	111,	1101,	11
2017-01-05 16:55:26 AI_Player.update()		1100,	1001,	1010,	110,	1101,	1001,	1100
2017-01-05 16:55:26 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-05 16:55:26 AI_Player.update()		1100,	111,	1010,	101,	1100,	101,	101
2017-01-05 16:55:26 AI_Player.update()		1110,	1101,	1101,	110,	1011,	11,	1011
2017-01-05 16:55:26 AI_Player.update()		1010,	1010,	110,	1100,	11,	1001,	1100
2017-01-05 16:55:26 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1101,	1001
2017-01-05 16:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:26 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:26 AI_Player.update()	update
2017-01-05 16:55:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:26 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:26 AI_Player.update()	update
2017-01-05 16:55:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:26 AI_Player.update()	Search took115ms
2017-01-05 16:55:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:26 AI_Player.update()		110,	11,	111,	1011,	111,	1101,	11
2017-01-05 16:55:26 AI_Player.update()		1100,	1001,	1010,	110,	1101,	1101,	1100
2017-01-05 16:55:26 AI_Player.update()		1110,	111,	1110,	101,	111,	1001,	1011
2017-01-05 16:55:26 AI_Player.update()		1100,	111,	1010,	101,	1100,	101,	101
2017-01-05 16:55:26 AI_Player.update()		1110,	1101,	1101,	110,	1011,	101,	1011
2017-01-05 16:55:26 AI_Player.update()		1010,	1010,	110,	1100,	11,	11,	1100
2017-01-05 16:55:26 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:55:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:26 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:26 AI_Player.update()	update
2017-01-05 16:55:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:26 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:26 AI_Player.update()	update
2017-01-05 16:55:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:27 AI_Player.update()	Search took449ms
2017-01-05 16:55:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:27 AI_Player.update()		110,	11,	111,	1001,	111,	1101,	11
2017-01-05 16:55:27 AI_Player.update()		1100,	1001,	1010,	1011,	1101,	1101,	1100
2017-01-05 16:55:27 AI_Player.update()		1110,	111,	1110,	110,	111,	1001,	1011
2017-01-05 16:55:27 AI_Player.update()		1100,	111,	1010,	101,	1100,	101,	101
2017-01-05 16:55:27 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:27 AI_Player.update()		1010,	1010,	110,	110,	11,	11,	1100
2017-01-05 16:55:27 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:55:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:27 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:27 AI_Player.update()	update
2017-01-05 16:55:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:27 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:27 AI_Player.update()	update
2017-01-05 16:55:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:27 AI_Player.update()	Search took288ms
2017-01-05 16:55:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:27 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-05 16:55:27 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1101,	1100
2017-01-05 16:55:27 AI_Player.update()		1110,	111,	1110,	1011,	111,	1001,	1011
2017-01-05 16:55:27 AI_Player.update()		1100,	111,	1010,	110,	1100,	101,	101
2017-01-05 16:55:27 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:27 AI_Player.update()		1010,	1010,	110,	101,	11,	11,	1100
2017-01-05 16:55:27 AI_Player.update()		1100,	11,	1101,	110,	1101,	1001,	1001
2017-01-05 16:55:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:27 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:27 AI_Player.update()	update
2017-01-05 16:55:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:27 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:28 AI_Player.update()	update
2017-01-05 16:55:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:28 AI_Player.update()	Search took369ms
2017-01-05 16:55:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:28 AI_Player.update()		110,	11,	111,	1001,	111,	1101,	11
2017-01-05 16:55:28 AI_Player.update()		1100,	1001,	1010,	1011,	1101,	1101,	1100
2017-01-05 16:55:28 AI_Player.update()		1110,	111,	1110,	110,	111,	1001,	1011
2017-01-05 16:55:28 AI_Player.update()		1100,	111,	1010,	101,	1100,	101,	101
2017-01-05 16:55:28 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:28 AI_Player.update()		1010,	1010,	110,	110,	11,	11,	1100
2017-01-05 16:55:28 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:55:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:28 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:28 AI_Player.update()	update
2017-01-05 16:55:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:28 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:28 AI_Player.update()	update
2017-01-05 16:55:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:28 AI_Player.update()	Search took279ms
2017-01-05 16:55:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:28 AI_Player.update()		110,	11,	111,	1001,	111,	1101,	11
2017-01-05 16:55:28 AI_Player.update()		1100,	1001,	1010,	1011,	1101,	1101,	1100
2017-01-05 16:55:28 AI_Player.update()		1110,	111,	1110,	110,	111,	1001,	1011
2017-01-05 16:55:28 AI_Player.update()		1100,	111,	1010,	101,	1100,	101,	101
2017-01-05 16:55:28 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:28 AI_Player.update()		1010,	110,	110,	11,	11,	1100,	1010
2017-01-05 16:55:28 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:55:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:28 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:29 AI_Player.update()	update
2017-01-05 16:55:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:29 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:29 AI_Player.update()	update
2017-01-05 16:55:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:29 AI_Player.update()	Search took404ms
2017-01-05 16:55:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:29 AI_Player.update()		110,	11,	111,	1001,	111,	1101,	11
2017-01-05 16:55:29 AI_Player.update()		1100,	11,	1010,	1011,	1101,	1101,	1100
2017-01-05 16:55:29 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-05 16:55:29 AI_Player.update()		1100,	111,	1010,	101,	1100,	101,	101
2017-01-05 16:55:29 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:29 AI_Player.update()		1010,	1101,	110,	11,	11,	1100,	1010
2017-01-05 16:55:29 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:55:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:29 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:29 AI_Player.update()	update
2017-01-05 16:55:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:29 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:29 AI_Player.update()	update
2017-01-05 16:55:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:30 AI_Player.update()	Search took379ms
2017-01-05 16:55:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:30 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-05 16:55:30 AI_Player.update()		1100,	11,	1010,	1001,	1101,	1101,	1100
2017-01-05 16:55:30 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1001,	1011
2017-01-05 16:55:30 AI_Player.update()		1100,	111,	1010,	110,	1100,	101,	101
2017-01-05 16:55:30 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:30 AI_Player.update()		1010,	1101,	110,	101,	11,	1100,	1010
2017-01-05 16:55:30 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-05 16:55:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:30 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:30 AI_Player.update()	update
2017-01-05 16:55:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:30 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:30 AI_Player.update()	update
2017-01-05 16:55:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:30 AI_Player.update()	Search took141ms
2017-01-05 16:55:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:30 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-05 16:55:30 AI_Player.update()		1100,	1100,	11,	1010,	1001,	1101,	1101
2017-01-05 16:55:30 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1001,	1011
2017-01-05 16:55:30 AI_Player.update()		1100,	111,	1010,	110,	1100,	101,	101
2017-01-05 16:55:30 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:30 AI_Player.update()		1010,	1101,	110,	101,	11,	1100,	1010
2017-01-05 16:55:30 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-05 16:55:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:30 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:30 AI_Player.update()	update
2017-01-05 16:55:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:30 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:30 AI_Player.update()	update
2017-01-05 16:55:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:31 AI_Player.update()	Search took404ms
2017-01-05 16:55:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:31 AI_Player.update()		110,	11,	111,	11,	111,	1101,	11
2017-01-05 16:55:31 AI_Player.update()		1100,	1100,	11,	1100,	1001,	1101,	1101
2017-01-05 16:55:31 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 16:55:31 AI_Player.update()		1100,	111,	1010,	1011,	1100,	101,	101
2017-01-05 16:55:31 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-05 16:55:31 AI_Player.update()		1010,	1101,	110,	101,	11,	1100,	1010
2017-01-05 16:55:31 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:31 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:31 AI_Player.update()	update
2017-01-05 16:55:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:31 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:31 AI_Player.update()	update
2017-01-05 16:55:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:31 AI_Player.update()	Search took167ms
2017-01-05 16:55:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:31 AI_Player.update()		110,	110,	111,	11,	111,	1101,	11
2017-01-05 16:55:31 AI_Player.update()		1100,	11,	11,	1100,	1001,	1101,	1101
2017-01-05 16:55:31 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-05 16:55:31 AI_Player.update()		1100,	1001,	1010,	1011,	1100,	101,	101
2017-01-05 16:55:31 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-05 16:55:31 AI_Player.update()		1010,	111,	110,	101,	11,	1100,	1010
2017-01-05 16:55:31 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:31 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:31 AI_Player.update()	update
2017-01-05 16:55:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:31 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:31 AI_Player.update()	update
2017-01-05 16:55:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:31 AI_Player.update()	Search took88ms
2017-01-05 16:55:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:31 AI_Player.update()		110,	1101,	111,	11,	111,	1101,	11
2017-01-05 16:55:31 AI_Player.update()		1100,	110,	11,	1100,	1001,	1101,	1101
2017-01-05 16:55:31 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 16:55:31 AI_Player.update()		1100,	1100,	1010,	1011,	1100,	101,	101
2017-01-05 16:55:31 AI_Player.update()		1110,	1001,	1101,	110,	1011,	101,	1011
2017-01-05 16:55:31 AI_Player.update()		1010,	111,	110,	101,	11,	1100,	1010
2017-01-05 16:55:31 AI_Player.update()		1100,	111,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:31 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:31 AI_Player.update()	update
2017-01-05 16:55:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:31 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:31 AI_Player.update()	update
2017-01-05 16:55:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:32 AI_Player.update()	Search took129ms
2017-01-05 16:55:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:32 AI_Player.update()		110,	110,	111,	11,	111,	1101,	11
2017-01-05 16:55:32 AI_Player.update()		1100,	11,	11,	1100,	1001,	1101,	1101
2017-01-05 16:55:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-05 16:55:32 AI_Player.update()		1100,	1001,	1010,	1011,	1100,	101,	101
2017-01-05 16:55:32 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-05 16:55:32 AI_Player.update()		1010,	111,	110,	101,	11,	1100,	1010
2017-01-05 16:55:32 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:32 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:32 AI_Player.update()	update
2017-01-05 16:55:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:32 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:32 AI_Player.update()	update
2017-01-05 16:55:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:32 AI_Player.update()	Search took60ms
2017-01-05 16:55:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:32 AI_Player.update()		110,	1101,	111,	11,	111,	1101,	11
2017-01-05 16:55:32 AI_Player.update()		1100,	110,	11,	1100,	1001,	1101,	1101
2017-01-05 16:55:32 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 16:55:32 AI_Player.update()		1100,	1100,	1010,	1011,	1100,	101,	101
2017-01-05 16:55:32 AI_Player.update()		1110,	1001,	1101,	110,	1011,	101,	1011
2017-01-05 16:55:32 AI_Player.update()		1010,	111,	110,	101,	11,	1100,	1010
2017-01-05 16:55:32 AI_Player.update()		1100,	111,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:32 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:32 AI_Player.update()	update
2017-01-05 16:55:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:32 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:32 AI_Player.update()	update
2017-01-05 16:55:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:32 AI_Player.update()	Search took138ms
2017-01-05 16:55:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:32 AI_Player.update()		110,	110,	111,	11,	111,	1101,	11
2017-01-05 16:55:32 AI_Player.update()		1100,	11,	11,	1100,	1001,	1101,	1101
2017-01-05 16:55:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-05 16:55:32 AI_Player.update()		1100,	1001,	1010,	1011,	1100,	101,	101
2017-01-05 16:55:32 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-05 16:55:32 AI_Player.update()		1010,	111,	110,	101,	11,	1100,	1010
2017-01-05 16:55:32 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:32 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:32 AI_Player.update()	update
2017-01-05 16:55:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:32 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:32 AI_Player.update()	update
2017-01-05 16:55:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:32 AI_Player.update()	Search took81ms
2017-01-05 16:55:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:32 AI_Player.update()		110,	110,	111,	101,	111,	1101,	11
2017-01-05 16:55:32 AI_Player.update()		1100,	11,	11,	11,	1001,	1101,	1101
2017-01-05 16:55:32 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1001,	1011
2017-01-05 16:55:32 AI_Player.update()		1100,	1001,	1010,	1010,	1100,	101,	101
2017-01-05 16:55:32 AI_Player.update()		1110,	111,	1101,	1011,	1011,	101,	1011
2017-01-05 16:55:32 AI_Player.update()		1010,	111,	110,	110,	11,	1100,	1010
2017-01-05 16:55:32 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:32 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:33 AI_Player.update()	update
2017-01-05 16:55:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:33 AI_Player.update()	update
2017-01-05 16:55:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:33 AI_Player.update()	Search took267ms
2017-01-05 16:55:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:33 AI_Player.update()		110,	11,	111,	101,	111,	1101,	11
2017-01-05 16:55:33 AI_Player.update()		1100,	1100,	11,	11,	1001,	1101,	1101
2017-01-05 16:55:33 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-05 16:55:33 AI_Player.update()		1100,	111,	1010,	1010,	1100,	101,	101
2017-01-05 16:55:33 AI_Player.update()		1110,	111,	1101,	1011,	1011,	101,	1011
2017-01-05 16:55:33 AI_Player.update()		1010,	1101,	110,	110,	11,	1100,	1010
2017-01-05 16:55:33 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:55:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:33 AI_Player.update()	update
2017-01-05 16:55:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:55:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:33 AI_Player.update()	update
2017-01-05 16:55:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:33 AI_Player.update()	Search took254ms
2017-01-05 16:55:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:33 AI_Player.update()		110,	1100,	111,	101,	111,	1101,	11
2017-01-05 16:55:33 AI_Player.update()		1100,	1001,	11,	11,	1001,	1101,	1101
2017-01-05 16:55:33 AI_Player.update()		1110,	111,	1110,	1100,	111,	1001,	1011
2017-01-05 16:55:33 AI_Player.update()		1100,	111,	1010,	1010,	1100,	101,	101
2017-01-05 16:55:33 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	101,	1011
2017-01-05 16:55:33 AI_Player.update()		1010,	110,	110,	110,	11,	1100,	1010
2017-01-05 16:55:33 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:33 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:55:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:34 AI_Player.update()	update
2017-01-05 16:55:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:55:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:34 AI_Player.update()	update
2017-01-05 16:55:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:34 AI_Player.update()	Search took191ms
2017-01-05 16:55:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:34 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:34 AI_Player.update()		1100,	111,	11,	11,	1001,	1101,	1101
2017-01-05 16:55:34 AI_Player.update()		1110,	111,	1110,	1100,	111,	1001,	1011
2017-01-05 16:55:34 AI_Player.update()		1100,	1101,	1010,	1010,	1100,	101,	101
2017-01-05 16:55:34 AI_Player.update()		1110,	110,	1101,	1011,	1011,	101,	1011
2017-01-05 16:55:34 AI_Player.update()		1010,	11,	110,	110,	11,	1100,	1010
2017-01-05 16:55:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:55:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:34 AI_Player.update()	update
2017-01-05 16:55:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:55:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:34 AI_Player.update()	update
2017-01-05 16:55:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:34 AI_Player.update()	Search took332ms
2017-01-05 16:55:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:34 AI_Player.update()		110,	111,	111,	101,	111,	1101,	11
2017-01-05 16:55:34 AI_Player.update()		1100,	111,	11,	11,	1001,	1101,	1101
2017-01-05 16:55:34 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1001,	1011
2017-01-05 16:55:34 AI_Player.update()		1100,	110,	1010,	1010,	1100,	101,	101
2017-01-05 16:55:34 AI_Player.update()		1110,	11,	1101,	1011,	1011,	101,	1011
2017-01-05 16:55:34 AI_Player.update()		1010,	1100,	110,	110,	11,	1100,	1010
2017-01-05 16:55:34 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:55:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:34 AI_Player.update()	update
2017-01-05 16:55:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:55:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:35 AI_Player.update()	update
2017-01-05 16:55:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:35 AI_Player.update()	Search took187ms
2017-01-05 16:55:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:35 AI_Player.update()		110,	111,	111,	11,	111,	1101,	11
2017-01-05 16:55:35 AI_Player.update()		1100,	111,	11,	1100,	1001,	1101,	1101
2017-01-05 16:55:35 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1001,	1011
2017-01-05 16:55:35 AI_Player.update()		1100,	110,	1010,	1011,	1100,	101,	101
2017-01-05 16:55:35 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-05 16:55:35 AI_Player.update()		1010,	1100,	110,	101,	11,	1100,	1010
2017-01-05 16:55:35 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:35 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:55:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:35 AI_Player.update()	update
2017-01-05 16:55:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:55:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:55:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:35 AI_Player.update()	update
2017-01-05 16:55:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:35 AI_Player.update()	Search took428ms
2017-01-05 16:55:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:35 AI_Player.update()		110,	111,	111,	1100,	111,	1101,	11
2017-01-05 16:55:35 AI_Player.update()		1100,	111,	11,	1010,	1001,	1101,	1101
2017-01-05 16:55:35 AI_Player.update()		1110,	1101,	1110,	1011,	111,	1001,	1011
2017-01-05 16:55:35 AI_Player.update()		1100,	110,	1010,	110,	1100,	101,	101
2017-01-05 16:55:35 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:35 AI_Player.update()		1010,	1100,	110,	101,	11,	1100,	1010
2017-01-05 16:55:35 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-05 16:55:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:36 AI_Player.update()	update
2017-01-05 16:55:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:36 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:36 AI_Player.update()	update
2017-01-05 16:55:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:36 AI_Player.update()	Search took318ms
2017-01-05 16:55:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:36 AI_Player.update()		110,	111,	111,	1100,	111,	1101,	11
2017-01-05 16:55:36 AI_Player.update()		1100,	111,	11,	1010,	1001,	1001,	1101
2017-01-05 16:55:36 AI_Player.update()		1110,	1101,	1110,	1011,	111,	101,	1011
2017-01-05 16:55:36 AI_Player.update()		1100,	110,	1010,	110,	1100,	101,	101
2017-01-05 16:55:36 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:55:36 AI_Player.update()		1010,	1100,	110,	101,	11,	1001,	1010
2017-01-05 16:55:36 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1101,	1001
2017-01-05 16:55:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:36 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:36 AI_Player.update()	update
2017-01-05 16:55:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:36 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:36 AI_Player.update()	update
2017-01-05 16:55:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:36 AI_Player.update()	Search took183ms
2017-01-05 16:55:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:36 AI_Player.update()		110,	111,	111,	1100,	111,	1101,	11
2017-01-05 16:55:36 AI_Player.update()		1100,	111,	11,	1010,	1001,	1101,	1101
2017-01-05 16:55:36 AI_Player.update()		1110,	1101,	1110,	1011,	111,	1001,	1011
2017-01-05 16:55:36 AI_Player.update()		1100,	110,	1010,	110,	1100,	101,	101
2017-01-05 16:55:36 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:36 AI_Player.update()		1010,	1100,	110,	101,	11,	1100,	1010
2017-01-05 16:55:36 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-05 16:55:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:36 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:36 AI_Player.update()	update
2017-01-05 16:55:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:36 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:37 AI_Player.update()	update
2017-01-05 16:55:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:37 AI_Player.update()	Search took370ms
2017-01-05 16:55:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:37 AI_Player.update()		110,	111,	111,	1100,	111,	1101,	11
2017-01-05 16:55:37 AI_Player.update()		1100,	111,	11,	1010,	1001,	1001,	1101
2017-01-05 16:55:37 AI_Player.update()		1110,	1101,	1110,	1011,	111,	101,	1011
2017-01-05 16:55:37 AI_Player.update()		1100,	110,	1010,	110,	1100,	101,	101
2017-01-05 16:55:37 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:55:37 AI_Player.update()		1010,	1100,	110,	101,	11,	1001,	1010
2017-01-05 16:55:37 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1101,	1001
2017-01-05 16:55:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:37 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:37 AI_Player.update()	update
2017-01-05 16:55:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:37 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:37 AI_Player.update()	update
2017-01-05 16:55:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:37 AI_Player.update()	Search took168ms
2017-01-05 16:55:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:37 AI_Player.update()		110,	1001,	111,	1100,	111,	1101,	11
2017-01-05 16:55:37 AI_Player.update()		1100,	111,	11,	1010,	1001,	1001,	1101
2017-01-05 16:55:37 AI_Player.update()		1110,	111,	1110,	1011,	111,	101,	1011
2017-01-05 16:55:37 AI_Player.update()		1100,	1101,	1010,	110,	1100,	101,	101
2017-01-05 16:55:37 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:55:37 AI_Player.update()		1010,	11,	110,	101,	11,	1001,	1010
2017-01-05 16:55:37 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1101,	1001
2017-01-05 16:55:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:37 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:37 AI_Player.update()	update
2017-01-05 16:55:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:37 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:37 AI_Player.update()	update
2017-01-05 16:55:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:38 AI_Player.update()	Search took322ms
2017-01-05 16:55:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:38 AI_Player.update()		110,	1001,	111,	1010,	111,	1101,	11
2017-01-05 16:55:38 AI_Player.update()		1100,	111,	11,	1011,	1001,	1001,	1101
2017-01-05 16:55:38 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-05 16:55:38 AI_Player.update()		1100,	1101,	1010,	101,	1100,	101,	101
2017-01-05 16:55:38 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:55:38 AI_Player.update()		1010,	11,	110,	11,	11,	1001,	1010
2017-01-05 16:55:38 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:55:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:38 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:38 AI_Player.update()	update
2017-01-05 16:55:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:38 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:38 AI_Player.update()	update
2017-01-05 16:55:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:38 AI_Player.update()	Search took79ms
2017-01-05 16:55:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:38 AI_Player.update()		110,	1001,	111,	1010,	111,	1101,	11
2017-01-05 16:55:38 AI_Player.update()		1100,	111,	11,	1011,	1001,	1101,	1101
2017-01-05 16:55:38 AI_Player.update()		1110,	111,	1110,	110,	111,	1001,	1011
2017-01-05 16:55:38 AI_Player.update()		1100,	1101,	1010,	101,	1100,	101,	101
2017-01-05 16:55:38 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:38 AI_Player.update()		1010,	11,	110,	11,	11,	1100,	1010
2017-01-05 16:55:38 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:55:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:38 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:38 AI_Player.update()	update
2017-01-05 16:55:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:38 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:38 AI_Player.update()	update
2017-01-05 16:55:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:39 AI_Player.update()	Search took245ms
2017-01-05 16:55:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:39 AI_Player.update()		110,	1001,	111,	1010,	111,	1101,	11
2017-01-05 16:55:39 AI_Player.update()		1100,	111,	11,	1011,	1001,	1001,	1101
2017-01-05 16:55:39 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-05 16:55:39 AI_Player.update()		1100,	1101,	1010,	101,	1100,	101,	101
2017-01-05 16:55:39 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:55:39 AI_Player.update()		1010,	11,	110,	11,	11,	1001,	1010
2017-01-05 16:55:39 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:55:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:39 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:39 AI_Player.update()	update
2017-01-05 16:55:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:39 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:39 AI_Player.update()	update
2017-01-05 16:55:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:39 AI_Player.update()	Search took110ms
2017-01-05 16:55:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:39 AI_Player.update()		110,	1001,	111,	1010,	111,	1101,	11
2017-01-05 16:55:39 AI_Player.update()		1100,	111,	11,	1011,	1001,	1101,	1101
2017-01-05 16:55:39 AI_Player.update()		1110,	111,	1110,	110,	111,	1001,	1011
2017-01-05 16:55:39 AI_Player.update()		1100,	1101,	1010,	101,	1100,	101,	101
2017-01-05 16:55:39 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:39 AI_Player.update()		1010,	11,	110,	11,	11,	1100,	1010
2017-01-05 16:55:39 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:55:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:39 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:39 AI_Player.update()	update
2017-01-05 16:55:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:39 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:39 AI_Player.update()	update
2017-01-05 16:55:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:39 AI_Player.update()	Search took222ms
2017-01-05 16:55:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:39 AI_Player.update()		110,	1001,	111,	1010,	111,	1101,	11
2017-01-05 16:55:39 AI_Player.update()		1100,	111,	11,	1011,	1001,	1001,	1101
2017-01-05 16:55:39 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-05 16:55:39 AI_Player.update()		1100,	1101,	1010,	101,	1100,	101,	101
2017-01-05 16:55:39 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:55:39 AI_Player.update()		1010,	11,	110,	11,	11,	1001,	1010
2017-01-05 16:55:39 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:55:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:39 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:39 AI_Player.update()	update
2017-01-05 16:55:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:39 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:39 AI_Player.update()	update
2017-01-05 16:55:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:40 AI_Player.update()	Search took128ms
2017-01-05 16:55:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:40 AI_Player.update()		110,	1001,	111,	1010,	111,	1101,	11
2017-01-05 16:55:40 AI_Player.update()		1100,	111,	11,	1011,	1001,	1101,	1101
2017-01-05 16:55:40 AI_Player.update()		1110,	111,	1110,	110,	111,	1001,	1011
2017-01-05 16:55:40 AI_Player.update()		1100,	1101,	1010,	101,	1100,	101,	101
2017-01-05 16:55:40 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-05 16:55:40 AI_Player.update()		1010,	11,	110,	11,	11,	1100,	1010
2017-01-05 16:55:40 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:55:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:40 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:40 AI_Player.update()	update
2017-01-05 16:55:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:40 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:40 AI_Player.update()	update
2017-01-05 16:55:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:40 AI_Player.update()	Search took222ms
2017-01-05 16:55:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:40 AI_Player.update()		110,	1001,	111,	1011,	111,	1101,	11
2017-01-05 16:55:40 AI_Player.update()		1100,	111,	11,	110,	1001,	1101,	1101
2017-01-05 16:55:40 AI_Player.update()		1110,	111,	1110,	101,	111,	1001,	1011
2017-01-05 16:55:40 AI_Player.update()		1100,	1101,	1010,	101,	1100,	101,	101
2017-01-05 16:55:40 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-05 16:55:40 AI_Player.update()		1010,	11,	110,	1100,	11,	1100,	1010
2017-01-05 16:55:40 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:55:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:40 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:40 AI_Player.update()	update
2017-01-05 16:55:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:40 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:40 AI_Player.update()	update
2017-01-05 16:55:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:40 AI_Player.update()	Search took173ms
2017-01-05 16:55:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:40 AI_Player.update()		110,	1001,	111,	110,	111,	1101,	11
2017-01-05 16:55:40 AI_Player.update()		1100,	111,	11,	101,	1001,	1101,	1101
2017-01-05 16:55:40 AI_Player.update()		1110,	111,	1110,	101,	111,	1001,	1011
2017-01-05 16:55:40 AI_Player.update()		1100,	1101,	1010,	11,	1100,	101,	101
2017-01-05 16:55:40 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:40 AI_Player.update()		1010,	11,	110,	1010,	11,	1100,	1010
2017-01-05 16:55:40 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1001,	1001
2017-01-05 16:55:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:40 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:41 AI_Player.update()	update
2017-01-05 16:55:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:41 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:41 AI_Player.update()	update
2017-01-05 16:55:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:41 AI_Player.update()	Search took367ms
2017-01-05 16:55:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:41 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:41 AI_Player.update()		1100,	111,	11,	101,	1001,	1101,	1101
2017-01-05 16:55:41 AI_Player.update()		1110,	111,	1110,	11,	111,	1001,	1011
2017-01-05 16:55:41 AI_Player.update()		1100,	1101,	1010,	1100,	1100,	101,	101
2017-01-05 16:55:41 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:55:41 AI_Player.update()		1010,	11,	110,	1011,	11,	1100,	1010
2017-01-05 16:55:41 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1001,	1001
2017-01-05 16:55:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:41 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:41 AI_Player.update()	update
2017-01-05 16:55:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:41 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:41 AI_Player.update()	update
2017-01-05 16:55:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:41 AI_Player.update()	Search took230ms
2017-01-05 16:55:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:41 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:41 AI_Player.update()		1100,	111,	11,	101,	1001,	1001,	1101
2017-01-05 16:55:41 AI_Player.update()		1110,	111,	1110,	11,	111,	101,	1011
2017-01-05 16:55:41 AI_Player.update()		1100,	1101,	1010,	1100,	1100,	101,	101
2017-01-05 16:55:41 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:55:41 AI_Player.update()		1010,	11,	110,	1011,	11,	1001,	1010
2017-01-05 16:55:41 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1101,	1001
2017-01-05 16:55:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:41 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:42 AI_Player.update()	update
2017-01-05 16:55:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:42 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:42 AI_Player.update()	update
2017-01-05 16:55:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:42 AI_Player.update()	Search took157ms
2017-01-05 16:55:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:42 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:42 AI_Player.update()		1100,	111,	11,	11,	1001,	1001,	1101
2017-01-05 16:55:42 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:42 AI_Player.update()		1100,	1101,	1010,	1010,	1100,	101,	101
2017-01-05 16:55:42 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1100,	1011
2017-01-05 16:55:42 AI_Player.update()		1010,	11,	110,	110,	11,	1001,	1010
2017-01-05 16:55:42 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:42 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:42 AI_Player.update()	update
2017-01-05 16:55:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:42 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:42 AI_Player.update()	update
2017-01-05 16:55:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:42 AI_Player.update()	Search took212ms
2017-01-05 16:55:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:42 AI_Player.update()		110,	111,	111,	101,	111,	1101,	11
2017-01-05 16:55:42 AI_Player.update()		1100,	111,	11,	11,	1001,	1001,	1101
2017-01-05 16:55:42 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:42 AI_Player.update()		1100,	110,	1010,	1010,	1100,	101,	101
2017-01-05 16:55:42 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1100,	1011
2017-01-05 16:55:42 AI_Player.update()		1010,	1100,	110,	110,	11,	1001,	1010
2017-01-05 16:55:42 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:42 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:42 AI_Player.update()	update
2017-01-05 16:55:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:42 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:42 AI_Player.update()	update
2017-01-05 16:55:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:43 AI_Player.update()	Search took197ms
2017-01-05 16:55:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:43 AI_Player.update()		110,	111,	111,	11,	111,	1101,	11
2017-01-05 16:55:43 AI_Player.update()		1100,	111,	11,	1100,	1001,	1001,	1101
2017-01-05 16:55:43 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 16:55:43 AI_Player.update()		1100,	110,	1010,	1011,	1100,	101,	101
2017-01-05 16:55:43 AI_Player.update()		1110,	11,	1101,	110,	1011,	1100,	1011
2017-01-05 16:55:43 AI_Player.update()		1010,	1100,	110,	101,	11,	1001,	1010
2017-01-05 16:55:43 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:43 AI_Player.update()	update
2017-01-05 16:55:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:43 AI_Player.update()	update
2017-01-05 16:55:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:43 AI_Player.update()	Search took150ms
2017-01-05 16:55:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:43 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-05 16:55:43 AI_Player.update()		1100,	111,	11,	1100,	1001,	101,	1101
2017-01-05 16:55:43 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 16:55:43 AI_Player.update()		1100,	110,	1010,	1011,	1100,	1100,	101
2017-01-05 16:55:43 AI_Player.update()		1110,	11,	1101,	110,	1011,	1001,	1011
2017-01-05 16:55:43 AI_Player.update()		1010,	1100,	110,	101,	11,	1101,	1010
2017-01-05 16:55:43 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:43 AI_Player.update()	update
2017-01-05 16:55:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:43 AI_Player.update()	update
2017-01-05 16:55:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:43 AI_Player.update()	Search took138ms
2017-01-05 16:55:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:43 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-05 16:55:43 AI_Player.update()		1100,	111,	11,	1100,	1001,	101,	1101
2017-01-05 16:55:43 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 16:55:43 AI_Player.update()		110,	1010,	1011,	1100,	1100,	101,	1100
2017-01-05 16:55:43 AI_Player.update()		1110,	11,	1101,	110,	1011,	1001,	1011
2017-01-05 16:55:43 AI_Player.update()		1010,	1100,	110,	101,	11,	1101,	1010
2017-01-05 16:55:43 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:43 AI_Player.update()	update
2017-01-05 16:55:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:44 AI_Player.update()	update
2017-01-05 16:55:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:44 AI_Player.update()	Search took427ms
2017-01-05 16:55:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:44 AI_Player.update()		110,	111,	111,	11,	111,	101,	11
2017-01-05 16:55:44 AI_Player.update()		1100,	111,	11,	1100,	1001,	101,	1101
2017-01-05 16:55:44 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 16:55:44 AI_Player.update()		110,	1010,	1011,	1100,	1100,	1001,	1100
2017-01-05 16:55:44 AI_Player.update()		1110,	11,	1101,	110,	1011,	1101,	1011
2017-01-05 16:55:44 AI_Player.update()		1010,	1100,	110,	101,	11,	1101,	1010
2017-01-05 16:55:44 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-05 16:55:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:44 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:44 AI_Player.update()	update
2017-01-05 16:55:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:44 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:44 AI_Player.update()	update
2017-01-05 16:55:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:44 AI_Player.update()	Search took194ms
2017-01-05 16:55:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:44 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-05 16:55:44 AI_Player.update()		1100,	111,	11,	1100,	1001,	101,	1101
2017-01-05 16:55:44 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 16:55:44 AI_Player.update()		110,	1010,	1011,	1100,	1100,	101,	1100
2017-01-05 16:55:44 AI_Player.update()		1110,	11,	1101,	110,	1011,	1001,	1011
2017-01-05 16:55:44 AI_Player.update()		1010,	1100,	110,	101,	11,	1101,	1010
2017-01-05 16:55:44 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:44 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:44 AI_Player.update()	update
2017-01-05 16:55:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:44 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:45 AI_Player.update()	update
2017-01-05 16:55:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:45 AI_Player.update()	Search took417ms
2017-01-05 16:55:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:45 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-05 16:55:45 AI_Player.update()		1100,	111,	11,	11,	1001,	101,	1101
2017-01-05 16:55:45 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:45 AI_Player.update()		110,	1010,	1011,	1010,	1100,	101,	1100
2017-01-05 16:55:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:55:45 AI_Player.update()		1010,	1100,	110,	110,	11,	1101,	1010
2017-01-05 16:55:45 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:45 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:55:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:45 AI_Player.update()	update
2017-01-05 16:55:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:45 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:55:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:55:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:55:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:45 AI_Player.update()	update
2017-01-05 16:55:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:45 AI_Player.update()	Search took226ms
2017-01-05 16:55:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:45 AI_Player.update()		110,	111,	111,	101,	111,	1101,	11
2017-01-05 16:55:45 AI_Player.update()		1100,	111,	11,	11,	1001,	1001,	1101
2017-01-05 16:55:45 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:45 AI_Player.update()		110,	1010,	1011,	1010,	1100,	101,	1100
2017-01-05 16:55:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:45 AI_Player.update()		1010,	1100,	110,	110,	11,	1001,	1010
2017-01-05 16:55:45 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:45 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:55:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:46 AI_Player.update()	update
2017-01-05 16:55:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:46 AI_Player.update()	update
2017-01-05 16:55:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:46 AI_Player.update()	Search took243ms
2017-01-05 16:55:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:46 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:46 AI_Player.update()		1100,	111,	11,	11,	1001,	1001,	1101
2017-01-05 16:55:46 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:46 AI_Player.update()		110,	1101,	1011,	1010,	1100,	101,	1100
2017-01-05 16:55:46 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:46 AI_Player.update()		1010,	11,	110,	110,	11,	1001,	1010
2017-01-05 16:55:46 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:46 AI_Player.update()	update
2017-01-05 16:55:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:46 AI_Player.update()	update
2017-01-05 16:55:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:46 AI_Player.update()	Search took348ms
2017-01-05 16:55:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:46 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:46 AI_Player.update()		1100,	111,	11,	11,	1001,	1001,	1101
2017-01-05 16:55:46 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:46 AI_Player.update()		1101,	1011,	1010,	1100,	101,	1100,	110
2017-01-05 16:55:46 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:46 AI_Player.update()		1010,	11,	110,	110,	11,	1001,	1010
2017-01-05 16:55:46 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:46 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:47 AI_Player.update()	update
2017-01-05 16:55:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:47 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:47 AI_Player.update()	update
2017-01-05 16:55:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:47 AI_Player.update()	Search took125ms
2017-01-05 16:55:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:47 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:47 AI_Player.update()		111,	11,	11,	1001,	1001,	1101,	1100
2017-01-05 16:55:47 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:47 AI_Player.update()		1101,	1011,	1010,	1100,	101,	1100,	110
2017-01-05 16:55:47 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:47 AI_Player.update()		1010,	11,	110,	110,	11,	1001,	1010
2017-01-05 16:55:47 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:47 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:47 AI_Player.update()	update
2017-01-05 16:55:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:47 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:47 AI_Player.update()	update
2017-01-05 16:55:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:47 AI_Player.update()	Search took340ms
2017-01-05 16:55:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:47 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:47 AI_Player.update()		111,	11,	11,	1001,	1001,	1101,	1100
2017-01-05 16:55:47 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:47 AI_Player.update()		110,	1101,	1011,	1010,	1100,	101,	1100
2017-01-05 16:55:47 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:47 AI_Player.update()		1010,	11,	110,	110,	11,	1001,	1010
2017-01-05 16:55:47 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:47 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:47 AI_Player.update()	update
2017-01-05 16:55:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:47 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:47 AI_Player.update()	update
2017-01-05 16:55:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:48 AI_Player.update()	Search took267ms
2017-01-05 16:55:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:48 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:48 AI_Player.update()		11,	11,	1001,	1001,	1101,	1100,	111
2017-01-05 16:55:48 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:48 AI_Player.update()		110,	1101,	1011,	1010,	1100,	101,	1100
2017-01-05 16:55:48 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:48 AI_Player.update()		1010,	11,	110,	110,	11,	1001,	1010
2017-01-05 16:55:48 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:55:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:48 AI_Player.update()	update
2017-01-05 16:55:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:48 AI_Player.update()	update
2017-01-05 16:55:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:48 AI_Player.update()	Search took237ms
2017-01-05 16:55:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:48 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:48 AI_Player.update()		111,	11,	11,	1001,	1001,	1101,	1100
2017-01-05 16:55:48 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:48 AI_Player.update()		110,	1101,	1011,	1010,	1100,	101,	1100
2017-01-05 16:55:48 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:48 AI_Player.update()		1010,	11,	110,	110,	11,	1001,	1010
2017-01-05 16:55:48 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:48 AI_Player.update()	update
2017-01-05 16:55:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:48 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:48 AI_Player.update()	update
2017-01-05 16:55:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:49 AI_Player.update()	Search took244ms
2017-01-05 16:55:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:49 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:49 AI_Player.update()		11,	11,	1001,	1001,	1101,	1100,	111
2017-01-05 16:55:49 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:49 AI_Player.update()		110,	1101,	1011,	1010,	1100,	101,	1100
2017-01-05 16:55:49 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:49 AI_Player.update()		1010,	11,	110,	110,	11,	1001,	1010
2017-01-05 16:55:49 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:49 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:49 AI_Player.update()	update
2017-01-05 16:55:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:49 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:49 AI_Player.update()	update
2017-01-05 16:55:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:49 AI_Player.update()	Search took238ms
2017-01-05 16:55:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:49 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:49 AI_Player.update()		111,	11,	11,	1001,	1001,	1101,	1100
2017-01-05 16:55:49 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:49 AI_Player.update()		110,	1101,	1011,	1010,	1100,	101,	1100
2017-01-05 16:55:49 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:49 AI_Player.update()		1010,	11,	110,	110,	11,	1001,	1010
2017-01-05 16:55:49 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:49 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:49 AI_Player.update()	update
2017-01-05 16:55:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:49 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:49 AI_Player.update()	update
2017-01-05 16:55:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:50 AI_Player.update()	Search took284ms
2017-01-05 16:55:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:50 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:50 AI_Player.update()		11,	11,	1001,	1001,	1101,	1100,	111
2017-01-05 16:55:50 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:50 AI_Player.update()		110,	1101,	1011,	1010,	1100,	101,	1100
2017-01-05 16:55:50 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:50 AI_Player.update()		1010,	11,	110,	110,	11,	1001,	1010
2017-01-05 16:55:50 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:50 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:50 AI_Player.update()	update
2017-01-05 16:55:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:50 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:50 AI_Player.update()	update
2017-01-05 16:55:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:50 AI_Player.update()	Search took246ms
2017-01-05 16:55:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:50 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:50 AI_Player.update()		111,	11,	11,	1001,	1001,	1101,	1100
2017-01-05 16:55:50 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:50 AI_Player.update()		110,	1101,	1011,	1010,	1100,	101,	1100
2017-01-05 16:55:50 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:50 AI_Player.update()		1010,	11,	110,	110,	11,	1001,	1010
2017-01-05 16:55:50 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:50 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:50 AI_Player.update()	update
2017-01-05 16:55:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:50 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:50 AI_Player.update()	update
2017-01-05 16:55:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:50 AI_Player.update()	Search took236ms
2017-01-05 16:55:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:50 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-05 16:55:50 AI_Player.update()		11,	11,	1001,	1001,	1101,	1100,	111
2017-01-05 16:55:50 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:50 AI_Player.update()		110,	1101,	1011,	1010,	1100,	101,	1100
2017-01-05 16:55:50 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:50 AI_Player.update()		1010,	11,	110,	110,	11,	1001,	1010
2017-01-05 16:55:50 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:50 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:51 AI_Player.update()	update
2017-01-05 16:55:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:51 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:51 AI_Player.update()	update
2017-01-05 16:55:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:51 AI_Player.update()	Search took212ms
2017-01-05 16:55:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:51 AI_Player.update()		110,	11,	111,	101,	111,	1101,	11
2017-01-05 16:55:51 AI_Player.update()		11,	111,	1001,	1001,	1101,	1100,	111
2017-01-05 16:55:51 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:51 AI_Player.update()		110,	1010,	1011,	1010,	1100,	101,	1100
2017-01-05 16:55:51 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:51 AI_Player.update()		1010,	1100,	110,	110,	11,	1001,	1010
2017-01-05 16:55:51 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:51 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:51 AI_Player.update()	update
2017-01-05 16:55:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:51 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:51 AI_Player.update()	update
2017-01-05 16:55:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:51 AI_Player.update()	Search took284ms
2017-01-05 16:55:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:51 AI_Player.update()		110,	111,	111,	101,	111,	1101,	11
2017-01-05 16:55:51 AI_Player.update()		11,	1101,	1001,	1001,	1101,	1100,	111
2017-01-05 16:55:51 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 16:55:51 AI_Player.update()		110,	11,	1011,	1010,	1100,	101,	1100
2017-01-05 16:55:51 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-05 16:55:51 AI_Player.update()		1010,	1001,	110,	110,	11,	1001,	1010
2017-01-05 16:55:51 AI_Player.update()		1100,	11,	1101,	101,	1101,	1101,	1001
2017-01-05 16:55:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:51 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:55:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:51 AI_Player.update()	update
2017-01-05 16:55:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:51 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:55:51 AI_Player.update()	Player b has won!
2017-01-05 16:55:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:55:55 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:55:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:55:55 QueryProlog.reset()	setup(h2/h2). suceeded
2017-01-05 16:55:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:55:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:55:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:55:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:55:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:55:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:55:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:55:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:55:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:55:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:55:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:55:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:55:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:55 AI_Player.update()	update
2017-01-05 16:55:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:55:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 16:55:55 AI_Player.update()	Search took179ms
2017-01-05 16:55:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:55 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-05 16:55:55 AI_Player.update()		1110,	110,	1011,	1001,	1100,	1110,	1101
2017-01-05 16:55:55 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 16:55:55 AI_Player.update()		1100,	1101,	101,	110,	1011,	110,	1001
2017-01-05 16:55:55 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:55:55 AI_Player.update()		101,	101,	111,	1100,	1001,	11,	101
2017-01-05 16:55:55 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1101,	1001
2017-01-05 16:55:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:56 AI_Player.update()	update
2017-01-05 16:55:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:55:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:55:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 16:55:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:55:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:55:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:56 AI_Player.update()	update
2017-01-05 16:55:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:55:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 16:55:56 AI_Player.update()	Search took135ms
2017-01-05 16:55:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:55:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:56 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-05 16:55:56 AI_Player.update()		1110,	110,	1011,	1001,	1100,	1110,	1101
2017-01-05 16:55:56 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 16:55:56 AI_Player.update()		1101,	101,	110,	1011,	110,	1001,	1100
2017-01-05 16:55:56 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:55:56 AI_Player.update()		101,	101,	111,	1100,	1001,	11,	101
2017-01-05 16:55:56 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1101,	1001
2017-01-05 16:55:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:55:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:55:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:56 AI_Player.update()	update
2017-01-05 16:55:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:55:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:55:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 16:55:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:55:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:55:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:55:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:55:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:55:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:55:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:55:56 AI_Player.update()	update
2017-01-05 16:55:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
