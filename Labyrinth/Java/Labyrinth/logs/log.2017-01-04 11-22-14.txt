2017-01-04 11:22:14 GameBoard.<init>()	Hello World!
2017-01-04 11:22:14 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-04 11:22:14 QueryProlog.initialise()	setup(h2/h3). suceeded
2017-01-04 11:22:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:14 GameBoard.setupBoardFromString()	Board created
2017-01-04 11:22:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:14 GameBoard.initialise()	[map, chest, candle, book, gem]
2017-01-04 11:22:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:14 GameBoard.initialise()	[helmet, sword, ring, crown, fairy]
2017-01-04 11:22:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:14 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-04 11:22:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	null
2017-01-04 11:22:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:14 AI_Player.update()	update
2017-01-04 11:22:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:14 AI_Player.update()	Search took35ms
2017-01-04 11:22:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:14 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 11:22:14 AI_Player.update()		101,	110,	1001,	1010,	1001,	1001,	110
2017-01-04 11:22:14 AI_Player.update()		1110,	11,	1110,	110,	111,	1101,	1011
2017-01-04 11:22:14 AI_Player.update()		1011,	111,	110,	110,	101,	101,	1100
2017-01-04 11:22:14 AI_Player.update()		1110,	111,	1101,	1010,	1011,	11,	1011
2017-01-04 11:22:14 AI_Player.update()		1100,	1001,	1100,	101,	111,	110,	1101
2017-01-04 11:22:14 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 11:22:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:14 AI_Player.update()	update
2017-01-04 11:22:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:14 AI_Player.update()	update
2017-01-04 11:22:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:14 AI_Player.update()	Search took29ms
2017-01-04 11:22:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:14 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-04 11:22:14 AI_Player.update()		101,	110,	1001,	1010,	1001,	1010,	110
2017-01-04 11:22:14 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-04 11:22:14 AI_Player.update()		1011,	111,	110,	110,	101,	1101,	1100
2017-01-04 11:22:14 AI_Player.update()		1110,	111,	1101,	1010,	1011,	101,	1011
2017-01-04 11:22:14 AI_Player.update()		1100,	1001,	1100,	101,	111,	11,	1101
2017-01-04 11:22:14 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 11:22:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:14 AI_Player.update()	update
2017-01-04 11:22:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:22:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:14 AI_Player.update()	update
2017-01-04 11:22:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:15 AI_Player.update()	Search took153ms
2017-01-04 11:22:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:15 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-04 11:22:15 AI_Player.update()		110,	1001,	1010,	1001,	1010,	110,	101
2017-01-04 11:22:15 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-04 11:22:15 AI_Player.update()		1011,	111,	110,	110,	101,	1101,	1100
2017-01-04 11:22:15 AI_Player.update()		1110,	111,	1101,	1010,	1011,	101,	1011
2017-01-04 11:22:15 AI_Player.update()		1100,	1001,	1100,	101,	111,	11,	1101
2017-01-04 11:22:15 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 11:22:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:22:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:15 AI_Player.update()	update
2017-01-04 11:22:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:22:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:15 AI_Player.update()	update
2017-01-04 11:22:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:15 AI_Player.update()	Search took156ms
2017-01-04 11:22:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:15 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-04 11:22:15 AI_Player.update()		110,	1001,	1010,	110,	1010,	110,	101
2017-01-04 11:22:15 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-04 11:22:15 AI_Player.update()		1011,	111,	110,	1010,	101,	1101,	1100
2017-01-04 11:22:15 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:15 AI_Player.update()		1100,	1001,	1100,	101,	111,	11,	1101
2017-01-04 11:22:15 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-04 11:22:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:22:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:15 AI_Player.update()	update
2017-01-04 11:22:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:22:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:15 AI_Player.update()	update
2017-01-04 11:22:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:15 AI_Player.update()	Search took461ms
2017-01-04 11:22:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:15 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-04 11:22:15 AI_Player.update()		1001,	1010,	110,	1010,	110,	101,	110
2017-01-04 11:22:15 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-04 11:22:15 AI_Player.update()		1011,	111,	110,	1010,	101,	1101,	1100
2017-01-04 11:22:15 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:15 AI_Player.update()		1100,	1001,	1100,	101,	111,	11,	1101
2017-01-04 11:22:15 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-04 11:22:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:22:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:15 AI_Player.update()	update
2017-01-04 11:22:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:15 AI_Player.update()	update
2017-01-04 11:22:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:16 AI_Player.update()	Search took251ms
2017-01-04 11:22:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:16 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-04 11:22:16 AI_Player.update()		1010,	110,	1010,	110,	101,	110,	1001
2017-01-04 11:22:16 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-04 11:22:16 AI_Player.update()		1011,	111,	110,	1010,	101,	1101,	1100
2017-01-04 11:22:16 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:16 AI_Player.update()		1100,	1001,	1100,	101,	111,	11,	1101
2017-01-04 11:22:16 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-04 11:22:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:16 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:16 AI_Player.update()	update
2017-01-04 11:22:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:16 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:16 AI_Player.update()	update
2017-01-04 11:22:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:16 AI_Player.update()	Search took801ms
2017-01-04 11:22:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:16 AI_Player.update()		110,	1100,	111,	1001,	111,	110,	11
2017-01-04 11:22:16 AI_Player.update()		1010,	101,	1010,	110,	101,	110,	1001
2017-01-04 11:22:16 AI_Player.update()		1110,	110,	1110,	110,	111,	1001,	1011
2017-01-04 11:22:16 AI_Player.update()		1011,	11,	110,	1010,	101,	1101,	1100
2017-01-04 11:22:16 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:16 AI_Player.update()		1100,	111,	1100,	101,	111,	11,	1101
2017-01-04 11:22:16 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	110,	1001
2017-01-04 11:22:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:16 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:16 AI_Player.update()	update
2017-01-04 11:22:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:16 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:16 AI_Player.update()	update
2017-01-04 11:22:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:17 AI_Player.update()	Search took259ms
2017-01-04 11:22:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:17 AI_Player.update()		110,	1100,	111,	1001,	111,	110,	11
2017-01-04 11:22:17 AI_Player.update()		1010,	101,	1010,	110,	101,	110,	1001
2017-01-04 11:22:17 AI_Player.update()		1110,	110,	1110,	110,	111,	1001,	1011
2017-01-04 11:22:17 AI_Player.update()		1100,	1011,	11,	110,	1010,	101,	1101
2017-01-04 11:22:17 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:17 AI_Player.update()		1100,	111,	1100,	101,	111,	11,	1101
2017-01-04 11:22:17 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	110,	1001
2017-01-04 11:22:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:17 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:17 AI_Player.update()	update
2017-01-04 11:22:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:17 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:17 AI_Player.update()	update
2017-01-04 11:22:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:17 AI_Player.update()	Search took409ms
2017-01-04 11:22:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:17 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-04 11:22:17 AI_Player.update()		1010,	110,	1010,	110,	101,	110,	1001
2017-01-04 11:22:17 AI_Player.update()		1110,	1011,	1110,	110,	111,	1001,	1011
2017-01-04 11:22:17 AI_Player.update()		1100,	111,	11,	110,	1010,	101,	1101
2017-01-04 11:22:17 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:17 AI_Player.update()		1100,	1001,	1100,	101,	111,	11,	1101
2017-01-04 11:22:17 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-04 11:22:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:17 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:17 AI_Player.update()	update
2017-01-04 11:22:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:17 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:17 AI_Player.update()	update
2017-01-04 11:22:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:18 AI_Player.update()	Search took1113ms
2017-01-04 11:22:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:18 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 11:22:18 AI_Player.update()		1010,	110,	1010,	110,	101,	110,	1001
2017-01-04 11:22:18 AI_Player.update()		1110,	1011,	1110,	110,	111,	1001,	1011
2017-01-04 11:22:18 AI_Player.update()		1100,	111,	11,	101,	1010,	101,	1101
2017-01-04 11:22:18 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:18 AI_Player.update()		1100,	1001,	1100,	1100,	111,	11,	1101
2017-01-04 11:22:18 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-04 11:22:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:18 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:18 AI_Player.update()	update
2017-01-04 11:22:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:18 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:22:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:18 AI_Player.update()	update
2017-01-04 11:22:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:19 AI_Player.update()	Search took980ms
2017-01-04 11:22:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:19 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 11:22:19 AI_Player.update()		1010,	110,	1010,	110,	101,	110,	1001
2017-01-04 11:22:19 AI_Player.update()		1110,	1011,	1110,	110,	111,	1001,	1011
2017-01-04 11:22:19 AI_Player.update()		1100,	111,	11,	101,	1010,	101,	1101
2017-01-04 11:22:19 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:19 AI_Player.update()		1001,	1100,	1100,	111,	11,	1101,	1100
2017-01-04 11:22:19 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-04 11:22:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:19 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:22:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:19 AI_Player.update()	update
2017-01-04 11:22:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:19 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:22:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:19 AI_Player.update()	update
2017-01-04 11:22:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:20 AI_Player.update()	Search took855ms
2017-01-04 11:22:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:20 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-04 11:22:20 AI_Player.update()		1010,	1011,	1010,	110,	101,	110,	1001
2017-01-04 11:22:20 AI_Player.update()		1110,	111,	1110,	110,	111,	1001,	1011
2017-01-04 11:22:20 AI_Player.update()		1100,	111,	11,	101,	1010,	101,	1101
2017-01-04 11:22:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:20 AI_Player.update()		1001,	1100,	1100,	111,	11,	1101,	1100
2017-01-04 11:22:20 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-04 11:22:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:20 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:22:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:20 AI_Player.update()	update
2017-01-04 11:22:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:20 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:22:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:20 AI_Player.update()	update
2017-01-04 11:22:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:20 AI_Player.update()	Search took87ms
2017-01-04 11:22:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:20 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 11:22:20 AI_Player.update()		1010,	110,	1010,	110,	101,	110,	1001
2017-01-04 11:22:20 AI_Player.update()		1110,	1011,	1110,	110,	111,	1001,	1011
2017-01-04 11:22:20 AI_Player.update()		1100,	111,	11,	101,	1010,	101,	1101
2017-01-04 11:22:20 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:20 AI_Player.update()		1001,	1100,	1100,	111,	11,	1101,	1100
2017-01-04 11:22:20 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-04 11:22:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:20 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:22:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:20 AI_Player.update()	update
2017-01-04 11:22:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:20 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:22:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:20 AI_Player.update()	update
2017-01-04 11:22:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:21 AI_Player.update()	Search took977ms
2017-01-04 11:22:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:21 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 11:22:21 AI_Player.update()		1001,	1010,	110,	1010,	110,	101,	110
2017-01-04 11:22:21 AI_Player.update()		1110,	1011,	1110,	110,	111,	1001,	1011
2017-01-04 11:22:21 AI_Player.update()		1100,	111,	11,	101,	1010,	101,	1101
2017-01-04 11:22:21 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:21 AI_Player.update()		1001,	1100,	1100,	111,	11,	1101,	1100
2017-01-04 11:22:21 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-04 11:22:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:22:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:21 AI_Player.update()	update
2017-01-04 11:22:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:21 AI_Player.update()	update
2017-01-04 11:22:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:21 AI_Player.update()	Search took169ms
2017-01-04 11:22:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:21 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 11:22:21 AI_Player.update()		1001,	1010,	110,	1010,	110,	1001,	110
2017-01-04 11:22:21 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-04 11:22:21 AI_Player.update()		1100,	111,	11,	101,	1010,	101,	1101
2017-01-04 11:22:21 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-04 11:22:21 AI_Player.update()		1001,	1100,	1100,	111,	11,	110,	1100
2017-01-04 11:22:21 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-04 11:22:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:21 AI_Player.update()	update
2017-01-04 11:22:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:21 AI_Player.update()	update
2017-01-04 11:22:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:21 AI_Player.update()	Search took124ms
2017-01-04 11:22:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:21 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 11:22:21 AI_Player.update()		1001,	1011,	110,	1010,	110,	1001,	110
2017-01-04 11:22:21 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-04 11:22:21 AI_Player.update()		1100,	111,	11,	101,	1010,	101,	1101
2017-01-04 11:22:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-04 11:22:21 AI_Player.update()		1001,	1100,	1100,	111,	11,	110,	1100
2017-01-04 11:22:21 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-04 11:22:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:21 AI_Player.update()	update
2017-01-04 11:22:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:21 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:21 AI_Player.update()	update
2017-01-04 11:22:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:22 AI_Player.update()	Search took819ms
2017-01-04 11:22:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:22 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 11:22:22 AI_Player.update()		1001,	1011,	110,	110,	110,	1001,	110
2017-01-04 11:22:22 AI_Player.update()		1110,	111,	1110,	1010,	111,	101,	1011
2017-01-04 11:22:22 AI_Player.update()		1100,	111,	11,	110,	1010,	101,	1101
2017-01-04 11:22:22 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-04 11:22:22 AI_Player.update()		1001,	1100,	1100,	101,	11,	110,	1100
2017-01-04 11:22:22 AI_Player.update()		1100,	101,	1101,	111,	1101,	110,	1001
2017-01-04 11:22:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:22 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:22 AI_Player.update()	update
2017-01-04 11:22:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:22 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:22 AI_Player.update()	update
2017-01-04 11:22:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:22 AI_Player.update()	Search took62ms
2017-01-04 11:22:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:22 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 11:22:22 AI_Player.update()		1001,	1011,	110,	1010,	110,	1001,	110
2017-01-04 11:22:22 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-04 11:22:22 AI_Player.update()		1100,	111,	11,	101,	1010,	101,	1101
2017-01-04 11:22:22 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-04 11:22:22 AI_Player.update()		1001,	1100,	1100,	111,	11,	110,	1100
2017-01-04 11:22:22 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-04 11:22:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:22 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:22 AI_Player.update()	update
2017-01-04 11:22:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:22 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:22 AI_Player.update()	update
2017-01-04 11:22:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:23 AI_Player.update()	Search took206ms
2017-01-04 11:22:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 11:22:23 AI_Player.update()		1001,	1011,	110,	110,	110,	1001,	110
2017-01-04 11:22:23 AI_Player.update()		1110,	111,	1110,	1010,	111,	101,	1011
2017-01-04 11:22:23 AI_Player.update()		1100,	111,	11,	110,	1010,	101,	1101
2017-01-04 11:22:23 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-04 11:22:23 AI_Player.update()		1001,	1100,	1100,	101,	11,	110,	1100
2017-01-04 11:22:23 AI_Player.update()		1100,	101,	1101,	111,	1101,	110,	1001
2017-01-04 11:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()	update
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()	update
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:23 AI_Player.update()	Search took59ms
2017-01-04 11:22:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()		110,	1010,	111,	111,	111,	101,	11
2017-01-04 11:22:23 AI_Player.update()		1001,	1011,	110,	1001,	110,	1001,	110
2017-01-04 11:22:23 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-04 11:22:23 AI_Player.update()		1100,	111,	11,	1010,	1010,	101,	1101
2017-01-04 11:22:23 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1101,	1011
2017-01-04 11:22:23 AI_Player.update()		1001,	1100,	1100,	101,	11,	110,	1100
2017-01-04 11:22:23 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 11:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()	update
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()	update
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:23 AI_Player.update()	Search took323ms
2017-01-04 11:22:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()		110,	1011,	111,	111,	111,	101,	11
2017-01-04 11:22:23 AI_Player.update()		1001,	111,	110,	1001,	110,	1001,	110
2017-01-04 11:22:23 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-04 11:22:23 AI_Player.update()		1100,	1100,	11,	1010,	1010,	101,	1101
2017-01-04 11:22:23 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1101,	1011
2017-01-04 11:22:23 AI_Player.update()		1001,	101,	1100,	101,	11,	110,	1100
2017-01-04 11:22:23 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()	update
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:22:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()	update
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:23 AI_Player.update()	Search took298ms
2017-01-04 11:22:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()		110,	1011,	111,	101,	111,	101,	11
2017-01-04 11:22:23 AI_Player.update()		1001,	111,	110,	111,	110,	1001,	110
2017-01-04 11:22:23 AI_Player.update()		1110,	111,	1110,	1001,	111,	101,	1011
2017-01-04 11:22:23 AI_Player.update()		1100,	1100,	11,	110,	1010,	101,	1101
2017-01-04 11:22:23 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:22:23 AI_Player.update()		1001,	101,	1100,	110,	11,	110,	1100
2017-01-04 11:22:23 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()	update
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()	update
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:23 AI_Player.update()	Search took164ms
2017-01-04 11:22:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()		110,	1011,	111,	111,	111,	101,	11
2017-01-04 11:22:23 AI_Player.update()		1001,	111,	110,	1001,	110,	1001,	110
2017-01-04 11:22:23 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-04 11:22:23 AI_Player.update()		1100,	1100,	11,	1010,	1010,	101,	1101
2017-01-04 11:22:23 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1101,	1011
2017-01-04 11:22:23 AI_Player.update()		1001,	101,	1100,	101,	11,	110,	1100
2017-01-04 11:22:23 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()	update
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:23 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:23 AI_Player.update()	update
2017-01-04 11:22:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:24 AI_Player.update()	Search took160ms
2017-01-04 11:22:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:24 AI_Player.update()		110,	111,	111,	111,	111,	101,	11
2017-01-04 11:22:24 AI_Player.update()		1001,	111,	110,	1001,	110,	1001,	110
2017-01-04 11:22:24 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-04 11:22:24 AI_Player.update()		1100,	1100,	11,	1010,	1010,	101,	1101
2017-01-04 11:22:24 AI_Player.update()		1110,	101,	1101,	110,	1011,	1101,	1011
2017-01-04 11:22:24 AI_Player.update()		1001,	1010,	1100,	101,	11,	110,	1100
2017-01-04 11:22:24 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 11:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:24 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:24 AI_Player.update()	update
2017-01-04 11:22:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:24 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:24 AI_Player.update()	update
2017-01-04 11:22:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:24 AI_Player.update()	Search took277ms
2017-01-04 11:22:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:24 AI_Player.update()		110,	111,	111,	111,	111,	101,	11
2017-01-04 11:22:24 AI_Player.update()		1001,	1100,	110,	1001,	110,	1001,	110
2017-01-04 11:22:24 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-04 11:22:24 AI_Player.update()		1100,	101,	11,	1010,	1010,	101,	1101
2017-01-04 11:22:24 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1101,	1011
2017-01-04 11:22:24 AI_Player.update()		1001,	1011,	1100,	101,	11,	110,	1100
2017-01-04 11:22:24 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 11:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:24 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:24 AI_Player.update()	update
2017-01-04 11:22:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:24 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:24 AI_Player.update()	update
2017-01-04 11:22:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:24 AI_Player.update()	Search took322ms
2017-01-04 11:22:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:24 AI_Player.update()		110,	111,	111,	111,	111,	1001,	11
2017-01-04 11:22:24 AI_Player.update()		1001,	1100,	110,	1001,	110,	101,	110
2017-01-04 11:22:24 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-04 11:22:24 AI_Player.update()		1100,	101,	11,	1010,	1010,	1101,	1101
2017-01-04 11:22:24 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:24 AI_Player.update()		1001,	1011,	1100,	101,	11,	110,	1100
2017-01-04 11:22:24 AI_Player.update()		1100,	111,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:24 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:24 AI_Player.update()	update
2017-01-04 11:22:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:24 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:24 AI_Player.update()	update
2017-01-04 11:22:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:25 AI_Player.update()	Search took347ms
2017-01-04 11:22:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:25 AI_Player.update()		110,	1100,	111,	111,	111,	1001,	11
2017-01-04 11:22:25 AI_Player.update()		1001,	1100,	110,	1001,	110,	101,	110
2017-01-04 11:22:25 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 11:22:25 AI_Player.update()		1100,	1010,	11,	1010,	1010,	1101,	1101
2017-01-04 11:22:25 AI_Player.update()		1110,	1011,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:25 AI_Player.update()		1001,	111,	1100,	101,	11,	110,	1100
2017-01-04 11:22:25 AI_Player.update()		1100,	111,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:25 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:25 AI_Player.update()	update
2017-01-04 11:22:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:25 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:25 AI_Player.update()	update
2017-01-04 11:22:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:25 AI_Player.update()	Search took281ms
2017-01-04 11:22:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:25 AI_Player.update()		110,	1100,	111,	111,	111,	1001,	11
2017-01-04 11:22:25 AI_Player.update()		1001,	1100,	110,	1001,	110,	101,	110
2017-01-04 11:22:25 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 11:22:25 AI_Player.update()		1100,	1010,	11,	1010,	1010,	1101,	1101
2017-01-04 11:22:25 AI_Player.update()		1110,	1011,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:25 AI_Player.update()		1100,	1001,	111,	1100,	101,	11,	110
2017-01-04 11:22:25 AI_Player.update()		1100,	111,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:25 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:25 AI_Player.update()	update
2017-01-04 11:22:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:25 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:25 AI_Player.update()	update
2017-01-04 11:22:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:26 AI_Player.update()	Search took638ms
2017-01-04 11:22:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:26 AI_Player.update()		110,	1100,	111,	111,	111,	101,	11
2017-01-04 11:22:26 AI_Player.update()		1001,	1100,	110,	1001,	110,	101,	110
2017-01-04 11:22:26 AI_Player.update()		1110,	101,	1110,	110,	111,	1101,	1011
2017-01-04 11:22:26 AI_Player.update()		1100,	1010,	11,	1010,	1010,	110,	1101
2017-01-04 11:22:26 AI_Player.update()		1110,	1011,	1101,	110,	1011,	11,	1011
2017-01-04 11:22:26 AI_Player.update()		1100,	1001,	111,	1100,	101,	101,	110
2017-01-04 11:22:26 AI_Player.update()		1100,	111,	1101,	101,	1101,	1001,	1001
2017-01-04 11:22:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:26 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:26 AI_Player.update()	update
2017-01-04 11:22:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:26 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:26 AI_Player.update()	update
2017-01-04 11:22:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:26 AI_Player.update()	Search took131ms
2017-01-04 11:22:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:26 AI_Player.update()		110,	1100,	111,	111,	111,	101,	11
2017-01-04 11:22:26 AI_Player.update()		1001,	101,	110,	1001,	110,	101,	110
2017-01-04 11:22:26 AI_Player.update()		1110,	1010,	1110,	110,	111,	1101,	1011
2017-01-04 11:22:26 AI_Player.update()		1100,	1011,	11,	1010,	1010,	110,	1101
2017-01-04 11:22:26 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-04 11:22:26 AI_Player.update()		1100,	111,	111,	1100,	101,	101,	110
2017-01-04 11:22:26 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 11:22:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:26 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:26 AI_Player.update()	update
2017-01-04 11:22:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:26 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:26 AI_Player.update()	update
2017-01-04 11:22:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:26 AI_Player.update()	Search took634ms
2017-01-04 11:22:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:26 AI_Player.update()		110,	1100,	111,	111,	111,	101,	11
2017-01-04 11:22:26 AI_Player.update()		1001,	1100,	110,	1001,	110,	101,	110
2017-01-04 11:22:26 AI_Player.update()		1110,	101,	1110,	110,	111,	1101,	1011
2017-01-04 11:22:26 AI_Player.update()		1100,	1010,	11,	1010,	1010,	110,	1101
2017-01-04 11:22:26 AI_Player.update()		1110,	1011,	1101,	110,	1011,	11,	1011
2017-01-04 11:22:26 AI_Player.update()		1100,	1001,	111,	1100,	101,	101,	110
2017-01-04 11:22:26 AI_Player.update()		1100,	111,	1101,	101,	1101,	1001,	1001
2017-01-04 11:22:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:26 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:26 AI_Player.update()	update
2017-01-04 11:22:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:26 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:26 AI_Player.update()	update
2017-01-04 11:22:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:26 AI_Player.update()	Search took78ms
2017-01-04 11:22:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:26 AI_Player.update()		110,	1100,	111,	111,	111,	101,	11
2017-01-04 11:22:26 AI_Player.update()		1001,	101,	110,	1001,	110,	101,	110
2017-01-04 11:22:26 AI_Player.update()		1110,	1010,	1110,	110,	111,	1101,	1011
2017-01-04 11:22:26 AI_Player.update()		1100,	1011,	11,	1010,	1010,	110,	1101
2017-01-04 11:22:26 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-04 11:22:26 AI_Player.update()		1100,	111,	111,	1100,	101,	101,	110
2017-01-04 11:22:26 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 11:22:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:26 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:26 AI_Player.update()	update
2017-01-04 11:22:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:26 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:26 AI_Player.update()	update
2017-01-04 11:22:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:27 AI_Player.update()	Search took602ms
2017-01-04 11:22:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:27 AI_Player.update()		110,	1100,	111,	111,	111,	101,	11
2017-01-04 11:22:27 AI_Player.update()		1001,	1100,	110,	1001,	110,	101,	110
2017-01-04 11:22:27 AI_Player.update()		1110,	101,	1110,	110,	111,	1101,	1011
2017-01-04 11:22:27 AI_Player.update()		1100,	1010,	11,	1010,	1010,	110,	1101
2017-01-04 11:22:27 AI_Player.update()		1110,	1011,	1101,	110,	1011,	11,	1011
2017-01-04 11:22:27 AI_Player.update()		1100,	1001,	111,	1100,	101,	101,	110
2017-01-04 11:22:27 AI_Player.update()		1100,	111,	1101,	101,	1101,	1001,	1001
2017-01-04 11:22:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:27 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:27 AI_Player.update()	update
2017-01-04 11:22:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:27 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:27 AI_Player.update()	update
2017-01-04 11:22:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:27 AI_Player.update()	Search took111ms
2017-01-04 11:22:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:27 AI_Player.update()		110,	1100,	111,	111,	111,	101,	11
2017-01-04 11:22:27 AI_Player.update()		1001,	1100,	110,	1001,	110,	1101,	110
2017-01-04 11:22:27 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-04 11:22:27 AI_Player.update()		1100,	1010,	11,	1010,	1010,	11,	1101
2017-01-04 11:22:27 AI_Player.update()		1110,	1011,	1101,	110,	1011,	101,	1011
2017-01-04 11:22:27 AI_Player.update()		1100,	1001,	111,	1100,	101,	1001,	110
2017-01-04 11:22:27 AI_Player.update()		1100,	111,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:27 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:27 AI_Player.update()	update
2017-01-04 11:22:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:27 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:27 AI_Player.update()	update
2017-01-04 11:22:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:28 AI_Player.update()	Search took357ms
2017-01-04 11:22:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:28 AI_Player.update()		110,	1100,	111,	111,	111,	101,	11
2017-01-04 11:22:28 AI_Player.update()		1001,	1100,	110,	1001,	110,	1101,	110
2017-01-04 11:22:28 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-04 11:22:28 AI_Player.update()		1100,	1010,	11,	1010,	1010,	11,	1101
2017-01-04 11:22:28 AI_Player.update()		1110,	1011,	1101,	110,	1011,	101,	1011
2017-01-04 11:22:28 AI_Player.update()		1001,	111,	1100,	101,	1001,	110,	1100
2017-01-04 11:22:28 AI_Player.update()		1100,	111,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:28 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:28 AI_Player.update()	update
2017-01-04 11:22:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:28 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:28 AI_Player.update()	update
2017-01-04 11:22:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:28 AI_Player.update()	Search took263ms
2017-01-04 11:22:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:28 AI_Player.update()		110,	1100,	111,	111,	111,	101,	11
2017-01-04 11:22:28 AI_Player.update()		1001,	1100,	110,	1001,	110,	1101,	110
2017-01-04 11:22:28 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-04 11:22:28 AI_Player.update()		1100,	1010,	11,	1010,	1010,	11,	1101
2017-01-04 11:22:28 AI_Player.update()		1110,	1011,	1101,	110,	1011,	101,	1011
2017-01-04 11:22:28 AI_Player.update()		1100,	1001,	111,	1100,	101,	1001,	110
2017-01-04 11:22:28 AI_Player.update()		1100,	111,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:28 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:28 AI_Player.update()	update
2017-01-04 11:22:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:28 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:28 AI_Player.update()	update
2017-01-04 11:22:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:28 AI_Player.update()	Search took321ms
2017-01-04 11:22:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:28 AI_Player.update()		110,	111,	111,	111,	111,	101,	11
2017-01-04 11:22:28 AI_Player.update()		1001,	1100,	110,	1001,	110,	1101,	110
2017-01-04 11:22:28 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-04 11:22:28 AI_Player.update()		1100,	101,	11,	1010,	1010,	11,	1101
2017-01-04 11:22:28 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-04 11:22:28 AI_Player.update()		1100,	1011,	111,	1100,	101,	1001,	110
2017-01-04 11:22:28 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:28 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:28 AI_Player.update()	update
2017-01-04 11:22:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:28 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:28 AI_Player.update()	update
2017-01-04 11:22:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:28 AI_Player.update()	Search took155ms
2017-01-04 11:22:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:28 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-04 11:22:28 AI_Player.update()		1001,	111,	110,	1001,	110,	1101,	110
2017-01-04 11:22:28 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-04 11:22:28 AI_Player.update()		1100,	1100,	11,	1010,	1010,	11,	1101
2017-01-04 11:22:28 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 11:22:28 AI_Player.update()		1100,	1010,	111,	1100,	101,	1001,	110
2017-01-04 11:22:28 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:28 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:28 AI_Player.update()	update
2017-01-04 11:22:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:28 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:28 AI_Player.update()	update
2017-01-04 11:22:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:29 AI_Player.update()	Search took346ms
2017-01-04 11:22:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:29 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-04 11:22:29 AI_Player.update()		1001,	111,	110,	1001,	110,	1101,	110
2017-01-04 11:22:29 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-04 11:22:29 AI_Player.update()		1100,	11,	1010,	1010,	11,	1101,	1100
2017-01-04 11:22:29 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 11:22:29 AI_Player.update()		1100,	1010,	111,	1100,	101,	1001,	110
2017-01-04 11:22:29 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:29 AI_Player.update()	update
2017-01-04 11:22:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:22:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:29 AI_Player.update()	update
2017-01-04 11:22:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:29 AI_Player.update()	Search took217ms
2017-01-04 11:22:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:29 AI_Player.update()		110,	1011,	111,	111,	111,	101,	11
2017-01-04 11:22:29 AI_Player.update()		1001,	1001,	110,	1001,	110,	1101,	110
2017-01-04 11:22:29 AI_Player.update()		1110,	111,	1110,	110,	111,	110,	1011
2017-01-04 11:22:29 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1101,	1100
2017-01-04 11:22:29 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-04 11:22:29 AI_Player.update()		1100,	101,	111,	1100,	101,	1001,	110
2017-01-04 11:22:29 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:22:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:29 AI_Player.update()	update
2017-01-04 11:22:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:29 AI_Player.update()	update
2017-01-04 11:22:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:29 AI_Player.update()	Search took348ms
2017-01-04 11:22:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:29 AI_Player.update()		110,	1011,	111,	111,	111,	101,	11
2017-01-04 11:22:29 AI_Player.update()		110,	1001,	1001,	110,	1001,	110,	1101
2017-01-04 11:22:29 AI_Player.update()		1110,	111,	1110,	110,	111,	110,	1011
2017-01-04 11:22:29 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1101,	1100
2017-01-04 11:22:29 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-04 11:22:29 AI_Player.update()		1100,	101,	111,	1100,	101,	1001,	110
2017-01-04 11:22:29 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:29 AI_Player.update()	update
2017-01-04 11:22:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:29 AI_Player.update()	update
2017-01-04 11:22:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:29 AI_Player.update()	Search took256ms
2017-01-04 11:22:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:29 AI_Player.update()		110,	1011,	111,	111,	111,	110,	11
2017-01-04 11:22:29 AI_Player.update()		110,	1001,	1001,	110,	1001,	110,	1101
2017-01-04 11:22:29 AI_Player.update()		1110,	111,	1110,	110,	111,	1101,	1011
2017-01-04 11:22:29 AI_Player.update()		1100,	1100,	1010,	1010,	11,	101,	1100
2017-01-04 11:22:29 AI_Player.update()		1110,	11,	1101,	110,	1011,	1001,	1011
2017-01-04 11:22:29 AI_Player.update()		1100,	101,	111,	1100,	101,	101,	110
2017-01-04 11:22:29 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:29 AI_Player.update()	update
2017-01-04 11:22:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:29 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:29 AI_Player.update()	update
2017-01-04 11:22:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:30 AI_Player.update()	Search took202ms
2017-01-04 11:22:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:30 AI_Player.update()		110,	1011,	111,	111,	111,	110,	11
2017-01-04 11:22:30 AI_Player.update()		110,	1001,	1001,	110,	1001,	110,	1101
2017-01-04 11:22:30 AI_Player.update()		1110,	111,	1110,	110,	111,	1101,	1011
2017-01-04 11:22:30 AI_Player.update()		1100,	1010,	1010,	11,	101,	1100,	1100
2017-01-04 11:22:30 AI_Player.update()		1110,	11,	1101,	110,	1011,	1001,	1011
2017-01-04 11:22:30 AI_Player.update()		1100,	101,	111,	1100,	101,	101,	110
2017-01-04 11:22:30 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:30 AI_Player.update()	update
2017-01-04 11:22:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:30 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:22:30 AI_Player.update()	Player a has won!
2017-01-04 11:22:30 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:22:30 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:22:30 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:22:30 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:22:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:30 AI_Player.update()	update
2017-01-04 11:22:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:30 AI_Player.update()	Search took171ms
2017-01-04 11:22:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:30 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 11:22:30 AI_Player.update()		1010,	1010,	101,	1001,	101,	110,	1010
2017-01-04 11:22:30 AI_Player.update()		1110,	1100,	1110,	111,	111,	1011,	1011
2017-01-04 11:22:30 AI_Player.update()		1010,	1010,	1100,	1011,	101,	11,	1011
2017-01-04 11:22:30 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-04 11:22:30 AI_Player.update()		1010,	110,	1010,	101,	1011,	11,	11
2017-01-04 11:22:30 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:22:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:30 AI_Player.update()	update
2017-01-04 11:22:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:30 AI_Player.update()	update
2017-01-04 11:22:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:30 AI_Player.update()	Search took269ms
2017-01-04 11:22:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:30 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 11:22:30 AI_Player.update()		1010,	1010,	101,	1001,	101,	110,	1010
2017-01-04 11:22:30 AI_Player.update()		1110,	1100,	1110,	111,	111,	1011,	1011
2017-01-04 11:22:30 AI_Player.update()		1010,	1010,	1100,	1011,	101,	11,	1011
2017-01-04 11:22:30 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-04 11:22:30 AI_Player.update()		110,	1010,	101,	1011,	11,	11,	1010
2017-01-04 11:22:30 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:22:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:30 AI_Player.update()	update
2017-01-04 11:22:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:30 AI_Player.update()	update
2017-01-04 11:22:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:30 AI_Player.update()	Search took219ms
2017-01-04 11:22:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:30 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-04 11:22:30 AI_Player.update()		1010,	1010,	101,	111,	101,	110,	1010
2017-01-04 11:22:30 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1011,	1011
2017-01-04 11:22:30 AI_Player.update()		1010,	1010,	1100,	1010,	101,	11,	1011
2017-01-04 11:22:30 AI_Player.update()		1110,	110,	1101,	1011,	1011,	11,	1011
2017-01-04 11:22:30 AI_Player.update()		110,	1010,	101,	1100,	11,	11,	1010
2017-01-04 11:22:30 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:22:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:30 AI_Player.update()	update
2017-01-04 11:22:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:30 AI_Player.update()	update
2017-01-04 11:22:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:31 AI_Player.update()	Search took937ms
2017-01-04 11:22:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:31 AI_Player.update()		110,	1010,	111,	111,	111,	1010,	11
2017-01-04 11:22:31 AI_Player.update()		1010,	1010,	101,	1011,	101,	110,	1010
2017-01-04 11:22:31 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1011,	1011
2017-01-04 11:22:31 AI_Player.update()		1010,	1010,	1100,	1011,	101,	11,	1011
2017-01-04 11:22:31 AI_Player.update()		1110,	110,	1101,	1100,	1011,	11,	1011
2017-01-04 11:22:31 AI_Player.update()		110,	1010,	101,	1100,	11,	11,	1010
2017-01-04 11:22:31 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 11:22:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:31 AI_Player.update()	update
2017-01-04 11:22:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:31 AI_Player.update()	update
2017-01-04 11:22:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:32 AI_Player.update()	Search took163ms
2017-01-04 11:22:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:32 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-04 11:22:32 AI_Player.update()		1010,	1010,	101,	111,	101,	110,	1010
2017-01-04 11:22:32 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1011,	1011
2017-01-04 11:22:32 AI_Player.update()		1010,	1010,	1100,	1010,	101,	11,	1011
2017-01-04 11:22:32 AI_Player.update()		1110,	110,	1101,	1011,	1011,	11,	1011
2017-01-04 11:22:32 AI_Player.update()		110,	1010,	101,	1100,	11,	11,	1010
2017-01-04 11:22:32 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:22:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:32 AI_Player.update()	update
2017-01-04 11:22:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:32 AI_Player.update()	update
2017-01-04 11:22:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:32 AI_Player.update()	Search took865ms
2017-01-04 11:22:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:32 AI_Player.update()		110,	1010,	111,	111,	111,	1010,	11
2017-01-04 11:22:32 AI_Player.update()		1010,	1010,	101,	1011,	101,	110,	1010
2017-01-04 11:22:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1011,	1011
2017-01-04 11:22:32 AI_Player.update()		1010,	1010,	1100,	1011,	101,	11,	1011
2017-01-04 11:22:32 AI_Player.update()		1110,	110,	1101,	1100,	1011,	11,	1011
2017-01-04 11:22:32 AI_Player.update()		110,	1010,	101,	1100,	11,	11,	1010
2017-01-04 11:22:32 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 11:22:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:32 AI_Player.update()	update
2017-01-04 11:22:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:32 AI_Player.update()	update
2017-01-04 11:22:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:33 AI_Player.update()	Search took190ms
2017-01-04 11:22:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:33 AI_Player.update()		110,	1010,	111,	111,	111,	1010,	11
2017-01-04 11:22:33 AI_Player.update()		1010,	101,	1011,	101,	110,	1010,	1010
2017-01-04 11:22:33 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1011,	1011
2017-01-04 11:22:33 AI_Player.update()		1010,	1010,	1100,	1011,	101,	11,	1011
2017-01-04 11:22:33 AI_Player.update()		1110,	110,	1101,	1100,	1011,	11,	1011
2017-01-04 11:22:33 AI_Player.update()		110,	1010,	101,	1100,	11,	11,	1010
2017-01-04 11:22:33 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 11:22:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:33 AI_Player.update()	update
2017-01-04 11:22:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:22:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:33 AI_Player.update()	update
2017-01-04 11:22:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:33 AI_Player.update()	Search took434ms
2017-01-04 11:22:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:33 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 11:22:33 AI_Player.update()		1010,	101,	1011,	1010,	110,	1010,	1010
2017-01-04 11:22:33 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1011,	1011
2017-01-04 11:22:33 AI_Player.update()		1010,	1010,	1100,	1100,	101,	11,	1011
2017-01-04 11:22:33 AI_Player.update()		1110,	110,	1101,	1100,	1011,	11,	1011
2017-01-04 11:22:33 AI_Player.update()		110,	1010,	101,	1001,	11,	11,	1010
2017-01-04 11:22:33 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-04 11:22:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:22:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:33 AI_Player.update()	update
2017-01-04 11:22:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:22:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:33 AI_Player.update()	update
2017-01-04 11:22:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:34 AI_Player.update()	Search took515ms
2017-01-04 11:22:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:34 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 11:22:34 AI_Player.update()		1010,	1010,	1011,	1010,	110,	1010,	1010
2017-01-04 11:22:34 AI_Player.update()		1110,	101,	1110,	1011,	111,	1011,	1011
2017-01-04 11:22:34 AI_Player.update()		1010,	1100,	1100,	1100,	101,	11,	1011
2017-01-04 11:22:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-04 11:22:34 AI_Player.update()		110,	110,	101,	1001,	11,	11,	1010
2017-01-04 11:22:34 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-04 11:22:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:22:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:34 AI_Player.update()	update
2017-01-04 11:22:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:22:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:34 AI_Player.update()	update
2017-01-04 11:22:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:34 AI_Player.update()	Search took407ms
2017-01-04 11:22:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:34 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 11:22:34 AI_Player.update()		1010,	1010,	1011,	1010,	110,	1011,	1010
2017-01-04 11:22:34 AI_Player.update()		1110,	101,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:34 AI_Player.update()		1010,	1100,	1100,	1100,	101,	11,	1011
2017-01-04 11:22:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-04 11:22:34 AI_Player.update()		110,	110,	101,	1001,	11,	101,	1010
2017-01-04 11:22:34 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1010,	1001
2017-01-04 11:22:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:22:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:34 AI_Player.update()	update
2017-01-04 11:22:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:22:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:34 AI_Player.update()	update
2017-01-04 11:22:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:34 AI_Player.update()	Search took201ms
2017-01-04 11:22:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:34 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 11:22:34 AI_Player.update()		1010,	1010,	1010,	1011,	1010,	110,	1011
2017-01-04 11:22:34 AI_Player.update()		1110,	101,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:34 AI_Player.update()		1010,	1100,	1100,	1100,	101,	11,	1011
2017-01-04 11:22:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-04 11:22:34 AI_Player.update()		110,	110,	101,	1001,	11,	101,	1010
2017-01-04 11:22:34 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1010,	1001
2017-01-04 11:22:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:22:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:34 AI_Player.update()	update
2017-01-04 11:22:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:22:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:34 AI_Player.update()	update
2017-01-04 11:22:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:34 AI_Player.update()	Search took177ms
2017-01-04 11:22:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:34 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 11:22:34 AI_Player.update()		1010,	101,	1010,	1011,	1010,	110,	1011
2017-01-04 11:22:34 AI_Player.update()		1110,	1100,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:34 AI_Player.update()		1010,	1010,	1100,	1100,	101,	11,	1011
2017-01-04 11:22:34 AI_Player.update()		1110,	110,	1101,	1100,	1011,	11,	1011
2017-01-04 11:22:34 AI_Player.update()		110,	1010,	101,	1001,	11,	101,	1010
2017-01-04 11:22:34 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1010,	1001
2017-01-04 11:22:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:22:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:34 AI_Player.update()	update
2017-01-04 11:22:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:34 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:22:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:34 AI_Player.update()	update
2017-01-04 11:22:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:35 AI_Player.update()	Search took175ms
2017-01-04 11:22:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:35 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 11:22:35 AI_Player.update()		1010,	101,	1010,	1011,	1010,	110,	1011
2017-01-04 11:22:35 AI_Player.update()		1110,	1100,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:35 AI_Player.update()		1010,	1010,	1100,	1100,	101,	11,	1011
2017-01-04 11:22:35 AI_Player.update()		1110,	110,	1101,	1100,	1011,	11,	1011
2017-01-04 11:22:35 AI_Player.update()		1010,	110,	1010,	101,	1001,	11,	101
2017-01-04 11:22:35 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1010,	1001
2017-01-04 11:22:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:22:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:35 AI_Player.update()	update
2017-01-04 11:22:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:22:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:35 AI_Player.update()	update
2017-01-04 11:22:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:35 AI_Player.update()	Search took134ms
2017-01-04 11:22:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:35 AI_Player.update()		110,	1010,	111,	111,	111,	1010,	11
2017-01-04 11:22:35 AI_Player.update()		1010,	101,	1010,	101,	1010,	110,	1011
2017-01-04 11:22:35 AI_Player.update()		1110,	1100,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:35 AI_Player.update()		1010,	1010,	1100,	1011,	101,	11,	1011
2017-01-04 11:22:35 AI_Player.update()		1110,	110,	1101,	1100,	1011,	11,	1011
2017-01-04 11:22:35 AI_Player.update()		1010,	110,	1010,	1100,	1001,	11,	101
2017-01-04 11:22:35 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 11:22:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:22:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:35 AI_Player.update()	update
2017-01-04 11:22:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:22:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:35 AI_Player.update()	update
2017-01-04 11:22:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:35 AI_Player.update()	Search took295ms
2017-01-04 11:22:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:35 AI_Player.update()		110,	1010,	111,	111,	111,	1010,	11
2017-01-04 11:22:35 AI_Player.update()		1010,	101,	1010,	101,	1010,	110,	1011
2017-01-04 11:22:35 AI_Player.update()		1110,	1100,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:35 AI_Player.update()		1010,	1010,	1100,	1011,	101,	11,	1011
2017-01-04 11:22:35 AI_Player.update()		1110,	110,	1101,	1100,	1011,	11,	1011
2017-01-04 11:22:35 AI_Player.update()		101,	1010,	110,	1010,	1100,	1001,	11
2017-01-04 11:22:35 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 11:22:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:22:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:35 AI_Player.update()	update
2017-01-04 11:22:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:35 AI_Player.update()	update
2017-01-04 11:22:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:36 AI_Player.update()	Search took616ms
2017-01-04 11:22:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:36 AI_Player.update()		110,	1010,	111,	111,	111,	110,	11
2017-01-04 11:22:36 AI_Player.update()		1010,	101,	1010,	101,	1010,	11,	1011
2017-01-04 11:22:36 AI_Player.update()		1110,	1100,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:36 AI_Player.update()		1010,	1010,	1100,	1011,	101,	11,	1011
2017-01-04 11:22:36 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-04 11:22:36 AI_Player.update()		101,	1010,	110,	1010,	1100,	1010,	11
2017-01-04 11:22:36 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 11:22:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:36 AI_Player.update()	update
2017-01-04 11:22:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:22:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:36 AI_Player.update()	update
2017-01-04 11:22:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:36 AI_Player.update()	Search took266ms
2017-01-04 11:22:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:36 AI_Player.update()		110,	1010,	111,	111,	111,	110,	11
2017-01-04 11:22:36 AI_Player.update()		1010,	101,	1010,	101,	1010,	11,	1011
2017-01-04 11:22:36 AI_Player.update()		1110,	1100,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:36 AI_Player.update()		1011,	1010,	1010,	1100,	1011,	101,	11
2017-01-04 11:22:36 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-04 11:22:36 AI_Player.update()		101,	1010,	110,	1010,	1100,	1010,	11
2017-01-04 11:22:36 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 11:22:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:22:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:36 AI_Player.update()	update
2017-01-04 11:22:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:36 AI_Player.update()	update
2017-01-04 11:22:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:37 AI_Player.update()	Search took868ms
2017-01-04 11:22:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:37 AI_Player.update()		110,	101,	111,	111,	111,	110,	11
2017-01-04 11:22:37 AI_Player.update()		1010,	1100,	1010,	101,	1010,	11,	1011
2017-01-04 11:22:37 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:37 AI_Player.update()		1011,	110,	1010,	1100,	1011,	101,	11
2017-01-04 11:22:37 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-04 11:22:37 AI_Player.update()		101,	1010,	110,	1010,	1100,	1010,	11
2017-01-04 11:22:37 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 11:22:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:37 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:37 AI_Player.update()	update
2017-01-04 11:22:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:37 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:37 AI_Player.update()	update
2017-01-04 11:22:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:38 AI_Player.update()	Search took1045ms
2017-01-04 11:22:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:38 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-04 11:22:38 AI_Player.update()		1010,	1100,	1010,	101,	1010,	110,	1011
2017-01-04 11:22:38 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:38 AI_Player.update()		1011,	110,	1010,	1100,	1011,	11,	11
2017-01-04 11:22:38 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-04 11:22:38 AI_Player.update()		101,	1010,	110,	1010,	1100,	1001,	11
2017-01-04 11:22:38 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 11:22:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:38 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:38 AI_Player.update()	update
2017-01-04 11:22:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:38 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:38 AI_Player.update()	update
2017-01-04 11:22:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:39 AI_Player.update()	Search took821ms
2017-01-04 11:22:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:39 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-04 11:22:39 AI_Player.update()		1010,	1010,	1010,	101,	1010,	110,	1011
2017-01-04 11:22:39 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:39 AI_Player.update()		1011,	1010,	1010,	1100,	1011,	11,	11
2017-01-04 11:22:39 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-04 11:22:39 AI_Player.update()		101,	1010,	110,	1010,	1100,	1001,	11
2017-01-04 11:22:39 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:22:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:39 AI_Player.update()	update
2017-01-04 11:22:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:39 AI_Player.update()	update
2017-01-04 11:22:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:39 AI_Player.update()	Search took253ms
2017-01-04 11:22:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:39 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-04 11:22:39 AI_Player.update()		1011,	1010,	1010,	1010,	101,	1010,	110
2017-01-04 11:22:39 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:39 AI_Player.update()		1011,	1010,	1010,	1100,	1011,	11,	11
2017-01-04 11:22:39 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-04 11:22:39 AI_Player.update()		101,	1010,	110,	1010,	1100,	1001,	11
2017-01-04 11:22:39 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:22:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:39 AI_Player.update()	update
2017-01-04 11:22:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:39 AI_Player.update()	update
2017-01-04 11:22:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:39 AI_Player.update()	Search took134ms
2017-01-04 11:22:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:39 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-04 11:22:39 AI_Player.update()		1010,	1010,	1010,	101,	1010,	110,	1011
2017-01-04 11:22:39 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:39 AI_Player.update()		1011,	1010,	1010,	1100,	1011,	11,	11
2017-01-04 11:22:39 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-04 11:22:39 AI_Player.update()		101,	1010,	110,	1010,	1100,	1001,	11
2017-01-04 11:22:39 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:22:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:39 AI_Player.update()	update
2017-01-04 11:22:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:39 AI_Player.update()	update
2017-01-04 11:22:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:39 AI_Player.update()	Search took266ms
2017-01-04 11:22:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:39 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-04 11:22:39 AI_Player.update()		1010,	1010,	1010,	101,	1010,	110,	1011
2017-01-04 11:22:39 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:39 AI_Player.update()		1010,	1010,	1100,	1011,	11,	11,	1011
2017-01-04 11:22:39 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-04 11:22:39 AI_Player.update()		101,	1010,	110,	1010,	1100,	1001,	11
2017-01-04 11:22:39 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:22:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:39 AI_Player.update()	update
2017-01-04 11:22:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:39 AI_Player.update()	update
2017-01-04 11:22:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:40 AI_Player.update()	Search took202ms
2017-01-04 11:22:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:40 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-04 11:22:40 AI_Player.update()		1010,	1010,	101,	1010,	110,	1011,	1010
2017-01-04 11:22:40 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-04 11:22:40 AI_Player.update()		1010,	1010,	1100,	1011,	11,	11,	1011
2017-01-04 11:22:40 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-04 11:22:40 AI_Player.update()		101,	1010,	110,	1010,	1100,	1001,	11
2017-01-04 11:22:40 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:22:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:40 AI_Player.update()	update
2017-01-04 11:22:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 11:22:40 AI_Player.update()	Player b has won!
2017-01-04 11:22:40 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:22:40 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:22:40 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:22:40 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:22:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:40 AI_Player.update()	update
2017-01-04 11:22:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:40 AI_Player.update()	Search took129ms
2017-01-04 11:22:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:40 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-04 11:22:40 AI_Player.update()		101,	1010,	11,	110,	101,	1100,	1011
2017-01-04 11:22:40 AI_Player.update()		1110,	11,	1110,	111,	111,	1010,	1011
2017-01-04 11:22:40 AI_Player.update()		1010,	1011,	101,	1100,	110,	101,	1010
2017-01-04 11:22:40 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:40 AI_Player.update()		1100,	11,	110,	1001,	110,	110,	1101
2017-01-04 11:22:40 AI_Player.update()		1100,	111,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:22:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:40 AI_Player.update()	update
2017-01-04 11:22:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:40 AI_Player.update()	update
2017-01-04 11:22:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:40 AI_Player.update()	Search took457ms
2017-01-04 11:22:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:40 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-04 11:22:40 AI_Player.update()		101,	1010,	11,	110,	101,	1100,	1011
2017-01-04 11:22:40 AI_Player.update()		1110,	11,	1110,	111,	111,	1010,	1011
2017-01-04 11:22:40 AI_Player.update()		1010,	1010,	1011,	101,	1100,	110,	101
2017-01-04 11:22:40 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:40 AI_Player.update()		1100,	11,	110,	1001,	110,	110,	1101
2017-01-04 11:22:40 AI_Player.update()		1100,	111,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:22:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:40 AI_Player.update()	update
2017-01-04 11:22:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:22:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:40 AI_Player.update()	update
2017-01-04 11:22:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:40 AI_Player.update()	Search took226ms
2017-01-04 11:22:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:40 AI_Player.update()		110,	111,	111,	1001,	111,	1010,	11
2017-01-04 11:22:40 AI_Player.update()		101,	101,	11,	110,	101,	1100,	1011
2017-01-04 11:22:40 AI_Player.update()		1110,	1010,	1110,	111,	111,	1010,	1011
2017-01-04 11:22:40 AI_Player.update()		1010,	11,	1011,	101,	1100,	110,	101
2017-01-04 11:22:40 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:40 AI_Player.update()		1100,	110,	110,	1001,	110,	110,	1101
2017-01-04 11:22:40 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:22:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:22:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:40 AI_Player.update()	update
2017-01-04 11:22:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:22:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:22:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:40 AI_Player.update()	update
2017-01-04 11:22:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:41 AI_Player.update()	Search took163ms
2017-01-04 11:22:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:41 AI_Player.update()		110,	111,	111,	1001,	111,	1010,	11
2017-01-04 11:22:41 AI_Player.update()		101,	101,	11,	110,	101,	1100,	1011
2017-01-04 11:22:41 AI_Player.update()		1110,	1010,	1110,	111,	111,	1010,	1011
2017-01-04 11:22:41 AI_Player.update()		11,	1011,	101,	1100,	110,	101,	1010
2017-01-04 11:22:41 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 11:22:41 AI_Player.update()		1100,	110,	110,	1001,	110,	110,	1101
2017-01-04 11:22:41 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:22:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:22:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:41 AI_Player.update()	update
2017-01-04 11:22:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:22:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:41 AI_Player.update()	update
2017-01-04 11:22:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:41 AI_Player.update()	Search took268ms
2017-01-04 11:22:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:41 AI_Player.update()		110,	111,	111,	1001,	111,	1100,	11
2017-01-04 11:22:41 AI_Player.update()		101,	101,	11,	110,	101,	1010,	1011
2017-01-04 11:22:41 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-04 11:22:41 AI_Player.update()		11,	1011,	101,	1100,	110,	101,	1010
2017-01-04 11:22:41 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-04 11:22:41 AI_Player.update()		1100,	110,	110,	1001,	110,	1001,	1101
2017-01-04 11:22:41 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:22:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:22:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:41 AI_Player.update()	update
2017-01-04 11:22:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:22:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:41 AI_Player.update()	update
2017-01-04 11:22:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:41 AI_Player.update()	Search took557ms
2017-01-04 11:22:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:41 AI_Player.update()		110,	111,	111,	1001,	111,	1100,	11
2017-01-04 11:22:41 AI_Player.update()		101,	101,	11,	110,	101,	1010,	1011
2017-01-04 11:22:41 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-04 11:22:41 AI_Player.update()		11,	1011,	101,	1100,	110,	101,	1010
2017-01-04 11:22:41 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-04 11:22:41 AI_Player.update()		110,	110,	1001,	110,	1001,	1101,	1100
2017-01-04 11:22:41 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:22:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:22:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:41 AI_Player.update()	update
2017-01-04 11:22:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	2 4
2017-01-04 11:22:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:22:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:41 AI_Player.update()	update
2017-01-04 11:22:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:42 AI_Player.update()	Search took598ms
2017-01-04 11:22:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:42 AI_Player.update()		110,	111,	111,	1001,	111,	1100,	11
2017-01-04 11:22:42 AI_Player.update()		101,	101,	11,	110,	101,	1010,	1011
2017-01-04 11:22:42 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-04 11:22:42 AI_Player.update()		1010,	11,	1011,	101,	1100,	110,	101
2017-01-04 11:22:42 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-04 11:22:42 AI_Player.update()		110,	110,	1001,	110,	1001,	1101,	1100
2017-01-04 11:22:42 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:22:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:42 GameBoard.setupTreasurePanel()	2 4
2017-01-04 11:22:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:42 AI_Player.update()	update
2017-01-04 11:22:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:42 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:22:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:22:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:42 AI_Player.update()	update
2017-01-04 11:22:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:43 AI_Player.update()	Search took610ms
2017-01-04 11:22:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:43 AI_Player.update()		110,	111,	111,	1110,	111,	1100,	11
2017-01-04 11:22:43 AI_Player.update()		101,	101,	11,	1001,	101,	1010,	1011
2017-01-04 11:22:43 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 11:22:43 AI_Player.update()		1010,	11,	1011,	111,	1100,	110,	101
2017-01-04 11:22:43 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-04 11:22:43 AI_Player.update()		110,	110,	1001,	101,	1001,	1101,	1100
2017-01-04 11:22:43 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-04 11:22:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:22:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:43 AI_Player.update()	update
2017-01-04 11:22:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:43 AI_Player.update()	update
2017-01-04 11:22:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:43 AI_Player.update()	Search took101ms
2017-01-04 11:22:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:43 AI_Player.update()		110,	101,	111,	1110,	111,	1100,	11
2017-01-04 11:22:43 AI_Player.update()		101,	1010,	11,	1001,	101,	1010,	1011
2017-01-04 11:22:43 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-04 11:22:43 AI_Player.update()		1010,	1010,	1011,	111,	1100,	110,	101
2017-01-04 11:22:43 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 11:22:43 AI_Player.update()		110,	11,	1001,	101,	1001,	1101,	1100
2017-01-04 11:22:43 AI_Player.update()		1100,	111,	1101,	110,	1101,	1010,	1001
2017-01-04 11:22:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:43 AI_Player.update()	update
2017-01-04 11:22:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:43 AI_Player.update()	update
2017-01-04 11:22:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:43 AI_Player.update()	Search took396ms
2017-01-04 11:22:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:43 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-04 11:22:43 AI_Player.update()		101,	1010,	11,	110,	101,	1010,	1011
2017-01-04 11:22:43 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-04 11:22:43 AI_Player.update()		1010,	1010,	1011,	101,	1100,	110,	101
2017-01-04 11:22:43 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 11:22:43 AI_Player.update()		110,	11,	1001,	110,	1001,	1101,	1100
2017-01-04 11:22:43 AI_Player.update()		1100,	111,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:22:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:43 AI_Player.update()	update
2017-01-04 11:22:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:43 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:43 AI_Player.update()	update
2017-01-04 11:22:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:44 AI_Player.update()	Search took351ms
2017-01-04 11:22:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()		110,	101,	111,	1110,	111,	1100,	11
2017-01-04 11:22:44 AI_Player.update()		101,	1010,	11,	1001,	101,	1010,	1011
2017-01-04 11:22:44 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-04 11:22:44 AI_Player.update()		1010,	1010,	1011,	111,	1100,	110,	101
2017-01-04 11:22:44 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 11:22:44 AI_Player.update()		110,	11,	1001,	101,	1001,	1101,	1100
2017-01-04 11:22:44 AI_Player.update()		1100,	111,	1101,	110,	1101,	1010,	1001
2017-01-04 11:22:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:44 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()	update
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:44 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()	update
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:44 AI_Player.update()	Search took153ms
2017-01-04 11:22:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-04 11:22:44 AI_Player.update()		101,	1010,	11,	1110,	101,	1010,	1011
2017-01-04 11:22:44 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-04 11:22:44 AI_Player.update()		1010,	1010,	1011,	110,	1100,	110,	101
2017-01-04 11:22:44 AI_Player.update()		1110,	110,	1101,	111,	1011,	110,	1011
2017-01-04 11:22:44 AI_Player.update()		110,	11,	1001,	101,	1001,	1101,	1100
2017-01-04 11:22:44 AI_Player.update()		1100,	111,	1101,	101,	1101,	1010,	1001
2017-01-04 11:22:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:44 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()	update
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:44 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()	update
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:44 AI_Player.update()	Search took263ms
2017-01-04 11:22:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()		110,	101,	111,	1110,	111,	1100,	11
2017-01-04 11:22:44 AI_Player.update()		101,	1010,	11,	1001,	101,	1010,	1011
2017-01-04 11:22:44 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-04 11:22:44 AI_Player.update()		1010,	1010,	1011,	111,	1100,	110,	101
2017-01-04 11:22:44 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 11:22:44 AI_Player.update()		110,	11,	1001,	101,	1001,	1101,	1100
2017-01-04 11:22:44 AI_Player.update()		1100,	111,	1101,	110,	1101,	1010,	1001
2017-01-04 11:22:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:44 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()	update
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:44 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()	update
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:44 AI_Player.update()	Search took336ms
2017-01-04 11:22:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()		110,	1010,	111,	1110,	111,	1100,	11
2017-01-04 11:22:44 AI_Player.update()		101,	11,	11,	1001,	101,	1010,	1011
2017-01-04 11:22:44 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 11:22:44 AI_Player.update()		1010,	110,	1011,	111,	1100,	110,	101
2017-01-04 11:22:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-04 11:22:44 AI_Player.update()		110,	111,	1001,	101,	1001,	1101,	1100
2017-01-04 11:22:44 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:22:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:44 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()	update
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:44 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()	update
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:44 AI_Player.update()	Search took82ms
2017-01-04 11:22:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()		110,	1010,	111,	1001,	111,	1100,	11
2017-01-04 11:22:44 AI_Player.update()		101,	11,	11,	110,	101,	1010,	1011
2017-01-04 11:22:44 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-04 11:22:44 AI_Player.update()		1010,	110,	1011,	101,	1100,	110,	101
2017-01-04 11:22:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-04 11:22:44 AI_Player.update()		110,	111,	1001,	110,	1001,	1101,	1100
2017-01-04 11:22:44 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:22:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:44 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()	update
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:44 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:44 AI_Player.update()	update
2017-01-04 11:22:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:45 AI_Player.update()	Search took673ms
2017-01-04 11:22:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:45 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-04 11:22:45 AI_Player.update()		101,	1010,	11,	110,	101,	1010,	1011
2017-01-04 11:22:45 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-04 11:22:45 AI_Player.update()		1010,	1010,	1011,	101,	1100,	110,	101
2017-01-04 11:22:45 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 11:22:45 AI_Player.update()		110,	11,	1001,	110,	1001,	1101,	1100
2017-01-04 11:22:45 AI_Player.update()		1100,	111,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:22:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:45 AI_Player.update()	update
2017-01-04 11:22:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:45 AI_Player.update()	update
2017-01-04 11:22:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:45 AI_Player.update()	Search took159ms
2017-01-04 11:22:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:45 AI_Player.update()		110,	111,	111,	1001,	111,	1100,	11
2017-01-04 11:22:45 AI_Player.update()		101,	101,	11,	110,	101,	1010,	1011
2017-01-04 11:22:45 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-04 11:22:45 AI_Player.update()		1010,	11,	1011,	101,	1100,	110,	101
2017-01-04 11:22:45 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-04 11:22:45 AI_Player.update()		110,	110,	1001,	110,	1001,	1101,	1100
2017-01-04 11:22:45 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:22:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	3 5
2017-01-04 11:22:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:45 AI_Player.update()	update
2017-01-04 11:22:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:22:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:22:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:45 AI_Player.update()	update
2017-01-04 11:22:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:46 AI_Player.update()	Search took478ms
2017-01-04 11:22:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:46 AI_Player.update()		110,	111,	111,	110,	111,	1100,	11
2017-01-04 11:22:46 AI_Player.update()		101,	101,	11,	111,	101,	1010,	1011
2017-01-04 11:22:46 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:22:46 AI_Player.update()		1010,	11,	1011,	101,	1100,	110,	101
2017-01-04 11:22:46 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:46 AI_Player.update()		110,	110,	1001,	1110,	1001,	1101,	1100
2017-01-04 11:22:46 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:22:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:22:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:46 AI_Player.update()	update
2017-01-04 11:22:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	4 6
2017-01-04 11:22:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:46 AI_Player.update()	update
2017-01-04 11:22:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:46 AI_Player.update()	Search took433ms
2017-01-04 11:22:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:46 AI_Player.update()		110,	11,	111,	110,	111,	1100,	11
2017-01-04 11:22:46 AI_Player.update()		101,	111,	11,	111,	101,	1010,	1011
2017-01-04 11:22:46 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 11:22:46 AI_Player.update()		1010,	1010,	1011,	101,	1100,	110,	101
2017-01-04 11:22:46 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:46 AI_Player.update()		110,	1010,	1001,	1110,	1001,	1101,	1100
2017-01-04 11:22:46 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:22:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	4 6
2017-01-04 11:22:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:46 AI_Player.update()	update
2017-01-04 11:22:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	4 6
2017-01-04 11:22:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:46 AI_Player.update()	update
2017-01-04 11:22:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:46 AI_Player.update()	Search took217ms
2017-01-04 11:22:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:46 AI_Player.update()		110,	11,	111,	110,	111,	1100,	11
2017-01-04 11:22:46 AI_Player.update()		101,	111,	11,	111,	101,	1010,	1011
2017-01-04 11:22:46 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 11:22:46 AI_Player.update()		1010,	1011,	101,	1100,	110,	101,	1010
2017-01-04 11:22:46 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:46 AI_Player.update()		110,	1010,	1001,	1110,	1001,	1101,	1100
2017-01-04 11:22:46 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:22:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	4 6
2017-01-04 11:22:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:46 AI_Player.update()	update
2017-01-04 11:22:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:46 GameBoard.setupTreasurePanel()	4 6
2017-01-04 11:22:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:46 AI_Player.update()	update
2017-01-04 11:22:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:47 AI_Player.update()	Search took538ms
2017-01-04 11:22:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:47 AI_Player.update()		110,	11,	111,	110,	111,	1100,	11
2017-01-04 11:22:47 AI_Player.update()		111,	11,	111,	101,	1010,	1011,	101
2017-01-04 11:22:47 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 11:22:47 AI_Player.update()		1010,	1011,	101,	1100,	110,	101,	1010
2017-01-04 11:22:47 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:47 AI_Player.update()		110,	1010,	1001,	1110,	1001,	1101,	1100
2017-01-04 11:22:47 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:22:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	4 6
2017-01-04 11:22:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:47 AI_Player.update()	update
2017-01-04 11:22:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:47 AI_Player.update()	update
2017-01-04 11:22:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:47 AI_Player.update()	Search took289ms
2017-01-04 11:22:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:47 AI_Player.update()		110,	11,	111,	110,	111,	1100,	11
2017-01-04 11:22:47 AI_Player.update()		101,	111,	11,	111,	101,	1010,	1011
2017-01-04 11:22:47 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 11:22:47 AI_Player.update()		1010,	1011,	101,	1100,	110,	101,	1010
2017-01-04 11:22:47 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:47 AI_Player.update()		110,	1010,	1001,	1110,	1001,	1101,	1100
2017-01-04 11:22:47 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:22:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:47 AI_Player.update()	update
2017-01-04 11:22:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:47 AI_Player.update()	update
2017-01-04 11:22:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:47 AI_Player.update()	Search took187ms
2017-01-04 11:22:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:47 AI_Player.update()		110,	11,	111,	110,	111,	1100,	11
2017-01-04 11:22:47 AI_Player.update()		111,	11,	111,	101,	1010,	1011,	101
2017-01-04 11:22:47 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 11:22:47 AI_Player.update()		1010,	1011,	101,	1100,	110,	101,	1010
2017-01-04 11:22:47 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:47 AI_Player.update()		110,	1010,	1001,	1110,	1001,	1101,	1100
2017-01-04 11:22:47 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:22:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:47 AI_Player.update()	update
2017-01-04 11:22:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:47 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:47 AI_Player.update()	update
2017-01-04 11:22:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:48 AI_Player.update()	Search took348ms
2017-01-04 11:22:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()		110,	11,	111,	110,	111,	1100,	11
2017-01-04 11:22:48 AI_Player.update()		101,	111,	11,	111,	101,	1010,	1011
2017-01-04 11:22:48 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 11:22:48 AI_Player.update()		1010,	1011,	101,	1100,	110,	101,	1010
2017-01-04 11:22:48 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:48 AI_Player.update()		110,	1010,	1001,	1110,	1001,	1101,	1100
2017-01-04 11:22:48 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:22:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:48 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()	update
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:48 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()	update
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:48 AI_Player.update()	Search took160ms
2017-01-04 11:22:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()		110,	11,	111,	110,	111,	1100,	11
2017-01-04 11:22:48 AI_Player.update()		101,	111,	11,	111,	101,	1010,	1011
2017-01-04 11:22:48 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 11:22:48 AI_Player.update()		1010,	1010,	1011,	101,	1100,	110,	101
2017-01-04 11:22:48 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:48 AI_Player.update()		110,	1010,	1001,	1110,	1001,	1101,	1100
2017-01-04 11:22:48 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:22:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:48 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()	update
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:48 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()	update
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:48 AI_Player.update()	Search took134ms
2017-01-04 11:22:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-04 11:22:48 AI_Player.update()		101,	111,	11,	111,	101,	1100,	1011
2017-01-04 11:22:48 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 11:22:48 AI_Player.update()		1010,	1010,	1011,	101,	1100,	101,	101
2017-01-04 11:22:48 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:48 AI_Player.update()		110,	1010,	1001,	1110,	1001,	110,	1100
2017-01-04 11:22:48 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:22:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:48 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()	update
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:48 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()	update
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:48 AI_Player.update()	Search took217ms
2017-01-04 11:22:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 11:22:48 AI_Player.update()		101,	11,	11,	111,	101,	1100,	1011
2017-01-04 11:22:48 AI_Player.update()		1110,	111,	1110,	101,	111,	1010,	1011
2017-01-04 11:22:48 AI_Player.update()		1010,	101,	1011,	101,	1100,	101,	101
2017-01-04 11:22:48 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:48 AI_Player.update()		110,	11,	1001,	1110,	1001,	110,	1100
2017-01-04 11:22:48 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:22:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:48 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()	update
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:48 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()	update
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:48 AI_Player.update()	Search took99ms
2017-01-04 11:22:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()		110,	110,	111,	110,	111,	1100,	11
2017-01-04 11:22:48 AI_Player.update()		101,	11,	11,	111,	101,	1010,	1011
2017-01-04 11:22:48 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-04 11:22:48 AI_Player.update()		1010,	101,	1011,	101,	1100,	110,	101
2017-01-04 11:22:48 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-04 11:22:48 AI_Player.update()		110,	11,	1001,	1110,	1001,	1101,	1100
2017-01-04 11:22:48 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:22:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:48 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()	update
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:48 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:48 AI_Player.update()	update
2017-01-04 11:22:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:49 AI_Player.update()	Search took258ms
2017-01-04 11:22:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:49 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 11:22:49 AI_Player.update()		101,	11,	11,	111,	101,	101,	1011
2017-01-04 11:22:49 AI_Player.update()		1110,	111,	1110,	101,	111,	110,	1011
2017-01-04 11:22:49 AI_Player.update()		1010,	101,	1011,	101,	1100,	110,	101
2017-01-04 11:22:49 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1101,	1011
2017-01-04 11:22:49 AI_Player.update()		110,	11,	1001,	1110,	1001,	1010,	1100
2017-01-04 11:22:49 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:22:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:49 AI_Player.update()	update
2017-01-04 11:22:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:49 AI_Player.update()	update
2017-01-04 11:22:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:49 AI_Player.update()	Search took100ms
2017-01-04 11:22:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:49 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 11:22:49 AI_Player.update()		101,	11,	11,	111,	101,	110,	1011
2017-01-04 11:22:49 AI_Player.update()		1110,	111,	1110,	101,	111,	110,	1011
2017-01-04 11:22:49 AI_Player.update()		1010,	101,	1011,	101,	1100,	1101,	101
2017-01-04 11:22:49 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 11:22:49 AI_Player.update()		110,	11,	1001,	1110,	1001,	1100,	1100
2017-01-04 11:22:49 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:22:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:49 AI_Player.update()	update
2017-01-04 11:22:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:49 AI_Player.update()	update
2017-01-04 11:22:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:49 AI_Player.update()	Search took243ms
2017-01-04 11:22:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:49 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 11:22:49 AI_Player.update()		101,	11,	11,	111,	101,	110,	1011
2017-01-04 11:22:49 AI_Player.update()		1110,	111,	1110,	101,	111,	110,	1011
2017-01-04 11:22:49 AI_Player.update()		101,	1011,	101,	1100,	1101,	101,	1010
2017-01-04 11:22:49 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 11:22:49 AI_Player.update()		110,	11,	1001,	1110,	1001,	1100,	1100
2017-01-04 11:22:49 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:22:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:22:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:49 AI_Player.update()	update
2017-01-04 11:22:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:49 AI_Player.update()	update
2017-01-04 11:22:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:49 AI_Player.update()	Search took92ms
2017-01-04 11:22:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:49 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-04 11:22:49 AI_Player.update()		101,	11,	11,	111,	101,	110,	1011
2017-01-04 11:22:49 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-04 11:22:49 AI_Player.update()		101,	1011,	101,	1100,	1101,	1010,	1010
2017-01-04 11:22:49 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 11:22:49 AI_Player.update()		110,	11,	1001,	1110,	1001,	1010,	1100
2017-01-04 11:22:49 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 11:22:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:49 AI_Player.update()	update
2017-01-04 11:22:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:49 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:49 AI_Player.update()	update
2017-01-04 11:22:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:50 AI_Player.update()	Search took852ms
2017-01-04 11:22:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:50 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-04 11:22:50 AI_Player.update()		101,	110,	11,	111,	101,	110,	1011
2017-01-04 11:22:50 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 11:22:50 AI_Player.update()		101,	111,	101,	1100,	1101,	1010,	1010
2017-01-04 11:22:50 AI_Player.update()		1110,	1011,	1101,	110,	1011,	1100,	1011
2017-01-04 11:22:50 AI_Player.update()		110,	1010,	1001,	1110,	1001,	1010,	1100
2017-01-04 11:22:50 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-04 11:22:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:50 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:50 AI_Player.update()	update
2017-01-04 11:22:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:50 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:50 AI_Player.update()	update
2017-01-04 11:22:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:50 AI_Player.update()	Search took21ms
2017-01-04 11:22:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:50 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-04 11:22:50 AI_Player.update()		101,	11,	11,	111,	101,	110,	1011
2017-01-04 11:22:50 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-04 11:22:50 AI_Player.update()		101,	1011,	101,	1100,	1101,	1010,	1010
2017-01-04 11:22:50 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 11:22:50 AI_Player.update()		110,	11,	1001,	1110,	1001,	1010,	1100
2017-01-04 11:22:50 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 11:22:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:50 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:50 AI_Player.update()	update
2017-01-04 11:22:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:50 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:50 AI_Player.update()	update
2017-01-04 11:22:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:51 AI_Player.update()	Search took962ms
2017-01-04 11:22:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:51 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-04 11:22:51 AI_Player.update()		1011,	101,	11,	11,	111,	101,	110
2017-01-04 11:22:51 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-04 11:22:51 AI_Player.update()		101,	1011,	101,	1100,	1101,	1010,	1010
2017-01-04 11:22:51 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 11:22:51 AI_Player.update()		110,	11,	1001,	1110,	1001,	1010,	1100
2017-01-04 11:22:51 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 11:22:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:22:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:51 AI_Player.update()	update
2017-01-04 11:22:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:51 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:22:51 AI_Player.update()	Player a has won!
2017-01-04 11:22:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:22:51 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:22:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:22:51 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:22:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:51 AI_Player.update()	update
2017-01-04 11:22:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:51 AI_Player.update()	Search took103ms
2017-01-04 11:22:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:51 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-04 11:22:51 AI_Player.update()		101,	1001,	110,	110,	1001,	1110,	111
2017-01-04 11:22:51 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 11:22:51 AI_Player.update()		1001,	11,	101,	1101,	1100,	1001,	101
2017-01-04 11:22:51 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:22:51 AI_Player.update()		1100,	11,	1010,	101,	101,	1110,	1010
2017-01-04 11:22:51 AI_Player.update()		1100,	111,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:22:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:22:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:51 AI_Player.update()	update
2017-01-04 11:22:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:22:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:51 AI_Player.update()	update
2017-01-04 11:22:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:51 AI_Player.update()	Search took44ms
2017-01-04 11:22:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:51 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-04 11:22:51 AI_Player.update()		101,	1001,	110,	110,	1001,	110,	111
2017-01-04 11:22:51 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-04 11:22:51 AI_Player.update()		1001,	11,	101,	1101,	1100,	1001,	101
2017-01-04 11:22:51 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-04 11:22:51 AI_Player.update()		1100,	11,	1010,	101,	101,	1010,	1010
2017-01-04 11:22:51 AI_Player.update()		1100,	111,	1101,	1011,	1101,	11,	1001
2017-01-04 11:22:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:22:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:51 AI_Player.update()	update
2017-01-04 11:22:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:51 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:22:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:51 AI_Player.update()	update
2017-01-04 11:22:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:52 AI_Player.update()	Search took447ms
2017-01-04 11:22:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:52 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-04 11:22:52 AI_Player.update()		101,	1001,	110,	110,	1001,	110,	111
2017-01-04 11:22:52 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-04 11:22:52 AI_Player.update()		1001,	11,	101,	1101,	1100,	1001,	101
2017-01-04 11:22:52 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-04 11:22:52 AI_Player.update()		1010,	1100,	11,	1010,	101,	101,	1010
2017-01-04 11:22:52 AI_Player.update()		1100,	111,	1101,	1011,	1101,	11,	1001
2017-01-04 11:22:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:22:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:52 AI_Player.update()	update
2017-01-04 11:22:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:22:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:52 AI_Player.update()	update
2017-01-04 11:22:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:52 AI_Player.update()	Search took97ms
2017-01-04 11:22:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:52 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-04 11:22:52 AI_Player.update()		101,	1001,	110,	110,	1001,	1110,	111
2017-01-04 11:22:52 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 11:22:52 AI_Player.update()		1001,	11,	101,	1101,	1100,	1001,	101
2017-01-04 11:22:52 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:22:52 AI_Player.update()		1010,	1100,	11,	1010,	101,	1110,	1010
2017-01-04 11:22:52 AI_Player.update()		1100,	111,	1101,	1011,	1101,	101,	1001
2017-01-04 11:22:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:22:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:52 AI_Player.update()	update
2017-01-04 11:22:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:22:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:52 AI_Player.update()	update
2017-01-04 11:22:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:52 AI_Player.update()	Search took476ms
2017-01-04 11:22:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:52 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 11:22:52 AI_Player.update()		101,	1001,	110,	110,	1001,	1110,	111
2017-01-04 11:22:52 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-04 11:22:52 AI_Player.update()		1001,	110,	101,	1101,	1100,	1001,	101
2017-01-04 11:22:52 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:22:52 AI_Player.update()		1010,	111,	11,	1010,	101,	1110,	1010
2017-01-04 11:22:52 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-04 11:22:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:22:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:52 AI_Player.update()	update
2017-01-04 11:22:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:22:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:52 AI_Player.update()	update
2017-01-04 11:22:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:53 AI_Player.update()	Search took364ms
2017-01-04 11:22:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:53 AI_Player.update()		110,	1001,	111,	1011,	111,	11,	11
2017-01-04 11:22:53 AI_Player.update()		101,	1001,	110,	101,	1001,	1110,	111
2017-01-04 11:22:53 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-04 11:22:53 AI_Player.update()		1001,	110,	101,	1100,	1100,	1001,	101
2017-01-04 11:22:53 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1001,	1011
2017-01-04 11:22:53 AI_Player.update()		1010,	111,	11,	1001,	101,	1110,	1010
2017-01-04 11:22:53 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 11:22:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:22:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:53 AI_Player.update()	update
2017-01-04 11:22:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:53 AI_Player.update()	update
2017-01-04 11:22:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:53 AI_Player.update()	Search took249ms
2017-01-04 11:22:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:53 AI_Player.update()		110,	1001,	111,	1011,	111,	11,	11
2017-01-04 11:22:53 AI_Player.update()		101,	1001,	110,	101,	1001,	1110,	111
2017-01-04 11:22:53 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-04 11:22:53 AI_Player.update()		1001,	110,	101,	1100,	1100,	1001,	101
2017-01-04 11:22:53 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1001,	1011
2017-01-04 11:22:53 AI_Player.update()		1010,	1010,	111,	11,	1001,	101,	1110
2017-01-04 11:22:53 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 11:22:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:53 AI_Player.update()	update
2017-01-04 11:22:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:53 AI_Player.update()	update
2017-01-04 11:22:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:53 AI_Player.update()	Search took298ms
2017-01-04 11:22:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:53 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 11:22:53 AI_Player.update()		101,	1001,	110,	110,	1001,	1110,	111
2017-01-04 11:22:53 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-04 11:22:53 AI_Player.update()		1001,	110,	101,	1101,	1100,	1001,	101
2017-01-04 11:22:53 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-04 11:22:53 AI_Player.update()		1010,	1010,	111,	1010,	1001,	101,	1110
2017-01-04 11:22:53 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-04 11:22:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:22:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:53 AI_Player.update()	update
2017-01-04 11:22:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:22:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:53 AI_Player.update()	update
2017-01-04 11:22:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:54 AI_Player.update()	Search took587ms
2017-01-04 11:22:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:54 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 11:22:54 AI_Player.update()		101,	1001,	110,	110,	1001,	1110,	111
2017-01-04 11:22:54 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-04 11:22:54 AI_Player.update()		101,	1001,	110,	101,	1101,	1100,	1001
2017-01-04 11:22:54 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-04 11:22:54 AI_Player.update()		1010,	1010,	111,	1010,	1001,	101,	1110
2017-01-04 11:22:54 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-04 11:22:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:54 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:22:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:54 AI_Player.update()	update
2017-01-04 11:22:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:22:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:54 AI_Player.update()	update
2017-01-04 11:22:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:55 AI_Player.update()	Search took823ms
2017-01-04 11:22:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:55 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 11:22:55 AI_Player.update()		101,	11,	110,	110,	1001,	1110,	111
2017-01-04 11:22:55 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 11:22:55 AI_Player.update()		101,	1100,	110,	101,	1101,	1100,	1001
2017-01-04 11:22:55 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 11:22:55 AI_Player.update()		1010,	101,	111,	1010,	1001,	101,	1110
2017-01-04 11:22:55 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	101,	1001
2017-01-04 11:22:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:55 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:22:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:55 AI_Player.update()	update
2017-01-04 11:22:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:55 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:22:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:55 AI_Player.update()	update
2017-01-04 11:22:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:55 AI_Player.update()	Search took737ms
2017-01-04 11:22:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:55 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 11:22:55 AI_Player.update()		101,	11,	110,	110,	1001,	1110,	111
2017-01-04 11:22:55 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 11:22:55 AI_Player.update()		101,	1100,	110,	101,	1101,	1100,	1001
2017-01-04 11:22:55 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 11:22:55 AI_Player.update()		1110,	1010,	101,	111,	1010,	1001,	101
2017-01-04 11:22:55 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	101,	1001
2017-01-04 11:22:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:55 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:22:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:55 AI_Player.update()	update
2017-01-04 11:22:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:55 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:22:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:55 AI_Player.update()	update
2017-01-04 11:22:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:56 AI_Player.update()	Search took552ms
2017-01-04 11:22:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:56 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 11:22:56 AI_Player.update()		111,	101,	11,	110,	110,	1001,	1110
2017-01-04 11:22:56 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 11:22:56 AI_Player.update()		101,	1100,	110,	101,	1101,	1100,	1001
2017-01-04 11:22:56 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 11:22:56 AI_Player.update()		1110,	1010,	101,	111,	1010,	1001,	101
2017-01-04 11:22:56 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	101,	1001
2017-01-04 11:22:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:22:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:56 AI_Player.update()	update
2017-01-04 11:22:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:56 AI_Player.update()	update
2017-01-04 11:22:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:56 AI_Player.update()	Search took376ms
2017-01-04 11:22:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:56 AI_Player.update()		110,	1001,	111,	110,	111,	11,	11
2017-01-04 11:22:56 AI_Player.update()		111,	101,	11,	1100,	110,	1001,	1110
2017-01-04 11:22:56 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-04 11:22:56 AI_Player.update()		101,	1100,	110,	11,	1101,	1100,	1001
2017-01-04 11:22:56 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-04 11:22:56 AI_Player.update()		1110,	1010,	101,	1011,	1010,	1001,	101
2017-01-04 11:22:56 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:22:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:56 AI_Player.update()	update
2017-01-04 11:22:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:22:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:56 AI_Player.update()	update
2017-01-04 11:22:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:57 AI_Player.update()	Search took218ms
2017-01-04 11:22:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:57 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:22:57 AI_Player.update()		111,	101,	11,	1100,	110,	11,	1110
2017-01-04 11:22:57 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-04 11:22:57 AI_Player.update()		101,	1100,	110,	11,	1101,	110,	1001
2017-01-04 11:22:57 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1100,	1011
2017-01-04 11:22:57 AI_Player.update()		1110,	1010,	101,	1011,	1010,	1001,	101
2017-01-04 11:22:57 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 11:22:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:57 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:22:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:57 AI_Player.update()	update
2017-01-04 11:22:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:57 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:22:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:57 AI_Player.update()	update
2017-01-04 11:22:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:57 AI_Player.update()	Search took499ms
2017-01-04 11:22:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:57 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:22:57 AI_Player.update()		111,	101,	11,	1100,	110,	11,	1110
2017-01-04 11:22:57 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-04 11:22:57 AI_Player.update()		1100,	110,	11,	1101,	110,	1001,	101
2017-01-04 11:22:57 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1100,	1011
2017-01-04 11:22:57 AI_Player.update()		1110,	1010,	101,	1011,	1010,	1001,	101
2017-01-04 11:22:57 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 11:22:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:57 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:22:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:57 AI_Player.update()	update
2017-01-04 11:22:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:57 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:22:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:57 AI_Player.update()	update
2017-01-04 11:22:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:57 AI_Player.update()	Search took399ms
2017-01-04 11:22:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:57 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 11:22:57 AI_Player.update()		111,	101,	11,	1100,	110,	101,	1110
2017-01-04 11:22:57 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-04 11:22:57 AI_Player.update()		1100,	110,	11,	1101,	110,	1001,	101
2017-01-04 11:22:57 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-04 11:22:57 AI_Player.update()		1110,	1010,	101,	1011,	1010,	1100,	101
2017-01-04 11:22:57 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 11:22:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:57 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:22:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:57 AI_Player.update()	update
2017-01-04 11:22:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:57 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:22:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:57 AI_Player.update()	update
2017-01-04 11:22:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:58 AI_Player.update()	Search took157ms
2017-01-04 11:22:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:58 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:22:58 AI_Player.update()		111,	101,	11,	1100,	110,	11,	1110
2017-01-04 11:22:58 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-04 11:22:58 AI_Player.update()		1100,	110,	11,	1101,	110,	1001,	101
2017-01-04 11:22:58 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1100,	1011
2017-01-04 11:22:58 AI_Player.update()		1110,	1010,	101,	1011,	1010,	1001,	101
2017-01-04 11:22:58 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 11:22:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:22:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:58 AI_Player.update()	update
2017-01-04 11:22:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:22:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:58 AI_Player.update()	update
2017-01-04 11:22:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:58 AI_Player.update()	Search took644ms
2017-01-04 11:22:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:58 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:22:58 AI_Player.update()		111,	101,	11,	1100,	110,	11,	1110
2017-01-04 11:22:58 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-04 11:22:58 AI_Player.update()		1100,	110,	11,	1101,	110,	1001,	101
2017-01-04 11:22:58 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1100,	1011
2017-01-04 11:22:58 AI_Player.update()		1010,	101,	1011,	1010,	1001,	101,	1110
2017-01-04 11:22:58 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 11:22:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:22:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:58 AI_Player.update()	update
2017-01-04 11:22:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:58 AI_Player.update()	update
2017-01-04 11:22:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:59 AI_Player.update()	Search took416ms
2017-01-04 11:22:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:59 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:22:59 AI_Player.update()		111,	101,	11,	1100,	110,	11,	1110
2017-01-04 11:22:59 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-04 11:22:59 AI_Player.update()		110,	11,	1101,	110,	1001,	101,	1100
2017-01-04 11:22:59 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1100,	1011
2017-01-04 11:22:59 AI_Player.update()		1010,	101,	1011,	1010,	1001,	101,	1110
2017-01-04 11:22:59 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 11:22:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:22:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:59 AI_Player.update()	update
2017-01-04 11:22:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:22:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:22:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:22:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:59 AI_Player.update()	update
2017-01-04 11:22:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:22:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:22:59 AI_Player.update()	Search took124ms
2017-01-04 11:22:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:59 AI_Player.update()		110,	1001,	111,	110,	111,	11,	11
2017-01-04 11:22:59 AI_Player.update()		111,	101,	11,	1100,	110,	1001,	1110
2017-01-04 11:22:59 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 11:22:59 AI_Player.update()		110,	11,	1101,	110,	1001,	1100,	1100
2017-01-04 11:22:59 AI_Player.update()		1110,	1010,	1101,	111,	1011,	101,	1011
2017-01-04 11:22:59 AI_Player.update()		1010,	101,	1011,	1010,	1001,	1001,	1110
2017-01-04 11:22:59 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 11:22:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:22:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:59 AI_Player.update()	update
2017-01-04 11:22:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:22:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:22:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:22:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:22:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:22:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:59 AI_Player.update()	update
2017-01-04 11:22:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:22:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:22:59 AI_Player.update()	Search took501ms
2017-01-04 11:22:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:22:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:59 AI_Player.update()		110,	1001,	111,	1100,	111,	11,	11
2017-01-04 11:22:59 AI_Player.update()		111,	101,	11,	101,	110,	1001,	1110
2017-01-04 11:22:59 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 11:22:59 AI_Player.update()		110,	11,	1101,	111,	1001,	1100,	1100
2017-01-04 11:22:59 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-04 11:22:59 AI_Player.update()		1010,	101,	1011,	101,	1001,	1001,	1110
2017-01-04 11:22:59 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-04 11:22:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:22:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:22:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:22:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:59 AI_Player.update()	update
2017-01-04 11:22:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:22:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:22:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:22:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:22:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:22:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:22:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:22:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:22:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:22:59 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:22:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:22:59 AI_Player.update()	update
2017-01-04 11:22:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:00 AI_Player.update()	Search took224ms
2017-01-04 11:23:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()		110,	1001,	111,	110,	111,	11,	11
2017-01-04 11:23:00 AI_Player.update()		111,	101,	11,	1100,	110,	1001,	1110
2017-01-04 11:23:00 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 11:23:00 AI_Player.update()		110,	11,	1101,	110,	1001,	1100,	1100
2017-01-04 11:23:00 AI_Player.update()		1110,	1010,	1101,	111,	1011,	101,	1011
2017-01-04 11:23:00 AI_Player.update()		1010,	101,	1011,	1010,	1001,	1001,	1110
2017-01-04 11:23:00 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 11:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()	update
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()	update
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:00 AI_Player.update()	Search took411ms
2017-01-04 11:23:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()		110,	101,	111,	110,	111,	11,	11
2017-01-04 11:23:00 AI_Player.update()		111,	1001,	11,	1100,	110,	1001,	1110
2017-01-04 11:23:00 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 11:23:00 AI_Player.update()		110,	1010,	1101,	110,	1001,	1100,	1100
2017-01-04 11:23:00 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-04 11:23:00 AI_Player.update()		1010,	1001,	1011,	1010,	1001,	1001,	1110
2017-01-04 11:23:00 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 11:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()	update
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:00 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:23:00 AI_Player.update()	Player a has won!
2017-01-04 11:23:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:23:00 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:23:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:23:00 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:23:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()	update
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:00 AI_Player.update()	Search took38ms
2017-01-04 11:23:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-04 11:23:00 AI_Player.update()		1011,	1010,	1110,	101,	1100,	1010,	110
2017-01-04 11:23:00 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-04 11:23:00 AI_Player.update()		11,	111,	1010,	1001,	1010,	11,	1011
2017-01-04 11:23:00 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1011,	1011
2017-01-04 11:23:00 AI_Player.update()		1001,	101,	101,	110,	1010,	101,	1101
2017-01-04 11:23:00 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 11:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()	update
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()	update
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:00 AI_Player.update()	Search took66ms
2017-01-04 11:23:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-04 11:23:00 AI_Player.update()		1010,	1110,	101,	1100,	1010,	110,	1011
2017-01-04 11:23:00 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-04 11:23:00 AI_Player.update()		11,	111,	1010,	1001,	1010,	11,	1011
2017-01-04 11:23:00 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1011,	1011
2017-01-04 11:23:00 AI_Player.update()		1001,	101,	101,	110,	1010,	101,	1101
2017-01-04 11:23:00 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 11:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()	update
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()	update
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:00 AI_Player.update()	Search took351ms
2017-01-04 11:23:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-04 11:23:00 AI_Player.update()		1010,	1110,	101,	1100,	1010,	1010,	1011
2017-01-04 11:23:00 AI_Player.update()		1110,	11,	1110,	1010,	111,	11,	1011
2017-01-04 11:23:00 AI_Player.update()		11,	111,	1010,	1001,	1010,	1011,	1011
2017-01-04 11:23:00 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	101,	1011
2017-01-04 11:23:00 AI_Player.update()		1001,	101,	101,	110,	1010,	1010,	1101
2017-01-04 11:23:00 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 11:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()	update
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:00 AI_Player.update()	update
2017-01-04 11:23:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:01 AI_Player.update()	Search took299ms
2017-01-04 11:23:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:01 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:23:01 AI_Player.update()		1010,	1110,	101,	1100,	1010,	11,	1011
2017-01-04 11:23:01 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-04 11:23:01 AI_Player.update()		11,	111,	1010,	1001,	1010,	101,	1011
2017-01-04 11:23:01 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:23:01 AI_Player.update()		1001,	101,	101,	110,	1010,	1001,	1101
2017-01-04 11:23:01 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 11:23:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:01 AI_Player.update()	update
2017-01-04 11:23:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:01 AI_Player.update()	update
2017-01-04 11:23:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:01 AI_Player.update()	Search took271ms
2017-01-04 11:23:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:01 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-04 11:23:01 AI_Player.update()		1010,	1110,	101,	1100,	1010,	1010,	1011
2017-01-04 11:23:01 AI_Player.update()		1110,	11,	1110,	1010,	111,	11,	1011
2017-01-04 11:23:01 AI_Player.update()		11,	111,	1010,	1001,	1010,	1011,	1011
2017-01-04 11:23:01 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	101,	1011
2017-01-04 11:23:01 AI_Player.update()		1001,	101,	101,	110,	1010,	1010,	1101
2017-01-04 11:23:01 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 11:23:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:01 AI_Player.update()	update
2017-01-04 11:23:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:01 AI_Player.update()	update
2017-01-04 11:23:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:01 AI_Player.update()	Search took303ms
2017-01-04 11:23:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:01 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:23:01 AI_Player.update()		1010,	1110,	101,	1100,	1010,	11,	1011
2017-01-04 11:23:01 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-04 11:23:01 AI_Player.update()		11,	111,	1010,	1001,	1010,	101,	1011
2017-01-04 11:23:01 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:23:01 AI_Player.update()		1001,	101,	101,	110,	1010,	1001,	1101
2017-01-04 11:23:01 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 11:23:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:01 AI_Player.update()	update
2017-01-04 11:23:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:01 AI_Player.update()	update
2017-01-04 11:23:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:02 AI_Player.update()	Search took295ms
2017-01-04 11:23:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:23:02 AI_Player.update()		1010,	1110,	101,	1100,	1010,	11,	1011
2017-01-04 11:23:02 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-04 11:23:02 AI_Player.update()		1011,	11,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:02 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:23:02 AI_Player.update()		1001,	101,	101,	110,	1010,	1001,	1101
2017-01-04 11:23:02 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 11:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()	update
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()	update
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:02 AI_Player.update()	Search took96ms
2017-01-04 11:23:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()		110,	110,	111,	1001,	111,	11,	11
2017-01-04 11:23:02 AI_Player.update()		1010,	1110,	101,	1100,	1010,	1011,	1011
2017-01-04 11:23:02 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-04 11:23:02 AI_Player.update()		1011,	11,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:02 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1001,	1011
2017-01-04 11:23:02 AI_Player.update()		1001,	101,	101,	110,	1010,	110,	1101
2017-01-04 11:23:02 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 11:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()	update
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()	update
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:02 AI_Player.update()	Search took277ms
2017-01-04 11:23:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 11:23:02 AI_Player.update()		1010,	1110,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:02 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:02 AI_Player.update()		1011,	11,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:02 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:02 AI_Player.update()		1001,	101,	101,	1011,	1010,	110,	1101
2017-01-04 11:23:02 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-04 11:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()	update
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()	update
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:02 AI_Player.update()	Search took134ms
2017-01-04 11:23:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()		110,	110,	111,	1001,	111,	11,	11
2017-01-04 11:23:02 AI_Player.update()		1010,	1110,	101,	1100,	1010,	1011,	1011
2017-01-04 11:23:02 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-04 11:23:02 AI_Player.update()		1011,	11,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:02 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1001,	1011
2017-01-04 11:23:02 AI_Player.update()		1001,	101,	101,	110,	1010,	110,	1101
2017-01-04 11:23:02 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 11:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()	update
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()	update
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:02 AI_Player.update()	Search took256ms
2017-01-04 11:23:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()		110,	110,	111,	1001,	111,	1011,	11
2017-01-04 11:23:02 AI_Player.update()		1010,	1110,	101,	1100,	1010,	1010,	1011
2017-01-04 11:23:02 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-04 11:23:02 AI_Player.update()		1011,	11,	111,	1010,	1001,	1001,	101
2017-01-04 11:23:02 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	110,	1011
2017-01-04 11:23:02 AI_Player.update()		1001,	101,	101,	110,	1010,	1010,	1101
2017-01-04 11:23:02 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-04 11:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()	update
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:02 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:02 AI_Player.update()	update
2017-01-04 11:23:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:03 AI_Player.update()	Search took105ms
2017-01-04 11:23:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:03 AI_Player.update()		110,	1110,	111,	1001,	111,	1011,	11
2017-01-04 11:23:03 AI_Player.update()		1010,	11,	101,	1100,	1010,	1010,	1011
2017-01-04 11:23:03 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-04 11:23:03 AI_Player.update()		1011,	1001,	111,	1010,	1001,	1001,	101
2017-01-04 11:23:03 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-04 11:23:03 AI_Player.update()		1001,	1100,	101,	110,	1010,	1010,	1101
2017-01-04 11:23:03 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-04 11:23:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:03 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:03 AI_Player.update()	update
2017-01-04 11:23:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:03 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:03 AI_Player.update()	update
2017-01-04 11:23:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:03 AI_Player.update()	Search took348ms
2017-01-04 11:23:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:03 AI_Player.update()		110,	1110,	111,	101,	111,	1011,	11
2017-01-04 11:23:03 AI_Player.update()		1010,	11,	101,	1001,	1010,	1010,	1011
2017-01-04 11:23:03 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:03 AI_Player.update()		1011,	1001,	111,	1010,	1001,	1001,	101
2017-01-04 11:23:03 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:23:03 AI_Player.update()		1001,	1100,	101,	1011,	1010,	1010,	1101
2017-01-04 11:23:03 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-04 11:23:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:03 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:03 AI_Player.update()	update
2017-01-04 11:23:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:03 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:03 AI_Player.update()	update
2017-01-04 11:23:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:03 AI_Player.update()	Search took96ms
2017-01-04 11:23:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:03 AI_Player.update()		110,	1110,	111,	101,	111,	1011,	11
2017-01-04 11:23:03 AI_Player.update()		1010,	11,	101,	1001,	1010,	1010,	1011
2017-01-04 11:23:03 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:03 AI_Player.update()		1011,	1001,	111,	1010,	1001,	1001,	101
2017-01-04 11:23:03 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:23:03 AI_Player.update()		1100,	101,	1011,	1010,	1010,	1101,	1001
2017-01-04 11:23:03 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-04 11:23:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:03 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:03 AI_Player.update()	update
2017-01-04 11:23:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:03 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:03 AI_Player.update()	update
2017-01-04 11:23:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:03 AI_Player.update()	Search took411ms
2017-01-04 11:23:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:03 AI_Player.update()		110,	1110,	111,	101,	111,	11,	11
2017-01-04 11:23:03 AI_Player.update()		1010,	11,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:03 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:03 AI_Player.update()		1011,	1001,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:03 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:03 AI_Player.update()		1100,	101,	1011,	1010,	1010,	110,	1001
2017-01-04 11:23:03 AI_Player.update()		1100,	110,	1101,	110,	1101,	1101,	1001
2017-01-04 11:23:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:03 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:03 AI_Player.update()	update
2017-01-04 11:23:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:03 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:03 AI_Player.update()	update
2017-01-04 11:23:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:04 AI_Player.update()	Search took310ms
2017-01-04 11:23:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:04 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 11:23:04 AI_Player.update()		1010,	11,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:04 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:04 AI_Player.update()		1011,	101,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:04 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:04 AI_Player.update()		1100,	110,	1011,	1010,	1010,	110,	1001
2017-01-04 11:23:04 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1101,	1001
2017-01-04 11:23:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:04 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:04 AI_Player.update()	update
2017-01-04 11:23:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:04 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:04 AI_Player.update()	update
2017-01-04 11:23:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:04 AI_Player.update()	Search took222ms
2017-01-04 11:23:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:04 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-04 11:23:04 AI_Player.update()		1010,	11,	101,	1100,	1010,	1011,	1011
2017-01-04 11:23:04 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-04 11:23:04 AI_Player.update()		1011,	101,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:04 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:04 AI_Player.update()		1100,	110,	1011,	110,	1010,	110,	1001
2017-01-04 11:23:04 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1101,	1001
2017-01-04 11:23:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:04 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:04 AI_Player.update()	update
2017-01-04 11:23:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:04 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:04 AI_Player.update()	update
2017-01-04 11:23:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:05 AI_Player.update()	Search took609ms
2017-01-04 11:23:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-04 11:23:05 AI_Player.update()		1010,	11,	101,	1100,	1010,	1011,	1011
2017-01-04 11:23:05 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-04 11:23:05 AI_Player.update()		1011,	101,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:05 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:05 AI_Player.update()		110,	1011,	110,	1010,	110,	1001,	1100
2017-01-04 11:23:05 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1101,	1001
2017-01-04 11:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()	update
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()	update
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:05 AI_Player.update()	Search took408ms
2017-01-04 11:23:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 11:23:05 AI_Player.update()		1010,	11,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:05 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:05 AI_Player.update()		1011,	101,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:05 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:05 AI_Player.update()		110,	1011,	110,	1010,	110,	1001,	1100
2017-01-04 11:23:05 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()	update
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()	update
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:05 AI_Player.update()	Search took147ms
2017-01-04 11:23:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 11:23:05 AI_Player.update()		1010,	11,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:05 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:05 AI_Player.update()		1011,	101,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:05 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:05 AI_Player.update()		1011,	110,	1010,	110,	1001,	1100,	110
2017-01-04 11:23:05 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()	update
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()	update
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:05 AI_Player.update()	Search took257ms
2017-01-04 11:23:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 11:23:05 AI_Player.update()		1010,	11,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:05 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:05 AI_Player.update()		1011,	101,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:05 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:05 AI_Player.update()		110,	1010,	110,	1001,	1100,	110,	1011
2017-01-04 11:23:05 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()	update
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()	update
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:05 AI_Player.update()	Search took44ms
2017-01-04 11:23:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()		110,	1110,	111,	101,	111,	11,	11
2017-01-04 11:23:05 AI_Player.update()		1010,	11,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:05 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:05 AI_Player.update()		1011,	1001,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:05 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:05 AI_Player.update()		110,	101,	110,	1001,	1100,	110,	1011
2017-01-04 11:23:05 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()	update
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:05 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:05 AI_Player.update()	update
2017-01-04 11:23:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:06 AI_Player.update()	Search took271ms
2017-01-04 11:23:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:06 AI_Player.update()		110,	1110,	111,	101,	111,	11,	11
2017-01-04 11:23:06 AI_Player.update()		1010,	11,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:06 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:06 AI_Player.update()		1011,	1001,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:06 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:06 AI_Player.update()		101,	110,	1001,	1100,	110,	1011,	110
2017-01-04 11:23:06 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:06 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:06 AI_Player.update()	update
2017-01-04 11:23:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:06 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:06 AI_Player.update()	update
2017-01-04 11:23:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:06 AI_Player.update()	Search took39ms
2017-01-04 11:23:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:06 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 11:23:06 AI_Player.update()		1010,	1110,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:06 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:06 AI_Player.update()		1011,	11,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:06 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:06 AI_Player.update()		101,	101,	1001,	1100,	110,	1011,	110
2017-01-04 11:23:06 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:06 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:06 AI_Player.update()	update
2017-01-04 11:23:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:06 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:06 AI_Player.update()	update
2017-01-04 11:23:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:06 AI_Player.update()	Search took319ms
2017-01-04 11:23:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:06 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 11:23:06 AI_Player.update()		1010,	1010,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:06 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:06 AI_Player.update()		1011,	11,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:06 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:06 AI_Player.update()		101,	1001,	1001,	1100,	110,	1011,	110
2017-01-04 11:23:06 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:06 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:06 AI_Player.update()	update
2017-01-04 11:23:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:06 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:06 AI_Player.update()	update
2017-01-04 11:23:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:06 AI_Player.update()	Search took185ms
2017-01-04 11:23:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:06 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 11:23:06 AI_Player.update()		1010,	1110,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:06 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:06 AI_Player.update()		1011,	11,	111,	1010,	1001,	1010,	101
2017-01-04 11:23:06 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:06 AI_Player.update()		101,	101,	1001,	1100,	110,	1011,	110
2017-01-04 11:23:06 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:06 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:06 AI_Player.update()	update
2017-01-04 11:23:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:06 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:06 AI_Player.update()	update
2017-01-04 11:23:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:07 AI_Player.update()	Search took341ms
2017-01-04 11:23:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:07 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 11:23:07 AI_Player.update()		1010,	1110,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:07 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:07 AI_Player.update()		11,	111,	1010,	1001,	1010,	101,	1011
2017-01-04 11:23:07 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:07 AI_Player.update()		101,	101,	1001,	1100,	110,	1011,	110
2017-01-04 11:23:07 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:07 AI_Player.update()	update
2017-01-04 11:23:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:23:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:07 AI_Player.update()	update
2017-01-04 11:23:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:07 AI_Player.update()	Search took87ms
2017-01-04 11:23:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:07 AI_Player.update()		110,	1110,	111,	101,	111,	11,	11
2017-01-04 11:23:07 AI_Player.update()		1010,	11,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:07 AI_Player.update()		1110,	111,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:07 AI_Player.update()		11,	1001,	1010,	1001,	1010,	101,	1011
2017-01-04 11:23:07 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:07 AI_Player.update()		101,	110,	1001,	1100,	110,	1011,	110
2017-01-04 11:23:07 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:07 AI_Player.update()	update
2017-01-04 11:23:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:07 AI_Player.update()	update
2017-01-04 11:23:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:07 AI_Player.update()	Search took238ms
2017-01-04 11:23:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:07 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 11:23:07 AI_Player.update()		1010,	111,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:07 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:07 AI_Player.update()		11,	101,	1010,	1001,	1010,	101,	1011
2017-01-04 11:23:07 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:07 AI_Player.update()		101,	1010,	1001,	1100,	110,	1011,	110
2017-01-04 11:23:07 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:07 AI_Player.update()	update
2017-01-04 11:23:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:07 AI_Player.update()	update
2017-01-04 11:23:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:07 AI_Player.update()	Search took287ms
2017-01-04 11:23:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:07 AI_Player.update()		110,	1110,	111,	101,	111,	11,	11
2017-01-04 11:23:07 AI_Player.update()		1010,	11,	101,	1001,	1010,	1011,	1011
2017-01-04 11:23:07 AI_Player.update()		1110,	111,	1110,	1100,	111,	1010,	1011
2017-01-04 11:23:07 AI_Player.update()		11,	1001,	1010,	1001,	1010,	101,	1011
2017-01-04 11:23:07 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:23:07 AI_Player.update()		101,	110,	1001,	1100,	110,	1011,	110
2017-01-04 11:23:07 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:07 AI_Player.update()	update
2017-01-04 11:23:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:07 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:07 AI_Player.update()	update
2017-01-04 11:23:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:08 AI_Player.update()	Search took209ms
2017-01-04 11:23:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()		110,	1110,	111,	101,	111,	1011,	11
2017-01-04 11:23:08 AI_Player.update()		1010,	11,	101,	1001,	1010,	1010,	1011
2017-01-04 11:23:08 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-04 11:23:08 AI_Player.update()		11,	1001,	1010,	1001,	1010,	1001,	1011
2017-01-04 11:23:08 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:23:08 AI_Player.update()		101,	110,	1001,	1100,	110,	1101,	110
2017-01-04 11:23:08 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:08 AI_Player.update()	Search took133ms
2017-01-04 11:23:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()		110,	1110,	111,	101,	111,	1011,	11
2017-01-04 11:23:08 AI_Player.update()		1010,	11,	101,	1001,	1010,	1010,	1011
2017-01-04 11:23:08 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-04 11:23:08 AI_Player.update()		1001,	1010,	1001,	1010,	1001,	1011,	11
2017-01-04 11:23:08 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:23:08 AI_Player.update()		101,	110,	1001,	1100,	110,	1101,	110
2017-01-04 11:23:08 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:23:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:08 AI_Player.update()	Search took219ms
2017-01-04 11:23:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()		110,	1110,	111,	101,	111,	1011,	11
2017-01-04 11:23:08 AI_Player.update()		1011,	1010,	11,	101,	1001,	1010,	1010
2017-01-04 11:23:08 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-04 11:23:08 AI_Player.update()		1001,	1010,	1001,	1010,	1001,	1011,	11
2017-01-04 11:23:08 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:23:08 AI_Player.update()		101,	110,	1001,	1100,	110,	1101,	110
2017-01-04 11:23:08 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:23:08 AI_Player.update()	Player a has won!
2017-01-04 11:23:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:23:08 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:23:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:23:08 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:23:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:08 AI_Player.update()	Search took25ms
2017-01-04 11:23:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-04 11:23:08 AI_Player.update()		110,	1100,	11,	11,	101,	110,	101
2017-01-04 11:23:08 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-04 11:23:08 AI_Player.update()		11,	1100,	111,	11,	1011,	1101,	1010
2017-01-04 11:23:08 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-04 11:23:08 AI_Player.update()		110,	1010,	1011,	1100,	1010,	110,	1100
2017-01-04 11:23:08 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	1011,	1001
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:08 AI_Player.update()	Search took27ms
2017-01-04 11:23:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-04 11:23:08 AI_Player.update()		110,	1100,	11,	1100,	101,	110,	101
2017-01-04 11:23:08 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-04 11:23:08 AI_Player.update()		11,	1100,	111,	1001,	1011,	1101,	1010
2017-01-04 11:23:08 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 11:23:08 AI_Player.update()		110,	1010,	1011,	1110,	1010,	110,	1100
2017-01-04 11:23:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1011,	1001
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:08 AI_Player.update()	Search took157ms
2017-01-04 11:23:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-04 11:23:08 AI_Player.update()		1100,	11,	1100,	101,	110,	101,	110
2017-01-04 11:23:08 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-04 11:23:08 AI_Player.update()		11,	1100,	111,	1001,	1011,	1101,	1010
2017-01-04 11:23:08 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 11:23:08 AI_Player.update()		110,	1010,	1011,	1110,	1010,	110,	1100
2017-01-04 11:23:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1011,	1001
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:08 AI_Player.update()	Search took31ms
2017-01-04 11:23:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 11:23:08 AI_Player.update()		1100,	11,	1100,	101,	110,	1001,	110
2017-01-04 11:23:08 AI_Player.update()		1110,	101,	1110,	11,	111,	1101,	1011
2017-01-04 11:23:08 AI_Player.update()		11,	1100,	111,	1001,	1011,	110,	1010
2017-01-04 11:23:08 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 11:23:08 AI_Player.update()		110,	1010,	1011,	1110,	1010,	1011,	1100
2017-01-04 11:23:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:08 AI_Player.update()	Search took225ms
2017-01-04 11:23:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()		110,	1110,	111,	11,	111,	101,	11
2017-01-04 11:23:08 AI_Player.update()		1100,	101,	1100,	101,	110,	1001,	110
2017-01-04 11:23:08 AI_Player.update()		1110,	11,	1110,	11,	111,	1101,	1011
2017-01-04 11:23:08 AI_Player.update()		11,	101,	111,	1001,	1011,	110,	1010
2017-01-04 11:23:08 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 11:23:08 AI_Player.update()		110,	1100,	1011,	1110,	1010,	1011,	1100
2017-01-04 11:23:08 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:08 AI_Player.update()	update
2017-01-04 11:23:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:09 AI_Player.update()	Search took178ms
2017-01-04 11:23:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:09 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-04 11:23:09 AI_Player.update()		1100,	101,	1100,	11,	110,	1001,	110
2017-01-04 11:23:09 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-04 11:23:09 AI_Player.update()		11,	101,	111,	1100,	1011,	110,	1010
2017-01-04 11:23:09 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	110,	1011
2017-01-04 11:23:09 AI_Player.update()		110,	1100,	1011,	1001,	1010,	1011,	1100
2017-01-04 11:23:09 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 11:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:09 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:09 AI_Player.update()	update
2017-01-04 11:23:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:09 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:09 AI_Player.update()	update
2017-01-04 11:23:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:09 AI_Player.update()	Search took60ms
2017-01-04 11:23:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:09 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 11:23:09 AI_Player.update()		1100,	1110,	1100,	11,	110,	1001,	110
2017-01-04 11:23:09 AI_Player.update()		1110,	101,	1110,	1001,	111,	1101,	1011
2017-01-04 11:23:09 AI_Player.update()		11,	11,	111,	1100,	1011,	110,	1010
2017-01-04 11:23:09 AI_Player.update()		1110,	101,	1101,	1110,	1011,	110,	1011
2017-01-04 11:23:09 AI_Player.update()		110,	1100,	1011,	1001,	1010,	1011,	1100
2017-01-04 11:23:09 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-04 11:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:09 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:09 AI_Player.update()	update
2017-01-04 11:23:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:09 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:09 AI_Player.update()	update
2017-01-04 11:23:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:09 AI_Player.update()	Search took211ms
2017-01-04 11:23:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:09 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-04 11:23:09 AI_Player.update()		1100,	101,	1100,	11,	110,	1001,	110
2017-01-04 11:23:09 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-04 11:23:09 AI_Player.update()		11,	101,	111,	1100,	1011,	110,	1010
2017-01-04 11:23:09 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	110,	1011
2017-01-04 11:23:09 AI_Player.update()		110,	1100,	1011,	1001,	1010,	1011,	1100
2017-01-04 11:23:09 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 11:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:09 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:09 AI_Player.update()	update
2017-01-04 11:23:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:09 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:09 AI_Player.update()	update
2017-01-04 11:23:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:09 AI_Player.update()	Search took58ms
2017-01-04 11:23:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:09 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-04 11:23:09 AI_Player.update()		110,	1100,	101,	1100,	11,	110,	1001
2017-01-04 11:23:09 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-04 11:23:09 AI_Player.update()		11,	101,	111,	1100,	1011,	110,	1010
2017-01-04 11:23:09 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	110,	1011
2017-01-04 11:23:09 AI_Player.update()		110,	1100,	1011,	1001,	1010,	1011,	1100
2017-01-04 11:23:09 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 11:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:09 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:09 AI_Player.update()	update
2017-01-04 11:23:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:09 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:09 AI_Player.update()	update
2017-01-04 11:23:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:10 AI_Player.update()	Search took587ms
2017-01-04 11:23:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:10 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 11:23:10 AI_Player.update()		110,	11,	101,	1100,	11,	110,	1001
2017-01-04 11:23:10 AI_Player.update()		1110,	101,	1110,	1001,	111,	1101,	1011
2017-01-04 11:23:10 AI_Player.update()		11,	1100,	111,	1100,	1011,	110,	1010
2017-01-04 11:23:10 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	110,	1011
2017-01-04 11:23:10 AI_Player.update()		110,	1010,	1011,	1001,	1010,	1011,	1100
2017-01-04 11:23:10 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1001,	1001
2017-01-04 11:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:10 AI_Player.update()	update
2017-01-04 11:23:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:10 AI_Player.update()	update
2017-01-04 11:23:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:10 AI_Player.update()	Search took191ms
2017-01-04 11:23:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:10 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-04 11:23:10 AI_Player.update()		110,	11,	101,	101,	11,	110,	1001
2017-01-04 11:23:10 AI_Player.update()		1110,	101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:23:10 AI_Player.update()		11,	1100,	111,	1001,	1011,	110,	1010
2017-01-04 11:23:10 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 11:23:10 AI_Player.update()		110,	1010,	1011,	1110,	1010,	1011,	1100
2017-01-04 11:23:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:10 AI_Player.update()	update
2017-01-04 11:23:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:10 AI_Player.update()	update
2017-01-04 11:23:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:10 AI_Player.update()	Search took133ms
2017-01-04 11:23:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:10 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-04 11:23:10 AI_Player.update()		110,	101,	101,	101,	11,	110,	1001
2017-01-04 11:23:10 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1101,	1011
2017-01-04 11:23:10 AI_Player.update()		11,	1100,	111,	1001,	1011,	110,	1010
2017-01-04 11:23:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-04 11:23:10 AI_Player.update()		110,	1110,	1011,	1110,	1010,	1011,	1100
2017-01-04 11:23:10 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:10 AI_Player.update()	update
2017-01-04 11:23:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:10 AI_Player.update()	update
2017-01-04 11:23:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:10 AI_Player.update()	Search took378ms
2017-01-04 11:23:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:10 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-04 11:23:10 AI_Player.update()		1001,	110,	101,	101,	101,	11,	110
2017-01-04 11:23:10 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1101,	1011
2017-01-04 11:23:10 AI_Player.update()		11,	1100,	111,	1001,	1011,	110,	1010
2017-01-04 11:23:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-04 11:23:10 AI_Player.update()		110,	1110,	1011,	1110,	1010,	1011,	1100
2017-01-04 11:23:10 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:10 AI_Player.update()	update
2017-01-04 11:23:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:10 AI_Player.update()	update
2017-01-04 11:23:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:11 AI_Player.update()	Search took480ms
2017-01-04 11:23:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:11 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 11:23:11 AI_Player.update()		1001,	110,	101,	1100,	101,	11,	110
2017-01-04 11:23:11 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1101,	1011
2017-01-04 11:23:11 AI_Player.update()		11,	1100,	111,	1100,	1011,	110,	1010
2017-01-04 11:23:11 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	110,	1011
2017-01-04 11:23:11 AI_Player.update()		110,	1110,	1011,	1001,	1010,	1011,	1100
2017-01-04 11:23:11 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-04 11:23:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:11 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:11 AI_Player.update()	update
2017-01-04 11:23:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:11 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:11 AI_Player.update()	update
2017-01-04 11:23:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:12 AI_Player.update()	Search took1023ms
2017-01-04 11:23:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:12 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-04 11:23:12 AI_Player.update()		1001,	110,	101,	1001,	101,	11,	110
2017-01-04 11:23:12 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1101,	1011
2017-01-04 11:23:12 AI_Player.update()		11,	1100,	111,	1110,	1011,	110,	1010
2017-01-04 11:23:12 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	110,	1011
2017-01-04 11:23:12 AI_Player.update()		110,	1110,	1011,	11,	1010,	1011,	1100
2017-01-04 11:23:12 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 11:23:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:12 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:12 AI_Player.update()	update
2017-01-04 11:23:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:12 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:12 AI_Player.update()	update
2017-01-04 11:23:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:13 AI_Player.update()	Search took1744ms
2017-01-04 11:23:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:13 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-04 11:23:13 AI_Player.update()		1001,	110,	101,	1100,	101,	11,	110
2017-01-04 11:23:13 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1101,	1011
2017-01-04 11:23:13 AI_Player.update()		11,	1100,	111,	1001,	1011,	110,	1010
2017-01-04 11:23:13 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 11:23:13 AI_Player.update()		110,	1110,	1011,	101,	1010,	1011,	1100
2017-01-04 11:23:13 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-04 11:23:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:13 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:13 AI_Player.update()	update
2017-01-04 11:23:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:13 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:23:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:13 AI_Player.update()	update
2017-01-04 11:23:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:15 AI_Player.update()	Search took1294ms
2017-01-04 11:23:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:15 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-04 11:23:15 AI_Player.update()		110,	101,	1100,	101,	11,	110,	1001
2017-01-04 11:23:15 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1101,	1011
2017-01-04 11:23:15 AI_Player.update()		11,	1100,	111,	1001,	1011,	110,	1010
2017-01-04 11:23:15 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 11:23:15 AI_Player.update()		110,	1110,	1011,	101,	1010,	1011,	1100
2017-01-04 11:23:15 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-04 11:23:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:15 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:23:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:15 AI_Player.update()	update
2017-01-04 11:23:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:15 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:23:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:15 AI_Player.update()	update
2017-01-04 11:23:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:16 AI_Player.update()	Search took1324ms
2017-01-04 11:23:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:16 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-04 11:23:16 AI_Player.update()		101,	1100,	101,	11,	110,	1001,	110
2017-01-04 11:23:16 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1101,	1011
2017-01-04 11:23:16 AI_Player.update()		11,	1100,	111,	1001,	1011,	110,	1010
2017-01-04 11:23:16 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 11:23:16 AI_Player.update()		110,	1110,	1011,	101,	1010,	1011,	1100
2017-01-04 11:23:16 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-04 11:23:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:16 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:23:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:16 AI_Player.update()	update
2017-01-04 11:23:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:16 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:16 AI_Player.update()	update
2017-01-04 11:23:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:17 AI_Player.update()	Search took395ms
2017-01-04 11:23:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:17 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-04 11:23:17 AI_Player.update()		101,	1100,	101,	11,	110,	1001,	110
2017-01-04 11:23:17 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1101,	1011
2017-01-04 11:23:17 AI_Player.update()		1010,	11,	1100,	111,	1001,	1011,	110
2017-01-04 11:23:17 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 11:23:17 AI_Player.update()		110,	1110,	1011,	101,	1010,	1011,	1100
2017-01-04 11:23:17 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-04 11:23:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:17 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:17 AI_Player.update()	update
2017-01-04 11:23:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:17 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:17 AI_Player.update()	update
2017-01-04 11:23:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:17 AI_Player.update()	Search took640ms
2017-01-04 11:23:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:17 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-04 11:23:17 AI_Player.update()		101,	1100,	101,	11,	110,	1001,	110
2017-01-04 11:23:17 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1101,	1011
2017-01-04 11:23:17 AI_Player.update()		11,	1100,	111,	1001,	1011,	110,	1010
2017-01-04 11:23:17 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 11:23:17 AI_Player.update()		110,	1110,	1011,	101,	1010,	1011,	1100
2017-01-04 11:23:17 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-04 11:23:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:17 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:17 AI_Player.update()	update
2017-01-04 11:23:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:17 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:17 AI_Player.update()	update
2017-01-04 11:23:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:18 AI_Player.update()	Search took446ms
2017-01-04 11:23:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:18 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-04 11:23:18 AI_Player.update()		101,	1100,	101,	11,	110,	1001,	110
2017-01-04 11:23:18 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1101,	1011
2017-01-04 11:23:18 AI_Player.update()		11,	1100,	111,	1001,	1011,	110,	1010
2017-01-04 11:23:18 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 11:23:18 AI_Player.update()		1110,	1011,	101,	1010,	1011,	1100,	110
2017-01-04 11:23:18 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-04 11:23:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:18 AI_Player.update()	update
2017-01-04 11:23:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:18 AI_Player.update()	update
2017-01-04 11:23:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:19 AI_Player.update()	Search took1222ms
2017-01-04 11:23:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:19 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-04 11:23:19 AI_Player.update()		101,	1100,	101,	11,	110,	1001,	110
2017-01-04 11:23:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1101,	1011
2017-01-04 11:23:19 AI_Player.update()		1100,	111,	1001,	1011,	110,	1010,	11
2017-01-04 11:23:19 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 11:23:19 AI_Player.update()		1110,	1011,	101,	1010,	1011,	1100,	110
2017-01-04 11:23:19 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-04 11:23:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:19 AI_Player.update()	update
2017-01-04 11:23:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:23:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:19 AI_Player.update()	update
2017-01-04 11:23:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:19 AI_Player.update()	Search took199ms
2017-01-04 11:23:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:19 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-04 11:23:19 AI_Player.update()		101,	1100,	101,	11,	110,	1001,	110
2017-01-04 11:23:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1101,	1011
2017-01-04 11:23:19 AI_Player.update()		11,	1100,	111,	1001,	1011,	110,	1010
2017-01-04 11:23:19 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 11:23:19 AI_Player.update()		1110,	1011,	101,	1010,	1011,	1100,	110
2017-01-04 11:23:19 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-04 11:23:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:23:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:19 AI_Player.update()	update
2017-01-04 11:23:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:23:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:19 AI_Player.update()	update
2017-01-04 11:23:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:19 AI_Player.update()	Search took248ms
2017-01-04 11:23:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:19 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-04 11:23:19 AI_Player.update()		101,	1100,	101,	11,	110,	1001,	110
2017-01-04 11:23:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1101,	1011
2017-01-04 11:23:19 AI_Player.update()		1010,	11,	1100,	111,	1001,	1011,	110
2017-01-04 11:23:19 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 11:23:19 AI_Player.update()		1110,	1011,	101,	1010,	1011,	1100,	110
2017-01-04 11:23:19 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-04 11:23:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:23:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:19 AI_Player.update()	update
2017-01-04 11:23:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:23:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:19 AI_Player.update()	update
2017-01-04 11:23:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:20 AI_Player.update()	Search took219ms
2017-01-04 11:23:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:20 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-04 11:23:20 AI_Player.update()		1100,	101,	11,	110,	1001,	110,	101
2017-01-04 11:23:20 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1101,	1011
2017-01-04 11:23:20 AI_Player.update()		1010,	11,	1100,	111,	1001,	1011,	110
2017-01-04 11:23:20 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 11:23:20 AI_Player.update()		1110,	1011,	101,	1010,	1011,	1100,	110
2017-01-04 11:23:20 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-04 11:23:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:23:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:20 AI_Player.update()	update
2017-01-04 11:23:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:20 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:23:20 AI_Player.update()	Player a has won!
2017-01-04 11:23:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:23:20 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:23:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:23:20 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:23:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:20 AI_Player.update()	update
2017-01-04 11:23:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:20 AI_Player.update()	Search took81ms
2017-01-04 11:23:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:20 AI_Player.update()		110,	1101,	111,	110,	111,	1100,	11
2017-01-04 11:23:20 AI_Player.update()		101,	1100,	1101,	101,	1110,	110,	1010
2017-01-04 11:23:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-04 11:23:20 AI_Player.update()		1101,	1110,	1010,	101,	101,	111,	1011
2017-01-04 11:23:20 AI_Player.update()		1110,	101,	1101,	111,	1011,	1011,	1011
2017-01-04 11:23:20 AI_Player.update()		1010,	11,	1100,	1101,	101,	1010,	1001
2017-01-04 11:23:20 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-04 11:23:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:20 AI_Player.update()	update
2017-01-04 11:23:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:20 AI_Player.update()	update
2017-01-04 11:23:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:21 AI_Player.update()	Search took869ms
2017-01-04 11:23:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:21 AI_Player.update()		110,	1100,	111,	110,	111,	1100,	11
2017-01-04 11:23:21 AI_Player.update()		101,	110,	1101,	101,	1110,	110,	1010
2017-01-04 11:23:21 AI_Player.update()		1110,	1110,	1110,	1001,	111,	1010,	1011
2017-01-04 11:23:21 AI_Player.update()		1101,	101,	1010,	101,	101,	111,	1011
2017-01-04 11:23:21 AI_Player.update()		1110,	11,	1101,	111,	1011,	1011,	1011
2017-01-04 11:23:21 AI_Player.update()		1010,	1001,	1100,	1101,	101,	1010,	1001
2017-01-04 11:23:21 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	101,	1001
2017-01-04 11:23:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:21 AI_Player.update()	update
2017-01-04 11:23:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:21 AI_Player.update()	update
2017-01-04 11:23:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:21 AI_Player.update()	Search took253ms
2017-01-04 11:23:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:21 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-04 11:23:21 AI_Player.update()		101,	110,	1101,	110,	1110,	110,	1010
2017-01-04 11:23:21 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-04 11:23:21 AI_Player.update()		1101,	101,	1010,	1001,	101,	111,	1011
2017-01-04 11:23:21 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-04 11:23:21 AI_Player.update()		1010,	1001,	1100,	111,	101,	1010,	1001
2017-01-04 11:23:21 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	101,	1001
2017-01-04 11:23:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:21 AI_Player.update()	update
2017-01-04 11:23:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:21 AI_Player.update()	update
2017-01-04 11:23:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:22 AI_Player.update()	Search took876ms
2017-01-04 11:23:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:22 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-04 11:23:22 AI_Player.update()		1010,	101,	110,	1101,	110,	1110,	110
2017-01-04 11:23:22 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-04 11:23:22 AI_Player.update()		1101,	101,	1010,	1001,	101,	111,	1011
2017-01-04 11:23:22 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-04 11:23:22 AI_Player.update()		1010,	1001,	1100,	111,	101,	1010,	1001
2017-01-04 11:23:22 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	101,	1001
2017-01-04 11:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:22 AI_Player.update()	update
2017-01-04 11:23:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:22 AI_Player.update()	update
2017-01-04 11:23:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:22 AI_Player.update()	Search took696ms
2017-01-04 11:23:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:22 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-04 11:23:22 AI_Player.update()		1010,	1110,	110,	1101,	110,	1110,	110
2017-01-04 11:23:22 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 11:23:22 AI_Player.update()		1101,	11,	1010,	1001,	101,	111,	1011
2017-01-04 11:23:22 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1011,	1011
2017-01-04 11:23:22 AI_Player.update()		1010,	1101,	1100,	111,	101,	1010,	1001
2017-01-04 11:23:22 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-04 11:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:22 AI_Player.update()	update
2017-01-04 11:23:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:22 AI_Player.update()	update
2017-01-04 11:23:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:23 AI_Player.update()	Search took380ms
2017-01-04 11:23:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:23 AI_Player.update()		110,	1110,	111,	1001,	111,	1100,	11
2017-01-04 11:23:23 AI_Player.update()		1010,	101,	110,	1101,	110,	1110,	110
2017-01-04 11:23:23 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 11:23:23 AI_Player.update()		1101,	1001,	1010,	1001,	101,	111,	1011
2017-01-04 11:23:23 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1011,	1011
2017-01-04 11:23:23 AI_Player.update()		1010,	1100,	1100,	111,	101,	1010,	1001
2017-01-04 11:23:23 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 11:23:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:23 AI_Player.update()	update
2017-01-04 11:23:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:23 AI_Player.update()	update
2017-01-04 11:23:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:24 AI_Player.update()	Search took1222ms
2017-01-04 11:23:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:24 AI_Player.update()		110,	1110,	111,	1001,	111,	101,	11
2017-01-04 11:23:24 AI_Player.update()		1010,	101,	110,	1101,	110,	1100,	110
2017-01-04 11:23:24 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-04 11:23:24 AI_Player.update()		1101,	1001,	1010,	1001,	101,	1010,	1011
2017-01-04 11:23:24 AI_Player.update()		1110,	1101,	1101,	101,	1011,	111,	1011
2017-01-04 11:23:24 AI_Player.update()		1010,	1100,	1100,	111,	101,	1011,	1001
2017-01-04 11:23:24 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:23:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:24 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:24 AI_Player.update()	update
2017-01-04 11:23:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:24 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:24 AI_Player.update()	update
2017-01-04 11:23:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:25 AI_Player.update()	Search took596ms
2017-01-04 11:23:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:25 AI_Player.update()		110,	1110,	111,	1001,	111,	101,	11
2017-01-04 11:23:25 AI_Player.update()		1010,	101,	110,	1101,	110,	1100,	110
2017-01-04 11:23:25 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-04 11:23:25 AI_Player.update()		1011,	1101,	1001,	1010,	1001,	101,	1010
2017-01-04 11:23:25 AI_Player.update()		1110,	1101,	1101,	101,	1011,	111,	1011
2017-01-04 11:23:25 AI_Player.update()		1010,	1100,	1100,	111,	101,	1011,	1001
2017-01-04 11:23:25 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:23:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:25 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:25 AI_Player.update()	update
2017-01-04 11:23:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:25 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:25 AI_Player.update()	update
2017-01-04 11:23:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:26 AI_Player.update()	Search took1799ms
2017-01-04 11:23:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:26 AI_Player.update()		110,	1110,	111,	1001,	111,	101,	11
2017-01-04 11:23:26 AI_Player.update()		1010,	101,	110,	1101,	110,	1100,	110
2017-01-04 11:23:26 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-04 11:23:26 AI_Player.update()		1011,	1101,	1001,	1010,	1001,	101,	1010
2017-01-04 11:23:26 AI_Player.update()		1110,	1101,	1101,	101,	1011,	111,	1011
2017-01-04 11:23:26 AI_Player.update()		1100,	1100,	111,	101,	1011,	1001,	1010
2017-01-04 11:23:26 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:23:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:26 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:26 AI_Player.update()	update
2017-01-04 11:23:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:26 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:26 AI_Player.update()	update
2017-01-04 11:23:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:29 AI_Player.update()	Search took2274ms
2017-01-04 11:23:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:29 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 11:23:29 AI_Player.update()		1010,	1110,	110,	1101,	110,	1100,	110
2017-01-04 11:23:29 AI_Player.update()		1110,	101,	1110,	101,	111,	1110,	1011
2017-01-04 11:23:29 AI_Player.update()		1011,	11,	1001,	1010,	1001,	101,	1010
2017-01-04 11:23:29 AI_Player.update()		1110,	1101,	1101,	101,	1011,	111,	1011
2017-01-04 11:23:29 AI_Player.update()		1100,	1101,	111,	101,	1011,	1001,	1010
2017-01-04 11:23:29 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:23:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:29 AI_Player.update()	update
2017-01-04 11:23:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:23:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:29 AI_Player.update()	update
2017-01-04 11:23:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:29 AI_Player.update()	Search took761ms
2017-01-04 11:23:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:29 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 11:23:29 AI_Player.update()		1110,	110,	1101,	110,	1100,	110,	1010
2017-01-04 11:23:29 AI_Player.update()		1110,	101,	1110,	101,	111,	1110,	1011
2017-01-04 11:23:29 AI_Player.update()		1011,	11,	1001,	1010,	1001,	101,	1010
2017-01-04 11:23:29 AI_Player.update()		1110,	1101,	1101,	101,	1011,	111,	1011
2017-01-04 11:23:29 AI_Player.update()		1100,	1101,	111,	101,	1011,	1001,	1010
2017-01-04 11:23:29 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:23:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:29 AI_Player.update()	update
2017-01-04 11:23:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:23:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:29 AI_Player.update()	update
2017-01-04 11:23:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:32 AI_Player.update()	Search took2115ms
2017-01-04 11:23:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:32 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 11:23:32 AI_Player.update()		1110,	101,	1101,	110,	1100,	110,	1010
2017-01-04 11:23:32 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-04 11:23:32 AI_Player.update()		1011,	1101,	1001,	1010,	1001,	101,	1010
2017-01-04 11:23:32 AI_Player.update()		1110,	1101,	1101,	101,	1011,	111,	1011
2017-01-04 11:23:32 AI_Player.update()		1100,	1100,	111,	101,	1011,	1001,	1010
2017-01-04 11:23:32 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:23:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:32 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:23:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:32 AI_Player.update()	update
2017-01-04 11:23:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:32 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:32 AI_Player.update()	update
2017-01-04 11:23:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:33 AI_Player.update()	Search took1082ms
2017-01-04 11:23:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:33 AI_Player.update()		110,	110,	111,	1101,	111,	101,	11
2017-01-04 11:23:33 AI_Player.update()		1110,	101,	1101,	1001,	1100,	110,	1010
2017-01-04 11:23:33 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-04 11:23:33 AI_Player.update()		1011,	1101,	1001,	101,	1001,	101,	1010
2017-01-04 11:23:33 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	111,	1011
2017-01-04 11:23:33 AI_Player.update()		1100,	1100,	111,	101,	1011,	1001,	1010
2017-01-04 11:23:33 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:33 AI_Player.update()	update
2017-01-04 11:23:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:33 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:23:33 AI_Player.update()	Player a has won!
2017-01-04 11:23:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:23:33 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:23:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:23:33 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:23:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:33 AI_Player.update()	update
2017-01-04 11:23:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:33 AI_Player.update()	Search took161ms
2017-01-04 11:23:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:33 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 11:23:33 AI_Player.update()		1001,	1101,	1001,	1010,	110,	11,	1100
2017-01-04 11:23:33 AI_Player.update()		1110,	1110,	1110,	11,	111,	101,	1011
2017-01-04 11:23:33 AI_Player.update()		1011,	1010,	1101,	101,	1001,	1110,	1110
2017-01-04 11:23:33 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-04 11:23:33 AI_Player.update()		1010,	1010,	1100,	1101,	101,	1110,	1010
2017-01-04 11:23:33 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:33 AI_Player.update()	update
2017-01-04 11:23:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:33 AI_Player.update()	update
2017-01-04 11:23:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:33 AI_Player.update()	Search took309ms
2017-01-04 11:23:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:33 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 11:23:33 AI_Player.update()		1101,	1001,	1010,	110,	11,	1100,	1001
2017-01-04 11:23:33 AI_Player.update()		1110,	1110,	1110,	11,	111,	101,	1011
2017-01-04 11:23:33 AI_Player.update()		1011,	1010,	1101,	101,	1001,	1110,	1110
2017-01-04 11:23:33 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-04 11:23:33 AI_Player.update()		1010,	1010,	1100,	1101,	101,	1110,	1010
2017-01-04 11:23:33 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:33 AI_Player.update()	update
2017-01-04 11:23:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:33 AI_Player.update()	update
2017-01-04 11:23:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:34 AI_Player.update()	Search took918ms
2017-01-04 11:23:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:34 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 11:23:34 AI_Player.update()		1101,	1110,	1010,	110,	11,	1100,	1001
2017-01-04 11:23:34 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-04 11:23:34 AI_Player.update()		1011,	101,	1101,	101,	1001,	1110,	1110
2017-01-04 11:23:34 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-04 11:23:34 AI_Player.update()		1010,	110,	1100,	1101,	101,	1110,	1010
2017-01-04 11:23:34 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:23:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:34 AI_Player.update()	update
2017-01-04 11:23:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:34 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:34 AI_Player.update()	update
2017-01-04 11:23:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:35 AI_Player.update()	Search took942ms
2017-01-04 11:23:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:35 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:23:35 AI_Player.update()		1101,	1110,	1010,	11,	11,	1100,	1001
2017-01-04 11:23:35 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:23:35 AI_Player.update()		1011,	101,	1101,	1001,	1001,	1110,	1110
2017-01-04 11:23:35 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-04 11:23:35 AI_Player.update()		1010,	110,	1100,	1001,	101,	1110,	1010
2017-01-04 11:23:35 AI_Player.update()		1100,	11,	1101,	101,	1101,	1101,	1001
2017-01-04 11:23:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:35 AI_Player.update()	update
2017-01-04 11:23:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:35 AI_Player.update()	update
2017-01-04 11:23:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:36 AI_Player.update()	Search took1190ms
2017-01-04 11:23:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:36 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:23:36 AI_Player.update()		1101,	1110,	1010,	11,	11,	1100,	1001
2017-01-04 11:23:36 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:23:36 AI_Player.update()		101,	1101,	1001,	1001,	1110,	1110,	1011
2017-01-04 11:23:36 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-04 11:23:36 AI_Player.update()		1010,	110,	1100,	1001,	101,	1110,	1010
2017-01-04 11:23:36 AI_Player.update()		1100,	11,	1101,	101,	1101,	1101,	1001
2017-01-04 11:23:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:36 AI_Player.update()	update
2017-01-04 11:23:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:36 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:36 AI_Player.update()	update
2017-01-04 11:23:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:37 AI_Player.update()	Search took1085ms
2017-01-04 11:23:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:37 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:23:37 AI_Player.update()		1101,	1110,	1010,	11,	11,	1100,	1001
2017-01-04 11:23:37 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:23:37 AI_Player.update()		1011,	101,	1101,	1001,	1001,	1110,	1110
2017-01-04 11:23:37 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-04 11:23:37 AI_Player.update()		1010,	110,	1100,	1001,	101,	1110,	1010
2017-01-04 11:23:37 AI_Player.update()		1100,	11,	1101,	101,	1101,	1101,	1001
2017-01-04 11:23:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:37 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:37 AI_Player.update()	update
2017-01-04 11:23:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:37 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:37 AI_Player.update()	update
2017-01-04 11:23:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:39 AI_Player.update()	Search took1230ms
2017-01-04 11:23:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:39 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 11:23:39 AI_Player.update()		1101,	1110,	1010,	110,	11,	1100,	1001
2017-01-04 11:23:39 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-04 11:23:39 AI_Player.update()		1011,	101,	1101,	101,	1001,	1110,	1110
2017-01-04 11:23:39 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-04 11:23:39 AI_Player.update()		1010,	110,	1100,	1101,	101,	1110,	1010
2017-01-04 11:23:39 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:39 AI_Player.update()	update
2017-01-04 11:23:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:23:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:39 AI_Player.update()	update
2017-01-04 11:23:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:39 AI_Player.update()	Search took718ms
2017-01-04 11:23:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:39 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-04 11:23:39 AI_Player.update()		1101,	1010,	1010,	110,	11,	1100,	1001
2017-01-04 11:23:39 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 11:23:39 AI_Player.update()		1011,	1010,	1101,	101,	1001,	1110,	1110
2017-01-04 11:23:39 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:23:39 AI_Player.update()		1010,	11,	1100,	1101,	101,	1110,	1010
2017-01-04 11:23:39 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:39 AI_Player.update()	update
2017-01-04 11:23:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:39 AI_Player.update()	update
2017-01-04 11:23:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:40 AI_Player.update()	Search took807ms
2017-01-04 11:23:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:40 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 11:23:40 AI_Player.update()		1101,	1110,	1010,	110,	11,	1100,	1001
2017-01-04 11:23:40 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-04 11:23:40 AI_Player.update()		1011,	101,	1101,	101,	1001,	1110,	1110
2017-01-04 11:23:40 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-04 11:23:40 AI_Player.update()		1010,	110,	1100,	1101,	101,	1110,	1010
2017-01-04 11:23:40 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:40 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:40 AI_Player.update()	update
2017-01-04 11:23:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:40 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:40 AI_Player.update()	update
2017-01-04 11:23:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:40 AI_Player.update()	Search took156ms
2017-01-04 11:23:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:40 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-04 11:23:40 AI_Player.update()		1101,	1010,	1010,	110,	11,	1100,	1001
2017-01-04 11:23:40 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 11:23:40 AI_Player.update()		1011,	1010,	1101,	101,	1001,	1110,	1110
2017-01-04 11:23:40 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:23:40 AI_Player.update()		1010,	11,	1100,	1101,	101,	1110,	1010
2017-01-04 11:23:40 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:40 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:40 AI_Player.update()	update
2017-01-04 11:23:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:40 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:40 AI_Player.update()	update
2017-01-04 11:23:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:41 AI_Player.update()	Search took339ms
2017-01-04 11:23:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-04 11:23:41 AI_Player.update()		1101,	1010,	1010,	110,	11,	1100,	1001
2017-01-04 11:23:41 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 11:23:41 AI_Player.update()		1011,	1010,	1101,	101,	1001,	1110,	1110
2017-01-04 11:23:41 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:23:41 AI_Player.update()		11,	1100,	1101,	101,	1110,	1010,	1010
2017-01-04 11:23:41 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:41 AI_Player.update()	Search took69ms
2017-01-04 11:23:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-04 11:23:41 AI_Player.update()		1101,	1010,	1010,	110,	11,	1100,	1001
2017-01-04 11:23:41 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 11:23:41 AI_Player.update()		1011,	1010,	1101,	101,	1001,	1110,	1110
2017-01-04 11:23:41 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:23:41 AI_Player.update()		1010,	11,	1100,	1101,	101,	1110,	1010
2017-01-04 11:23:41 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:41 AI_Player.update()	Search took231ms
2017-01-04 11:23:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 11:23:41 AI_Player.update()		1101,	1110,	1010,	110,	11,	1100,	1001
2017-01-04 11:23:41 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-04 11:23:41 AI_Player.update()		1011,	101,	1101,	101,	1001,	1110,	1110
2017-01-04 11:23:41 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-04 11:23:41 AI_Player.update()		1010,	110,	1100,	1101,	101,	1110,	1010
2017-01-04 11:23:41 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:41 AI_Player.update()	Search took135ms
2017-01-04 11:23:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-04 11:23:41 AI_Player.update()		1101,	1010,	1010,	110,	11,	1100,	1001
2017-01-04 11:23:41 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 11:23:41 AI_Player.update()		1011,	1010,	1101,	101,	1001,	1110,	1110
2017-01-04 11:23:41 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:23:41 AI_Player.update()		1010,	11,	1100,	1101,	101,	1110,	1010
2017-01-04 11:23:41 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:41 AI_Player.update()	Search took219ms
2017-01-04 11:23:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-04 11:23:41 AI_Player.update()		1010,	1010,	110,	11,	1100,	1001,	1101
2017-01-04 11:23:41 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 11:23:41 AI_Player.update()		1011,	1010,	1101,	101,	1001,	1110,	1110
2017-01-04 11:23:41 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:23:41 AI_Player.update()		1010,	11,	1100,	1101,	101,	1110,	1010
2017-01-04 11:23:41 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:23:41 AI_Player.update()	Player a has won!
2017-01-04 11:23:41 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:23:41 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:23:41 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:23:41 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:23:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:41 AI_Player.update()	Search took62ms
2017-01-04 11:23:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()		110,	1001,	111,	1011,	111,	1010,	11
2017-01-04 11:23:41 AI_Player.update()		111,	1110,	11,	1110,	110,	1001,	11
2017-01-04 11:23:41 AI_Player.update()		1110,	111,	1110,	1001,	111,	110,	1011
2017-01-04 11:23:41 AI_Player.update()		1010,	11,	1100,	101,	1010,	1100,	11
2017-01-04 11:23:41 AI_Player.update()		1110,	11,	1101,	11,	1011,	1110,	1011
2017-01-04 11:23:41 AI_Player.update()		1110,	101,	1001,	11,	1010,	111,	1101
2017-01-04 11:23:41 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:41 AI_Player.update()	Search took14ms
2017-01-04 11:23:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()		110,	1001,	111,	1011,	111,	1001,	11
2017-01-04 11:23:41 AI_Player.update()		111,	1110,	11,	1110,	110,	110,	11
2017-01-04 11:23:41 AI_Player.update()		1110,	111,	1110,	1001,	111,	1100,	1011
2017-01-04 11:23:41 AI_Player.update()		1010,	11,	1100,	101,	1010,	1110,	11
2017-01-04 11:23:41 AI_Player.update()		1110,	11,	1101,	11,	1011,	111,	1011
2017-01-04 11:23:41 AI_Player.update()		1110,	101,	1001,	11,	1010,	1001,	1101
2017-01-04 11:23:41 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:41 AI_Player.update()	update
2017-01-04 11:23:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:42 AI_Player.update()	Search took212ms
2017-01-04 11:23:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:42 AI_Player.update()		110,	1110,	111,	1011,	111,	1001,	11
2017-01-04 11:23:42 AI_Player.update()		111,	111,	11,	1110,	110,	110,	11
2017-01-04 11:23:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-04 11:23:42 AI_Player.update()		1010,	11,	1100,	101,	1010,	1110,	11
2017-01-04 11:23:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-04 11:23:42 AI_Player.update()		1110,	1010,	1001,	11,	1010,	1001,	1101
2017-01-04 11:23:42 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:42 AI_Player.update()	update
2017-01-04 11:23:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:42 AI_Player.update()	update
2017-01-04 11:23:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:42 AI_Player.update()	Search took32ms
2017-01-04 11:23:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:42 AI_Player.update()		110,	1110,	111,	1011,	111,	110,	11
2017-01-04 11:23:42 AI_Player.update()		111,	111,	11,	1110,	110,	1100,	11
2017-01-04 11:23:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	1110,	1011
2017-01-04 11:23:42 AI_Player.update()		1010,	11,	1100,	101,	1010,	111,	11
2017-01-04 11:23:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 11:23:42 AI_Player.update()		1110,	1010,	1001,	11,	1010,	1010,	1101
2017-01-04 11:23:42 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:42 AI_Player.update()	update
2017-01-04 11:23:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:42 AI_Player.update()	update
2017-01-04 11:23:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:42 AI_Player.update()	Search took493ms
2017-01-04 11:23:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:42 AI_Player.update()		110,	1110,	111,	1011,	111,	110,	11
2017-01-04 11:23:42 AI_Player.update()		111,	111,	11,	1110,	110,	1100,	11
2017-01-04 11:23:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	1110,	1011
2017-01-04 11:23:42 AI_Player.update()		1010,	11,	1100,	101,	1010,	111,	11
2017-01-04 11:23:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 11:23:42 AI_Player.update()		1010,	1001,	11,	1010,	1010,	1101,	1110
2017-01-04 11:23:42 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:42 AI_Player.update()	update
2017-01-04 11:23:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:42 AI_Player.update()	update
2017-01-04 11:23:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:42 AI_Player.update()	Search took183ms
2017-01-04 11:23:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:42 AI_Player.update()		110,	1110,	111,	1011,	111,	110,	11
2017-01-04 11:23:42 AI_Player.update()		111,	111,	11,	1110,	110,	1100,	11
2017-01-04 11:23:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	1110,	1011
2017-01-04 11:23:42 AI_Player.update()		11,	1100,	101,	1010,	111,	11,	1010
2017-01-04 11:23:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 11:23:42 AI_Player.update()		1010,	1001,	11,	1010,	1010,	1101,	1110
2017-01-04 11:23:42 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:42 AI_Player.update()	update
2017-01-04 11:23:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:42 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:42 AI_Player.update()	update
2017-01-04 11:23:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:43 AI_Player.update()	Search took468ms
2017-01-04 11:23:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:43 AI_Player.update()		110,	1110,	111,	1011,	111,	110,	11
2017-01-04 11:23:43 AI_Player.update()		111,	111,	11,	1110,	110,	1100,	11
2017-01-04 11:23:43 AI_Player.update()		1110,	11,	1110,	1001,	111,	1110,	1011
2017-01-04 11:23:43 AI_Player.update()		1100,	101,	1010,	111,	11,	1010,	11
2017-01-04 11:23:43 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 11:23:43 AI_Player.update()		1010,	1001,	11,	1010,	1010,	1101,	1110
2017-01-04 11:23:43 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:23:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:43 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:43 AI_Player.update()	update
2017-01-04 11:23:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:43 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:43 AI_Player.update()	update
2017-01-04 11:23:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:43 AI_Player.update()	Search took292ms
2017-01-04 11:23:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:43 AI_Player.update()		110,	1110,	111,	1010,	111,	110,	11
2017-01-04 11:23:43 AI_Player.update()		111,	111,	11,	1011,	110,	1100,	11
2017-01-04 11:23:43 AI_Player.update()		1110,	11,	1110,	1110,	111,	1110,	1011
2017-01-04 11:23:43 AI_Player.update()		1100,	101,	1010,	1001,	11,	1010,	11
2017-01-04 11:23:43 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-04 11:23:43 AI_Player.update()		1010,	1001,	11,	11,	1010,	1101,	1110
2017-01-04 11:23:43 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:23:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:43 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:43 AI_Player.update()	update
2017-01-04 11:23:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:43 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:43 AI_Player.update()	update
2017-01-04 11:23:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:44 AI_Player.update()	Search took681ms
2017-01-04 11:23:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:44 AI_Player.update()		110,	1110,	111,	1010,	111,	1100,	11
2017-01-04 11:23:44 AI_Player.update()		111,	111,	11,	1011,	110,	1110,	11
2017-01-04 11:23:44 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-04 11:23:44 AI_Player.update()		1100,	101,	1010,	1001,	11,	1001,	11
2017-01-04 11:23:44 AI_Player.update()		1110,	101,	1101,	111,	1011,	1101,	1011
2017-01-04 11:23:44 AI_Player.update()		1010,	1001,	11,	11,	1010,	1001,	1110
2017-01-04 11:23:44 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	110,	1001
2017-01-04 11:23:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:23:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:44 AI_Player.update()	update
2017-01-04 11:23:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:44 AI_Player.update()	update
2017-01-04 11:23:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:44 AI_Player.update()	Search took147ms
2017-01-04 11:23:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:44 AI_Player.update()		110,	1110,	111,	1010,	111,	110,	11
2017-01-04 11:23:44 AI_Player.update()		111,	111,	11,	1011,	110,	1100,	11
2017-01-04 11:23:44 AI_Player.update()		1110,	11,	1110,	1110,	111,	1110,	1011
2017-01-04 11:23:44 AI_Player.update()		1100,	101,	1010,	1001,	11,	1010,	11
2017-01-04 11:23:44 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-04 11:23:44 AI_Player.update()		1010,	1001,	11,	11,	1010,	1101,	1110
2017-01-04 11:23:44 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:23:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:44 AI_Player.update()	update
2017-01-04 11:23:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:44 AI_Player.update()	update
2017-01-04 11:23:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:45 AI_Player.update()	Search took768ms
2017-01-04 11:23:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:45 AI_Player.update()		110,	1110,	111,	1010,	111,	1001,	11
2017-01-04 11:23:45 AI_Player.update()		111,	111,	11,	1011,	110,	110,	11
2017-01-04 11:23:45 AI_Player.update()		1110,	11,	1110,	1110,	111,	1100,	1011
2017-01-04 11:23:45 AI_Player.update()		1100,	101,	1010,	1001,	11,	1110,	11
2017-01-04 11:23:45 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-04 11:23:45 AI_Player.update()		1010,	1001,	11,	11,	1010,	1001,	1110
2017-01-04 11:23:45 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:45 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:23:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:45 AI_Player.update()	update
2017-01-04 11:23:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:45 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:45 AI_Player.update()	update
2017-01-04 11:23:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:46 AI_Player.update()	Search took1088ms
2017-01-04 11:23:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:46 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-04 11:23:46 AI_Player.update()		111,	1110,	11,	1011,	110,	110,	11
2017-01-04 11:23:46 AI_Player.update()		1110,	111,	1110,	1110,	111,	1100,	1011
2017-01-04 11:23:46 AI_Player.update()		1100,	11,	1010,	1001,	11,	1110,	11
2017-01-04 11:23:46 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-04 11:23:46 AI_Player.update()		1010,	101,	11,	11,	1010,	1001,	1110
2017-01-04 11:23:46 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:46 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:46 AI_Player.update()	update
2017-01-04 11:23:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:46 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:46 AI_Player.update()	update
2017-01-04 11:23:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:47 AI_Player.update()	Search took1162ms
2017-01-04 11:23:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:47 AI_Player.update()		110,	1110,	111,	1010,	111,	1001,	11
2017-01-04 11:23:47 AI_Player.update()		111,	111,	11,	1011,	110,	110,	11
2017-01-04 11:23:47 AI_Player.update()		1110,	11,	1110,	1110,	111,	1100,	1011
2017-01-04 11:23:47 AI_Player.update()		1100,	101,	1010,	1001,	11,	1110,	11
2017-01-04 11:23:47 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-04 11:23:47 AI_Player.update()		1010,	1001,	11,	11,	1010,	1001,	1110
2017-01-04 11:23:47 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:47 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:47 AI_Player.update()	update
2017-01-04 11:23:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:47 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:47 AI_Player.update()	update
2017-01-04 11:23:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:48 AI_Player.update()	Search took1233ms
2017-01-04 11:23:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:48 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-04 11:23:48 AI_Player.update()		111,	11,	11,	1011,	110,	110,	11
2017-01-04 11:23:48 AI_Player.update()		1110,	101,	1110,	1110,	111,	1100,	1011
2017-01-04 11:23:48 AI_Player.update()		1100,	101,	1010,	1001,	11,	1110,	11
2017-01-04 11:23:48 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1010,	1011
2017-01-04 11:23:48 AI_Player.update()		1010,	1001,	11,	11,	1010,	1001,	1110
2017-01-04 11:23:48 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:48 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:48 AI_Player.update()	update
2017-01-04 11:23:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:48 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:48 AI_Player.update()	update
2017-01-04 11:23:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:49 AI_Player.update()	Search took753ms
2017-01-04 11:23:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:49 AI_Player.update()		110,	1110,	111,	1010,	111,	1001,	11
2017-01-04 11:23:49 AI_Player.update()		111,	111,	11,	1011,	110,	110,	11
2017-01-04 11:23:49 AI_Player.update()		1110,	11,	1110,	1110,	111,	1100,	1011
2017-01-04 11:23:49 AI_Player.update()		1100,	101,	1010,	1001,	11,	1110,	11
2017-01-04 11:23:49 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-04 11:23:49 AI_Player.update()		1010,	1001,	11,	11,	1010,	1001,	1110
2017-01-04 11:23:49 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:49 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:49 AI_Player.update()	update
2017-01-04 11:23:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:49 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:49 AI_Player.update()	update
2017-01-04 11:23:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:50 AI_Player.update()	Search took1069ms
2017-01-04 11:23:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:50 AI_Player.update()		110,	1110,	111,	1011,	111,	1001,	11
2017-01-04 11:23:50 AI_Player.update()		111,	111,	11,	1110,	110,	110,	11
2017-01-04 11:23:50 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-04 11:23:50 AI_Player.update()		1100,	101,	1010,	111,	11,	1110,	11
2017-01-04 11:23:50 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 11:23:50 AI_Player.update()		1010,	1001,	11,	1010,	1010,	1001,	1110
2017-01-04 11:23:50 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:50 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:50 AI_Player.update()	update
2017-01-04 11:23:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:50 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:50 AI_Player.update()	update
2017-01-04 11:23:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:51 AI_Player.update()	Search took542ms
2017-01-04 11:23:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:51 AI_Player.update()		110,	1001,	111,	1011,	111,	1001,	11
2017-01-04 11:23:51 AI_Player.update()		111,	1110,	11,	1110,	110,	110,	11
2017-01-04 11:23:51 AI_Player.update()		1110,	111,	1110,	1001,	111,	1100,	1011
2017-01-04 11:23:51 AI_Player.update()		1100,	11,	1010,	111,	11,	1110,	11
2017-01-04 11:23:51 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 11:23:51 AI_Player.update()		1010,	101,	11,	1010,	1010,	1001,	1110
2017-01-04 11:23:51 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:51 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:51 AI_Player.update()	update
2017-01-04 11:23:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:51 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:51 AI_Player.update()	update
2017-01-04 11:23:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:51 AI_Player.update()	Search took494ms
2017-01-04 11:23:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:51 AI_Player.update()		110,	1001,	111,	1011,	111,	1001,	11
2017-01-04 11:23:51 AI_Player.update()		111,	1110,	11,	1110,	110,	110,	11
2017-01-04 11:23:51 AI_Player.update()		1110,	111,	1110,	1001,	111,	1100,	1011
2017-01-04 11:23:51 AI_Player.update()		1100,	11,	1010,	111,	11,	1110,	11
2017-01-04 11:23:51 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 11:23:51 AI_Player.update()		101,	11,	1010,	1010,	1001,	1110,	1010
2017-01-04 11:23:51 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:51 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:51 AI_Player.update()	update
2017-01-04 11:23:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:51 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:51 AI_Player.update()	update
2017-01-04 11:23:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:52 AI_Player.update()	Search took480ms
2017-01-04 11:23:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:52 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-04 11:23:52 AI_Player.update()		111,	1110,	11,	1011,	110,	110,	11
2017-01-04 11:23:52 AI_Player.update()		1110,	111,	1110,	1110,	111,	1100,	1011
2017-01-04 11:23:52 AI_Player.update()		1100,	11,	1010,	1001,	11,	1110,	11
2017-01-04 11:23:52 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-04 11:23:52 AI_Player.update()		101,	11,	1010,	11,	1001,	1110,	1010
2017-01-04 11:23:52 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:52 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:52 AI_Player.update()	update
2017-01-04 11:23:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:52 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:52 AI_Player.update()	update
2017-01-04 11:23:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:52 AI_Player.update()	Search took296ms
2017-01-04 11:23:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:52 AI_Player.update()		110,	1001,	111,	1011,	111,	1001,	11
2017-01-04 11:23:52 AI_Player.update()		111,	1110,	11,	1110,	110,	110,	11
2017-01-04 11:23:52 AI_Player.update()		1110,	111,	1110,	1001,	111,	1100,	1011
2017-01-04 11:23:52 AI_Player.update()		1100,	11,	1010,	111,	11,	1110,	11
2017-01-04 11:23:52 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 11:23:52 AI_Player.update()		101,	11,	1010,	1010,	1001,	1110,	1010
2017-01-04 11:23:52 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:52 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:52 AI_Player.update()	update
2017-01-04 11:23:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:52 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:52 AI_Player.update()	update
2017-01-04 11:23:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:52 AI_Player.update()	Search took482ms
2017-01-04 11:23:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:52 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-04 11:23:52 AI_Player.update()		111,	1110,	11,	1011,	110,	110,	11
2017-01-04 11:23:52 AI_Player.update()		1110,	111,	1110,	1110,	111,	1100,	1011
2017-01-04 11:23:52 AI_Player.update()		1100,	11,	1010,	1001,	11,	1110,	11
2017-01-04 11:23:52 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-04 11:23:52 AI_Player.update()		101,	11,	1010,	11,	1001,	1110,	1010
2017-01-04 11:23:52 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:52 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:52 AI_Player.update()	update
2017-01-04 11:23:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:52 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:52 AI_Player.update()	update
2017-01-04 11:23:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:53 AI_Player.update()	Search took289ms
2017-01-04 11:23:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:53 AI_Player.update()		110,	1001,	111,	1011,	111,	1001,	11
2017-01-04 11:23:53 AI_Player.update()		111,	1110,	11,	1110,	110,	110,	11
2017-01-04 11:23:53 AI_Player.update()		1110,	111,	1110,	1001,	111,	1100,	1011
2017-01-04 11:23:53 AI_Player.update()		1100,	11,	1010,	111,	11,	1110,	11
2017-01-04 11:23:53 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 11:23:53 AI_Player.update()		101,	11,	1010,	1010,	1001,	1110,	1010
2017-01-04 11:23:53 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:23:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:53 AI_Player.update()	update
2017-01-04 11:23:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:53 AI_Player.update()	update
2017-01-04 11:23:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:53 AI_Player.update()	Search took461ms
2017-01-04 11:23:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:53 AI_Player.update()		110,	1001,	111,	1011,	111,	1101,	11
2017-01-04 11:23:53 AI_Player.update()		111,	1110,	11,	1110,	110,	1001,	11
2017-01-04 11:23:53 AI_Player.update()		1110,	111,	1110,	1001,	111,	110,	1011
2017-01-04 11:23:53 AI_Player.update()		1100,	11,	1010,	111,	11,	1100,	11
2017-01-04 11:23:53 AI_Player.update()		1110,	101,	1101,	11,	1011,	1110,	1011
2017-01-04 11:23:53 AI_Player.update()		101,	11,	1010,	1010,	1001,	1010,	1010
2017-01-04 11:23:53 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1110,	1001
2017-01-04 11:23:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:23:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:53 AI_Player.update()	update
2017-01-04 11:23:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:53 AI_Player.update()	update
2017-01-04 11:23:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:53 AI_Player.update()	Search took382ms
2017-01-04 11:23:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:53 AI_Player.update()		110,	1001,	111,	1110,	111,	1101,	11
2017-01-04 11:23:53 AI_Player.update()		111,	1110,	11,	1001,	110,	1001,	11
2017-01-04 11:23:53 AI_Player.update()		1110,	111,	1110,	111,	111,	110,	1011
2017-01-04 11:23:53 AI_Player.update()		1100,	11,	1010,	11,	11,	1100,	11
2017-01-04 11:23:53 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-04 11:23:53 AI_Player.update()		101,	11,	1010,	1010,	1001,	1010,	1010
2017-01-04 11:23:53 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1110,	1001
2017-01-04 11:23:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:53 AI_Player.update()	update
2017-01-04 11:23:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:23:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:53 AI_Player.update()	update
2017-01-04 11:23:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:54 AI_Player.update()	Search took108ms
2017-01-04 11:23:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:54 AI_Player.update()		110,	1110,	111,	1110,	111,	1101,	11
2017-01-04 11:23:54 AI_Player.update()		111,	111,	11,	1001,	110,	1001,	11
2017-01-04 11:23:54 AI_Player.update()		1110,	11,	1110,	111,	111,	110,	1011
2017-01-04 11:23:54 AI_Player.update()		1100,	101,	1010,	11,	11,	1100,	11
2017-01-04 11:23:54 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1110,	1011
2017-01-04 11:23:54 AI_Player.update()		101,	1001,	1010,	1010,	1001,	1010,	1010
2017-01-04 11:23:54 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1110,	1001
2017-01-04 11:23:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:23:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:54 AI_Player.update()	update
2017-01-04 11:23:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:23:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:54 AI_Player.update()	update
2017-01-04 11:23:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:54 AI_Player.update()	Search took192ms
2017-01-04 11:23:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:54 AI_Player.update()		110,	1110,	111,	1001,	111,	1101,	11
2017-01-04 11:23:54 AI_Player.update()		111,	111,	11,	111,	110,	1001,	11
2017-01-04 11:23:54 AI_Player.update()		1110,	11,	1110,	11,	111,	110,	1011
2017-01-04 11:23:54 AI_Player.update()		1100,	101,	1010,	1010,	11,	1100,	11
2017-01-04 11:23:54 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1110,	1011
2017-01-04 11:23:54 AI_Player.update()		101,	1001,	1010,	1011,	1001,	1010,	1010
2017-01-04 11:23:54 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1110,	1001
2017-01-04 11:23:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:23:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:54 AI_Player.update()	update
2017-01-04 11:23:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:23:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:54 AI_Player.update()	update
2017-01-04 11:23:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:54 AI_Player.update()	Search took500ms
2017-01-04 11:23:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:54 AI_Player.update()		110,	1110,	111,	111,	111,	1101,	11
2017-01-04 11:23:54 AI_Player.update()		111,	111,	11,	11,	110,	1001,	11
2017-01-04 11:23:54 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-04 11:23:54 AI_Player.update()		1100,	101,	1010,	1010,	11,	1100,	11
2017-01-04 11:23:54 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1110,	1011
2017-01-04 11:23:54 AI_Player.update()		101,	1001,	1010,	1110,	1001,	1010,	1010
2017-01-04 11:23:54 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:23:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:23:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:54 AI_Player.update()	update
2017-01-04 11:23:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:23:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:54 AI_Player.update()	update
2017-01-04 11:23:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:55 AI_Player.update()	Search took580ms
2017-01-04 11:23:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:55 AI_Player.update()		110,	111,	111,	111,	111,	1101,	11
2017-01-04 11:23:55 AI_Player.update()		111,	11,	11,	11,	110,	1001,	11
2017-01-04 11:23:55 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 11:23:55 AI_Player.update()		1100,	11,	1010,	1010,	11,	1100,	11
2017-01-04 11:23:55 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1110,	1011
2017-01-04 11:23:55 AI_Player.update()		101,	1001,	1010,	1110,	1001,	1010,	1010
2017-01-04 11:23:55 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:23:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:23:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:55 AI_Player.update()	update
2017-01-04 11:23:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:23:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:55 AI_Player.update()	update
2017-01-04 11:23:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:55 AI_Player.update()	Search took378ms
2017-01-04 11:23:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:55 AI_Player.update()		110,	111,	111,	11,	111,	1101,	11
2017-01-04 11:23:55 AI_Player.update()		111,	11,	11,	1010,	110,	1001,	11
2017-01-04 11:23:55 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 11:23:55 AI_Player.update()		1100,	11,	1010,	1011,	11,	1100,	11
2017-01-04 11:23:55 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1110,	1011
2017-01-04 11:23:55 AI_Player.update()		101,	1001,	1010,	1001,	1001,	1010,	1010
2017-01-04 11:23:55 AI_Player.update()		1100,	1110,	1101,	111,	1101,	1110,	1001
2017-01-04 11:23:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:55 AI_Player.update()	update
2017-01-04 11:23:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:55 AI_Player.update()	update
2017-01-04 11:23:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:55 AI_Player.update()	Search took223ms
2017-01-04 11:23:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:55 AI_Player.update()		110,	111,	111,	1010,	111,	1101,	11
2017-01-04 11:23:55 AI_Player.update()		111,	11,	11,	1010,	110,	1001,	11
2017-01-04 11:23:55 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-04 11:23:55 AI_Player.update()		1100,	11,	1010,	1110,	11,	1100,	11
2017-01-04 11:23:55 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-04 11:23:55 AI_Player.update()		101,	1001,	1010,	111,	1001,	1010,	1010
2017-01-04 11:23:55 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1110,	1001
2017-01-04 11:23:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:55 AI_Player.update()	update
2017-01-04 11:23:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:55 AI_Player.update()	update
2017-01-04 11:23:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:56 AI_Player.update()	Search took256ms
2017-01-04 11:23:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()		110,	11,	111,	1010,	111,	1101,	11
2017-01-04 11:23:56 AI_Player.update()		111,	101,	11,	1010,	110,	1001,	11
2017-01-04 11:23:56 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-04 11:23:56 AI_Player.update()		1100,	1001,	1010,	1110,	11,	1100,	11
2017-01-04 11:23:56 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-04 11:23:56 AI_Player.update()		101,	1110,	1010,	111,	1001,	1010,	1010
2017-01-04 11:23:56 AI_Player.update()		1100,	111,	1101,	11,	1101,	1110,	1001
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:23:56 AI_Player.update()	Player a has won!
2017-01-04 11:23:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:23:56 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:23:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:23:56 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:23:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:56 AI_Player.update()	Search took35ms
2017-01-04 11:23:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()		110,	1110,	111,	1100,	111,	1010,	11
2017-01-04 11:23:56 AI_Player.update()		11,	101,	1100,	1101,	1011,	1001,	110
2017-01-04 11:23:56 AI_Player.update()		1110,	1010,	1110,	1101,	111,	111,	1011
2017-01-04 11:23:56 AI_Player.update()		11,	1001,	110,	1010,	1001,	101,	111
2017-01-04 11:23:56 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-04 11:23:56 AI_Player.update()		101,	110,	1100,	110,	1010,	110,	110
2017-01-04 11:23:56 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1100,	1001
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:56 AI_Player.update()	Search took14ms
2017-01-04 11:23:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()		110,	1110,	111,	1100,	111,	1001,	11
2017-01-04 11:23:56 AI_Player.update()		11,	101,	1100,	1101,	1011,	111,	110
2017-01-04 11:23:56 AI_Player.update()		1110,	1010,	1110,	1101,	111,	101,	1011
2017-01-04 11:23:56 AI_Player.update()		11,	1001,	110,	1010,	1001,	111,	111
2017-01-04 11:23:56 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 11:23:56 AI_Player.update()		101,	110,	1100,	110,	1010,	1100,	110
2017-01-04 11:23:56 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:56 AI_Player.update()	Search took40ms
2017-01-04 11:23:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()		110,	1110,	111,	1100,	111,	1001,	11
2017-01-04 11:23:56 AI_Player.update()		101,	1100,	1101,	1011,	111,	110,	11
2017-01-04 11:23:56 AI_Player.update()		1110,	1010,	1110,	1101,	111,	101,	1011
2017-01-04 11:23:56 AI_Player.update()		11,	1001,	110,	1010,	1001,	111,	111
2017-01-04 11:23:56 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 11:23:56 AI_Player.update()		101,	110,	1100,	110,	1010,	1100,	110
2017-01-04 11:23:56 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:56 AI_Player.update()	Search took10ms
2017-01-04 11:23:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()		110,	1110,	111,	1100,	111,	110,	11
2017-01-04 11:23:56 AI_Player.update()		101,	1100,	1101,	1011,	111,	101,	11
2017-01-04 11:23:56 AI_Player.update()		1110,	1010,	1110,	1101,	111,	111,	1011
2017-01-04 11:23:56 AI_Player.update()		11,	1001,	110,	1010,	1001,	110,	111
2017-01-04 11:23:56 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 11:23:56 AI_Player.update()		101,	110,	1100,	110,	1010,	1010,	110
2017-01-04 11:23:56 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1001,	1001
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:56 AI_Player.update()	Search took164ms
2017-01-04 11:23:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()		110,	1110,	111,	1100,	111,	110,	11
2017-01-04 11:23:56 AI_Player.update()		1100,	1101,	1011,	111,	101,	11,	101
2017-01-04 11:23:56 AI_Player.update()		1110,	1010,	1110,	1101,	111,	111,	1011
2017-01-04 11:23:56 AI_Player.update()		11,	1001,	110,	1010,	1001,	110,	111
2017-01-04 11:23:56 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 11:23:56 AI_Player.update()		101,	110,	1100,	110,	1010,	1010,	110
2017-01-04 11:23:56 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1001,	1001
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:56 AI_Player.update()	Search took28ms
2017-01-04 11:23:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()		110,	1110,	111,	1100,	111,	11,	11
2017-01-04 11:23:56 AI_Player.update()		1100,	1101,	1011,	111,	101,	111,	101
2017-01-04 11:23:56 AI_Player.update()		1110,	1010,	1110,	1101,	111,	110,	1011
2017-01-04 11:23:56 AI_Player.update()		11,	1001,	110,	1010,	1001,	1100,	111
2017-01-04 11:23:56 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 11:23:56 AI_Player.update()		101,	110,	1100,	110,	1010,	1001,	110
2017-01-04 11:23:56 AI_Player.update()		1100,	11,	1101,	1101,	1101,	110,	1001
2017-01-04 11:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:56 AI_Player.update()	update
2017-01-04 11:23:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:57 AI_Player.update()	Search took598ms
2017-01-04 11:23:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:57 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-04 11:23:57 AI_Player.update()		1100,	1110,	1011,	111,	101,	111,	101
2017-01-04 11:23:57 AI_Player.update()		1110,	1101,	1110,	1101,	111,	110,	1011
2017-01-04 11:23:57 AI_Player.update()		11,	1010,	110,	1010,	1001,	1100,	111
2017-01-04 11:23:57 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 11:23:57 AI_Player.update()		101,	101,	1100,	110,	1010,	1001,	110
2017-01-04 11:23:57 AI_Player.update()		1100,	110,	1101,	1101,	1101,	110,	1001
2017-01-04 11:23:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:23:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:57 AI_Player.update()	update
2017-01-04 11:23:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:57 AI_Player.update()	update
2017-01-04 11:23:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:57 AI_Player.update()	Search took41ms
2017-01-04 11:23:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:57 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-04 11:23:57 AI_Player.update()		1100,	1110,	1011,	111,	101,	111,	101
2017-01-04 11:23:57 AI_Player.update()		1110,	1101,	1110,	1101,	111,	110,	1011
2017-01-04 11:23:57 AI_Player.update()		11,	1010,	110,	1010,	1001,	1100,	111
2017-01-04 11:23:57 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 11:23:57 AI_Player.update()		110,	101,	101,	1100,	110,	1010,	1001
2017-01-04 11:23:57 AI_Player.update()		1100,	110,	1101,	1101,	1101,	110,	1001
2017-01-04 11:23:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:57 AI_Player.update()	update
2017-01-04 11:23:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:57 AI_Player.update()	update
2017-01-04 11:23:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:57 AI_Player.update()	Search took591ms
2017-01-04 11:23:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:57 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-04 11:23:57 AI_Player.update()		1100,	1110,	1011,	111,	101,	11,	101
2017-01-04 11:23:57 AI_Player.update()		1110,	1101,	1110,	1101,	111,	111,	1011
2017-01-04 11:23:57 AI_Player.update()		11,	1010,	110,	1010,	1001,	110,	111
2017-01-04 11:23:57 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 11:23:57 AI_Player.update()		110,	101,	101,	1100,	110,	1010,	1001
2017-01-04 11:23:57 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:23:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:23:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:57 AI_Player.update()	update
2017-01-04 11:23:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:23:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:57 AI_Player.update()	update
2017-01-04 11:23:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:57 AI_Player.update()	Search took90ms
2017-01-04 11:23:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:57 AI_Player.update()		110,	110,	111,	1100,	111,	110,	11
2017-01-04 11:23:57 AI_Player.update()		1100,	11,	1011,	111,	101,	11,	101
2017-01-04 11:23:57 AI_Player.update()		1110,	1110,	1110,	1101,	111,	111,	1011
2017-01-04 11:23:57 AI_Player.update()		11,	1101,	110,	1010,	1001,	110,	111
2017-01-04 11:23:57 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 11:23:57 AI_Player.update()		110,	1001,	101,	1100,	110,	1010,	1001
2017-01-04 11:23:57 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:23:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:23:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:57 AI_Player.update()	update
2017-01-04 11:23:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:57 AI_Player.update()	update
2017-01-04 11:23:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:58 AI_Player.update()	Search took482ms
2017-01-04 11:23:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:58 AI_Player.update()		110,	110,	111,	1100,	111,	110,	11
2017-01-04 11:23:58 AI_Player.update()		1100,	11,	1011,	111,	101,	11,	101
2017-01-04 11:23:58 AI_Player.update()		1110,	1110,	1110,	1101,	111,	111,	1011
2017-01-04 11:23:58 AI_Player.update()		1101,	110,	1010,	1001,	110,	111,	11
2017-01-04 11:23:58 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 11:23:58 AI_Player.update()		110,	1001,	101,	1100,	110,	1010,	1001
2017-01-04 11:23:58 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:23:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:23:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:58 AI_Player.update()	update
2017-01-04 11:23:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:23:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:58 AI_Player.update()	update
2017-01-04 11:23:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:58 AI_Player.update()	Search took264ms
2017-01-04 11:23:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:58 AI_Player.update()		110,	110,	111,	1100,	111,	110,	11
2017-01-04 11:23:58 AI_Player.update()		1100,	11,	1011,	111,	101,	11,	101
2017-01-04 11:23:58 AI_Player.update()		1110,	1110,	1110,	1101,	111,	111,	1011
2017-01-04 11:23:58 AI_Player.update()		1101,	110,	1010,	1001,	110,	111,	11
2017-01-04 11:23:58 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 11:23:58 AI_Player.update()		1001,	110,	1001,	101,	1100,	110,	1010
2017-01-04 11:23:58 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:23:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:23:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:58 AI_Player.update()	update
2017-01-04 11:23:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:58 AI_Player.update()	update
2017-01-04 11:23:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:23:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:23:59 AI_Player.update()	Search took707ms
2017-01-04 11:23:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:59 AI_Player.update()		110,	110,	111,	111,	111,	110,	11
2017-01-04 11:23:59 AI_Player.update()		1100,	11,	1011,	1101,	101,	11,	101
2017-01-04 11:23:59 AI_Player.update()		1110,	1110,	1110,	1001,	111,	111,	1011
2017-01-04 11:23:59 AI_Player.update()		1101,	110,	1010,	11,	110,	111,	11
2017-01-04 11:23:59 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 11:23:59 AI_Player.update()		1001,	110,	1001,	1101,	1100,	110,	1010
2017-01-04 11:23:59 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:23:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:23:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:59 AI_Player.update()	update
2017-01-04 11:23:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:23:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:23:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:23:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:23:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:23:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:23:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:23:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:59 AI_Player.update()	update
2017-01-04 11:23:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:23:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:23:59 AI_Player.update()	Search took48ms
2017-01-04 11:23:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:23:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:59 AI_Player.update()		110,	110,	111,	111,	111,	11,	11
2017-01-04 11:23:59 AI_Player.update()		1100,	11,	1011,	1101,	101,	111,	101
2017-01-04 11:23:59 AI_Player.update()		1110,	1110,	1110,	1001,	111,	111,	1011
2017-01-04 11:23:59 AI_Player.update()		1101,	110,	1010,	11,	110,	1100,	11
2017-01-04 11:23:59 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-04 11:23:59 AI_Player.update()		1001,	110,	1001,	1101,	1100,	1010,	1010
2017-01-04 11:23:59 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-04 11:23:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:23:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:23:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:59 AI_Player.update()	update
2017-01-04 11:23:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:23:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:23:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:23:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:23:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:23:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:23:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:23:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:23:59 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:23:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:23:59 AI_Player.update()	update
2017-01-04 11:23:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:00 AI_Player.update()	Search took891ms
2017-01-04 11:24:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:00 AI_Player.update()		110,	11,	111,	111,	111,	11,	11
2017-01-04 11:24:00 AI_Player.update()		1100,	1110,	1011,	1101,	101,	111,	101
2017-01-04 11:24:00 AI_Player.update()		1110,	110,	1110,	1001,	111,	111,	1011
2017-01-04 11:24:00 AI_Player.update()		1101,	1010,	1010,	11,	110,	1100,	11
2017-01-04 11:24:00 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 11:24:00 AI_Player.update()		1001,	101,	1001,	1101,	1100,	1010,	1010
2017-01-04 11:24:00 AI_Player.update()		1100,	110,	1101,	1100,	1101,	110,	1001
2017-01-04 11:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:00 AI_Player.update()	update
2017-01-04 11:24:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:00 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:24:00 AI_Player.update()	Player a has won!
2017-01-04 11:24:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:00 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:24:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:00 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:24:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:00 AI_Player.update()	update
2017-01-04 11:24:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:00 AI_Player.update()	Search took465ms
2017-01-04 11:24:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:00 AI_Player.update()		110,	101,	111,	1011,	111,	1110,	11
2017-01-04 11:24:00 AI_Player.update()		1010,	1010,	1010,	1010,	1001,	1100,	1101
2017-01-04 11:24:00 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1011,	1011
2017-01-04 11:24:00 AI_Player.update()		1010,	1001,	111,	1011,	1001,	111,	110
2017-01-04 11:24:00 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:00 AI_Player.update()		1001,	101,	1100,	1010,	1011,	1101,	101
2017-01-04 11:24:00 AI_Player.update()		1100,	1101,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:00 AI_Player.update()	update
2017-01-04 11:24:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:00 AI_Player.update()	update
2017-01-04 11:24:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:00 AI_Player.update()	Search took78ms
2017-01-04 11:24:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:00 AI_Player.update()		110,	1101,	111,	1011,	111,	1110,	11
2017-01-04 11:24:00 AI_Player.update()		1010,	101,	1010,	1010,	1001,	1100,	1101
2017-01-04 11:24:00 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1011,	1011
2017-01-04 11:24:00 AI_Player.update()		1010,	1010,	111,	1011,	1001,	111,	110
2017-01-04 11:24:00 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:00 AI_Player.update()		1001,	1010,	1100,	1010,	1011,	1101,	101
2017-01-04 11:24:00 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:00 AI_Player.update()	update
2017-01-04 11:24:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:00 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:00 AI_Player.update()	update
2017-01-04 11:24:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:01 AI_Player.update()	Search took982ms
2017-01-04 11:24:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:01 AI_Player.update()		110,	1101,	111,	1011,	111,	1110,	11
2017-01-04 11:24:01 AI_Player.update()		1010,	101,	1010,	1010,	1001,	1100,	1101
2017-01-04 11:24:01 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1011,	1011
2017-01-04 11:24:01 AI_Player.update()		110,	1010,	1010,	111,	1011,	1001,	111
2017-01-04 11:24:01 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:01 AI_Player.update()		1001,	1010,	1100,	1010,	1011,	1101,	101
2017-01-04 11:24:01 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:24:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:01 AI_Player.update()	update
2017-01-04 11:24:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:01 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:01 AI_Player.update()	update
2017-01-04 11:24:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:02 AI_Player.update()	Search took84ms
2017-01-04 11:24:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:02 AI_Player.update()		110,	1101,	111,	1011,	111,	1110,	11
2017-01-04 11:24:02 AI_Player.update()		1101,	1010,	101,	1010,	1010,	1001,	1100
2017-01-04 11:24:02 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1011,	1011
2017-01-04 11:24:02 AI_Player.update()		110,	1010,	1010,	111,	1011,	1001,	111
2017-01-04 11:24:02 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:02 AI_Player.update()		1001,	1010,	1100,	1010,	1011,	1101,	101
2017-01-04 11:24:02 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:24:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:02 AI_Player.update()	update
2017-01-04 11:24:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:02 AI_Player.update()	update
2017-01-04 11:24:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:02 AI_Player.update()	Search took639ms
2017-01-04 11:24:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:02 AI_Player.update()		110,	1101,	111,	1010,	111,	1110,	11
2017-01-04 11:24:02 AI_Player.update()		1101,	1010,	101,	1010,	1010,	1001,	1100
2017-01-04 11:24:02 AI_Player.update()		1110,	1010,	1110,	111,	111,	1011,	1011
2017-01-04 11:24:02 AI_Player.update()		110,	1010,	1010,	101,	1011,	1001,	111
2017-01-04 11:24:02 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 11:24:02 AI_Player.update()		1001,	1010,	1100,	1011,	1011,	1101,	101
2017-01-04 11:24:02 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:24:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:02 AI_Player.update()	update
2017-01-04 11:24:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:24:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:02 AI_Player.update()	update
2017-01-04 11:24:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:02 AI_Player.update()	Search took125ms
2017-01-04 11:24:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:02 AI_Player.update()		110,	1101,	111,	1010,	111,	1110,	11
2017-01-04 11:24:02 AI_Player.update()		1010,	101,	1010,	1010,	1001,	1100,	1101
2017-01-04 11:24:02 AI_Player.update()		1110,	1010,	1110,	111,	111,	1011,	1011
2017-01-04 11:24:02 AI_Player.update()		110,	1010,	1010,	101,	1011,	1001,	111
2017-01-04 11:24:02 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 11:24:02 AI_Player.update()		1001,	1010,	1100,	1011,	1011,	1101,	101
2017-01-04 11:24:02 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:24:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:24:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:02 AI_Player.update()	update
2017-01-04 11:24:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:24:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:02 AI_Player.update()	update
2017-01-04 11:24:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:03 AI_Player.update()	Search took787ms
2017-01-04 11:24:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:03 AI_Player.update()		110,	1101,	111,	1010,	111,	1100,	11
2017-01-04 11:24:03 AI_Player.update()		1010,	101,	1010,	1010,	1001,	1011,	1101
2017-01-04 11:24:03 AI_Player.update()		1110,	1010,	1110,	111,	111,	1001,	1011
2017-01-04 11:24:03 AI_Player.update()		110,	1010,	1010,	101,	1011,	101,	111
2017-01-04 11:24:03 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:24:03 AI_Player.update()		1001,	1010,	1100,	1011,	1011,	1010,	101
2017-01-04 11:24:03 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1110,	1001
2017-01-04 11:24:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:03 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:24:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:03 AI_Player.update()	update
2017-01-04 11:24:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:03 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:24:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:03 AI_Player.update()	update
2017-01-04 11:24:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:04 AI_Player.update()	Search took781ms
2017-01-04 11:24:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:04 AI_Player.update()		110,	1101,	111,	1010,	111,	1100,	11
2017-01-04 11:24:04 AI_Player.update()		1010,	101,	1010,	111,	1001,	1011,	1101
2017-01-04 11:24:04 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 11:24:04 AI_Player.update()		110,	1010,	1010,	1010,	1011,	101,	111
2017-01-04 11:24:04 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1101,	1011
2017-01-04 11:24:04 AI_Player.update()		1001,	1010,	1100,	1011,	1011,	1010,	101
2017-01-04 11:24:04 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1110,	1001
2017-01-04 11:24:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:04 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:24:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:04 AI_Player.update()	update
2017-01-04 11:24:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:04 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:24:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:04 AI_Player.update()	update
2017-01-04 11:24:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:05 AI_Player.update()	Search took976ms
2017-01-04 11:24:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:05 AI_Player.update()		110,	1101,	111,	1010,	111,	1100,	11
2017-01-04 11:24:05 AI_Player.update()		1010,	101,	1010,	111,	1001,	1011,	1101
2017-01-04 11:24:05 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 11:24:05 AI_Player.update()		1010,	1010,	1010,	1011,	101,	111,	110
2017-01-04 11:24:05 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1101,	1011
2017-01-04 11:24:05 AI_Player.update()		1001,	1010,	1100,	1011,	1011,	1010,	101
2017-01-04 11:24:05 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1110,	1001
2017-01-04 11:24:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:05 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:24:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:05 AI_Player.update()	update
2017-01-04 11:24:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:05 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:24:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:05 AI_Player.update()	update
2017-01-04 11:24:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:06 AI_Player.update()	Search took1132ms
2017-01-04 11:24:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:06 AI_Player.update()		110,	1101,	111,	111,	111,	1100,	11
2017-01-04 11:24:06 AI_Player.update()		1010,	101,	1010,	101,	1001,	1011,	1101
2017-01-04 11:24:06 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-04 11:24:06 AI_Player.update()		1010,	1010,	1010,	1011,	101,	111,	110
2017-01-04 11:24:06 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1101,	1011
2017-01-04 11:24:06 AI_Player.update()		1001,	1010,	1100,	1010,	1011,	1010,	101
2017-01-04 11:24:06 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1110,	1001
2017-01-04 11:24:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:06 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:24:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:06 AI_Player.update()	update
2017-01-04 11:24:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:06 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:24:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:06 AI_Player.update()	update
2017-01-04 11:24:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:07 AI_Player.update()	Search took808ms
2017-01-04 11:24:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:07 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-04 11:24:07 AI_Player.update()		1010,	101,	1010,	1011,	1001,	1011,	1101
2017-01-04 11:24:07 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-04 11:24:07 AI_Player.update()		1010,	1010,	1010,	1011,	101,	111,	110
2017-01-04 11:24:07 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:24:07 AI_Player.update()		1001,	1010,	1100,	1010,	1011,	1010,	101
2017-01-04 11:24:07 AI_Player.update()		1100,	101,	1101,	111,	1101,	1110,	1001
2017-01-04 11:24:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:07 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:24:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:07 AI_Player.update()	update
2017-01-04 11:24:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:07 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:24:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:07 AI_Player.update()	update
2017-01-04 11:24:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:08 AI_Player.update()	Search took921ms
2017-01-04 11:24:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:08 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-04 11:24:08 AI_Player.update()		1010,	101,	1010,	1011,	1001,	1011,	1101
2017-01-04 11:24:08 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-04 11:24:08 AI_Player.update()		1010,	1010,	1011,	101,	111,	110,	1010
2017-01-04 11:24:08 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:24:08 AI_Player.update()		1001,	1010,	1100,	1010,	1011,	1010,	101
2017-01-04 11:24:08 AI_Player.update()		1100,	101,	1101,	111,	1101,	1110,	1001
2017-01-04 11:24:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:08 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:24:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:08 AI_Player.update()	update
2017-01-04 11:24:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:08 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:08 AI_Player.update()	update
2017-01-04 11:24:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:09 AI_Player.update()	Search took985ms
2017-01-04 11:24:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:09 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 11:24:09 AI_Player.update()		1010,	1010,	1010,	1011,	1001,	1011,	1101
2017-01-04 11:24:09 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-04 11:24:09 AI_Player.update()		1010,	1001,	1011,	101,	111,	110,	1010
2017-01-04 11:24:09 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:24:09 AI_Player.update()		1001,	101,	1100,	1010,	1011,	1010,	101
2017-01-04 11:24:09 AI_Player.update()		1100,	1101,	1101,	111,	1101,	1110,	1001
2017-01-04 11:24:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:09 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:09 AI_Player.update()	update
2017-01-04 11:24:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:09 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:09 AI_Player.update()	update
2017-01-04 11:24:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:09 AI_Player.update()	Search took237ms
2017-01-04 11:24:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:09 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 11:24:09 AI_Player.update()		1010,	1010,	1010,	1011,	1001,	1011,	1101
2017-01-04 11:24:09 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-04 11:24:09 AI_Player.update()		1010,	1010,	1001,	1011,	101,	111,	110
2017-01-04 11:24:09 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:24:09 AI_Player.update()		1001,	101,	1100,	1010,	1011,	1010,	101
2017-01-04 11:24:09 AI_Player.update()		1100,	1101,	1101,	111,	1101,	1110,	1001
2017-01-04 11:24:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:09 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:09 AI_Player.update()	update
2017-01-04 11:24:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:09 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:09 AI_Player.update()	update
2017-01-04 11:24:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:10 AI_Player.update()	Search took638ms
2017-01-04 11:24:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:10 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 11:24:10 AI_Player.update()		1010,	1010,	1011,	1001,	1011,	1101,	1010
2017-01-04 11:24:10 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-04 11:24:10 AI_Player.update()		1010,	1010,	1001,	1011,	101,	111,	110
2017-01-04 11:24:10 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:24:10 AI_Player.update()		1001,	101,	1100,	1010,	1011,	1010,	101
2017-01-04 11:24:10 AI_Player.update()		1100,	1101,	1101,	111,	1101,	1110,	1001
2017-01-04 11:24:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:10 AI_Player.update()	update
2017-01-04 11:24:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:24:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:10 AI_Player.update()	update
2017-01-04 11:24:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:10 AI_Player.update()	Search took267ms
2017-01-04 11:24:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:10 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-04 11:24:10 AI_Player.update()		1010,	1010,	1011,	1001,	1011,	1001,	1010
2017-01-04 11:24:10 AI_Player.update()		1110,	1010,	1110,	1011,	111,	111,	1011
2017-01-04 11:24:10 AI_Player.update()		1010,	1010,	1001,	1011,	101,	1101,	110
2017-01-04 11:24:10 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:24:10 AI_Player.update()		1001,	101,	1100,	1010,	1011,	1110,	101
2017-01-04 11:24:10 AI_Player.update()		1100,	1101,	1101,	111,	1101,	1100,	1001
2017-01-04 11:24:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:24:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:10 AI_Player.update()	update
2017-01-04 11:24:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:10 AI_Player.update()	update
2017-01-04 11:24:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:11 AI_Player.update()	Search took985ms
2017-01-04 11:24:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:11 AI_Player.update()		110,	1101,	111,	101,	111,	1101,	11
2017-01-04 11:24:11 AI_Player.update()		1010,	101,	1011,	1001,	1011,	1001,	1010
2017-01-04 11:24:11 AI_Player.update()		1110,	1010,	1110,	1011,	111,	111,	1011
2017-01-04 11:24:11 AI_Player.update()		1010,	1010,	1001,	1011,	101,	1101,	110
2017-01-04 11:24:11 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:24:11 AI_Player.update()		1001,	1010,	1100,	1010,	1011,	1110,	101
2017-01-04 11:24:11 AI_Player.update()		1100,	101,	1101,	111,	1101,	1100,	1001
2017-01-04 11:24:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:11 AI_Player.update()	update
2017-01-04 11:24:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:11 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:24:11 AI_Player.update()	Player a has won!
2017-01-04 11:24:11 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:11 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:24:11 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:11 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:24:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:11 AI_Player.update()	update
2017-01-04 11:24:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:11 AI_Player.update()	Search took99ms
2017-01-04 11:24:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:11 AI_Player.update()		110,	1010,	111,	1100,	111,	111,	11
2017-01-04 11:24:11 AI_Player.update()		1110,	1010,	1010,	101,	111,	1010,	1010
2017-01-04 11:24:11 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:11 AI_Player.update()		1001,	101,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:11 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:11 AI_Player.update()		1010,	1100,	1101,	110,	1010,	11,	101
2017-01-04 11:24:11 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:11 AI_Player.update()	update
2017-01-04 11:24:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:11 AI_Player.update()	update
2017-01-04 11:24:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:12 AI_Player.update()	Search took589ms
2017-01-04 11:24:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:12 AI_Player.update()		110,	1010,	111,	1100,	111,	111,	11
2017-01-04 11:24:12 AI_Player.update()		1110,	1010,	1010,	101,	111,	1010,	1010
2017-01-04 11:24:12 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:12 AI_Player.update()		1001,	101,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:12 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:12 AI_Player.update()		1010,	1101,	1101,	110,	1010,	11,	101
2017-01-04 11:24:12 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:12 AI_Player.update()	update
2017-01-04 11:24:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:12 AI_Player.update()	update
2017-01-04 11:24:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:12 AI_Player.update()	Search took167ms
2017-01-04 11:24:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:12 AI_Player.update()		110,	1010,	111,	1100,	111,	111,	11
2017-01-04 11:24:12 AI_Player.update()		1010,	1010,	101,	111,	1010,	1010,	1110
2017-01-04 11:24:12 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:12 AI_Player.update()		1001,	101,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:12 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:12 AI_Player.update()		1010,	1101,	1101,	110,	1010,	11,	101
2017-01-04 11:24:12 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:12 AI_Player.update()	update
2017-01-04 11:24:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:12 AI_Player.update()	update
2017-01-04 11:24:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:12 AI_Player.update()	Search took495ms
2017-01-04 11:24:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:12 AI_Player.update()		110,	1010,	111,	1100,	111,	111,	11
2017-01-04 11:24:12 AI_Player.update()		1010,	101,	101,	111,	1010,	1010,	1110
2017-01-04 11:24:12 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:12 AI_Player.update()		1001,	1100,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:12 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:12 AI_Player.update()		1010,	1010,	1101,	110,	1010,	11,	101
2017-01-04 11:24:12 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:12 AI_Player.update()	update
2017-01-04 11:24:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:12 AI_Player.update()	update
2017-01-04 11:24:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:13 AI_Player.update()	Search took492ms
2017-01-04 11:24:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:13 AI_Player.update()		110,	1010,	111,	1100,	111,	111,	11
2017-01-04 11:24:13 AI_Player.update()		101,	101,	111,	1010,	1010,	1110,	1010
2017-01-04 11:24:13 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:13 AI_Player.update()		1001,	1100,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:13 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:13 AI_Player.update()		1010,	1010,	1101,	110,	1010,	11,	101
2017-01-04 11:24:13 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:13 AI_Player.update()	update
2017-01-04 11:24:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:13 AI_Player.update()	update
2017-01-04 11:24:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:13 AI_Player.update()	Search took415ms
2017-01-04 11:24:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:13 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:24:13 AI_Player.update()		101,	101,	111,	1010,	1010,	1110,	1010
2017-01-04 11:24:13 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:13 AI_Player.update()		1001,	1101,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:13 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:13 AI_Player.update()		1010,	1010,	1101,	110,	1010,	11,	101
2017-01-04 11:24:13 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:13 AI_Player.update()	update
2017-01-04 11:24:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:13 AI_Player.update()	update
2017-01-04 11:24:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:14 AI_Player.update()	Search took554ms
2017-01-04 11:24:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:24:14 AI_Player.update()		101,	111,	1010,	1010,	1110,	1010,	101
2017-01-04 11:24:14 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:14 AI_Player.update()		1001,	1101,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:14 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:14 AI_Player.update()		1010,	1010,	1101,	110,	1010,	11,	101
2017-01-04 11:24:14 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()	update
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()	update
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:14 AI_Player.update()	Search took151ms
2017-01-04 11:24:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:24:14 AI_Player.update()		101,	101,	111,	1010,	1010,	1110,	1010
2017-01-04 11:24:14 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:14 AI_Player.update()		1001,	1101,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:14 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:14 AI_Player.update()		1010,	1010,	1101,	110,	1010,	11,	101
2017-01-04 11:24:14 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()	update
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()	update
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:14 AI_Player.update()	Search took130ms
2017-01-04 11:24:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:24:14 AI_Player.update()		101,	111,	1010,	1010,	1110,	1010,	101
2017-01-04 11:24:14 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:14 AI_Player.update()		1001,	1101,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:14 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:14 AI_Player.update()		1010,	1010,	1101,	110,	1010,	11,	101
2017-01-04 11:24:14 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()	update
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()	update
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:14 AI_Player.update()	Search took162ms
2017-01-04 11:24:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:24:14 AI_Player.update()		101,	101,	111,	1010,	1010,	1110,	1010
2017-01-04 11:24:14 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:14 AI_Player.update()		1001,	1101,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:14 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:14 AI_Player.update()		1010,	1010,	1101,	110,	1010,	11,	101
2017-01-04 11:24:14 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()	update
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()	update
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:14 AI_Player.update()	Search took214ms
2017-01-04 11:24:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:24:14 AI_Player.update()		101,	1100,	111,	1010,	1010,	1110,	1010
2017-01-04 11:24:14 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:14 AI_Player.update()		1001,	1010,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:14 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:14 AI_Player.update()		1010,	1010,	1101,	110,	1010,	11,	101
2017-01-04 11:24:14 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()	update
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:14 AI_Player.update()	update
2017-01-04 11:24:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:15 AI_Player.update()	Search took497ms
2017-01-04 11:24:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:15 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:24:15 AI_Player.update()		1010,	101,	1100,	111,	1010,	1010,	1110
2017-01-04 11:24:15 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:15 AI_Player.update()		1001,	1010,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:15 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:15 AI_Player.update()		1010,	1010,	1101,	110,	1010,	11,	101
2017-01-04 11:24:15 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:15 AI_Player.update()	update
2017-01-04 11:24:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:15 AI_Player.update()	update
2017-01-04 11:24:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:15 AI_Player.update()	Search took241ms
2017-01-04 11:24:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:15 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:24:15 AI_Player.update()		1010,	101,	1100,	111,	1010,	1010,	1110
2017-01-04 11:24:15 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:15 AI_Player.update()		1001,	1010,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:15 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:15 AI_Player.update()		1010,	1101,	110,	1010,	11,	101,	1010
2017-01-04 11:24:15 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:15 AI_Player.update()	update
2017-01-04 11:24:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:24:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:15 AI_Player.update()	update
2017-01-04 11:24:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:16 AI_Player.update()	Search took817ms
2017-01-04 11:24:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:16 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:24:16 AI_Player.update()		1010,	101,	1100,	111,	1010,	1010,	1110
2017-01-04 11:24:16 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-04 11:24:16 AI_Player.update()		1001,	1010,	1010,	1011,	101,	1101,	1100
2017-01-04 11:24:16 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:16 AI_Player.update()		1010,	1010,	1101,	110,	1010,	11,	101
2017-01-04 11:24:16 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:24:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:16 AI_Player.update()	update
2017-01-04 11:24:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:16 AI_Player.update()	update
2017-01-04 11:24:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:16 AI_Player.update()	Search took66ms
2017-01-04 11:24:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:16 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 11:24:16 AI_Player.update()		1010,	101,	1100,	111,	1010,	101,	1110
2017-01-04 11:24:16 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1101,	1011
2017-01-04 11:24:16 AI_Player.update()		1001,	1010,	1010,	1011,	101,	1010,	1100
2017-01-04 11:24:16 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 11:24:16 AI_Player.update()		1010,	1010,	1101,	110,	1010,	1010,	101
2017-01-04 11:24:16 AI_Player.update()		1100,	101,	1101,	1110,	1101,	111,	1001
2017-01-04 11:24:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:16 AI_Player.update()	update
2017-01-04 11:24:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:16 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:16 AI_Player.update()	update
2017-01-04 11:24:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:17 AI_Player.update()	Search took906ms
2017-01-04 11:24:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:17 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 11:24:17 AI_Player.update()		1010,	101,	1100,	111,	1010,	101,	1110
2017-01-04 11:24:17 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1101,	1011
2017-01-04 11:24:17 AI_Player.update()		1010,	1010,	1011,	101,	1010,	1100,	1001
2017-01-04 11:24:17 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 11:24:17 AI_Player.update()		1010,	1010,	1101,	110,	1010,	1010,	101
2017-01-04 11:24:17 AI_Player.update()		1100,	101,	1101,	1110,	1101,	111,	1001
2017-01-04 11:24:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:17 AI_Player.update()	update
2017-01-04 11:24:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:24:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:17 AI_Player.update()	update
2017-01-04 11:24:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:17 AI_Player.update()	Search took338ms
2017-01-04 11:24:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:17 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 11:24:17 AI_Player.update()		1010,	101,	1100,	111,	1010,	101,	1110
2017-01-04 11:24:17 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1101,	1011
2017-01-04 11:24:17 AI_Player.update()		1010,	1010,	1011,	101,	1010,	1100,	1001
2017-01-04 11:24:17 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 11:24:17 AI_Player.update()		1010,	1101,	110,	1010,	1010,	101,	1010
2017-01-04 11:24:17 AI_Player.update()		1100,	101,	1101,	1110,	1101,	111,	1001
2017-01-04 11:24:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:24:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:17 AI_Player.update()	update
2017-01-04 11:24:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:17 AI_Player.update()	update
2017-01-04 11:24:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:19 AI_Player.update()	Search took1669ms
2017-01-04 11:24:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:19 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 11:24:19 AI_Player.update()		1010,	101,	1100,	111,	1010,	1101,	1110
2017-01-04 11:24:19 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1100,	1011
2017-01-04 11:24:19 AI_Player.update()		1010,	1010,	1011,	101,	1010,	11,	1001
2017-01-04 11:24:19 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:19 AI_Player.update()		1010,	1101,	110,	1010,	1010,	111,	1010
2017-01-04 11:24:19 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:19 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:19 AI_Player.update()	update
2017-01-04 11:24:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:19 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:24:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:19 AI_Player.update()	update
2017-01-04 11:24:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:20 AI_Player.update()	Search took1363ms
2017-01-04 11:24:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:20 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 11:24:20 AI_Player.update()		101,	1100,	111,	1010,	1101,	1110,	1010
2017-01-04 11:24:20 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1100,	1011
2017-01-04 11:24:20 AI_Player.update()		1010,	1010,	1011,	101,	1010,	11,	1001
2017-01-04 11:24:20 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:20 AI_Player.update()		1010,	1101,	110,	1010,	1010,	111,	1010
2017-01-04 11:24:20 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:24:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:20 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:24:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:20 AI_Player.update()	update
2017-01-04 11:24:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:20 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:20 AI_Player.update()	update
2017-01-04 11:24:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:21 AI_Player.update()	Search took900ms
2017-01-04 11:24:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:21 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 11:24:21 AI_Player.update()		101,	1100,	111,	1010,	1101,	101,	1010
2017-01-04 11:24:21 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1110,	1011
2017-01-04 11:24:21 AI_Player.update()		1010,	1010,	1011,	101,	1010,	1100,	1001
2017-01-04 11:24:21 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 11:24:21 AI_Player.update()		1010,	1101,	110,	1010,	1010,	101,	1010
2017-01-04 11:24:21 AI_Player.update()		1100,	101,	1101,	1110,	1101,	111,	1001
2017-01-04 11:24:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:21 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:21 AI_Player.update()	update
2017-01-04 11:24:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:21 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:21 AI_Player.update()	update
2017-01-04 11:24:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:23 AI_Player.update()	Search took1334ms
2017-01-04 11:24:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 11:24:23 AI_Player.update()		1100,	111,	1010,	1101,	101,	1010,	101
2017-01-04 11:24:23 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1110,	1011
2017-01-04 11:24:23 AI_Player.update()		1010,	1010,	1011,	101,	1010,	1100,	1001
2017-01-04 11:24:23 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 11:24:23 AI_Player.update()		1010,	1101,	110,	1010,	1010,	101,	1010
2017-01-04 11:24:23 AI_Player.update()		1100,	101,	1101,	1110,	1101,	111,	1001
2017-01-04 11:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()	update
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:23 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:24:23 AI_Player.update()	Player a has won!
2017-01-04 11:24:23 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:23 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:24:23 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:23 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:24:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()	update
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:23 AI_Player.update()	Search took72ms
2017-01-04 11:24:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-04 11:24:23 AI_Player.update()		1100,	101,	101,	11,	1010,	1100,	11
2017-01-04 11:24:23 AI_Player.update()		1110,	11,	1110,	110,	111,	1101,	1011
2017-01-04 11:24:23 AI_Player.update()		1001,	1010,	101,	101,	1001,	1001,	1011
2017-01-04 11:24:23 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:23 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	110
2017-01-04 11:24:23 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()	update
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()	update
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:23 AI_Player.update()	Search took142ms
2017-01-04 11:24:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-04 11:24:23 AI_Player.update()		101,	101,	11,	1010,	1100,	11,	1100
2017-01-04 11:24:23 AI_Player.update()		1110,	11,	1110,	110,	111,	1101,	1011
2017-01-04 11:24:23 AI_Player.update()		1001,	1010,	101,	101,	1001,	1001,	1011
2017-01-04 11:24:23 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:23 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	110
2017-01-04 11:24:23 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()	update
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()	update
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:23 AI_Player.update()	Search took473ms
2017-01-04 11:24:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-04 11:24:23 AI_Player.update()		101,	101,	11,	1010,	1100,	11,	1100
2017-01-04 11:24:23 AI_Player.update()		1110,	11,	1110,	110,	111,	1101,	1011
2017-01-04 11:24:23 AI_Player.update()		1010,	101,	101,	1001,	1001,	1011,	1001
2017-01-04 11:24:23 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:23 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	110
2017-01-04 11:24:23 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()	update
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()	update
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:23 AI_Player.update()	Search took163ms
2017-01-04 11:24:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()		110,	101,	111,	1110,	111,	11,	11
2017-01-04 11:24:23 AI_Player.update()		101,	101,	11,	1010,	1100,	1101,	1100
2017-01-04 11:24:23 AI_Player.update()		1110,	11,	1110,	110,	111,	1011,	1011
2017-01-04 11:24:23 AI_Player.update()		1010,	101,	101,	1001,	1001,	1001,	1001
2017-01-04 11:24:23 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:24:23 AI_Player.update()		101,	110,	1010,	1010,	101,	1001,	110
2017-01-04 11:24:23 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 11:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()	update
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:23 AI_Player.update()	update
2017-01-04 11:24:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:24 AI_Player.update()	Search took308ms
2017-01-04 11:24:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:24 AI_Player.update()		110,	101,	111,	1110,	111,	11,	11
2017-01-04 11:24:24 AI_Player.update()		101,	101,	11,	1010,	1100,	1101,	1100
2017-01-04 11:24:24 AI_Player.update()		1110,	11,	1110,	110,	111,	1011,	1011
2017-01-04 11:24:24 AI_Player.update()		1001,	1010,	101,	101,	1001,	1001,	1001
2017-01-04 11:24:24 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:24:24 AI_Player.update()		101,	110,	1010,	1010,	101,	1001,	110
2017-01-04 11:24:24 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 11:24:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:24 AI_Player.update()	update
2017-01-04 11:24:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:24 AI_Player.update()	update
2017-01-04 11:24:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:24 AI_Player.update()	Search took230ms
2017-01-04 11:24:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:24 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-04 11:24:24 AI_Player.update()		101,	101,	11,	1010,	1100,	11,	1100
2017-01-04 11:24:24 AI_Player.update()		1110,	11,	1110,	110,	111,	1101,	1011
2017-01-04 11:24:24 AI_Player.update()		1001,	1010,	101,	101,	1001,	1011,	1001
2017-01-04 11:24:24 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:24 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	110
2017-01-04 11:24:24 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:24:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:24 AI_Player.update()	update
2017-01-04 11:24:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:24 AI_Player.update()	update
2017-01-04 11:24:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:25 AI_Player.update()	Search took470ms
2017-01-04 11:24:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:25 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-04 11:24:25 AI_Player.update()		101,	101,	11,	1010,	1100,	11,	1100
2017-01-04 11:24:25 AI_Player.update()		1110,	11,	1110,	110,	111,	1101,	1011
2017-01-04 11:24:25 AI_Player.update()		1010,	101,	101,	1001,	1011,	1001,	1001
2017-01-04 11:24:25 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:25 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	110
2017-01-04 11:24:25 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:25 AI_Player.update()	update
2017-01-04 11:24:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:25 AI_Player.update()	update
2017-01-04 11:24:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:25 AI_Player.update()	Search took147ms
2017-01-04 11:24:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:25 AI_Player.update()		110,	101,	111,	1110,	111,	11,	11
2017-01-04 11:24:25 AI_Player.update()		101,	101,	11,	1010,	1100,	1101,	1100
2017-01-04 11:24:25 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-04 11:24:25 AI_Player.update()		1010,	101,	101,	1001,	1011,	1001,	1001
2017-01-04 11:24:25 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:24:25 AI_Player.update()		101,	110,	1010,	1010,	101,	1001,	110
2017-01-04 11:24:25 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 11:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:25 AI_Player.update()	update
2017-01-04 11:24:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:25 AI_Player.update()	update
2017-01-04 11:24:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:25 AI_Player.update()	Search took317ms
2017-01-04 11:24:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:25 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-04 11:24:25 AI_Player.update()		101,	101,	11,	1010,	1100,	11,	1100
2017-01-04 11:24:25 AI_Player.update()		1110,	11,	1110,	110,	111,	1101,	1011
2017-01-04 11:24:25 AI_Player.update()		1010,	101,	101,	1001,	1011,	1001,	1001
2017-01-04 11:24:25 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:25 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	110
2017-01-04 11:24:25 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:25 AI_Player.update()	update
2017-01-04 11:24:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:25 AI_Player.update()	update
2017-01-04 11:24:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:25 AI_Player.update()	Search took371ms
2017-01-04 11:24:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:25 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 11:24:25 AI_Player.update()		101,	101,	11,	1010,	1100,	11,	1100
2017-01-04 11:24:25 AI_Player.update()		1110,	101,	1110,	110,	111,	1101,	1011
2017-01-04 11:24:25 AI_Player.update()		1010,	11,	101,	1001,	1011,	1001,	1001
2017-01-04 11:24:25 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:25 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	110
2017-01-04 11:24:25 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:25 AI_Player.update()	update
2017-01-04 11:24:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:25 AI_Player.update()	update
2017-01-04 11:24:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:26 AI_Player.update()	Search took552ms
2017-01-04 11:24:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:26 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-04 11:24:26 AI_Player.update()		101,	101,	11,	1010,	1100,	11,	1100
2017-01-04 11:24:26 AI_Player.update()		1110,	11,	1110,	110,	111,	1101,	1011
2017-01-04 11:24:26 AI_Player.update()		1010,	101,	101,	1001,	1011,	1001,	1001
2017-01-04 11:24:26 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:26 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	110
2017-01-04 11:24:26 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:24:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:26 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:26 AI_Player.update()	update
2017-01-04 11:24:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:26 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:26 AI_Player.update()	update
2017-01-04 11:24:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:26 AI_Player.update()	Search took82ms
2017-01-04 11:24:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:26 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 11:24:26 AI_Player.update()		101,	101,	11,	1010,	1100,	11,	1100
2017-01-04 11:24:26 AI_Player.update()		1110,	101,	1110,	110,	111,	1101,	1011
2017-01-04 11:24:26 AI_Player.update()		1010,	11,	101,	1001,	1011,	1001,	1001
2017-01-04 11:24:26 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:26 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	110
2017-01-04 11:24:26 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:24:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:26 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:26 AI_Player.update()	update
2017-01-04 11:24:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:26 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:26 AI_Player.update()	update
2017-01-04 11:24:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:27 AI_Player.update()	Search took540ms
2017-01-04 11:24:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:27 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 11:24:27 AI_Player.update()		101,	11,	1010,	1100,	11,	1100,	101
2017-01-04 11:24:27 AI_Player.update()		1110,	101,	1110,	110,	111,	1101,	1011
2017-01-04 11:24:27 AI_Player.update()		1010,	11,	101,	1001,	1011,	1001,	1001
2017-01-04 11:24:27 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:27 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	110
2017-01-04 11:24:27 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:24:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:27 AI_Player.update()	update
2017-01-04 11:24:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:27 AI_Player.update()	update
2017-01-04 11:24:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:27 AI_Player.update()	Search took237ms
2017-01-04 11:24:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:27 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 11:24:27 AI_Player.update()		101,	11,	1010,	1110,	11,	1100,	101
2017-01-04 11:24:27 AI_Player.update()		1110,	101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:24:27 AI_Player.update()		1010,	11,	101,	110,	1011,	1001,	1001
2017-01-04 11:24:27 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:27 AI_Player.update()		101,	110,	1010,	1001,	101,	101,	110
2017-01-04 11:24:27 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:24:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:27 AI_Player.update()	update
2017-01-04 11:24:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:27 AI_Player.update()	update
2017-01-04 11:24:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:27 AI_Player.update()	Search took154ms
2017-01-04 11:24:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:27 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 11:24:27 AI_Player.update()		101,	11,	1010,	1110,	11,	1100,	101
2017-01-04 11:24:27 AI_Player.update()		1110,	101,	1110,	1110,	111,	1101,	1011
2017-01-04 11:24:27 AI_Player.update()		1010,	11,	101,	1100,	1011,	1001,	1001
2017-01-04 11:24:27 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-04 11:24:27 AI_Player.update()		101,	110,	1010,	1001,	101,	101,	110
2017-01-04 11:24:27 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:24:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:27 AI_Player.update()	update
2017-01-04 11:24:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:27 AI_Player.update()	update
2017-01-04 11:24:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:28 AI_Player.update()	Search took570ms
2017-01-04 11:24:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:28 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 11:24:28 AI_Player.update()		101,	11,	1010,	1110,	11,	1100,	101
2017-01-04 11:24:28 AI_Player.update()		1110,	101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:24:28 AI_Player.update()		1010,	11,	101,	110,	1011,	1001,	1001
2017-01-04 11:24:28 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:28 AI_Player.update()		101,	110,	1010,	1001,	101,	101,	110
2017-01-04 11:24:28 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:24:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:28 AI_Player.update()	update
2017-01-04 11:24:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:28 AI_Player.update()	update
2017-01-04 11:24:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:28 AI_Player.update()	Search took184ms
2017-01-04 11:24:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:28 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 11:24:28 AI_Player.update()		101,	11,	1010,	1110,	11,	1100,	101
2017-01-04 11:24:28 AI_Player.update()		1110,	101,	1110,	1110,	111,	1101,	1011
2017-01-04 11:24:28 AI_Player.update()		1010,	11,	101,	1100,	1011,	1001,	1001
2017-01-04 11:24:28 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-04 11:24:28 AI_Player.update()		101,	110,	1010,	1001,	101,	101,	110
2017-01-04 11:24:28 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:24:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:28 AI_Player.update()	update
2017-01-04 11:24:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:28 AI_Player.update()	update
2017-01-04 11:24:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:28 AI_Player.update()	Search took573ms
2017-01-04 11:24:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:28 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 11:24:28 AI_Player.update()		101,	11,	1010,	1110,	11,	1100,	101
2017-01-04 11:24:28 AI_Player.update()		1110,	101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:24:28 AI_Player.update()		1010,	11,	101,	110,	1011,	1001,	1001
2017-01-04 11:24:28 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:28 AI_Player.update()		101,	110,	1010,	1001,	101,	101,	110
2017-01-04 11:24:28 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:24:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:28 AI_Player.update()	update
2017-01-04 11:24:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:28 AI_Player.update()	update
2017-01-04 11:24:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:28 AI_Player.update()	Search took172ms
2017-01-04 11:24:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:28 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 11:24:28 AI_Player.update()		11,	1010,	1110,	11,	1100,	101,	101
2017-01-04 11:24:28 AI_Player.update()		1110,	101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:24:28 AI_Player.update()		1010,	11,	101,	110,	1011,	1001,	1001
2017-01-04 11:24:28 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:28 AI_Player.update()		101,	110,	1010,	1001,	101,	101,	110
2017-01-04 11:24:28 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:24:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:28 AI_Player.update()	update
2017-01-04 11:24:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:28 AI_Player.update()	update
2017-01-04 11:24:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:29 AI_Player.update()	Search took319ms
2017-01-04 11:24:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:29 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 11:24:29 AI_Player.update()		11,	1010,	1110,	1100,	1100,	101,	101
2017-01-04 11:24:29 AI_Player.update()		1110,	101,	1110,	110,	111,	1101,	1011
2017-01-04 11:24:29 AI_Player.update()		1010,	11,	101,	1001,	1011,	1001,	1001
2017-01-04 11:24:29 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:29 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	110
2017-01-04 11:24:29 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:29 AI_Player.update()	update
2017-01-04 11:24:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:24:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:29 AI_Player.update()	update
2017-01-04 11:24:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:29 AI_Player.update()	Search took283ms
2017-01-04 11:24:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:29 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 11:24:29 AI_Player.update()		11,	1010,	1110,	1100,	1100,	101,	101
2017-01-04 11:24:29 AI_Player.update()		1110,	101,	1110,	110,	111,	1101,	1011
2017-01-04 11:24:29 AI_Player.update()		11,	101,	1001,	1011,	1001,	1001,	1010
2017-01-04 11:24:29 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:29 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	110
2017-01-04 11:24:29 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:29 AI_Player.update()	update
2017-01-04 11:24:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:29 AI_Player.update()	update
2017-01-04 11:24:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:29 AI_Player.update()	Search took92ms
2017-01-04 11:24:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:29 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 11:24:29 AI_Player.update()		11,	1010,	1110,	1100,	1100,	1101,	101
2017-01-04 11:24:29 AI_Player.update()		1110,	101,	1110,	110,	111,	1001,	1011
2017-01-04 11:24:29 AI_Player.update()		11,	101,	1001,	1011,	1001,	1001,	1010
2017-01-04 11:24:29 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-04 11:24:29 AI_Player.update()		101,	110,	1010,	1010,	101,	1001,	110
2017-01-04 11:24:29 AI_Player.update()		1100,	110,	1101,	1110,	1101,	101,	1001
2017-01-04 11:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:29 AI_Player.update()	update
2017-01-04 11:24:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:29 AI_Player.update()	update
2017-01-04 11:24:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:29 AI_Player.update()	Search took206ms
2017-01-04 11:24:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:29 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 11:24:29 AI_Player.update()		11,	1010,	1110,	11,	1100,	1101,	101
2017-01-04 11:24:29 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-04 11:24:29 AI_Player.update()		11,	101,	1001,	110,	1001,	1001,	1010
2017-01-04 11:24:29 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-04 11:24:29 AI_Player.update()		101,	110,	1010,	1001,	101,	1001,	110
2017-01-04 11:24:29 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 11:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:29 AI_Player.update()	update
2017-01-04 11:24:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:29 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:29 AI_Player.update()	update
2017-01-04 11:24:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:30 AI_Player.update()	Search took84ms
2017-01-04 11:24:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:30 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 11:24:30 AI_Player.update()		11,	1010,	1110,	11,	1100,	1101,	101
2017-01-04 11:24:30 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-04 11:24:30 AI_Player.update()		11,	101,	1001,	110,	1001,	1001,	1010
2017-01-04 11:24:30 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-04 11:24:30 AI_Player.update()		110,	101,	110,	1010,	1001,	101,	1001
2017-01-04 11:24:30 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 11:24:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:30 AI_Player.update()	update
2017-01-04 11:24:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:30 AI_Player.update()	update
2017-01-04 11:24:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:30 AI_Player.update()	Search took306ms
2017-01-04 11:24:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:30 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 11:24:30 AI_Player.update()		11,	1010,	1110,	11,	1100,	101,	101
2017-01-04 11:24:30 AI_Player.update()		1110,	101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:24:30 AI_Player.update()		11,	101,	1001,	110,	1001,	1001,	1010
2017-01-04 11:24:30 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-04 11:24:30 AI_Player.update()		110,	101,	110,	1010,	1001,	101,	1001
2017-01-04 11:24:30 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 11:24:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:30 AI_Player.update()	update
2017-01-04 11:24:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:30 AI_Player.update()	update
2017-01-04 11:24:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:30 AI_Player.update()	Search took188ms
2017-01-04 11:24:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:30 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 11:24:30 AI_Player.update()		11,	101,	1110,	11,	1100,	101,	101
2017-01-04 11:24:30 AI_Player.update()		1110,	101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:24:30 AI_Player.update()		11,	101,	1001,	110,	1001,	1001,	1010
2017-01-04 11:24:30 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-04 11:24:30 AI_Player.update()		110,	110,	110,	1010,	1001,	101,	1001
2017-01-04 11:24:30 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 11:24:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:30 AI_Player.update()	update
2017-01-04 11:24:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:30 AI_Player.update()	update
2017-01-04 11:24:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:31 AI_Player.update()	Search took676ms
2017-01-04 11:24:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:31 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 11:24:31 AI_Player.update()		11,	101,	1110,	11,	1100,	101,	101
2017-01-04 11:24:31 AI_Player.update()		1110,	101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:24:31 AI_Player.update()		101,	1001,	110,	1001,	1001,	1010,	11
2017-01-04 11:24:31 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-04 11:24:31 AI_Player.update()		110,	110,	110,	1010,	1001,	101,	1001
2017-01-04 11:24:31 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 11:24:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:31 AI_Player.update()	update
2017-01-04 11:24:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:31 AI_Player.update()	update
2017-01-04 11:24:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:31 AI_Player.update()	Search took265ms
2017-01-04 11:24:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:31 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 11:24:31 AI_Player.update()		11,	101,	1110,	1110,	1100,	101,	101
2017-01-04 11:24:31 AI_Player.update()		1110,	101,	1110,	11,	111,	1101,	1011
2017-01-04 11:24:31 AI_Player.update()		101,	1001,	110,	1100,	1001,	1010,	11
2017-01-04 11:24:31 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:31 AI_Player.update()		110,	110,	110,	1011,	1001,	101,	1001
2017-01-04 11:24:31 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 11:24:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:31 AI_Player.update()	update
2017-01-04 11:24:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:31 AI_Player.update()	update
2017-01-04 11:24:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:31 AI_Player.update()	Search took292ms
2017-01-04 11:24:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:31 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 11:24:31 AI_Player.update()		11,	101,	1110,	1110,	1100,	101,	101
2017-01-04 11:24:31 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 11:24:31 AI_Player.update()		101,	101,	110,	1100,	1001,	1010,	11
2017-01-04 11:24:31 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:24:31 AI_Player.update()		110,	1010,	110,	1011,	1001,	101,	1001
2017-01-04 11:24:31 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 11:24:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:31 AI_Player.update()	update
2017-01-04 11:24:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:31 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:24:31 AI_Player.update()	Player a has won!
2017-01-04 11:24:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:31 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:24:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:31 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:24:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:31 AI_Player.update()	update
2017-01-04 11:24:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:32 AI_Player.update()	Search took258ms
2017-01-04 11:24:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:32 AI_Player.update()		110,	1010,	111,	111,	111,	1011,	11
2017-01-04 11:24:32 AI_Player.update()		1011,	11,	1010,	1010,	1010,	11,	11
2017-01-04 11:24:32 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-04 11:24:32 AI_Player.update()		1100,	11,	101,	1011,	101,	11,	1110
2017-01-04 11:24:32 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-04 11:24:32 AI_Player.update()		1001,	1100,	11,	101,	1011,	110,	1010
2017-01-04 11:24:32 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-04 11:24:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:32 AI_Player.update()	update
2017-01-04 11:24:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:32 AI_Player.update()	update
2017-01-04 11:24:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:32 AI_Player.update()	Search took60ms
2017-01-04 11:24:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:32 AI_Player.update()		110,	1010,	111,	111,	111,	1011,	11
2017-01-04 11:24:32 AI_Player.update()		11,	1010,	1010,	1010,	11,	11,	1011
2017-01-04 11:24:32 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-04 11:24:32 AI_Player.update()		1100,	11,	101,	1011,	101,	11,	1110
2017-01-04 11:24:32 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-04 11:24:32 AI_Player.update()		1001,	1100,	11,	101,	1011,	110,	1010
2017-01-04 11:24:32 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-04 11:24:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:32 AI_Player.update()	update
2017-01-04 11:24:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:32 AI_Player.update()	update
2017-01-04 11:24:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:32 AI_Player.update()	Search took650ms
2017-01-04 11:24:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:32 AI_Player.update()		110,	1010,	111,	111,	111,	1011,	11
2017-01-04 11:24:32 AI_Player.update()		11,	1010,	1010,	1010,	11,	11,	1011
2017-01-04 11:24:32 AI_Player.update()		1110,	11,	1110,	11,	111,	1101,	1011
2017-01-04 11:24:32 AI_Player.update()		1100,	1010,	101,	1011,	101,	11,	1110
2017-01-04 11:24:32 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-04 11:24:32 AI_Player.update()		1001,	101,	11,	101,	1011,	110,	1010
2017-01-04 11:24:32 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-04 11:24:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:32 AI_Player.update()	update
2017-01-04 11:24:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:32 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:32 AI_Player.update()	update
2017-01-04 11:24:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:33 AI_Player.update()	Search took545ms
2017-01-04 11:24:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:33 AI_Player.update()		110,	1010,	111,	111,	111,	1011,	11
2017-01-04 11:24:33 AI_Player.update()		1011,	11,	1010,	1010,	1010,	11,	11
2017-01-04 11:24:33 AI_Player.update()		1110,	11,	1110,	11,	111,	1101,	1011
2017-01-04 11:24:33 AI_Player.update()		1100,	1010,	101,	1011,	101,	11,	1110
2017-01-04 11:24:33 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-04 11:24:33 AI_Player.update()		1001,	101,	11,	101,	1011,	110,	1010
2017-01-04 11:24:33 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-04 11:24:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:33 AI_Player.update()	update
2017-01-04 11:24:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:33 AI_Player.update()	update
2017-01-04 11:24:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:33 AI_Player.update()	Search took454ms
2017-01-04 11:24:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:33 AI_Player.update()		110,	11,	111,	111,	111,	1011,	11
2017-01-04 11:24:33 AI_Player.update()		1011,	11,	1010,	1010,	1010,	11,	11
2017-01-04 11:24:33 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-04 11:24:33 AI_Player.update()		1100,	1100,	101,	1011,	101,	11,	1110
2017-01-04 11:24:33 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 11:24:33 AI_Player.update()		1001,	1010,	11,	101,	1011,	110,	1010
2017-01-04 11:24:33 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-04 11:24:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:33 AI_Player.update()	update
2017-01-04 11:24:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:33 AI_Player.update()	update
2017-01-04 11:24:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:34 AI_Player.update()	Search took258ms
2017-01-04 11:24:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:34 AI_Player.update()		110,	11,	111,	111,	111,	1011,	11
2017-01-04 11:24:34 AI_Player.update()		1011,	1010,	1010,	1010,	1010,	11,	11
2017-01-04 11:24:34 AI_Player.update()		1110,	1100,	1110,	11,	111,	1101,	1011
2017-01-04 11:24:34 AI_Player.update()		1100,	101,	101,	1011,	101,	11,	1110
2017-01-04 11:24:34 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-04 11:24:34 AI_Player.update()		1001,	1010,	11,	101,	1011,	110,	1010
2017-01-04 11:24:34 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 11:24:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:34 AI_Player.update()	update
2017-01-04 11:24:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:34 AI_Player.update()	update
2017-01-04 11:24:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:34 AI_Player.update()	Search took374ms
2017-01-04 11:24:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:34 AI_Player.update()		110,	11,	111,	101,	111,	1011,	11
2017-01-04 11:24:34 AI_Player.update()		1011,	1010,	1010,	111,	1010,	11,	11
2017-01-04 11:24:34 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-04 11:24:34 AI_Player.update()		1100,	101,	101,	11,	101,	11,	1110
2017-01-04 11:24:34 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	101,	1011
2017-01-04 11:24:34 AI_Player.update()		1001,	1010,	11,	110,	1011,	110,	1010
2017-01-04 11:24:34 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 11:24:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:34 AI_Player.update()	update
2017-01-04 11:24:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:34 AI_Player.update()	update
2017-01-04 11:24:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:34 AI_Player.update()	Search took202ms
2017-01-04 11:24:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:34 AI_Player.update()		110,	11,	111,	111,	111,	1011,	11
2017-01-04 11:24:34 AI_Player.update()		1011,	1010,	1010,	1010,	1010,	11,	11
2017-01-04 11:24:34 AI_Player.update()		1110,	1100,	1110,	11,	111,	1101,	1011
2017-01-04 11:24:34 AI_Player.update()		1100,	101,	101,	1011,	101,	11,	1110
2017-01-04 11:24:34 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-04 11:24:34 AI_Player.update()		1001,	1010,	11,	101,	1011,	110,	1010
2017-01-04 11:24:34 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 11:24:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:34 AI_Player.update()	update
2017-01-04 11:24:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:34 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:34 AI_Player.update()	update
2017-01-04 11:24:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:35 AI_Player.update()	Search took688ms
2017-01-04 11:24:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:35 AI_Player.update()		110,	11,	111,	111,	111,	11,	11
2017-01-04 11:24:35 AI_Player.update()		1011,	1010,	1010,	1010,	1010,	1101,	11
2017-01-04 11:24:35 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-04 11:24:35 AI_Player.update()		1100,	101,	101,	1011,	101,	101,	1110
2017-01-04 11:24:35 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-04 11:24:35 AI_Player.update()		1001,	1010,	11,	101,	1011,	1100,	1010
2017-01-04 11:24:35 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-04 11:24:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:35 AI_Player.update()	update
2017-01-04 11:24:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:35 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:24:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:35 AI_Player.update()	update
2017-01-04 11:24:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:36 AI_Player.update()	Search took810ms
2017-01-04 11:24:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:36 AI_Player.update()		110,	11,	111,	111,	111,	11,	11
2017-01-04 11:24:36 AI_Player.update()		1011,	1010,	1010,	1010,	1010,	1101,	11
2017-01-04 11:24:36 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-04 11:24:36 AI_Player.update()		1100,	101,	101,	1011,	101,	101,	1110
2017-01-04 11:24:36 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-04 11:24:36 AI_Player.update()		1010,	11,	101,	1011,	1100,	1010,	1001
2017-01-04 11:24:36 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-04 11:24:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:24:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:36 AI_Player.update()	update
2017-01-04 11:24:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:36 AI_Player.update()	update
2017-01-04 11:24:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:36 AI_Player.update()	Search took801ms
2017-01-04 11:24:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:36 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 11:24:36 AI_Player.update()		1011,	1010,	1010,	111,	1010,	1101,	11
2017-01-04 11:24:36 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-04 11:24:36 AI_Player.update()		1100,	101,	101,	11,	101,	101,	1110
2017-01-04 11:24:36 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	110,	1011
2017-01-04 11:24:36 AI_Player.update()		1010,	11,	101,	110,	1100,	1010,	1001
2017-01-04 11:24:36 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1011,	1001
2017-01-04 11:24:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:36 AI_Player.update()	update
2017-01-04 11:24:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:36 AI_Player.update()	update
2017-01-04 11:24:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:37 AI_Player.update()	Search took390ms
2017-01-04 11:24:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:37 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 11:24:37 AI_Player.update()		1011,	1100,	1010,	111,	1010,	1101,	11
2017-01-04 11:24:37 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-04 11:24:37 AI_Player.update()		1100,	1010,	101,	11,	101,	101,	1110
2017-01-04 11:24:37 AI_Player.update()		1110,	11,	1101,	1011,	1011,	110,	1011
2017-01-04 11:24:37 AI_Player.update()		1010,	11,	101,	110,	1100,	1010,	1001
2017-01-04 11:24:37 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1011,	1001
2017-01-04 11:24:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:37 AI_Player.update()	update
2017-01-04 11:24:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:37 AI_Player.update()	update
2017-01-04 11:24:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:37 AI_Player.update()	Search took439ms
2017-01-04 11:24:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:37 AI_Player.update()		110,	1010,	111,	1011,	111,	11,	11
2017-01-04 11:24:37 AI_Player.update()		1011,	1100,	1010,	101,	1010,	1101,	11
2017-01-04 11:24:37 AI_Player.update()		1110,	101,	1110,	111,	111,	11,	1011
2017-01-04 11:24:37 AI_Player.update()		1100,	1010,	101,	1010,	101,	101,	1110
2017-01-04 11:24:37 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-04 11:24:37 AI_Player.update()		1010,	11,	101,	1011,	1100,	1010,	1001
2017-01-04 11:24:37 AI_Player.update()		1100,	11,	1101,	110,	1101,	1011,	1001
2017-01-04 11:24:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:37 AI_Player.update()	update
2017-01-04 11:24:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:24:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:37 AI_Player.update()	update
2017-01-04 11:24:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:38 AI_Player.update()	Search took497ms
2017-01-04 11:24:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:38 AI_Player.update()		110,	1010,	111,	1011,	111,	11,	11
2017-01-04 11:24:38 AI_Player.update()		1011,	1100,	1010,	101,	1010,	1101,	11
2017-01-04 11:24:38 AI_Player.update()		1110,	101,	1110,	111,	111,	11,	1011
2017-01-04 11:24:38 AI_Player.update()		1110,	1100,	1010,	101,	1010,	101,	101
2017-01-04 11:24:38 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-04 11:24:38 AI_Player.update()		1010,	11,	101,	1011,	1100,	1010,	1001
2017-01-04 11:24:38 AI_Player.update()		1100,	11,	1101,	110,	1101,	1011,	1001
2017-01-04 11:24:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:24:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:38 AI_Player.update()	update
2017-01-04 11:24:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:38 AI_Player.update()	update
2017-01-04 11:24:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:38 AI_Player.update()	Search took651ms
2017-01-04 11:24:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:38 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-04 11:24:38 AI_Player.update()		1011,	1100,	1010,	1011,	1010,	1101,	11
2017-01-04 11:24:38 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-04 11:24:38 AI_Player.update()		1110,	1100,	1010,	111,	1010,	101,	101
2017-01-04 11:24:38 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-04 11:24:38 AI_Player.update()		1010,	11,	101,	11,	1100,	1010,	1001
2017-01-04 11:24:38 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1011,	1001
2017-01-04 11:24:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:38 AI_Player.update()	update
2017-01-04 11:24:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:38 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:38 AI_Player.update()	update
2017-01-04 11:24:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:39 AI_Player.update()	Search took201ms
2017-01-04 11:24:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:39 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-04 11:24:39 AI_Player.update()		1100,	1010,	1011,	1010,	1101,	11,	1011
2017-01-04 11:24:39 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-04 11:24:39 AI_Player.update()		1110,	1100,	1010,	111,	1010,	101,	101
2017-01-04 11:24:39 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-04 11:24:39 AI_Player.update()		1010,	11,	101,	11,	1100,	1010,	1001
2017-01-04 11:24:39 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1011,	1001
2017-01-04 11:24:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:39 AI_Player.update()	update
2017-01-04 11:24:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:39 AI_Player.update()	update
2017-01-04 11:24:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:39 AI_Player.update()	Search took484ms
2017-01-04 11:24:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:39 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-04 11:24:39 AI_Player.update()		1100,	101,	1011,	1010,	1101,	11,	1011
2017-01-04 11:24:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-04 11:24:39 AI_Player.update()		1110,	11,	1010,	111,	1010,	101,	101
2017-01-04 11:24:39 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-04 11:24:39 AI_Player.update()		1010,	11,	101,	11,	1100,	1010,	1001
2017-01-04 11:24:39 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1011,	1001
2017-01-04 11:24:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:39 AI_Player.update()	update
2017-01-04 11:24:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:39 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:24:39 AI_Player.update()	Player a has won!
2017-01-04 11:24:39 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:39 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:24:39 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:39 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:24:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:39 AI_Player.update()	update
2017-01-04 11:24:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:40 AI_Player.update()	Search took373ms
2017-01-04 11:24:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()		110,	1010,	111,	1001,	111,	11,	11
2017-01-04 11:24:40 AI_Player.update()		1010,	101,	1010,	11,	101,	101,	1010
2017-01-04 11:24:40 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-04 11:24:40 AI_Player.update()		110,	110,	1101,	101,	110,	101,	101
2017-01-04 11:24:40 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:24:40 AI_Player.update()		101,	1010,	101,	110,	11,	110,	101
2017-01-04 11:24:40 AI_Player.update()		1100,	111,	1101,	101,	1101,	1110,	1001
2017-01-04 11:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()	update
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()	update
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:40 AI_Player.update()	Search took69ms
2017-01-04 11:24:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 11:24:40 AI_Player.update()		1010,	101,	1010,	11,	101,	1010,	1010
2017-01-04 11:24:40 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 11:24:40 AI_Player.update()		110,	110,	1101,	101,	110,	101,	101
2017-01-04 11:24:40 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-04 11:24:40 AI_Player.update()		101,	1010,	101,	110,	11,	1110,	101
2017-01-04 11:24:40 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-04 11:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()	update
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()	update
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:40 AI_Player.update()	Search took192ms
2017-01-04 11:24:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()		110,	1010,	111,	1001,	111,	11,	11
2017-01-04 11:24:40 AI_Player.update()		1010,	101,	1010,	11,	101,	101,	1010
2017-01-04 11:24:40 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-04 11:24:40 AI_Player.update()		110,	110,	1101,	101,	110,	101,	101
2017-01-04 11:24:40 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:24:40 AI_Player.update()		101,	1010,	101,	110,	11,	110,	101
2017-01-04 11:24:40 AI_Player.update()		1100,	111,	1101,	101,	1101,	1110,	1001
2017-01-04 11:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()	update
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()	update
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:40 AI_Player.update()	Search took54ms
2017-01-04 11:24:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 11:24:40 AI_Player.update()		1010,	101,	1010,	11,	101,	1010,	1010
2017-01-04 11:24:40 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 11:24:40 AI_Player.update()		110,	110,	1101,	101,	110,	101,	101
2017-01-04 11:24:40 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-04 11:24:40 AI_Player.update()		101,	1010,	101,	110,	11,	1110,	101
2017-01-04 11:24:40 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-04 11:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()	update
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()	update
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:40 AI_Player.update()	Search took181ms
2017-01-04 11:24:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 11:24:40 AI_Player.update()		1010,	101,	1010,	110,	101,	1010,	1010
2017-01-04 11:24:40 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 11:24:40 AI_Player.update()		110,	110,	1101,	1010,	110,	101,	101
2017-01-04 11:24:40 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-04 11:24:40 AI_Player.update()		101,	1010,	101,	101,	11,	1110,	101
2017-01-04 11:24:40 AI_Player.update()		1100,	111,	1101,	1001,	1101,	11,	1001
2017-01-04 11:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()	update
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()	update
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:40 AI_Player.update()	Search took430ms
2017-01-04 11:24:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 11:24:40 AI_Player.update()		1010,	101,	1010,	110,	101,	1010,	1010
2017-01-04 11:24:40 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 11:24:40 AI_Player.update()		110,	110,	1101,	1010,	110,	101,	101
2017-01-04 11:24:40 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-04 11:24:40 AI_Player.update()		101,	111,	101,	101,	11,	1110,	101
2017-01-04 11:24:40 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-04 11:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()	update
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:40 AI_Player.update()	update
2017-01-04 11:24:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:41 AI_Player.update()	Search took443ms
2017-01-04 11:24:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:41 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-04 11:24:41 AI_Player.update()		1010,	101,	1010,	110,	101,	101,	1010
2017-01-04 11:24:41 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 11:24:41 AI_Player.update()		110,	110,	1101,	1010,	110,	110,	101
2017-01-04 11:24:41 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1110,	1011
2017-01-04 11:24:41 AI_Player.update()		101,	111,	101,	101,	11,	11,	101
2017-01-04 11:24:41 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 11:24:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:41 AI_Player.update()	update
2017-01-04 11:24:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:41 AI_Player.update()	update
2017-01-04 11:24:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:41 AI_Player.update()	Search took334ms
2017-01-04 11:24:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:41 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-04 11:24:41 AI_Player.update()		1010,	110,	1010,	110,	101,	101,	1010
2017-01-04 11:24:41 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 11:24:41 AI_Player.update()		110,	1010,	1101,	1010,	110,	110,	101
2017-01-04 11:24:41 AI_Player.update()		1110,	111,	1101,	110,	1011,	1110,	1011
2017-01-04 11:24:41 AI_Player.update()		101,	1010,	101,	101,	11,	11,	101
2017-01-04 11:24:41 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 11:24:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:41 AI_Player.update()	update
2017-01-04 11:24:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:41 AI_Player.update()	update
2017-01-04 11:24:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:42 AI_Player.update()	Search took463ms
2017-01-04 11:24:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:42 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-04 11:24:42 AI_Player.update()		1010,	110,	1010,	110,	101,	101,	1010
2017-01-04 11:24:42 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:24:42 AI_Player.update()		110,	111,	1101,	1010,	110,	110,	101
2017-01-04 11:24:42 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1110,	1011
2017-01-04 11:24:42 AI_Player.update()		101,	101,	101,	101,	11,	11,	101
2017-01-04 11:24:42 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 11:24:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:42 AI_Player.update()	update
2017-01-04 11:24:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:42 AI_Player.update()	update
2017-01-04 11:24:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:42 AI_Player.update()	Search took98ms
2017-01-04 11:24:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:42 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:24:42 AI_Player.update()		1010,	110,	1010,	11,	101,	101,	1010
2017-01-04 11:24:42 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 11:24:42 AI_Player.update()		110,	111,	1101,	101,	110,	110,	101
2017-01-04 11:24:42 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-04 11:24:42 AI_Player.update()		101,	101,	101,	110,	11,	11,	101
2017-01-04 11:24:42 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 11:24:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:42 AI_Player.update()	update
2017-01-04 11:24:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:24:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:42 AI_Player.update()	update
2017-01-04 11:24:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:42 AI_Player.update()	Search took251ms
2017-01-04 11:24:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:42 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:24:42 AI_Player.update()		1010,	1010,	1010,	11,	101,	101,	1010
2017-01-04 11:24:42 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-04 11:24:42 AI_Player.update()		110,	1010,	1101,	101,	110,	110,	101
2017-01-04 11:24:42 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-04 11:24:42 AI_Player.update()		101,	101,	101,	110,	11,	11,	101
2017-01-04 11:24:42 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 11:24:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:24:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:42 AI_Player.update()	update
2017-01-04 11:24:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:42 AI_Player.update()	update
2017-01-04 11:24:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:42 AI_Player.update()	Search took263ms
2017-01-04 11:24:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:42 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-04 11:24:42 AI_Player.update()		1010,	111,	1010,	11,	101,	101,	1010
2017-01-04 11:24:42 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 11:24:42 AI_Player.update()		110,	101,	1101,	101,	110,	110,	101
2017-01-04 11:24:42 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-04 11:24:42 AI_Player.update()		101,	110,	101,	110,	11,	11,	101
2017-01-04 11:24:42 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 11:24:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:42 AI_Player.update()	update
2017-01-04 11:24:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:42 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:42 AI_Player.update()	update
2017-01-04 11:24:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:43 AI_Player.update()	Search took284ms
2017-01-04 11:24:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:43 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 11:24:43 AI_Player.update()		1010,	111,	1010,	1001,	101,	101,	1010
2017-01-04 11:24:43 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-04 11:24:43 AI_Player.update()		110,	101,	1101,	110,	110,	110,	101
2017-01-04 11:24:43 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-04 11:24:43 AI_Player.update()		101,	110,	101,	1010,	11,	11,	101
2017-01-04 11:24:43 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-04 11:24:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:43 AI_Player.update()	update
2017-01-04 11:24:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:43 AI_Player.update()	update
2017-01-04 11:24:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:43 AI_Player.update()	Search took77ms
2017-01-04 11:24:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:43 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 11:24:43 AI_Player.update()		1010,	1010,	1010,	1001,	101,	101,	1010
2017-01-04 11:24:43 AI_Player.update()		1110,	111,	1110,	11,	111,	101,	1011
2017-01-04 11:24:43 AI_Player.update()		110,	1010,	1101,	110,	110,	110,	101
2017-01-04 11:24:43 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-04 11:24:43 AI_Player.update()		101,	101,	101,	1010,	11,	11,	101
2017-01-04 11:24:43 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-04 11:24:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:43 AI_Player.update()	update
2017-01-04 11:24:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:43 AI_Player.update()	update
2017-01-04 11:24:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:43 AI_Player.update()	Search took343ms
2017-01-04 11:24:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:43 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 11:24:43 AI_Player.update()		1010,	1010,	1010,	1001,	101,	1010,	1010
2017-01-04 11:24:43 AI_Player.update()		1110,	111,	1110,	11,	111,	101,	1011
2017-01-04 11:24:43 AI_Player.update()		110,	1010,	1101,	110,	110,	101,	101
2017-01-04 11:24:43 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:24:43 AI_Player.update()		101,	101,	101,	1010,	11,	1110,	101
2017-01-04 11:24:43 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-04 11:24:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:43 AI_Player.update()	update
2017-01-04 11:24:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:43 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:43 AI_Player.update()	update
2017-01-04 11:24:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:44 AI_Player.update()	Search took541ms
2017-01-04 11:24:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:44 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 11:24:44 AI_Player.update()		1010,	1010,	1010,	1001,	101,	101,	1010
2017-01-04 11:24:44 AI_Player.update()		1110,	111,	1110,	11,	111,	1010,	1011
2017-01-04 11:24:44 AI_Player.update()		110,	1010,	1101,	110,	110,	101,	101
2017-01-04 11:24:44 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:44 AI_Player.update()		101,	101,	101,	1010,	11,	110,	101
2017-01-04 11:24:44 AI_Player.update()		1100,	110,	1101,	110,	1101,	1110,	1001
2017-01-04 11:24:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:44 AI_Player.update()	update
2017-01-04 11:24:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:24:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:44 AI_Player.update()	update
2017-01-04 11:24:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:44 AI_Player.update()	Search took271ms
2017-01-04 11:24:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:44 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 11:24:44 AI_Player.update()		1010,	1010,	1010,	1001,	101,	1010,	1010
2017-01-04 11:24:44 AI_Player.update()		1110,	111,	1110,	11,	111,	101,	1011
2017-01-04 11:24:44 AI_Player.update()		110,	1010,	1101,	110,	110,	101,	101
2017-01-04 11:24:44 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:24:44 AI_Player.update()		101,	101,	101,	1010,	11,	1110,	101
2017-01-04 11:24:44 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-04 11:24:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:24:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:44 AI_Player.update()	update
2017-01-04 11:24:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:24:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:44 AI_Player.update()	update
2017-01-04 11:24:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:44 AI_Player.update()	Search took560ms
2017-01-04 11:24:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:44 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 11:24:44 AI_Player.update()		1010,	1010,	1010,	11,	101,	1010,	1010
2017-01-04 11:24:44 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-04 11:24:44 AI_Player.update()		110,	1010,	1101,	101,	110,	101,	101
2017-01-04 11:24:44 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:24:44 AI_Player.update()		101,	101,	101,	110,	11,	1110,	101
2017-01-04 11:24:44 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-04 11:24:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:24:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:44 AI_Player.update()	update
2017-01-04 11:24:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:44 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:24:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:44 AI_Player.update()	update
2017-01-04 11:24:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:45 AI_Player.update()	Search took160ms
2017-01-04 11:24:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:24:45 AI_Player.update()		1010,	1010,	1010,	11,	101,	101,	1010
2017-01-04 11:24:45 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-04 11:24:45 AI_Player.update()		110,	1010,	1101,	101,	110,	110,	101
2017-01-04 11:24:45 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-04 11:24:45 AI_Player.update()		101,	101,	101,	110,	11,	11,	101
2017-01-04 11:24:45 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 11:24:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:24:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()	update
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()	update
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:45 AI_Player.update()	Search took170ms
2017-01-04 11:24:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:24:45 AI_Player.update()		1010,	1010,	1010,	1010,	11,	101,	101
2017-01-04 11:24:45 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-04 11:24:45 AI_Player.update()		110,	1010,	1101,	101,	110,	110,	101
2017-01-04 11:24:45 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-04 11:24:45 AI_Player.update()		101,	101,	101,	110,	11,	11,	101
2017-01-04 11:24:45 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 11:24:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()	update
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:24:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()	update
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:45 AI_Player.update()	Search took80ms
2017-01-04 11:24:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 11:24:45 AI_Player.update()		1010,	1010,	1010,	1001,	11,	101,	101
2017-01-04 11:24:45 AI_Player.update()		1110,	111,	1110,	1010,	111,	101,	1011
2017-01-04 11:24:45 AI_Player.update()		110,	1010,	1101,	110,	110,	110,	101
2017-01-04 11:24:45 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-04 11:24:45 AI_Player.update()		101,	101,	101,	1010,	11,	11,	101
2017-01-04 11:24:45 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-04 11:24:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:24:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()	update
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:24:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()	update
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:45 AI_Player.update()	Search took100ms
2017-01-04 11:24:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 11:24:45 AI_Player.update()		1010,	111,	1010,	1001,	11,	101,	101
2017-01-04 11:24:45 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 11:24:45 AI_Player.update()		110,	101,	1101,	110,	110,	110,	101
2017-01-04 11:24:45 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-04 11:24:45 AI_Player.update()		101,	110,	101,	1010,	11,	11,	101
2017-01-04 11:24:45 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-04 11:24:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:24:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()	update
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:24:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()	update
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:45 AI_Player.update()	Search took152ms
2017-01-04 11:24:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 11:24:45 AI_Player.update()		1010,	111,	1010,	1001,	11,	1010,	101
2017-01-04 11:24:45 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 11:24:45 AI_Player.update()		110,	101,	1101,	110,	110,	101,	101
2017-01-04 11:24:45 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:24:45 AI_Player.update()		101,	110,	101,	1010,	11,	1110,	101
2017-01-04 11:24:45 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-04 11:24:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:24:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()	update
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:24:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()	update
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:45 AI_Player.update()	Search took113ms
2017-01-04 11:24:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 11:24:45 AI_Player.update()		1010,	1010,	1010,	1001,	11,	1010,	101
2017-01-04 11:24:45 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 11:24:45 AI_Player.update()		110,	101,	1101,	110,	110,	101,	101
2017-01-04 11:24:45 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 11:24:45 AI_Player.update()		101,	110,	101,	1010,	11,	1110,	101
2017-01-04 11:24:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-04 11:24:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:24:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()	update
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 11:24:45 AI_Player.update()	Player b has won!
2017-01-04 11:24:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:45 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:24:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:45 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:24:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:45 AI_Player.update()	update
2017-01-04 11:24:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:46 AI_Player.update()	Search took214ms
2017-01-04 11:24:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-04 11:24:46 AI_Player.update()		1010,	110,	1001,	110,	11,	101,	11
2017-01-04 11:24:46 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	110,	1100,	1010,	1011,	1010,	1100
2017-01-04 11:24:46 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	1011,	1100,	1011,	111,	101,	101
2017-01-04 11:24:46 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:46 AI_Player.update()	Search took26ms
2017-01-04 11:24:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-04 11:24:46 AI_Player.update()		1010,	110,	1001,	110,	11,	1010,	11
2017-01-04 11:24:46 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	110,	1100,	1010,	1011,	11,	1100
2017-01-04 11:24:46 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	1011,	1100,	1011,	111,	1010,	101
2017-01-04 11:24:46 AI_Player.update()		1100,	1101,	1101,	110,	1101,	11,	1001
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:46 AI_Player.update()	Search took183ms
2017-01-04 11:24:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-04 11:24:46 AI_Player.update()		110,	1001,	110,	11,	1010,	11,	1010
2017-01-04 11:24:46 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	110,	1100,	1010,	1011,	11,	1100
2017-01-04 11:24:46 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	1011,	1100,	1011,	111,	1010,	101
2017-01-04 11:24:46 AI_Player.update()		1100,	1101,	1101,	110,	1101,	11,	1001
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:46 AI_Player.update()	Search took145ms
2017-01-04 11:24:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 11:24:46 AI_Player.update()		110,	1001,	110,	11,	1010,	11,	1010
2017-01-04 11:24:46 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	110,	1100,	101,	1011,	11,	1100
2017-01-04 11:24:46 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	1011,	1100,	101,	111,	1010,	101
2017-01-04 11:24:46 AI_Player.update()		1100,	1101,	1101,	1011,	1101,	11,	1001
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:46 AI_Player.update()	Search took194ms
2017-01-04 11:24:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:24:46 AI_Player.update()		110,	101,	110,	11,	1010,	11,	1010
2017-01-04 11:24:46 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	1100,	1100,	101,	1011,	11,	1100
2017-01-04 11:24:46 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	1101,	1100,	101,	111,	1010,	101
2017-01-04 11:24:46 AI_Player.update()		1100,	110,	1101,	1011,	1101,	11,	1001
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:46 AI_Player.update()	Search took132ms
2017-01-04 11:24:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 11:24:46 AI_Player.update()		110,	110,	110,	11,	1010,	11,	1010
2017-01-04 11:24:46 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	1011,	1100,	101,	1011,	11,	1100
2017-01-04 11:24:46 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	110,	1100,	101,	111,	1010,	101
2017-01-04 11:24:46 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	11,	1001
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:46 AI_Player.update()	Search took181ms
2017-01-04 11:24:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 11:24:46 AI_Player.update()		110,	110,	11,	1010,	11,	1010,	110
2017-01-04 11:24:46 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	1011,	1100,	101,	1011,	11,	1100
2017-01-04 11:24:46 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	110,	1100,	101,	111,	1010,	101
2017-01-04 11:24:46 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	11,	1001
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:46 AI_Player.update()	Search took82ms
2017-01-04 11:24:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 11:24:46 AI_Player.update()		110,	1100,	11,	1010,	11,	1010,	110
2017-01-04 11:24:46 AI_Player.update()		1110,	1011,	1110,	11,	111,	1010,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	1101,	1100,	101,	1011,	11,	1100
2017-01-04 11:24:46 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:24:46 AI_Player.update()		1001,	1001,	1100,	101,	111,	1010,	101
2017-01-04 11:24:46 AI_Player.update()		1100,	101,	1101,	1011,	1101,	11,	1001
2017-01-04 11:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:46 AI_Player.update()	update
2017-01-04 11:24:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:47 AI_Player.update()	Search took91ms
2017-01-04 11:24:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 11:24:47 AI_Player.update()		110,	1100,	11,	1010,	11,	1010,	110
2017-01-04 11:24:47 AI_Player.update()		1110,	1011,	1110,	11,	111,	1010,	1011
2017-01-04 11:24:47 AI_Player.update()		1100,	1001,	1101,	1100,	101,	1011,	11
2017-01-04 11:24:47 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:24:47 AI_Player.update()		1001,	1001,	1100,	101,	111,	1010,	101
2017-01-04 11:24:47 AI_Player.update()		1100,	101,	1101,	1011,	1101,	11,	1001
2017-01-04 11:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()	update
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()	update
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:47 AI_Player.update()	Search took91ms
2017-01-04 11:24:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 11:24:47 AI_Player.update()		110,	1100,	11,	11,	11,	1010,	110
2017-01-04 11:24:47 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1010,	1011
2017-01-04 11:24:47 AI_Player.update()		1100,	1001,	1101,	1010,	101,	1011,	11
2017-01-04 11:24:47 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:47 AI_Player.update()		1001,	1001,	1100,	1011,	111,	1010,	101
2017-01-04 11:24:47 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-04 11:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()	update
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()	update
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:47 AI_Player.update()	Search took181ms
2017-01-04 11:24:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 11:24:47 AI_Player.update()		110,	1011,	11,	11,	11,	1010,	110
2017-01-04 11:24:47 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-04 11:24:47 AI_Player.update()		1100,	110,	1101,	1010,	101,	1011,	11
2017-01-04 11:24:47 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:47 AI_Player.update()		1001,	101,	1100,	1011,	111,	1010,	101
2017-01-04 11:24:47 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-04 11:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()	update
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()	update
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:47 AI_Player.update()	Search took134ms
2017-01-04 11:24:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 11:24:47 AI_Player.update()		110,	1100,	11,	11,	11,	1010,	110
2017-01-04 11:24:47 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1010,	1011
2017-01-04 11:24:47 AI_Player.update()		1100,	1001,	1101,	1010,	101,	1011,	11
2017-01-04 11:24:47 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:47 AI_Player.update()		1001,	1001,	1100,	1011,	111,	1010,	101
2017-01-04 11:24:47 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-04 11:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()	update
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()	update
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:47 AI_Player.update()	Search took92ms
2017-01-04 11:24:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 11:24:47 AI_Player.update()		110,	1100,	11,	11,	11,	1010,	110
2017-01-04 11:24:47 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1011,	1011
2017-01-04 11:24:47 AI_Player.update()		1100,	1001,	1101,	1010,	101,	101,	11
2017-01-04 11:24:47 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:47 AI_Player.update()		1001,	1001,	1100,	1011,	111,	11,	101
2017-01-04 11:24:47 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 11:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()	update
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()	update
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:47 AI_Player.update()	Search took199ms
2017-01-04 11:24:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 11:24:47 AI_Player.update()		110,	1100,	11,	11,	11,	1010,	110
2017-01-04 11:24:47 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1011,	1011
2017-01-04 11:24:47 AI_Player.update()		1100,	1001,	1101,	1010,	101,	101,	11
2017-01-04 11:24:47 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 11:24:47 AI_Player.update()		1001,	1100,	1011,	111,	11,	101,	1001
2017-01-04 11:24:47 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 11:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()	update
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:47 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:47 AI_Player.update()	update
2017-01-04 11:24:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:48 AI_Player.update()	Search took212ms
2017-01-04 11:24:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-04 11:24:48 AI_Player.update()		110,	1100,	11,	1100,	11,	1010,	110
2017-01-04 11:24:48 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1011,	1011
2017-01-04 11:24:48 AI_Player.update()		1100,	1001,	1101,	101,	101,	101,	11
2017-01-04 11:24:48 AI_Player.update()		1110,	110,	1101,	111,	1011,	1010,	1011
2017-01-04 11:24:48 AI_Player.update()		1001,	1100,	1011,	110,	11,	101,	1001
2017-01-04 11:24:48 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 11:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()	update
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()	update
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:48 AI_Player.update()	Search took316ms
2017-01-04 11:24:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-04 11:24:48 AI_Player.update()		110,	1100,	11,	1100,	11,	1011,	110
2017-01-04 11:24:48 AI_Player.update()		1110,	1011,	1110,	1010,	111,	101,	1011
2017-01-04 11:24:48 AI_Player.update()		1100,	1001,	1101,	101,	101,	1010,	11
2017-01-04 11:24:48 AI_Player.update()		1110,	110,	1101,	111,	1011,	101,	1011
2017-01-04 11:24:48 AI_Player.update()		1001,	1100,	1011,	110,	11,	101,	1001
2017-01-04 11:24:48 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()	update
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()	update
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:48 AI_Player.update()	Search took283ms
2017-01-04 11:24:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 11:24:48 AI_Player.update()		110,	1100,	11,	1010,	11,	1011,	110
2017-01-04 11:24:48 AI_Player.update()		1110,	1011,	1110,	101,	111,	101,	1011
2017-01-04 11:24:48 AI_Player.update()		1100,	1001,	1101,	111,	101,	1010,	11
2017-01-04 11:24:48 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-04 11:24:48 AI_Player.update()		1001,	1100,	1011,	1010,	11,	101,	1001
2017-01-04 11:24:48 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 11:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()	update
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:24:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()	update
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:48 AI_Player.update()	Search took218ms
2017-01-04 11:24:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 11:24:48 AI_Player.update()		110,	1100,	11,	101,	11,	1011,	110
2017-01-04 11:24:48 AI_Player.update()		1110,	1011,	1110,	111,	111,	101,	1011
2017-01-04 11:24:48 AI_Player.update()		1100,	1001,	1101,	110,	101,	1010,	11
2017-01-04 11:24:48 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:24:48 AI_Player.update()		1001,	1100,	1011,	11,	11,	101,	1001
2017-01-04 11:24:48 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()	update
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()	update
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:48 AI_Player.update()	Search took57ms
2017-01-04 11:24:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 11:24:48 AI_Player.update()		110,	1100,	11,	111,	11,	1011,	110
2017-01-04 11:24:48 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-04 11:24:48 AI_Player.update()		1100,	1001,	1101,	1010,	101,	1010,	11
2017-01-04 11:24:48 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-04 11:24:48 AI_Player.update()		1001,	1100,	1011,	1100,	11,	101,	1001
2017-01-04 11:24:48 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()	update
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:48 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:48 AI_Player.update()	update
2017-01-04 11:24:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:49 AI_Player.update()	Search took375ms
2017-01-04 11:24:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:49 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 11:24:49 AI_Player.update()		110,	1100,	11,	111,	11,	1011,	110
2017-01-04 11:24:49 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-04 11:24:49 AI_Player.update()		1001,	1101,	1010,	101,	1010,	11,	1100
2017-01-04 11:24:49 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-04 11:24:49 AI_Player.update()		1001,	1100,	1011,	1100,	11,	101,	1001
2017-01-04 11:24:49 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:49 AI_Player.update()	update
2017-01-04 11:24:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:49 AI_Player.update()	update
2017-01-04 11:24:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:49 AI_Player.update()	Search took193ms
2017-01-04 11:24:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:49 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 11:24:49 AI_Player.update()		110,	1100,	11,	111,	11,	1011,	110
2017-01-04 11:24:49 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-04 11:24:49 AI_Player.update()		1100,	1001,	1101,	1010,	101,	1010,	11
2017-01-04 11:24:49 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-04 11:24:49 AI_Player.update()		1001,	1100,	1011,	1100,	11,	101,	1001
2017-01-04 11:24:49 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:49 AI_Player.update()	update
2017-01-04 11:24:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:49 AI_Player.update()	update
2017-01-04 11:24:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:49 AI_Player.update()	Search took282ms
2017-01-04 11:24:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:49 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 11:24:49 AI_Player.update()		1100,	11,	111,	11,	1011,	110,	110
2017-01-04 11:24:49 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-04 11:24:49 AI_Player.update()		1100,	1001,	1101,	1010,	101,	1010,	11
2017-01-04 11:24:49 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-04 11:24:49 AI_Player.update()		1001,	1100,	1011,	1100,	11,	101,	1001
2017-01-04 11:24:49 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:49 AI_Player.update()	update
2017-01-04 11:24:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:24:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:49 AI_Player.update()	update
2017-01-04 11:24:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:49 AI_Player.update()	Search took131ms
2017-01-04 11:24:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:49 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-04 11:24:49 AI_Player.update()		1100,	11,	111,	110,	1011,	110,	110
2017-01-04 11:24:49 AI_Player.update()		1110,	1011,	1110,	1010,	111,	101,	1011
2017-01-04 11:24:49 AI_Player.update()		1100,	1001,	1101,	11,	101,	1010,	11
2017-01-04 11:24:49 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-04 11:24:49 AI_Player.update()		1001,	1100,	1011,	1010,	11,	101,	1001
2017-01-04 11:24:49 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:49 AI_Player.update()	update
2017-01-04 11:24:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:49 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:49 AI_Player.update()	update
2017-01-04 11:24:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:50 AI_Player.update()	Search took227ms
2017-01-04 11:24:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-04 11:24:50 AI_Player.update()		1100,	110,	111,	110,	1011,	110,	110
2017-01-04 11:24:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 11:24:50 AI_Player.update()		1100,	1011,	1101,	11,	101,	1010,	11
2017-01-04 11:24:50 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 11:24:50 AI_Player.update()		1001,	110,	1011,	1010,	11,	101,	1001
2017-01-04 11:24:50 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 11:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()	update
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()	update
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:50 AI_Player.update()	Search took147ms
2017-01-04 11:24:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-04 11:24:50 AI_Player.update()		110,	111,	110,	1011,	110,	110,	1100
2017-01-04 11:24:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 11:24:50 AI_Player.update()		1100,	1011,	1101,	11,	101,	1010,	11
2017-01-04 11:24:50 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 11:24:50 AI_Player.update()		1001,	110,	1011,	1010,	11,	101,	1001
2017-01-04 11:24:50 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 11:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()	update
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()	update
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:50 AI_Player.update()	Search took198ms
2017-01-04 11:24:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-04 11:24:50 AI_Player.update()		110,	111,	110,	1011,	110,	110,	1100
2017-01-04 11:24:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 11:24:50 AI_Player.update()		1100,	1011,	1101,	11,	101,	1010,	11
2017-01-04 11:24:50 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 11:24:50 AI_Player.update()		110,	1011,	1010,	11,	101,	1001,	1001
2017-01-04 11:24:50 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 11:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()	update
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:24:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()	update
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:50 AI_Player.update()	Search took328ms
2017-01-04 11:24:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-04 11:24:50 AI_Player.update()		110,	111,	110,	1011,	110,	110,	1100
2017-01-04 11:24:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 11:24:50 AI_Player.update()		1011,	1101,	11,	101,	1010,	11,	1100
2017-01-04 11:24:50 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 11:24:50 AI_Player.update()		110,	1011,	1010,	11,	101,	1001,	1001
2017-01-04 11:24:50 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 11:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()	update
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()	update
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:50 AI_Player.update()	Search took82ms
2017-01-04 11:24:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-04 11:24:50 AI_Player.update()		110,	111,	110,	1011,	110,	1010,	1100
2017-01-04 11:24:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-04 11:24:50 AI_Player.update()		1011,	1101,	11,	101,	1010,	101,	1100
2017-01-04 11:24:50 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	11,	1011
2017-01-04 11:24:50 AI_Player.update()		110,	1011,	1010,	11,	101,	101,	1001
2017-01-04 11:24:50 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 11:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()	update
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:50 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:50 AI_Player.update()	update
2017-01-04 11:24:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:51 AI_Player.update()	Search took146ms
2017-01-04 11:24:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:51 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-04 11:24:51 AI_Player.update()		110,	111,	110,	1011,	110,	110,	1100
2017-01-04 11:24:51 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 11:24:51 AI_Player.update()		1011,	1101,	11,	101,	1010,	11,	1100
2017-01-04 11:24:51 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 11:24:51 AI_Player.update()		110,	1011,	1010,	11,	101,	1001,	1001
2017-01-04 11:24:51 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 11:24:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:51 AI_Player.update()	update
2017-01-04 11:24:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:51 AI_Player.update()	update
2017-01-04 11:24:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:51 AI_Player.update()	Search took96ms
2017-01-04 11:24:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:51 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 11:24:51 AI_Player.update()		110,	111,	110,	1010,	110,	110,	1100
2017-01-04 11:24:51 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 11:24:51 AI_Player.update()		1011,	1101,	11,	1100,	1010,	11,	1100
2017-01-04 11:24:51 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-04 11:24:51 AI_Player.update()		110,	1011,	1010,	101,	101,	1001,	1001
2017-01-04 11:24:51 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1010,	1001
2017-01-04 11:24:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:51 AI_Player.update()	update
2017-01-04 11:24:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:51 AI_Player.update()	update
2017-01-04 11:24:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:51 AI_Player.update()	Search took192ms
2017-01-04 11:24:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:51 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 11:24:51 AI_Player.update()		110,	111,	110,	101,	110,	110,	1100
2017-01-04 11:24:51 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 11:24:51 AI_Player.update()		1011,	1101,	11,	11,	1010,	11,	1100
2017-01-04 11:24:51 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:51 AI_Player.update()		110,	1011,	1010,	11,	101,	1001,	1001
2017-01-04 11:24:51 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:24:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:51 AI_Player.update()	update
2017-01-04 11:24:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:51 AI_Player.update()	update
2017-01-04 11:24:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:51 AI_Player.update()	Search took179ms
2017-01-04 11:24:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:51 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 11:24:51 AI_Player.update()		110,	111,	110,	101,	110,	110,	1100
2017-01-04 11:24:51 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 11:24:51 AI_Player.update()		1011,	1101,	11,	11,	1010,	11,	1100
2017-01-04 11:24:51 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:51 AI_Player.update()		1001,	110,	1011,	1010,	11,	101,	1001
2017-01-04 11:24:51 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:24:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:51 AI_Player.update()	update
2017-01-04 11:24:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:51 AI_Player.update()	update
2017-01-04 11:24:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:52 AI_Player.update()	Search took533ms
2017-01-04 11:24:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()		110,	111,	111,	1010,	111,	1010,	11
2017-01-04 11:24:52 AI_Player.update()		110,	11,	110,	101,	110,	110,	1100
2017-01-04 11:24:52 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-04 11:24:52 AI_Player.update()		1011,	1001,	11,	11,	1010,	11,	1100
2017-01-04 11:24:52 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:24:52 AI_Player.update()		1001,	1100,	1011,	1010,	11,	101,	1001
2017-01-04 11:24:52 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:24:52 AI_Player.update()	Player a has won!
2017-01-04 11:24:52 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:52 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:24:52 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:52 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:24:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:52 AI_Player.update()	Search took52ms
2017-01-04 11:24:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()		110,	1001,	111,	1010,	111,	1010,	11
2017-01-04 11:24:52 AI_Player.update()		1100,	101,	1101,	1001,	1011,	1010,	101
2017-01-04 11:24:52 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1010,	1011
2017-01-04 11:24:52 AI_Player.update()		1100,	101,	1001,	101,	101,	1100,	1001
2017-01-04 11:24:52 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:24:52 AI_Player.update()		11,	1100,	1001,	1010,	11,	110,	1001
2017-01-04 11:24:52 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:52 AI_Player.update()	Search took25ms
2017-01-04 11:24:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()		110,	1001,	111,	1010,	111,	1010,	11
2017-01-04 11:24:52 AI_Player.update()		101,	1100,	101,	1101,	1001,	1011,	1010
2017-01-04 11:24:52 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1010,	1011
2017-01-04 11:24:52 AI_Player.update()		1100,	101,	1001,	101,	101,	1100,	1001
2017-01-04 11:24:52 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:24:52 AI_Player.update()		11,	1100,	1001,	1010,	11,	110,	1001
2017-01-04 11:24:52 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:52 AI_Player.update()	Search took192ms
2017-01-04 11:24:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-04 11:24:52 AI_Player.update()		101,	1100,	101,	1010,	1001,	1011,	1010
2017-01-04 11:24:52 AI_Player.update()		1110,	1101,	1110,	101,	111,	1010,	1011
2017-01-04 11:24:52 AI_Player.update()		1100,	101,	1001,	1100,	101,	1100,	1001
2017-01-04 11:24:52 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:24:52 AI_Player.update()		11,	1100,	1001,	1010,	11,	110,	1001
2017-01-04 11:24:52 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:52 AI_Player.update()	Search took215ms
2017-01-04 11:24:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-04 11:24:52 AI_Player.update()		101,	1101,	101,	1010,	1001,	1011,	1010
2017-01-04 11:24:52 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 11:24:52 AI_Player.update()		1100,	110,	1001,	1100,	101,	1100,	1001
2017-01-04 11:24:52 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:24:52 AI_Player.update()		11,	11,	1001,	1010,	11,	110,	1001
2017-01-04 11:24:52 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:52 AI_Player.update()	Search took115ms
2017-01-04 11:24:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()		110,	1100,	111,	1101,	111,	1001,	11
2017-01-04 11:24:52 AI_Player.update()		101,	1101,	101,	1010,	1001,	1010,	1010
2017-01-04 11:24:52 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:52 AI_Player.update()		1100,	110,	1001,	1100,	101,	1010,	1001
2017-01-04 11:24:52 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:24:52 AI_Player.update()		11,	11,	1001,	1010,	11,	1010,	1001
2017-01-04 11:24:52 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	110,	1001
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:52 AI_Player.update()	Search took103ms
2017-01-04 11:24:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()		110,	1101,	111,	1101,	111,	1001,	11
2017-01-04 11:24:52 AI_Player.update()		101,	101,	101,	1010,	1001,	1010,	1010
2017-01-04 11:24:52 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:52 AI_Player.update()		1100,	1100,	1001,	1100,	101,	1010,	1001
2017-01-04 11:24:52 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:24:52 AI_Player.update()		11,	1001,	1001,	1010,	11,	1010,	1001
2017-01-04 11:24:52 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:52 AI_Player.update()	Search took93ms
2017-01-04 11:24:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()		110,	1101,	111,	1101,	111,	1001,	11
2017-01-04 11:24:52 AI_Player.update()		101,	101,	101,	1010,	1001,	1010,	1010
2017-01-04 11:24:52 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:52 AI_Player.update()		1100,	1100,	1001,	1100,	101,	1010,	1001
2017-01-04 11:24:52 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:24:52 AI_Player.update()		1001,	11,	1001,	1001,	1010,	11,	1010
2017-01-04 11:24:52 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-04 11:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:52 AI_Player.update()	update
2017-01-04 11:24:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:53 AI_Player.update()	Search took236ms
2017-01-04 11:24:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:53 AI_Player.update()		110,	1101,	111,	1101,	111,	1001,	11
2017-01-04 11:24:53 AI_Player.update()		101,	101,	1010,	1001,	1010,	1010,	101
2017-01-04 11:24:53 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:53 AI_Player.update()		1100,	1100,	1001,	1100,	101,	1010,	1001
2017-01-04 11:24:53 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:24:53 AI_Player.update()		1001,	11,	1001,	1001,	1010,	11,	1010
2017-01-04 11:24:53 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-04 11:24:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:24:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:53 AI_Player.update()	update
2017-01-04 11:24:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:53 AI_Player.update()	update
2017-01-04 11:24:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:53 AI_Player.update()	Search took199ms
2017-01-04 11:24:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:53 AI_Player.update()		110,	1101,	111,	1101,	111,	1001,	11
2017-01-04 11:24:53 AI_Player.update()		101,	101,	1010,	1001,	1010,	1010,	101
2017-01-04 11:24:53 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:53 AI_Player.update()		1100,	1001,	1100,	101,	1010,	1001,	1100
2017-01-04 11:24:53 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:24:53 AI_Player.update()		1001,	11,	1001,	1001,	1010,	11,	1010
2017-01-04 11:24:53 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-04 11:24:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:24:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:53 AI_Player.update()	update
2017-01-04 11:24:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:53 AI_Player.update()	update
2017-01-04 11:24:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:54 AI_Player.update()	Search took681ms
2017-01-04 11:24:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:54 AI_Player.update()		110,	101,	111,	1101,	111,	1001,	11
2017-01-04 11:24:54 AI_Player.update()		101,	110,	1010,	1001,	1010,	1010,	101
2017-01-04 11:24:54 AI_Player.update()		1110,	1001,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:54 AI_Player.update()		1100,	11,	1100,	101,	1010,	1001,	1100
2017-01-04 11:24:54 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:24:54 AI_Player.update()		1001,	1100,	1001,	1001,	1010,	11,	1010
2017-01-04 11:24:54 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	110,	1001
2017-01-04 11:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:54 AI_Player.update()	update
2017-01-04 11:24:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:24:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:54 AI_Player.update()	update
2017-01-04 11:24:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:54 AI_Player.update()	Search took746ms
2017-01-04 11:24:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:54 AI_Player.update()		110,	110,	111,	1101,	111,	1001,	11
2017-01-04 11:24:54 AI_Player.update()		101,	1001,	1010,	1001,	1010,	1010,	101
2017-01-04 11:24:54 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:54 AI_Player.update()		1100,	11,	1100,	101,	1010,	1001,	1100
2017-01-04 11:24:54 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:24:54 AI_Player.update()		1001,	1101,	1001,	1001,	1010,	11,	1010
2017-01-04 11:24:54 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-04 11:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:54 AI_Player.update()	update
2017-01-04 11:24:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:54 AI_Player.update()	update
2017-01-04 11:24:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:55 AI_Player.update()	Search took555ms
2017-01-04 11:24:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:55 AI_Player.update()		110,	1001,	111,	1101,	111,	1001,	11
2017-01-04 11:24:55 AI_Player.update()		101,	11,	1010,	1001,	1010,	1010,	101
2017-01-04 11:24:55 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:55 AI_Player.update()		1100,	1100,	1100,	101,	1010,	1001,	1100
2017-01-04 11:24:55 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:24:55 AI_Player.update()		1001,	101,	1001,	1001,	1010,	11,	1010
2017-01-04 11:24:55 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-04 11:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:55 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:55 AI_Player.update()	update
2017-01-04 11:24:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:55 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:55 AI_Player.update()	update
2017-01-04 11:24:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:55 AI_Player.update()	Search took598ms
2017-01-04 11:24:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:55 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-04 11:24:55 AI_Player.update()		101,	11,	1010,	1101,	1010,	1010,	101
2017-01-04 11:24:55 AI_Player.update()		1110,	11,	1110,	1001,	111,	1011,	1011
2017-01-04 11:24:55 AI_Player.update()		1100,	1100,	1100,	101,	1010,	1001,	1100
2017-01-04 11:24:55 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-04 11:24:56 AI_Player.update()		1001,	101,	1001,	1010,	1010,	11,	1010
2017-01-04 11:24:56 AI_Player.update()		1100,	110,	1101,	1001,	1101,	110,	1001
2017-01-04 11:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:56 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:56 AI_Player.update()	update
2017-01-04 11:24:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:56 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:56 AI_Player.update()	update
2017-01-04 11:24:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:56 AI_Player.update()	Search took452ms
2017-01-04 11:24:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:56 AI_Player.update()		110,	1001,	111,	1101,	111,	1001,	11
2017-01-04 11:24:56 AI_Player.update()		101,	11,	1010,	1001,	1010,	1010,	101
2017-01-04 11:24:56 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:56 AI_Player.update()		1100,	1100,	1100,	101,	1010,	1001,	1100
2017-01-04 11:24:56 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:24:56 AI_Player.update()		1001,	101,	1001,	1001,	1010,	11,	1010
2017-01-04 11:24:56 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-04 11:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:56 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:56 AI_Player.update()	update
2017-01-04 11:24:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:56 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:56 AI_Player.update()	update
2017-01-04 11:24:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:57 AI_Player.update()	Search took555ms
2017-01-04 11:24:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:57 AI_Player.update()		110,	1001,	111,	1101,	111,	1001,	11
2017-01-04 11:24:57 AI_Player.update()		101,	101,	11,	1010,	1001,	1010,	1010
2017-01-04 11:24:57 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:57 AI_Player.update()		1100,	1100,	1100,	101,	1010,	1001,	1100
2017-01-04 11:24:57 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:24:57 AI_Player.update()		1001,	101,	1001,	1001,	1010,	11,	1010
2017-01-04 11:24:57 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-04 11:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:57 AI_Player.update()	update
2017-01-04 11:24:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:57 AI_Player.update()	update
2017-01-04 11:24:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:57 AI_Player.update()	Search took210ms
2017-01-04 11:24:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:57 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-04 11:24:57 AI_Player.update()		101,	101,	11,	101,	1001,	1010,	1010
2017-01-04 11:24:57 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:57 AI_Player.update()		1100,	1100,	1100,	1010,	1010,	1001,	1100
2017-01-04 11:24:57 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:24:57 AI_Player.update()		1001,	101,	1001,	1010,	1010,	11,	1010
2017-01-04 11:24:57 AI_Player.update()		1100,	110,	1101,	1101,	1101,	110,	1001
2017-01-04 11:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:57 AI_Player.update()	update
2017-01-04 11:24:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:57 AI_Player.update()	update
2017-01-04 11:24:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:57 AI_Player.update()	Search took120ms
2017-01-04 11:24:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:57 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-04 11:24:57 AI_Player.update()		101,	101,	11,	101,	1001,	1010,	1010
2017-01-04 11:24:57 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:57 AI_Player.update()		1100,	1100,	1100,	1100,	1010,	1010,	1001
2017-01-04 11:24:57 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:24:57 AI_Player.update()		1001,	101,	1001,	1010,	1010,	11,	1010
2017-01-04 11:24:57 AI_Player.update()		1100,	110,	1101,	1101,	1101,	110,	1001
2017-01-04 11:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:57 AI_Player.update()	update
2017-01-04 11:24:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:57 AI_Player.update()	update
2017-01-04 11:24:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:57 AI_Player.update()	Search took614ms
2017-01-04 11:24:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:57 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-04 11:24:57 AI_Player.update()		101,	11,	11,	101,	1001,	1010,	1010
2017-01-04 11:24:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:57 AI_Player.update()		1100,	1101,	1100,	1100,	1010,	1010,	1001
2017-01-04 11:24:57 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:24:57 AI_Player.update()		1001,	110,	1001,	1010,	1010,	11,	1010
2017-01-04 11:24:57 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	110,	1001
2017-01-04 11:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:57 AI_Player.update()	update
2017-01-04 11:24:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:57 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:57 AI_Player.update()	update
2017-01-04 11:24:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:58 AI_Player.update()	Search took291ms
2017-01-04 11:24:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:58 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-04 11:24:58 AI_Player.update()		101,	11,	11,	101,	1001,	1010,	1010
2017-01-04 11:24:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:58 AI_Player.update()		1001,	1100,	1101,	1100,	1100,	1010,	1010
2017-01-04 11:24:58 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:24:58 AI_Player.update()		1001,	110,	1001,	1010,	1010,	11,	1010
2017-01-04 11:24:58 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	110,	1001
2017-01-04 11:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:58 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:24:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:58 AI_Player.update()	update
2017-01-04 11:24:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:58 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:24:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:24:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:58 AI_Player.update()	update
2017-01-04 11:24:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:24:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:24:59 AI_Player.update()	Search took724ms
2017-01-04 11:24:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:59 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-04 11:24:59 AI_Player.update()		101,	1100,	11,	101,	1001,	1010,	1010
2017-01-04 11:24:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:59 AI_Player.update()		1001,	101,	1101,	1100,	1100,	1010,	1010
2017-01-04 11:24:59 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:24:59 AI_Player.update()		1001,	1001,	1001,	1010,	1010,	11,	1010
2017-01-04 11:24:59 AI_Player.update()		1100,	101,	1101,	1101,	1101,	110,	1001
2017-01-04 11:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:59 AI_Player.update()	update
2017-01-04 11:24:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:24:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:24:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:59 AI_Player.update()	update
2017-01-04 11:24:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:59 AI_Player.update()	Search took784ms
2017-01-04 11:24:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:59 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-04 11:24:59 AI_Player.update()		101,	1100,	11,	101,	1001,	1010,	1010
2017-01-04 11:24:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	1011,	1011
2017-01-04 11:24:59 AI_Player.update()		101,	1101,	1100,	1100,	1010,	1010,	1001
2017-01-04 11:24:59 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:24:59 AI_Player.update()		1001,	1001,	1001,	1010,	1010,	11,	1010
2017-01-04 11:24:59 AI_Player.update()		1100,	101,	1101,	1101,	1101,	110,	1001
2017-01-04 11:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:59 AI_Player.update()	update
2017-01-04 11:24:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:59 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:24:59 AI_Player.update()	Player a has won!
2017-01-04 11:24:59 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:59 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:24:59 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:24:59 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:24:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:24:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:59 AI_Player.update()	update
2017-01-04 11:24:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:24:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:24:59 AI_Player.update()	Search took114ms
2017-01-04 11:24:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:59 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 11:24:59 AI_Player.update()		110,	1110,	111,	101,	101,	1001,	1110
2017-01-04 11:24:59 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-04 11:24:59 AI_Player.update()		1110,	1010,	101,	11,	1010,	101,	1011
2017-01-04 11:24:59 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:24:59 AI_Player.update()		1001,	1101,	1010,	101,	101,	1100,	11
2017-01-04 11:24:59 AI_Player.update()		1100,	110,	1101,	1010,	1101,	111,	1001
2017-01-04 11:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:24:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:59 AI_Player.update()	update
2017-01-04 11:24:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:24:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:24:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:24:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:24:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:24:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:24:59 AI_Player.update()	update
2017-01-04 11:24:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:00 AI_Player.update()	Search took562ms
2017-01-04 11:25:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:00 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 11:25:00 AI_Player.update()		110,	1110,	111,	101,	101,	1001,	1110
2017-01-04 11:25:00 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-04 11:25:00 AI_Player.update()		1011,	1110,	1010,	101,	11,	1010,	101
2017-01-04 11:25:00 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:25:00 AI_Player.update()		1001,	1101,	1010,	101,	101,	1100,	11
2017-01-04 11:25:00 AI_Player.update()		1100,	110,	1101,	1010,	1101,	111,	1001
2017-01-04 11:25:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:00 AI_Player.update()	update
2017-01-04 11:25:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:25:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:00 AI_Player.update()	update
2017-01-04 11:25:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:00 AI_Player.update()	Search took327ms
2017-01-04 11:25:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:00 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-04 11:25:00 AI_Player.update()		110,	1001,	111,	101,	101,	1001,	1110
2017-01-04 11:25:00 AI_Player.update()		1110,	1110,	1110,	1001,	111,	1010,	1011
2017-01-04 11:25:00 AI_Player.update()		1011,	101,	1010,	101,	11,	1010,	101
2017-01-04 11:25:00 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:25:00 AI_Player.update()		1001,	110,	1010,	101,	101,	1100,	11
2017-01-04 11:25:00 AI_Player.update()		1100,	101,	1101,	1010,	1101,	111,	1001
2017-01-04 11:25:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:25:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:00 AI_Player.update()	update
2017-01-04 11:25:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:00 AI_Player.update()	update
2017-01-04 11:25:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:01 AI_Player.update()	Search took323ms
2017-01-04 11:25:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:01 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-04 11:25:01 AI_Player.update()		1110,	110,	1001,	111,	101,	101,	1001
2017-01-04 11:25:01 AI_Player.update()		1110,	1110,	1110,	1001,	111,	1010,	1011
2017-01-04 11:25:01 AI_Player.update()		1011,	101,	1010,	101,	11,	1010,	101
2017-01-04 11:25:01 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:25:01 AI_Player.update()		1001,	110,	1010,	101,	101,	1100,	11
2017-01-04 11:25:01 AI_Player.update()		1100,	101,	1101,	1010,	1101,	111,	1001
2017-01-04 11:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:01 AI_Player.update()	update
2017-01-04 11:25:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:25:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:01 AI_Player.update()	update
2017-01-04 11:25:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:01 AI_Player.update()	Search took143ms
2017-01-04 11:25:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:01 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 11:25:01 AI_Player.update()		1110,	1110,	1001,	111,	101,	101,	1001
2017-01-04 11:25:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-04 11:25:01 AI_Player.update()		1011,	1101,	1010,	101,	11,	1010,	101
2017-01-04 11:25:01 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-04 11:25:01 AI_Player.update()		1001,	101,	1010,	101,	101,	1100,	11
2017-01-04 11:25:01 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	111,	1001
2017-01-04 11:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:01 AI_Player.update()	update
2017-01-04 11:25:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:01 AI_Player.update()	update
2017-01-04 11:25:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:01 AI_Player.update()	Search took239ms
2017-01-04 11:25:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:01 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-04 11:25:01 AI_Player.update()		1110,	101,	1001,	111,	101,	101,	1001
2017-01-04 11:25:01 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1010,	1011
2017-01-04 11:25:01 AI_Player.update()		1011,	110,	1010,	101,	11,	1010,	101
2017-01-04 11:25:01 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:25:01 AI_Player.update()		1001,	1110,	1010,	101,	101,	1100,	11
2017-01-04 11:25:01 AI_Player.update()		1100,	110,	1101,	1010,	1101,	111,	1001
2017-01-04 11:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:01 AI_Player.update()	update
2017-01-04 11:25:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:01 AI_Player.update()	update
2017-01-04 11:25:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:01 AI_Player.update()	Search took181ms
2017-01-04 11:25:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:01 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-04 11:25:01 AI_Player.update()		1110,	101,	1001,	111,	101,	101,	1001
2017-01-04 11:25:01 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1010,	1011
2017-01-04 11:25:01 AI_Player.update()		1011,	110,	1010,	101,	11,	1010,	101
2017-01-04 11:25:01 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:25:01 AI_Player.update()		1110,	1010,	101,	101,	1100,	11,	1001
2017-01-04 11:25:01 AI_Player.update()		1100,	110,	1101,	1010,	1101,	111,	1001
2017-01-04 11:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:01 AI_Player.update()	update
2017-01-04 11:25:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:25:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:01 AI_Player.update()	update
2017-01-04 11:25:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:02 AI_Player.update()	Search took554ms
2017-01-04 11:25:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:02 AI_Player.update()		110,	1110,	111,	111,	111,	101,	11
2017-01-04 11:25:02 AI_Player.update()		1110,	101,	1001,	1001,	101,	101,	1001
2017-01-04 11:25:02 AI_Player.update()		1110,	1101,	1110,	101,	111,	1010,	1011
2017-01-04 11:25:02 AI_Player.update()		1011,	110,	1010,	1010,	11,	1010,	101
2017-01-04 11:25:02 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:25:02 AI_Player.update()		1110,	1010,	101,	1010,	1100,	11,	1001
2017-01-04 11:25:02 AI_Player.update()		1100,	110,	1101,	1010,	1101,	111,	1001
2017-01-04 11:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:02 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:25:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:02 AI_Player.update()	update
2017-01-04 11:25:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:02 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:25:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:02 AI_Player.update()	update
2017-01-04 11:25:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:03 AI_Player.update()	Search took1177ms
2017-01-04 11:25:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:03 AI_Player.update()		110,	1110,	111,	111,	111,	111,	11
2017-01-04 11:25:03 AI_Player.update()		1110,	101,	1001,	1001,	101,	101,	1001
2017-01-04 11:25:03 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-04 11:25:03 AI_Player.update()		1011,	110,	1010,	1010,	11,	1010,	101
2017-01-04 11:25:03 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:25:03 AI_Player.update()		1110,	1010,	101,	1010,	1100,	110,	1001
2017-01-04 11:25:03 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-04 11:25:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:03 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:25:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:03 AI_Player.update()	update
2017-01-04 11:25:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:03 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:25:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:03 AI_Player.update()	update
2017-01-04 11:25:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:04 AI_Player.update()	Search took1206ms
2017-01-04 11:25:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:04 AI_Player.update()		110,	1110,	111,	111,	111,	111,	11
2017-01-04 11:25:04 AI_Player.update()		1110,	101,	1001,	1001,	101,	101,	1001
2017-01-04 11:25:04 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-04 11:25:04 AI_Player.update()		1011,	110,	1010,	1010,	11,	1010,	101
2017-01-04 11:25:04 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:25:04 AI_Player.update()		1001,	1110,	1010,	101,	1010,	1100,	110
2017-01-04 11:25:04 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-04 11:25:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:04 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:25:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:04 AI_Player.update()	update
2017-01-04 11:25:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:04 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:25:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:04 AI_Player.update()	update
2017-01-04 11:25:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:05 AI_Player.update()	Search took1085ms
2017-01-04 11:25:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:05 AI_Player.update()		110,	1110,	111,	111,	111,	111,	11
2017-01-04 11:25:05 AI_Player.update()		1110,	101,	1001,	1001,	101,	101,	1001
2017-01-04 11:25:05 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-04 11:25:05 AI_Player.update()		110,	1010,	1010,	11,	1010,	101,	1011
2017-01-04 11:25:05 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:25:05 AI_Player.update()		1001,	1110,	1010,	101,	1010,	1100,	110
2017-01-04 11:25:05 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-04 11:25:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:05 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:25:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:05 AI_Player.update()	update
2017-01-04 11:25:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:25:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:05 AI_Player.update()	update
2017-01-04 11:25:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:06 AI_Player.update()	Search took1115ms
2017-01-04 11:25:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:06 AI_Player.update()		110,	1110,	111,	111,	111,	11,	11
2017-01-04 11:25:06 AI_Player.update()		1110,	101,	1001,	1001,	101,	111,	1001
2017-01-04 11:25:06 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-04 11:25:06 AI_Player.update()		110,	1010,	1010,	11,	1010,	101,	1011
2017-01-04 11:25:06 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:25:06 AI_Player.update()		1001,	1110,	1010,	101,	1010,	1010,	110
2017-01-04 11:25:06 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-04 11:25:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:06 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:25:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:06 AI_Player.update()	update
2017-01-04 11:25:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:06 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:25:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:06 AI_Player.update()	update
2017-01-04 11:25:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:07 AI_Player.update()	Search took1062ms
2017-01-04 11:25:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:07 AI_Player.update()		110,	1110,	111,	111,	111,	11,	11
2017-01-04 11:25:07 AI_Player.update()		1001,	1110,	101,	1001,	1001,	101,	111
2017-01-04 11:25:07 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-04 11:25:07 AI_Player.update()		110,	1010,	1010,	11,	1010,	101,	1011
2017-01-04 11:25:07 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:25:07 AI_Player.update()		1001,	1110,	1010,	101,	1010,	1010,	110
2017-01-04 11:25:07 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-04 11:25:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:07 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:25:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:07 AI_Player.update()	update
2017-01-04 11:25:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:07 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:25:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:07 AI_Player.update()	update
2017-01-04 11:25:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:09 AI_Player.update()	Search took1427ms
2017-01-04 11:25:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:09 AI_Player.update()		110,	1110,	111,	111,	111,	1100,	11
2017-01-04 11:25:09 AI_Player.update()		1001,	1110,	101,	1001,	1001,	11,	111
2017-01-04 11:25:09 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-04 11:25:09 AI_Player.update()		110,	1010,	1010,	11,	1010,	101,	1011
2017-01-04 11:25:09 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:25:09 AI_Player.update()		1001,	1110,	1010,	101,	1010,	101,	110
2017-01-04 11:25:09 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:25:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:09 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:25:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:09 AI_Player.update()	update
2017-01-04 11:25:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:09 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:25:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:09 AI_Player.update()	update
2017-01-04 11:25:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:10 AI_Player.update()	Search took1008ms
2017-01-04 11:25:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:10 AI_Player.update()		110,	1110,	111,	111,	111,	1100,	11
2017-01-04 11:25:10 AI_Player.update()		111,	1001,	1110,	101,	1001,	1001,	11
2017-01-04 11:25:10 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-04 11:25:10 AI_Player.update()		110,	1010,	1010,	11,	1010,	101,	1011
2017-01-04 11:25:10 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:25:10 AI_Player.update()		1001,	1110,	1010,	101,	1010,	101,	110
2017-01-04 11:25:10 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:25:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:10 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:25:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:10 AI_Player.update()	update
2017-01-04 11:25:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:10 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:25:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:10 AI_Player.update()	update
2017-01-04 11:25:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:12 AI_Player.update()	Search took1722ms
2017-01-04 11:25:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()		110,	1110,	111,	111,	111,	1100,	11
2017-01-04 11:25:12 AI_Player.update()		1001,	1110,	101,	1001,	1001,	11,	111
2017-01-04 11:25:12 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-04 11:25:12 AI_Player.update()		110,	1010,	1010,	11,	1010,	101,	1011
2017-01-04 11:25:12 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:25:12 AI_Player.update()		1001,	1110,	1010,	101,	1010,	101,	110
2017-01-04 11:25:12 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()	update
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()	update
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:12 AI_Player.update()	Search took275ms
2017-01-04 11:25:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()		110,	1110,	111,	111,	111,	1100,	11
2017-01-04 11:25:12 AI_Player.update()		1001,	1101,	101,	1001,	1001,	11,	111
2017-01-04 11:25:12 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:25:12 AI_Player.update()		110,	101,	1010,	11,	1010,	101,	1011
2017-01-04 11:25:12 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-04 11:25:12 AI_Player.update()		1001,	110,	1010,	101,	1010,	101,	110
2017-01-04 11:25:12 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()	update
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:12 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:25:12 AI_Player.update()	Player a has won!
2017-01-04 11:25:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:25:12 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:25:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:25:12 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:25:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()	update
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:12 AI_Player.update()	Search took103ms
2017-01-04 11:25:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-04 11:25:12 AI_Player.update()		111,	1001,	1011,	1010,	110,	101,	11
2017-01-04 11:25:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-04 11:25:12 AI_Player.update()		101,	110,	1001,	110,	11,	1011,	1010
2017-01-04 11:25:12 AI_Player.update()		1110,	11,	1101,	1110,	1011,	110,	1011
2017-01-04 11:25:12 AI_Player.update()		1101,	1100,	1100,	1100,	1010,	101,	1011
2017-01-04 11:25:12 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()	update
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()	update
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:12 AI_Player.update()	Search took42ms
2017-01-04 11:25:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()		110,	11,	111,	1011,	111,	101,	11
2017-01-04 11:25:12 AI_Player.update()		111,	1001,	1011,	1001,	110,	101,	11
2017-01-04 11:25:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-04 11:25:12 AI_Player.update()		101,	110,	1001,	1010,	11,	1011,	1010
2017-01-04 11:25:12 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-04 11:25:12 AI_Player.update()		1101,	1100,	1100,	1110,	1010,	101,	1011
2017-01-04 11:25:12 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()	update
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()	update
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:12 AI_Player.update()	Search took149ms
2017-01-04 11:25:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()		110,	11,	111,	1011,	111,	101,	11
2017-01-04 11:25:12 AI_Player.update()		11,	111,	1001,	1011,	1001,	110,	101
2017-01-04 11:25:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-04 11:25:12 AI_Player.update()		101,	110,	1001,	1010,	11,	1011,	1010
2017-01-04 11:25:12 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-04 11:25:12 AI_Player.update()		1101,	1100,	1100,	1110,	1010,	101,	1011
2017-01-04 11:25:12 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()	update
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()	update
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:12 AI_Player.update()	Search took133ms
2017-01-04 11:25:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()		110,	11,	111,	1011,	111,	110,	11
2017-01-04 11:25:12 AI_Player.update()		11,	111,	1001,	1011,	1001,	1100,	101
2017-01-04 11:25:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1011,	1011
2017-01-04 11:25:12 AI_Player.update()		101,	110,	1001,	1010,	11,	110,	1010
2017-01-04 11:25:12 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-04 11:25:12 AI_Player.update()		1101,	1100,	1100,	1110,	1010,	1010,	1011
2017-01-04 11:25:12 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()	update
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:12 AI_Player.update()	update
2017-01-04 11:25:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:13 AI_Player.update()	Search took346ms
2017-01-04 11:25:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:13 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-04 11:25:13 AI_Player.update()		11,	111,	1001,	1011,	1001,	1100,	101
2017-01-04 11:25:13 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:13 AI_Player.update()		101,	110,	1001,	1010,	11,	110,	1010
2017-01-04 11:25:13 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:13 AI_Player.update()		1101,	1100,	1100,	110,	1010,	1010,	1011
2017-01-04 11:25:13 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 11:25:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:13 AI_Player.update()	update
2017-01-04 11:25:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:13 AI_Player.update()	update
2017-01-04 11:25:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:13 AI_Player.update()	Search took665ms
2017-01-04 11:25:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:13 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-04 11:25:13 AI_Player.update()		11,	1001,	1001,	1011,	1001,	1100,	101
2017-01-04 11:25:13 AI_Player.update()		1110,	110,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:13 AI_Player.update()		101,	11,	1001,	1010,	11,	110,	1010
2017-01-04 11:25:13 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:13 AI_Player.update()		1101,	1010,	1100,	110,	1010,	1010,	1011
2017-01-04 11:25:13 AI_Player.update()		1100,	11,	1101,	1110,	1101,	101,	1001
2017-01-04 11:25:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:13 AI_Player.update()	update
2017-01-04 11:25:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:13 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:13 AI_Player.update()	update
2017-01-04 11:25:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:14 AI_Player.update()	Search took150ms
2017-01-04 11:25:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:14 AI_Player.update()		110,	111,	111,	1011,	111,	110,	11
2017-01-04 11:25:14 AI_Player.update()		11,	1001,	1001,	1011,	1001,	1100,	101
2017-01-04 11:25:14 AI_Player.update()		1110,	110,	1110,	1010,	111,	1011,	1011
2017-01-04 11:25:14 AI_Player.update()		101,	11,	1001,	1010,	11,	110,	1010
2017-01-04 11:25:14 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-04 11:25:14 AI_Player.update()		1101,	1010,	1100,	1110,	1010,	1010,	1011
2017-01-04 11:25:14 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 11:25:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:14 AI_Player.update()	update
2017-01-04 11:25:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:14 AI_Player.update()	update
2017-01-04 11:25:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:14 AI_Player.update()	Search took697ms
2017-01-04 11:25:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:14 AI_Player.update()		110,	1001,	111,	1011,	111,	110,	11
2017-01-04 11:25:14 AI_Player.update()		11,	110,	1001,	1011,	1001,	1100,	101
2017-01-04 11:25:14 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-04 11:25:14 AI_Player.update()		101,	1100,	1001,	1010,	11,	110,	1010
2017-01-04 11:25:14 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-04 11:25:14 AI_Player.update()		1101,	11,	1100,	1110,	1010,	1010,	1011
2017-01-04 11:25:14 AI_Player.update()		1100,	111,	1101,	1100,	1101,	101,	1001
2017-01-04 11:25:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:14 AI_Player.update()	update
2017-01-04 11:25:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:14 AI_Player.update()	update
2017-01-04 11:25:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:15 AI_Player.update()	Search took245ms
2017-01-04 11:25:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:15 AI_Player.update()		110,	1001,	111,	1100,	111,	110,	11
2017-01-04 11:25:15 AI_Player.update()		11,	110,	1001,	1011,	1001,	1100,	101
2017-01-04 11:25:15 AI_Player.update()		1110,	11,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:15 AI_Player.update()		101,	1100,	1001,	1010,	11,	110,	1010
2017-01-04 11:25:15 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:15 AI_Player.update()		1101,	11,	1100,	110,	1010,	1010,	1011
2017-01-04 11:25:15 AI_Player.update()		1100,	111,	1101,	1110,	1101,	101,	1001
2017-01-04 11:25:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:15 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:15 AI_Player.update()	update
2017-01-04 11:25:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:15 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:15 AI_Player.update()	update
2017-01-04 11:25:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:15 AI_Player.update()	Search took595ms
2017-01-04 11:25:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:15 AI_Player.update()		110,	110,	111,	1100,	111,	110,	11
2017-01-04 11:25:15 AI_Player.update()		11,	11,	1001,	1011,	1001,	1100,	101
2017-01-04 11:25:15 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:15 AI_Player.update()		101,	1010,	1001,	1010,	11,	110,	1010
2017-01-04 11:25:15 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:15 AI_Player.update()		1101,	111,	1100,	110,	1010,	1010,	1011
2017-01-04 11:25:15 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	101,	1001
2017-01-04 11:25:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:15 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:15 AI_Player.update()	update
2017-01-04 11:25:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:15 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:15 AI_Player.update()	update
2017-01-04 11:25:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:15 AI_Player.update()	Search took201ms
2017-01-04 11:25:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:15 AI_Player.update()		110,	110,	111,	1011,	111,	110,	11
2017-01-04 11:25:15 AI_Player.update()		11,	11,	1001,	1011,	1001,	1100,	101
2017-01-04 11:25:15 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1011,	1011
2017-01-04 11:25:15 AI_Player.update()		101,	1010,	1001,	1010,	11,	110,	1010
2017-01-04 11:25:15 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-04 11:25:15 AI_Player.update()		1101,	111,	1100,	1110,	1010,	1010,	1011
2017-01-04 11:25:15 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-04 11:25:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:15 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:15 AI_Player.update()	update
2017-01-04 11:25:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:15 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:15 AI_Player.update()	update
2017-01-04 11:25:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:16 AI_Player.update()	Search took501ms
2017-01-04 11:25:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:16 AI_Player.update()		110,	11,	111,	1011,	111,	110,	11
2017-01-04 11:25:16 AI_Player.update()		11,	1100,	1001,	1011,	1001,	1100,	101
2017-01-04 11:25:16 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1011,	1011
2017-01-04 11:25:16 AI_Player.update()		101,	11,	1001,	1010,	11,	110,	1010
2017-01-04 11:25:16 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 11:25:16 AI_Player.update()		1101,	1001,	1100,	1110,	1010,	1010,	1011
2017-01-04 11:25:16 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 11:25:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:16 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:16 AI_Player.update()	update
2017-01-04 11:25:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:16 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:16 AI_Player.update()	update
2017-01-04 11:25:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:16 AI_Player.update()	Search took143ms
2017-01-04 11:25:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:16 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-04 11:25:16 AI_Player.update()		11,	1100,	1001,	1011,	1001,	1100,	101
2017-01-04 11:25:16 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:16 AI_Player.update()		101,	11,	1001,	1010,	11,	110,	1010
2017-01-04 11:25:16 AI_Player.update()		1110,	111,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:16 AI_Player.update()		1101,	1001,	1100,	110,	1010,	1010,	1011
2017-01-04 11:25:16 AI_Player.update()		1100,	110,	1101,	1110,	1101,	101,	1001
2017-01-04 11:25:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:16 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:16 AI_Player.update()	update
2017-01-04 11:25:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:16 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:16 AI_Player.update()	update
2017-01-04 11:25:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:16 AI_Player.update()	Search took426ms
2017-01-04 11:25:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:16 AI_Player.update()		110,	1100,	111,	1100,	111,	110,	11
2017-01-04 11:25:16 AI_Player.update()		11,	1010,	1001,	1011,	1001,	1100,	101
2017-01-04 11:25:16 AI_Player.update()		1110,	11,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:16 AI_Player.update()		101,	111,	1001,	1010,	11,	110,	1010
2017-01-04 11:25:16 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:16 AI_Player.update()		1101,	110,	1100,	110,	1010,	1010,	1011
2017-01-04 11:25:16 AI_Player.update()		1100,	11,	1101,	1110,	1101,	101,	1001
2017-01-04 11:25:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:16 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:16 AI_Player.update()	update
2017-01-04 11:25:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:16 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:16 AI_Player.update()	update
2017-01-04 11:25:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:17 AI_Player.update()	Search took164ms
2017-01-04 11:25:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:17 AI_Player.update()		110,	1100,	111,	1011,	111,	110,	11
2017-01-04 11:25:17 AI_Player.update()		11,	1010,	1001,	1011,	1001,	1100,	101
2017-01-04 11:25:17 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-04 11:25:17 AI_Player.update()		101,	111,	1001,	1010,	11,	110,	1010
2017-01-04 11:25:17 AI_Player.update()		1110,	1001,	1101,	110,	1011,	101,	1011
2017-01-04 11:25:17 AI_Player.update()		1101,	110,	1100,	1110,	1010,	1010,	1011
2017-01-04 11:25:17 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 11:25:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:17 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:17 AI_Player.update()	update
2017-01-04 11:25:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:17 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:17 AI_Player.update()	update
2017-01-04 11:25:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:17 AI_Player.update()	Search took473ms
2017-01-04 11:25:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:17 AI_Player.update()		110,	1100,	111,	1100,	111,	110,	11
2017-01-04 11:25:17 AI_Player.update()		11,	1010,	1001,	1011,	1001,	1100,	101
2017-01-04 11:25:17 AI_Player.update()		1110,	11,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:17 AI_Player.update()		101,	111,	1001,	1010,	11,	110,	1010
2017-01-04 11:25:17 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:17 AI_Player.update()		1101,	110,	1100,	110,	1010,	1010,	1011
2017-01-04 11:25:17 AI_Player.update()		1100,	11,	1101,	1110,	1101,	101,	1001
2017-01-04 11:25:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:17 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:17 AI_Player.update()	update
2017-01-04 11:25:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:17 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:17 AI_Player.update()	update
2017-01-04 11:25:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:17 AI_Player.update()	Search took156ms
2017-01-04 11:25:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:17 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-04 11:25:17 AI_Player.update()		11,	1010,	1001,	1100,	1001,	1100,	101
2017-01-04 11:25:17 AI_Player.update()		1110,	11,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:17 AI_Player.update()		101,	111,	1001,	1011,	11,	110,	1010
2017-01-04 11:25:17 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:17 AI_Player.update()		1101,	110,	1100,	1010,	1010,	1010,	1011
2017-01-04 11:25:17 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 11:25:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:17 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:17 AI_Player.update()	update
2017-01-04 11:25:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:17 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:17 AI_Player.update()	update
2017-01-04 11:25:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:18 AI_Player.update()	Search took377ms
2017-01-04 11:25:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:18 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-04 11:25:18 AI_Player.update()		1010,	1001,	1100,	1001,	1100,	101,	11
2017-01-04 11:25:18 AI_Player.update()		1110,	11,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:18 AI_Player.update()		101,	111,	1001,	1011,	11,	110,	1010
2017-01-04 11:25:18 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:18 AI_Player.update()		1101,	110,	1100,	1010,	1010,	1010,	1011
2017-01-04 11:25:18 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 11:25:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:18 AI_Player.update()	update
2017-01-04 11:25:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:18 AI_Player.update()	update
2017-01-04 11:25:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:18 AI_Player.update()	Search took647ms
2017-01-04 11:25:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:18 AI_Player.update()		110,	11,	111,	1110,	111,	110,	11
2017-01-04 11:25:18 AI_Player.update()		1010,	1100,	1100,	1001,	1100,	101,	11
2017-01-04 11:25:18 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:18 AI_Player.update()		101,	11,	1001,	1011,	11,	110,	1010
2017-01-04 11:25:18 AI_Player.update()		1110,	111,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:18 AI_Player.update()		1101,	1001,	1100,	1010,	1010,	1010,	1011
2017-01-04 11:25:18 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-04 11:25:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:18 AI_Player.update()	update
2017-01-04 11:25:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:18 AI_Player.update()	update
2017-01-04 11:25:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:18 AI_Player.update()	Search took217ms
2017-01-04 11:25:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:18 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-04 11:25:18 AI_Player.update()		1010,	1001,	1100,	1001,	1100,	101,	11
2017-01-04 11:25:18 AI_Player.update()		1110,	11,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:18 AI_Player.update()		101,	111,	1001,	1011,	11,	110,	1010
2017-01-04 11:25:18 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:18 AI_Player.update()		1101,	110,	1100,	1010,	1010,	1010,	1011
2017-01-04 11:25:18 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 11:25:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:18 AI_Player.update()	update
2017-01-04 11:25:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:18 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:18 AI_Player.update()	update
2017-01-04 11:25:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:19 AI_Player.update()	Search took698ms
2017-01-04 11:25:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:19 AI_Player.update()		110,	11,	111,	1110,	111,	110,	11
2017-01-04 11:25:19 AI_Player.update()		1010,	1100,	1100,	1001,	1100,	101,	11
2017-01-04 11:25:19 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:19 AI_Player.update()		101,	11,	1001,	1011,	11,	110,	1010
2017-01-04 11:25:19 AI_Player.update()		1110,	111,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:19 AI_Player.update()		1101,	1001,	1100,	1010,	1010,	1010,	1011
2017-01-04 11:25:19 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-04 11:25:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:19 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:19 AI_Player.update()	update
2017-01-04 11:25:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:19 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:19 AI_Player.update()	update
2017-01-04 11:25:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:19 AI_Player.update()	Search took191ms
2017-01-04 11:25:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:19 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-04 11:25:19 AI_Player.update()		1010,	1001,	1100,	1001,	1100,	101,	11
2017-01-04 11:25:19 AI_Player.update()		1110,	11,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:19 AI_Player.update()		101,	111,	1001,	1011,	11,	110,	1010
2017-01-04 11:25:19 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:19 AI_Player.update()		1101,	110,	1100,	1010,	1010,	1010,	1011
2017-01-04 11:25:19 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 11:25:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:19 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:19 AI_Player.update()	update
2017-01-04 11:25:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:19 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:19 AI_Player.update()	update
2017-01-04 11:25:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:20 AI_Player.update()	Search took688ms
2017-01-04 11:25:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:20 AI_Player.update()		110,	11,	111,	1110,	111,	110,	11
2017-01-04 11:25:20 AI_Player.update()		1010,	1100,	1100,	1001,	1100,	101,	11
2017-01-04 11:25:20 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:20 AI_Player.update()		101,	11,	1001,	1011,	11,	110,	1010
2017-01-04 11:25:20 AI_Player.update()		1110,	111,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:20 AI_Player.update()		1101,	1001,	1100,	1010,	1010,	1010,	1011
2017-01-04 11:25:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-04 11:25:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:20 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:20 AI_Player.update()	update
2017-01-04 11:25:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:20 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:20 AI_Player.update()	update
2017-01-04 11:25:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:20 AI_Player.update()	Search took109ms
2017-01-04 11:25:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:20 AI_Player.update()		110,	11,	111,	1110,	111,	110,	11
2017-01-04 11:25:20 AI_Player.update()		1100,	1100,	1001,	1100,	101,	11,	1010
2017-01-04 11:25:20 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:20 AI_Player.update()		101,	11,	1001,	1011,	11,	110,	1010
2017-01-04 11:25:20 AI_Player.update()		1110,	111,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:20 AI_Player.update()		1101,	1001,	1100,	1010,	1010,	1010,	1011
2017-01-04 11:25:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-04 11:25:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:20 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:20 AI_Player.update()	update
2017-01-04 11:25:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:20 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:20 AI_Player.update()	update
2017-01-04 11:25:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:21 AI_Player.update()	Search took581ms
2017-01-04 11:25:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()		110,	11,	111,	1110,	111,	110,	11
2017-01-04 11:25:21 AI_Player.update()		1100,	1100,	1001,	1100,	101,	11,	1010
2017-01-04 11:25:21 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:21 AI_Player.update()		1010,	101,	11,	1001,	1011,	11,	110
2017-01-04 11:25:21 AI_Player.update()		1110,	111,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:21 AI_Player.update()		1101,	1001,	1100,	1010,	1010,	1010,	1011
2017-01-04 11:25:21 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-04 11:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()	update
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	5 1
2017-01-04 11:25:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()	update
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:21 AI_Player.update()	Search took93ms
2017-01-04 11:25:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-04 11:25:21 AI_Player.update()		1100,	1001,	1001,	1100,	101,	11,	1010
2017-01-04 11:25:21 AI_Player.update()		1110,	101,	1110,	1011,	111,	1011,	1011
2017-01-04 11:25:21 AI_Player.update()		1010,	111,	11,	1001,	1011,	11,	110
2017-01-04 11:25:21 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 11:25:21 AI_Player.update()		1101,	110,	1100,	1010,	1010,	1010,	1011
2017-01-04 11:25:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 11:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	5 1
2017-01-04 11:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()	update
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	5 1
2017-01-04 11:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()	update
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:21 AI_Player.update()	Search took249ms
2017-01-04 11:25:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-04 11:25:21 AI_Player.update()		1100,	1001,	1001,	1110,	101,	11,	1010
2017-01-04 11:25:21 AI_Player.update()		1110,	101,	1110,	1100,	111,	1011,	1011
2017-01-04 11:25:21 AI_Player.update()		1010,	111,	11,	1011,	1011,	11,	110
2017-01-04 11:25:21 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-04 11:25:21 AI_Player.update()		1101,	110,	1100,	1010,	1010,	1010,	1011
2017-01-04 11:25:21 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 11:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	5 1
2017-01-04 11:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()	update
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	5 1
2017-01-04 11:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()	update
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:21 AI_Player.update()	Search took68ms
2017-01-04 11:25:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 11:25:21 AI_Player.update()		1100,	101,	1001,	1110,	101,	11,	1010
2017-01-04 11:25:21 AI_Player.update()		1110,	111,	1110,	1100,	111,	1011,	1011
2017-01-04 11:25:21 AI_Player.update()		1010,	1001,	11,	1011,	1011,	11,	110
2017-01-04 11:25:21 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:25:21 AI_Player.update()		1101,	11,	1100,	1010,	1010,	1010,	1011
2017-01-04 11:25:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-04 11:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	5 1
2017-01-04 11:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()	update
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:25:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()	update
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:21 AI_Player.update()	Search took268ms
2017-01-04 11:25:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 11:25:21 AI_Player.update()		1100,	101,	1001,	1110,	101,	11,	1010
2017-01-04 11:25:21 AI_Player.update()		1110,	111,	1110,	1100,	111,	1011,	1011
2017-01-04 11:25:21 AI_Player.update()		110,	1010,	1001,	11,	1011,	1011,	11
2017-01-04 11:25:21 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:25:21 AI_Player.update()		1101,	11,	1100,	1010,	1010,	1010,	1011
2017-01-04 11:25:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-04 11:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()	update
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:21 AI_Player.update()	update
2017-01-04 11:25:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:22 AI_Player.update()	Search took113ms
2017-01-04 11:25:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:22 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 11:25:22 AI_Player.update()		1100,	101,	1001,	1110,	101,	11,	1010
2017-01-04 11:25:22 AI_Player.update()		1110,	111,	1110,	1100,	111,	1011,	1011
2017-01-04 11:25:22 AI_Player.update()		110,	1010,	1001,	11,	1011,	1011,	11
2017-01-04 11:25:22 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:25:22 AI_Player.update()		1011,	1101,	11,	1100,	1010,	1010,	1010
2017-01-04 11:25:22 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-04 11:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:22 AI_Player.update()	update
2017-01-04 11:25:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:22 AI_Player.update()	update
2017-01-04 11:25:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:22 AI_Player.update()	Search took675ms
2017-01-04 11:25:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:22 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:25:22 AI_Player.update()		1100,	101,	1001,	1110,	101,	110,	1010
2017-01-04 11:25:22 AI_Player.update()		1110,	111,	1110,	1100,	111,	11,	1011
2017-01-04 11:25:22 AI_Player.update()		110,	1010,	1001,	11,	1011,	1011,	11
2017-01-04 11:25:22 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1011,	1011
2017-01-04 11:25:22 AI_Player.update()		1011,	1101,	11,	1100,	1010,	101,	1010
2017-01-04 11:25:22 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:22 AI_Player.update()	update
2017-01-04 11:25:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:22 AI_Player.update()	update
2017-01-04 11:25:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:22 AI_Player.update()	Search took187ms
2017-01-04 11:25:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:22 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:25:22 AI_Player.update()		1100,	101,	1001,	1110,	101,	110,	1010
2017-01-04 11:25:22 AI_Player.update()		1110,	111,	1110,	1100,	111,	11,	1011
2017-01-04 11:25:22 AI_Player.update()		11,	110,	1010,	1001,	11,	1011,	1011
2017-01-04 11:25:22 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1011,	1011
2017-01-04 11:25:22 AI_Player.update()		1011,	1101,	11,	1100,	1010,	101,	1010
2017-01-04 11:25:22 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:22 AI_Player.update()	update
2017-01-04 11:25:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:25:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:22 AI_Player.update()	update
2017-01-04 11:25:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:23 AI_Player.update()	Search took535ms
2017-01-04 11:25:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:23 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:25:23 AI_Player.update()		1010,	1100,	101,	1001,	1110,	101,	110
2017-01-04 11:25:23 AI_Player.update()		1110,	111,	1110,	1100,	111,	11,	1011
2017-01-04 11:25:23 AI_Player.update()		11,	110,	1010,	1001,	11,	1011,	1011
2017-01-04 11:25:23 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1011,	1011
2017-01-04 11:25:23 AI_Player.update()		1011,	1101,	11,	1100,	1010,	101,	1010
2017-01-04 11:25:23 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:23 AI_Player.update()	update
2017-01-04 11:25:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:23 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:25:23 AI_Player.update()	Player a has won!
2017-01-04 11:25:23 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:25:23 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:25:23 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:25:23 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:25:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:23 AI_Player.update()	update
2017-01-04 11:25:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:23 AI_Player.update()	Search took94ms
2017-01-04 11:25:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:23 AI_Player.update()		110,	1100,	111,	111,	111,	11,	11
2017-01-04 11:25:23 AI_Player.update()		1100,	101,	11,	1011,	1010,	1010,	101
2017-01-04 11:25:23 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 11:25:23 AI_Player.update()		1001,	11,	101,	111,	110,	110,	101
2017-01-04 11:25:23 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 11:25:23 AI_Player.update()		1110,	110,	110,	1001,	1011,	101,	1011
2017-01-04 11:25:23 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:23 AI_Player.update()	update
2017-01-04 11:25:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:23 AI_Player.update()	update
2017-01-04 11:25:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:23 AI_Player.update()	Search took46ms
2017-01-04 11:25:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:23 AI_Player.update()		110,	1100,	111,	111,	111,	1101,	11
2017-01-04 11:25:23 AI_Player.update()		1100,	101,	11,	1011,	1010,	11,	101
2017-01-04 11:25:23 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-04 11:25:23 AI_Player.update()		1001,	11,	101,	111,	110,	101,	101
2017-01-04 11:25:23 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 11:25:23 AI_Player.update()		1110,	110,	110,	1001,	1011,	1100,	1011
2017-01-04 11:25:23 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 11:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:23 AI_Player.update()	update
2017-01-04 11:25:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:23 AI_Player.update()	update
2017-01-04 11:25:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:23 AI_Player.update()	Search took143ms
2017-01-04 11:25:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:23 AI_Player.update()		110,	1100,	111,	111,	111,	1101,	11
2017-01-04 11:25:23 AI_Player.update()		101,	11,	1011,	1010,	11,	101,	1100
2017-01-04 11:25:23 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-04 11:25:23 AI_Player.update()		1001,	11,	101,	111,	110,	101,	101
2017-01-04 11:25:23 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 11:25:23 AI_Player.update()		1110,	110,	110,	1001,	1011,	1100,	1011
2017-01-04 11:25:23 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 11:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:23 AI_Player.update()	update
2017-01-04 11:25:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:23 AI_Player.update()	update
2017-01-04 11:25:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:24 AI_Player.update()	Search took303ms
2017-01-04 11:25:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:24 AI_Player.update()		110,	11,	111,	111,	111,	1101,	11
2017-01-04 11:25:24 AI_Player.update()		101,	1010,	1011,	1010,	11,	101,	1100
2017-01-04 11:25:24 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-04 11:25:24 AI_Player.update()		1001,	1010,	101,	111,	110,	101,	101
2017-01-04 11:25:24 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 11:25:24 AI_Player.update()		1110,	1010,	110,	1001,	1011,	1100,	1011
2017-01-04 11:25:24 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-04 11:25:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:24 AI_Player.update()	update
2017-01-04 11:25:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:24 AI_Player.update()	update
2017-01-04 11:25:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:24 AI_Player.update()	Search took417ms
2017-01-04 11:25:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:24 AI_Player.update()		110,	11,	111,	1010,	111,	1101,	11
2017-01-04 11:25:24 AI_Player.update()		101,	1010,	1011,	110,	11,	101,	1100
2017-01-04 11:25:24 AI_Player.update()		1110,	11,	1110,	111,	111,	1010,	1011
2017-01-04 11:25:24 AI_Player.update()		1001,	1010,	101,	11,	110,	101,	101
2017-01-04 11:25:24 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-04 11:25:24 AI_Player.update()		1110,	1010,	110,	1001,	1011,	1100,	1011
2017-01-04 11:25:24 AI_Player.update()		1100,	1100,	1101,	111,	1101,	101,	1001
2017-01-04 11:25:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:24 AI_Player.update()	update
2017-01-04 11:25:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:24 AI_Player.update()	update
2017-01-04 11:25:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:25 AI_Player.update()	Search took868ms
2017-01-04 11:25:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:25 AI_Player.update()		110,	11,	111,	1010,	111,	1101,	11
2017-01-04 11:25:25 AI_Player.update()		101,	1010,	1011,	110,	11,	101,	1100
2017-01-04 11:25:25 AI_Player.update()		1110,	11,	1110,	111,	111,	1010,	1011
2017-01-04 11:25:25 AI_Player.update()		1001,	1010,	101,	11,	110,	101,	101
2017-01-04 11:25:25 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-04 11:25:25 AI_Player.update()		1010,	110,	1001,	1011,	1100,	1011,	1110
2017-01-04 11:25:25 AI_Player.update()		1100,	1100,	1101,	111,	1101,	101,	1001
2017-01-04 11:25:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:25 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:25 AI_Player.update()	update
2017-01-04 11:25:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:25:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:25 AI_Player.update()	update
2017-01-04 11:25:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:26 AI_Player.update()	Search took646ms
2017-01-04 11:25:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:26 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-04 11:25:26 AI_Player.update()		101,	11,	1011,	110,	11,	101,	1100
2017-01-04 11:25:26 AI_Player.update()		1110,	1010,	1110,	111,	111,	1010,	1011
2017-01-04 11:25:26 AI_Player.update()		1001,	110,	101,	11,	110,	101,	101
2017-01-04 11:25:26 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-04 11:25:26 AI_Player.update()		1010,	1100,	1001,	1011,	1100,	1011,	1110
2017-01-04 11:25:26 AI_Player.update()		1100,	11,	1101,	111,	1101,	101,	1001
2017-01-04 11:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:26 AI_Player.update()	update
2017-01-04 11:25:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:26 AI_Player.update()	update
2017-01-04 11:25:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:26 AI_Player.update()	Search took132ms
2017-01-04 11:25:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:26 AI_Player.update()		110,	11,	111,	1010,	111,	1101,	11
2017-01-04 11:25:26 AI_Player.update()		101,	1010,	1011,	110,	11,	101,	1100
2017-01-04 11:25:26 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-04 11:25:26 AI_Player.update()		1001,	110,	101,	11,	110,	101,	101
2017-01-04 11:25:26 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-04 11:25:26 AI_Player.update()		1010,	11,	1001,	1011,	1100,	1011,	1110
2017-01-04 11:25:26 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-04 11:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:26 AI_Player.update()	update
2017-01-04 11:25:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:26 AI_Player.update()	update
2017-01-04 11:25:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:26 AI_Player.update()	Search took524ms
2017-01-04 11:25:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:26 AI_Player.update()		110,	11,	111,	1010,	111,	1101,	11
2017-01-04 11:25:26 AI_Player.update()		101,	1010,	1011,	110,	11,	101,	1100
2017-01-04 11:25:26 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-04 11:25:26 AI_Player.update()		1001,	110,	101,	11,	110,	101,	101
2017-01-04 11:25:26 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-04 11:25:26 AI_Player.update()		1110,	1010,	11,	1001,	1011,	1100,	1011
2017-01-04 11:25:26 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-04 11:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:26 AI_Player.update()	update
2017-01-04 11:25:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:26 AI_Player.update()	update
2017-01-04 11:25:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:26 AI_Player.update()	Search took41ms
2017-01-04 11:25:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:26 AI_Player.update()		110,	11,	111,	1010,	111,	1101,	11
2017-01-04 11:25:26 AI_Player.update()		101,	1010,	1011,	110,	11,	101,	1100
2017-01-04 11:25:26 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-04 11:25:26 AI_Player.update()		1001,	110,	101,	11,	110,	101,	101
2017-01-04 11:25:26 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-04 11:25:26 AI_Player.update()		1010,	11,	1001,	1011,	1100,	1011,	1110
2017-01-04 11:25:26 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-04 11:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:26 AI_Player.update()	update
2017-01-04 11:25:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:26 AI_Player.update()	update
2017-01-04 11:25:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:27 AI_Player.update()	Search took482ms
2017-01-04 11:25:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:27 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-04 11:25:27 AI_Player.update()		101,	1010,	1011,	110,	11,	1010,	1100
2017-01-04 11:25:27 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-04 11:25:27 AI_Player.update()		1001,	110,	101,	11,	110,	110,	101
2017-01-04 11:25:27 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1011,	1011
2017-01-04 11:25:27 AI_Player.update()		1010,	11,	1001,	1011,	1100,	101,	1110
2017-01-04 11:25:27 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1101,	1001
2017-01-04 11:25:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:25:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:27 AI_Player.update()	update
2017-01-04 11:25:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:25:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:27 AI_Player.update()	update
2017-01-04 11:25:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:27 AI_Player.update()	Search took114ms
2017-01-04 11:25:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:27 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-04 11:25:27 AI_Player.update()		101,	1010,	1011,	110,	11,	1010,	1100
2017-01-04 11:25:27 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-04 11:25:27 AI_Player.update()		1001,	110,	101,	11,	110,	110,	101
2017-01-04 11:25:27 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1011,	1011
2017-01-04 11:25:27 AI_Player.update()		11,	1001,	1011,	1100,	101,	1110,	1010
2017-01-04 11:25:27 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1101,	1001
2017-01-04 11:25:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:25:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:27 AI_Player.update()	update
2017-01-04 11:25:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:25:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:27 AI_Player.update()	update
2017-01-04 11:25:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:27 AI_Player.update()	Search took226ms
2017-01-04 11:25:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:27 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 11:25:27 AI_Player.update()		101,	11,	1011,	110,	11,	1010,	1100
2017-01-04 11:25:27 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-04 11:25:27 AI_Player.update()		1001,	110,	101,	11,	110,	110,	101
2017-01-04 11:25:27 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1011,	1011
2017-01-04 11:25:27 AI_Player.update()		11,	1100,	1011,	1100,	101,	1110,	1010
2017-01-04 11:25:27 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1101,	1001
2017-01-04 11:25:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:25:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:27 AI_Player.update()	update
2017-01-04 11:25:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:25:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:27 AI_Player.update()	update
2017-01-04 11:25:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:28 AI_Player.update()	Search took604ms
2017-01-04 11:25:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 11:25:28 AI_Player.update()		101,	11,	1011,	110,	11,	1010,	1100
2017-01-04 11:25:28 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-04 11:25:28 AI_Player.update()		1001,	110,	101,	11,	110,	110,	101
2017-01-04 11:25:28 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1011,	1011
2017-01-04 11:25:28 AI_Player.update()		1010,	11,	1100,	1011,	1100,	101,	1110
2017-01-04 11:25:28 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1101,	1001
2017-01-04 11:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()	update
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:25:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()	update
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:28 AI_Player.update()	Search took207ms
2017-01-04 11:25:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()		110,	1010,	111,	111,	111,	101,	11
2017-01-04 11:25:28 AI_Player.update()		101,	11,	1011,	1010,	11,	1010,	1100
2017-01-04 11:25:28 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 11:25:28 AI_Player.update()		1001,	110,	101,	111,	110,	110,	101
2017-01-04 11:25:28 AI_Player.update()		1110,	110,	1101,	11,	1011,	1011,	1011
2017-01-04 11:25:28 AI_Player.update()		1010,	11,	1100,	1001,	1100,	101,	1110
2017-01-04 11:25:28 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1101,	1001
2017-01-04 11:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()	update
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:25:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()	update
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:28 AI_Player.update()	Search took54ms
2017-01-04 11:25:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 11:25:28 AI_Player.update()		101,	11,	1011,	110,	11,	1010,	1100
2017-01-04 11:25:28 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-04 11:25:28 AI_Player.update()		1001,	110,	101,	11,	110,	110,	101
2017-01-04 11:25:28 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1011,	1011
2017-01-04 11:25:28 AI_Player.update()		1010,	11,	1100,	1011,	1100,	101,	1110
2017-01-04 11:25:28 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1101,	1001
2017-01-04 11:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()	update
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()	update
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:28 AI_Player.update()	Search took138ms
2017-01-04 11:25:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 11:25:28 AI_Player.update()		1100,	101,	11,	1011,	110,	11,	1010
2017-01-04 11:25:28 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-04 11:25:28 AI_Player.update()		1001,	110,	101,	11,	110,	110,	101
2017-01-04 11:25:28 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1011,	1011
2017-01-04 11:25:28 AI_Player.update()		1010,	11,	1100,	1011,	1100,	101,	1110
2017-01-04 11:25:28 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1101,	1001
2017-01-04 11:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()	update
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:28 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:25:28 AI_Player.update()	Player a has won!
2017-01-04 11:25:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:25:28 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:25:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:25:28 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:25:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()	update
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:28 AI_Player.update()	Search took257ms
2017-01-04 11:25:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()		110,	1101,	111,	1100,	111,	101,	11
2017-01-04 11:25:28 AI_Player.update()		101,	1001,	1100,	1010,	101,	101,	1110
2017-01-04 11:25:28 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-04 11:25:28 AI_Player.update()		110,	1010,	1100,	1110,	11,	1001,	11
2017-01-04 11:25:28 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:25:28 AI_Player.update()		101,	1100,	1001,	101,	11,	1001,	101
2017-01-04 11:25:28 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1110,	1001
2017-01-04 11:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()	update
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:28 AI_Player.update()	update
2017-01-04 11:25:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:29 AI_Player.update()	Search took136ms
2017-01-04 11:25:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-04 11:25:29 AI_Player.update()		101,	1001,	1100,	11,	101,	101,	1110
2017-01-04 11:25:29 AI_Player.update()		1110,	101,	1110,	1110,	111,	1010,	1011
2017-01-04 11:25:29 AI_Player.update()		110,	1010,	1100,	1001,	11,	1001,	11
2017-01-04 11:25:29 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-04 11:25:29 AI_Player.update()		101,	1100,	1001,	1101,	11,	1001,	101
2017-01-04 11:25:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1110,	1001
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:25:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:29 AI_Player.update()	Search took268ms
2017-01-04 11:25:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 11:25:29 AI_Player.update()		101,	101,	1100,	11,	101,	101,	1110
2017-01-04 11:25:29 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-04 11:25:29 AI_Player.update()		110,	110,	1100,	1001,	11,	1001,	11
2017-01-04 11:25:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-04 11:25:29 AI_Player.update()		101,	1010,	1001,	1101,	11,	1001,	101
2017-01-04 11:25:29 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1110,	1001
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:29 AI_Player.update()	Search took82ms
2017-01-04 11:25:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 11:25:29 AI_Player.update()		101,	1010,	1100,	11,	101,	101,	1110
2017-01-04 11:25:29 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-04 11:25:29 AI_Player.update()		110,	1100,	1100,	1001,	11,	1001,	11
2017-01-04 11:25:29 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 11:25:29 AI_Player.update()		101,	1101,	1001,	1101,	11,	1001,	101
2017-01-04 11:25:29 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1110,	1001
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:29 AI_Player.update()	Search took50ms
2017-01-04 11:25:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 11:25:29 AI_Player.update()		101,	1010,	1100,	1010,	101,	101,	1110
2017-01-04 11:25:29 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-04 11:25:29 AI_Player.update()		110,	1100,	1100,	1110,	11,	1001,	11
2017-01-04 11:25:29 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:25:29 AI_Player.update()		101,	1101,	1001,	101,	11,	1001,	101
2017-01-04 11:25:29 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1110,	1001
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:29 AI_Player.update()	Search took124ms
2017-01-04 11:25:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-04 11:25:29 AI_Player.update()		101,	1010,	1100,	1100,	101,	101,	1110
2017-01-04 11:25:29 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-04 11:25:29 AI_Player.update()		110,	1100,	1100,	11,	11,	1001,	11
2017-01-04 11:25:29 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1100,	1011
2017-01-04 11:25:29 AI_Player.update()		101,	1101,	1001,	1001,	11,	1001,	101
2017-01-04 11:25:29 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1110,	1001
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:29 AI_Player.update()	Search took174ms
2017-01-04 11:25:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-04 11:25:29 AI_Player.update()		101,	110,	1100,	1100,	101,	101,	1110
2017-01-04 11:25:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 11:25:29 AI_Player.update()		110,	1010,	1100,	11,	11,	1001,	11
2017-01-04 11:25:29 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1100,	1011
2017-01-04 11:25:29 AI_Player.update()		101,	1001,	1001,	1001,	11,	1001,	101
2017-01-04 11:25:29 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:29 AI_Player.update()	Search took41ms
2017-01-04 11:25:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-04 11:25:29 AI_Player.update()		101,	1010,	1100,	1100,	101,	101,	1110
2017-01-04 11:25:29 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-04 11:25:29 AI_Player.update()		110,	1100,	1100,	11,	11,	1001,	11
2017-01-04 11:25:29 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1100,	1011
2017-01-04 11:25:29 AI_Player.update()		101,	1101,	1001,	1001,	11,	1001,	101
2017-01-04 11:25:29 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1110,	1001
2017-01-04 11:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:29 AI_Player.update()	update
2017-01-04 11:25:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:30 AI_Player.update()	Search took188ms
2017-01-04 11:25:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:30 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:25:30 AI_Player.update()		101,	1010,	1100,	1101,	101,	101,	1110
2017-01-04 11:25:30 AI_Player.update()		1110,	110,	1110,	1100,	111,	1010,	1011
2017-01-04 11:25:30 AI_Player.update()		110,	1100,	1100,	1010,	11,	1001,	11
2017-01-04 11:25:30 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 11:25:30 AI_Player.update()		101,	1101,	1001,	1110,	11,	1001,	101
2017-01-04 11:25:30 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:30 AI_Player.update()	update
2017-01-04 11:25:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:30 AI_Player.update()	update
2017-01-04 11:25:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:30 AI_Player.update()	Search took363ms
2017-01-04 11:25:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:30 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:25:30 AI_Player.update()		1110,	101,	1010,	1100,	1101,	101,	101
2017-01-04 11:25:30 AI_Player.update()		1110,	110,	1110,	1100,	111,	1010,	1011
2017-01-04 11:25:30 AI_Player.update()		110,	1100,	1100,	1010,	11,	1001,	11
2017-01-04 11:25:30 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 11:25:30 AI_Player.update()		101,	1101,	1001,	1110,	11,	1001,	101
2017-01-04 11:25:30 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:30 AI_Player.update()	update
2017-01-04 11:25:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:25:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:30 AI_Player.update()	update
2017-01-04 11:25:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:30 AI_Player.update()	Search took564ms
2017-01-04 11:25:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:30 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 11:25:30 AI_Player.update()		1110,	101,	1010,	1100,	1101,	101,	101
2017-01-04 11:25:30 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-04 11:25:30 AI_Player.update()		110,	1100,	1100,	11,	11,	1001,	11
2017-01-04 11:25:30 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1100,	1011
2017-01-04 11:25:30 AI_Player.update()		101,	1101,	1001,	1001,	11,	1001,	101
2017-01-04 11:25:30 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1110,	1001
2017-01-04 11:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:25:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:30 AI_Player.update()	update
2017-01-04 11:25:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:30 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:25:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:30 AI_Player.update()	update
2017-01-04 11:25:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:31 AI_Player.update()	Search took397ms
2017-01-04 11:25:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:31 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 11:25:31 AI_Player.update()		1110,	110,	1010,	1100,	1101,	101,	101
2017-01-04 11:25:31 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 11:25:31 AI_Player.update()		110,	1010,	1100,	11,	11,	1001,	11
2017-01-04 11:25:31 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1100,	1011
2017-01-04 11:25:31 AI_Player.update()		101,	1001,	1001,	1001,	11,	1001,	101
2017-01-04 11:25:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-04 11:25:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:25:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:31 AI_Player.update()	update
2017-01-04 11:25:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:25:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:31 AI_Player.update()	update
2017-01-04 11:25:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:31 AI_Player.update()	Search took216ms
2017-01-04 11:25:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:31 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:25:31 AI_Player.update()		1110,	110,	1010,	1100,	1101,	101,	101
2017-01-04 11:25:31 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 11:25:31 AI_Player.update()		110,	1010,	1100,	1010,	11,	1001,	11
2017-01-04 11:25:31 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1100,	1011
2017-01-04 11:25:31 AI_Player.update()		101,	1001,	1001,	1110,	11,	1001,	101
2017-01-04 11:25:31 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:25:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:25:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:31 AI_Player.update()	update
2017-01-04 11:25:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:25:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:31 AI_Player.update()	update
2017-01-04 11:25:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:32 AI_Player.update()	Search took567ms
2017-01-04 11:25:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:32 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 11:25:32 AI_Player.update()		1110,	1100,	1010,	1100,	1101,	101,	101
2017-01-04 11:25:32 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-04 11:25:32 AI_Player.update()		110,	1101,	1100,	1010,	11,	1001,	11
2017-01-04 11:25:32 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 11:25:32 AI_Player.update()		101,	101,	1001,	1110,	11,	1001,	101
2017-01-04 11:25:32 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:25:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:32 AI_Player.update()	update
2017-01-04 11:25:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:25:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:32 AI_Player.update()	update
2017-01-04 11:25:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:32 AI_Player.update()	Search took65ms
2017-01-04 11:25:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:32 AI_Player.update()		110,	110,	111,	101,	111,	1110,	11
2017-01-04 11:25:32 AI_Player.update()		1110,	1100,	1010,	1100,	1101,	101,	101
2017-01-04 11:25:32 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-04 11:25:32 AI_Player.update()		110,	1101,	1100,	1010,	11,	1010,	11
2017-01-04 11:25:32 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 11:25:32 AI_Player.update()		101,	101,	1001,	1110,	11,	1100,	101
2017-01-04 11:25:32 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:25:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:32 AI_Player.update()	update
2017-01-04 11:25:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:25:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:32 AI_Player.update()	update
2017-01-04 11:25:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:32 AI_Player.update()	Search took306ms
2017-01-04 11:25:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:32 AI_Player.update()		110,	1100,	111,	101,	111,	1110,	11
2017-01-04 11:25:32 AI_Player.update()		1110,	1010,	1010,	1100,	1101,	101,	101
2017-01-04 11:25:32 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-04 11:25:32 AI_Player.update()		110,	1001,	1100,	1010,	11,	1010,	11
2017-01-04 11:25:32 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 11:25:32 AI_Player.update()		101,	101,	1001,	1110,	11,	1100,	101
2017-01-04 11:25:32 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:25:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:32 AI_Player.update()	update
2017-01-04 11:25:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:25:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:32 AI_Player.update()	update
2017-01-04 11:25:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:32 AI_Player.update()	Search took129ms
2017-01-04 11:25:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:32 AI_Player.update()		110,	1100,	111,	101,	111,	1110,	11
2017-01-04 11:25:32 AI_Player.update()		1110,	1010,	1010,	1100,	1101,	101,	101
2017-01-04 11:25:32 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-04 11:25:32 AI_Player.update()		1001,	1100,	1010,	11,	1010,	11,	110
2017-01-04 11:25:32 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 11:25:32 AI_Player.update()		101,	101,	1001,	1110,	11,	1100,	101
2017-01-04 11:25:32 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:25:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:32 AI_Player.update()	update
2017-01-04 11:25:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:25:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:32 AI_Player.update()	update
2017-01-04 11:25:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:33 AI_Player.update()	Search took664ms
2017-01-04 11:25:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:33 AI_Player.update()		110,	1010,	111,	101,	111,	1110,	11
2017-01-04 11:25:33 AI_Player.update()		1110,	1101,	1010,	1100,	1101,	101,	101
2017-01-04 11:25:33 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-04 11:25:33 AI_Player.update()		1001,	101,	1010,	11,	1010,	11,	110
2017-01-04 11:25:33 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 11:25:33 AI_Player.update()		101,	110,	1001,	1110,	11,	1100,	101
2017-01-04 11:25:33 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:25:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:25:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:33 AI_Player.update()	update
2017-01-04 11:25:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:25:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:33 AI_Player.update()	update
2017-01-04 11:25:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:33 AI_Player.update()	Search took201ms
2017-01-04 11:25:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:33 AI_Player.update()		110,	1010,	111,	1100,	111,	1110,	11
2017-01-04 11:25:33 AI_Player.update()		1110,	1101,	1010,	1100,	1101,	101,	101
2017-01-04 11:25:33 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-04 11:25:33 AI_Player.update()		1001,	101,	1010,	11,	1010,	11,	110
2017-01-04 11:25:33 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1001,	1011
2017-01-04 11:25:33 AI_Player.update()		101,	110,	1001,	1001,	11,	1100,	101
2017-01-04 11:25:33 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 11:25:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:25:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:33 AI_Player.update()	update
2017-01-04 11:25:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:25:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:33 AI_Player.update()	update
2017-01-04 11:25:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:33 AI_Player.update()	Search took261ms
2017-01-04 11:25:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:33 AI_Player.update()		110,	1010,	111,	101,	111,	1110,	11
2017-01-04 11:25:33 AI_Player.update()		1110,	1101,	1010,	1100,	1101,	101,	101
2017-01-04 11:25:33 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-04 11:25:33 AI_Player.update()		1001,	101,	1010,	11,	1010,	11,	110
2017-01-04 11:25:33 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 11:25:33 AI_Player.update()		101,	110,	1001,	1110,	11,	1100,	101
2017-01-04 11:25:33 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:25:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:25:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:33 AI_Player.update()	update
2017-01-04 11:25:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:33 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:25:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:33 AI_Player.update()	update
2017-01-04 11:25:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:34 AI_Player.update()	Search took708ms
2017-01-04 11:25:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:34 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-04 11:25:34 AI_Player.update()		1110,	1101,	1010,	1100,	1101,	1110,	101
2017-01-04 11:25:34 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-04 11:25:34 AI_Player.update()		1001,	101,	1010,	11,	1010,	101,	110
2017-01-04 11:25:34 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-04 11:25:34 AI_Player.update()		101,	110,	1001,	1110,	11,	1001,	101
2017-01-04 11:25:34 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:25:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:25:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:34 AI_Player.update()	update
2017-01-04 11:25:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:25:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:34 AI_Player.update()	update
2017-01-04 11:25:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:34 AI_Player.update()	Search took123ms
2017-01-04 11:25:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:34 AI_Player.update()		110,	1101,	111,	101,	111,	1001,	11
2017-01-04 11:25:34 AI_Player.update()		1110,	1100,	1010,	1100,	1101,	1110,	101
2017-01-04 11:25:34 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 11:25:34 AI_Player.update()		1001,	101,	1010,	11,	1010,	101,	110
2017-01-04 11:25:34 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-04 11:25:34 AI_Player.update()		101,	1100,	1001,	1110,	11,	1001,	101
2017-01-04 11:25:34 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:25:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:25:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:34 AI_Player.update()	update
2017-01-04 11:25:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:34 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:25:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:34 AI_Player.update()	update
2017-01-04 11:25:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:35 AI_Player.update()	Search took717ms
2017-01-04 11:25:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:35 AI_Player.update()		110,	1101,	111,	101,	111,	1001,	11
2017-01-04 11:25:35 AI_Player.update()		101,	1110,	1100,	1010,	1100,	1101,	1110
2017-01-04 11:25:35 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 11:25:35 AI_Player.update()		1001,	101,	1010,	11,	1010,	101,	110
2017-01-04 11:25:35 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-04 11:25:35 AI_Player.update()		101,	1100,	1001,	1110,	11,	1001,	101
2017-01-04 11:25:35 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:25:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:25:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:35 AI_Player.update()	update
2017-01-04 11:25:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:35 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:25:35 AI_Player.update()	Player a has won!
2017-01-04 11:25:35 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:25:35 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:25:35 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:25:35 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:25:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:35 AI_Player.update()	update
2017-01-04 11:25:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:35 AI_Player.update()	Search took43ms
2017-01-04 11:25:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:35 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-04 11:25:35 AI_Player.update()		1010,	101,	11,	110,	101,	101,	101
2017-01-04 11:25:35 AI_Player.update()		1110,	101,	1110,	110,	111,	1101,	1011
2017-01-04 11:25:35 AI_Player.update()		11,	1010,	1100,	101,	110,	11,	1001
2017-01-04 11:25:35 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	111,	1011
2017-01-04 11:25:35 AI_Player.update()		1010,	1010,	1010,	110,	101,	1010,	11
2017-01-04 11:25:35 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 11:25:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:35 AI_Player.update()	update
2017-01-04 11:25:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:35 AI_Player.update()	update
2017-01-04 11:25:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:35 AI_Player.update()	Search took70ms
2017-01-04 11:25:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:35 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 11:25:35 AI_Player.update()		1010,	101,	11,	110,	101,	101,	101
2017-01-04 11:25:35 AI_Player.update()		1110,	101,	1110,	101,	111,	1101,	1011
2017-01-04 11:25:35 AI_Player.update()		11,	1010,	1100,	1011,	110,	11,	1001
2017-01-04 11:25:35 AI_Player.update()		1110,	1101,	1101,	110,	1011,	111,	1011
2017-01-04 11:25:35 AI_Player.update()		1010,	1010,	1010,	1010,	101,	1010,	11
2017-01-04 11:25:35 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 11:25:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:35 AI_Player.update()	update
2017-01-04 11:25:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:35 AI_Player.update()	update
2017-01-04 11:25:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:35 AI_Player.update()	Search took218ms
2017-01-04 11:25:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:35 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 11:25:35 AI_Player.update()		101,	11,	110,	101,	101,	101,	1010
2017-01-04 11:25:35 AI_Player.update()		1110,	101,	1110,	101,	111,	1101,	1011
2017-01-04 11:25:35 AI_Player.update()		11,	1010,	1100,	1011,	110,	11,	1001
2017-01-04 11:25:35 AI_Player.update()		1110,	1101,	1101,	110,	1011,	111,	1011
2017-01-04 11:25:35 AI_Player.update()		1010,	1010,	1010,	1010,	101,	1010,	11
2017-01-04 11:25:35 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 11:25:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:35 AI_Player.update()	update
2017-01-04 11:25:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:35 AI_Player.update()	update
2017-01-04 11:25:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:36 AI_Player.update()	Search took631ms
2017-01-04 11:25:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:36 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 11:25:36 AI_Player.update()		101,	11,	110,	101,	101,	1101,	1010
2017-01-04 11:25:36 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-04 11:25:36 AI_Player.update()		11,	1010,	1100,	1011,	110,	111,	1001
2017-01-04 11:25:36 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1010,	1011
2017-01-04 11:25:36 AI_Player.update()		1010,	1010,	1010,	1010,	101,	101,	11
2017-01-04 11:25:36 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 11:25:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:36 AI_Player.update()	update
2017-01-04 11:25:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:36 AI_Player.update()	update
2017-01-04 11:25:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:36 AI_Player.update()	Search took474ms
2017-01-04 11:25:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:36 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 11:25:36 AI_Player.update()		101,	11,	110,	101,	101,	1101,	1010
2017-01-04 11:25:36 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-04 11:25:36 AI_Player.update()		11,	1010,	1100,	1011,	110,	111,	1001
2017-01-04 11:25:36 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1010,	1011
2017-01-04 11:25:36 AI_Player.update()		11,	1010,	1010,	1010,	1010,	101,	101
2017-01-04 11:25:36 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 11:25:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:36 AI_Player.update()	update
2017-01-04 11:25:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:36 AI_Player.update()	update
2017-01-04 11:25:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:37 AI_Player.update()	Search took653ms
2017-01-04 11:25:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:37 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 11:25:37 AI_Player.update()		101,	101,	110,	101,	101,	1101,	1010
2017-01-04 11:25:37 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:25:37 AI_Player.update()		11,	1101,	1100,	1011,	110,	111,	1001
2017-01-04 11:25:37 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 11:25:37 AI_Player.update()		11,	110,	1010,	1010,	1010,	101,	101
2017-01-04 11:25:37 AI_Player.update()		1100,	1100,	1101,	11,	1101,	101,	1001
2017-01-04 11:25:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:37 AI_Player.update()	update
2017-01-04 11:25:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:37 AI_Player.update()	update
2017-01-04 11:25:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:38 AI_Player.update()	Search took496ms
2017-01-04 11:25:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:38 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 11:25:38 AI_Player.update()		101,	101,	110,	101,	101,	1101,	1010
2017-01-04 11:25:38 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-04 11:25:38 AI_Player.update()		11,	1101,	1100,	110,	110,	111,	1001
2017-01-04 11:25:38 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:25:38 AI_Player.update()		11,	110,	1010,	11,	1010,	101,	101
2017-01-04 11:25:38 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-04 11:25:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:38 AI_Player.update()	update
2017-01-04 11:25:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:38 AI_Player.update()	update
2017-01-04 11:25:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:38 AI_Player.update()	Search took129ms
2017-01-04 11:25:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:38 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 11:25:38 AI_Player.update()		101,	101,	110,	101,	101,	1101,	1010
2017-01-04 11:25:38 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:25:38 AI_Player.update()		11,	1101,	1100,	1011,	110,	111,	1001
2017-01-04 11:25:38 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 11:25:38 AI_Player.update()		11,	110,	1010,	1010,	1010,	101,	101
2017-01-04 11:25:38 AI_Player.update()		1100,	1100,	1101,	11,	1101,	101,	1001
2017-01-04 11:25:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:38 AI_Player.update()	update
2017-01-04 11:25:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:38 AI_Player.update()	update
2017-01-04 11:25:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:38 AI_Player.update()	Search took687ms
2017-01-04 11:25:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:38 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-04 11:25:38 AI_Player.update()		101,	101,	110,	110,	101,	1101,	1010
2017-01-04 11:25:38 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:25:38 AI_Player.update()		11,	1101,	1100,	101,	110,	111,	1001
2017-01-04 11:25:38 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:25:38 AI_Player.update()		11,	110,	1010,	110,	1010,	101,	101
2017-01-04 11:25:38 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-04 11:25:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:38 AI_Player.update()	update
2017-01-04 11:25:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:38 AI_Player.update()	update
2017-01-04 11:25:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:38 AI_Player.update()	Search took106ms
2017-01-04 11:25:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:38 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 11:25:38 AI_Player.update()		101,	1010,	110,	110,	101,	1101,	1010
2017-01-04 11:25:38 AI_Player.update()		1110,	1101,	1110,	101,	111,	11,	1011
2017-01-04 11:25:38 AI_Player.update()		11,	1010,	1100,	101,	110,	111,	1001
2017-01-04 11:25:38 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:25:38 AI_Player.update()		11,	1100,	1010,	110,	1010,	101,	101
2017-01-04 11:25:38 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 11:25:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:38 AI_Player.update()	update
2017-01-04 11:25:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:38 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:38 AI_Player.update()	update
2017-01-04 11:25:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:39 AI_Player.update()	Search took500ms
2017-01-04 11:25:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:39 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 11:25:39 AI_Player.update()		101,	1010,	110,	11,	101,	1101,	1010
2017-01-04 11:25:39 AI_Player.update()		1110,	1101,	1110,	110,	111,	11,	1011
2017-01-04 11:25:39 AI_Player.update()		11,	1010,	1100,	101,	110,	111,	1001
2017-01-04 11:25:39 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 11:25:39 AI_Player.update()		11,	1100,	1010,	1011,	1010,	101,	101
2017-01-04 11:25:39 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 11:25:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:39 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:39 AI_Player.update()	update
2017-01-04 11:25:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:39 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:39 AI_Player.update()	update
2017-01-04 11:25:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:40 AI_Player.update()	Search took622ms
2017-01-04 11:25:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 11:25:40 AI_Player.update()		101,	1010,	110,	110,	101,	1101,	1010
2017-01-04 11:25:40 AI_Player.update()		1110,	1101,	1110,	101,	111,	11,	1011
2017-01-04 11:25:40 AI_Player.update()		11,	1010,	1100,	101,	110,	111,	1001
2017-01-04 11:25:40 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:25:40 AI_Player.update()		11,	1100,	1010,	110,	1010,	101,	101
2017-01-04 11:25:40 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 11:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()	update
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()	update
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:40 AI_Player.update()	Search took263ms
2017-01-04 11:25:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 11:25:40 AI_Player.update()		101,	1010,	110,	110,	101,	1101,	1010
2017-01-04 11:25:40 AI_Player.update()		1110,	1101,	1110,	101,	111,	11,	1011
2017-01-04 11:25:40 AI_Player.update()		11,	1010,	1100,	101,	110,	111,	1001
2017-01-04 11:25:40 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:25:40 AI_Player.update()		1100,	1010,	110,	1010,	101,	101,	11
2017-01-04 11:25:40 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 11:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()	update
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	5 1
2017-01-04 11:25:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()	update
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:40 AI_Player.update()	Search took39ms
2017-01-04 11:25:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 11:25:40 AI_Player.update()		101,	1101,	110,	110,	101,	1101,	1010
2017-01-04 11:25:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:25:40 AI_Player.update()		11,	110,	1100,	101,	110,	111,	1001
2017-01-04 11:25:40 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:25:40 AI_Player.update()		1100,	11,	110,	1010,	101,	101,	11
2017-01-04 11:25:40 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 11:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	5 1
2017-01-04 11:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()	update
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:25:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()	update
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:40 AI_Player.update()	Search took104ms
2017-01-04 11:25:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-04 11:25:40 AI_Player.update()		101,	1010,	110,	110,	101,	1101,	1010
2017-01-04 11:25:40 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 11:25:40 AI_Player.update()		11,	1010,	1100,	101,	110,	111,	1001
2017-01-04 11:25:40 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:25:40 AI_Player.update()		1100,	101,	110,	1010,	101,	101,	11
2017-01-04 11:25:40 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 11:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()	update
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()	update
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:40 AI_Player.update()	Search took45ms
2017-01-04 11:25:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 11:25:40 AI_Player.update()		101,	110,	110,	110,	101,	1101,	1010
2017-01-04 11:25:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:25:40 AI_Player.update()		11,	11,	1100,	101,	110,	111,	1001
2017-01-04 11:25:40 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:25:40 AI_Player.update()		1100,	1010,	110,	1010,	101,	101,	11
2017-01-04 11:25:40 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	101,	1001
2017-01-04 11:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()	update
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()	update
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:40 AI_Player.update()	Search took308ms
2017-01-04 11:25:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 11:25:40 AI_Player.update()		101,	110,	110,	101,	101,	1101,	1010
2017-01-04 11:25:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:25:40 AI_Player.update()		11,	11,	1100,	1011,	110,	111,	1001
2017-01-04 11:25:40 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:25:40 AI_Player.update()		1100,	1010,	110,	1010,	101,	101,	11
2017-01-04 11:25:40 AI_Player.update()		1100,	1101,	1101,	11,	1101,	101,	1001
2017-01-04 11:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()	update
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:40 AI_Player.update()	update
2017-01-04 11:25:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:41 AI_Player.update()	Search took133ms
2017-01-04 11:25:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:41 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 11:25:41 AI_Player.update()		1010,	101,	110,	110,	101,	101,	1101
2017-01-04 11:25:41 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:25:41 AI_Player.update()		11,	11,	1100,	1011,	110,	111,	1001
2017-01-04 11:25:41 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:25:41 AI_Player.update()		1100,	1010,	110,	1010,	101,	101,	11
2017-01-04 11:25:41 AI_Player.update()		1100,	1101,	1101,	11,	1101,	101,	1001
2017-01-04 11:25:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:41 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:41 AI_Player.update()	update
2017-01-04 11:25:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:41 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:41 AI_Player.update()	update
2017-01-04 11:25:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:41 AI_Player.update()	Search took224ms
2017-01-04 11:25:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:41 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 11:25:41 AI_Player.update()		1010,	1010,	110,	110,	101,	101,	1101
2017-01-04 11:25:41 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 11:25:41 AI_Player.update()		11,	101,	1100,	1011,	110,	111,	1001
2017-01-04 11:25:41 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:25:41 AI_Player.update()		1100,	1101,	110,	1010,	101,	101,	11
2017-01-04 11:25:41 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 11:25:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:41 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:41 AI_Player.update()	update
2017-01-04 11:25:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:41 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:41 AI_Player.update()	update
2017-01-04 11:25:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:41 AI_Player.update()	Search took95ms
2017-01-04 11:25:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:41 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 11:25:41 AI_Player.update()		1010,	1010,	110,	110,	101,	101,	1101
2017-01-04 11:25:41 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 11:25:41 AI_Player.update()		101,	1100,	1011,	110,	111,	1001,	11
2017-01-04 11:25:41 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:25:41 AI_Player.update()		1100,	1101,	110,	1010,	101,	101,	11
2017-01-04 11:25:41 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 11:25:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:41 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:41 AI_Player.update()	update
2017-01-04 11:25:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:41 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:41 AI_Player.update()	update
2017-01-04 11:25:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:42 AI_Player.update()	Search took643ms
2017-01-04 11:25:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 11:25:42 AI_Player.update()		1010,	1010,	110,	110,	101,	101,	1101
2017-01-04 11:25:42 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 11:25:42 AI_Player.update()		101,	1100,	1011,	110,	111,	1001,	11
2017-01-04 11:25:42 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:25:42 AI_Player.update()		1101,	110,	1010,	101,	101,	11,	1100
2017-01-04 11:25:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 11:25:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:25:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()	update
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:42 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:25:42 AI_Player.update()	Player a has won!
2017-01-04 11:25:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:25:42 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:25:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:25:42 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:25:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()	update
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:42 AI_Player.update()	Search took203ms
2017-01-04 11:25:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-04 11:25:42 AI_Player.update()		1010,	1100,	111,	1100,	1011,	111,	110
2017-01-04 11:25:42 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-04 11:25:42 AI_Player.update()		1001,	101,	1100,	11,	110,	11,	11
2017-01-04 11:25:42 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:25:42 AI_Player.update()		110,	1110,	111,	1001,	1011,	1011,	1110
2017-01-04 11:25:42 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 11:25:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()	update
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()	update
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:42 AI_Player.update()	Search took51ms
2017-01-04 11:25:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()		110,	101,	111,	1001,	111,	111,	11
2017-01-04 11:25:42 AI_Player.update()		1010,	1100,	111,	1100,	1011,	11,	110
2017-01-04 11:25:42 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-04 11:25:42 AI_Player.update()		1001,	101,	1100,	11,	110,	1010,	11
2017-01-04 11:25:42 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:25:42 AI_Player.update()		110,	1110,	111,	1001,	1011,	101,	1110
2017-01-04 11:25:42 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:25:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()	update
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()	update
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:42 AI_Player.update()	Search took367ms
2017-01-04 11:25:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()		110,	101,	111,	1001,	111,	111,	11
2017-01-04 11:25:42 AI_Player.update()		1010,	1100,	111,	1100,	1011,	11,	110
2017-01-04 11:25:42 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-04 11:25:42 AI_Player.update()		11,	1001,	101,	1100,	11,	110,	1010
2017-01-04 11:25:42 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:25:42 AI_Player.update()		110,	1110,	111,	1001,	1011,	101,	1110
2017-01-04 11:25:42 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:25:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()	update
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()	update
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:42 AI_Player.update()	Search took133ms
2017-01-04 11:25:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:25:42 AI_Player.update()		1010,	1100,	111,	1101,	1011,	11,	110
2017-01-04 11:25:42 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-04 11:25:42 AI_Player.update()		11,	1001,	101,	1010,	11,	110,	1010
2017-01-04 11:25:42 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1011,	1011
2017-01-04 11:25:42 AI_Player.update()		110,	1110,	111,	110,	1011,	101,	1110
2017-01-04 11:25:42 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:25:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()	update
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:42 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:42 AI_Player.update()	update
2017-01-04 11:25:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:43 AI_Player.update()	Search took277ms
2017-01-04 11:25:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:43 AI_Player.update()		110,	101,	111,	1001,	111,	111,	11
2017-01-04 11:25:43 AI_Player.update()		1010,	1100,	111,	1100,	1011,	11,	110
2017-01-04 11:25:43 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-04 11:25:43 AI_Player.update()		11,	1001,	101,	1100,	11,	110,	1010
2017-01-04 11:25:43 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:25:43 AI_Player.update()		110,	1110,	111,	1001,	1011,	101,	1110
2017-01-04 11:25:43 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:25:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:43 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:43 AI_Player.update()	update
2017-01-04 11:25:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:43 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:43 AI_Player.update()	update
2017-01-04 11:25:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:43 AI_Player.update()	Search took133ms
2017-01-04 11:25:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:43 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:25:43 AI_Player.update()		1010,	1100,	111,	1101,	1011,	11,	110
2017-01-04 11:25:43 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-04 11:25:43 AI_Player.update()		11,	1001,	101,	1010,	11,	110,	1010
2017-01-04 11:25:43 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1011,	1011
2017-01-04 11:25:43 AI_Player.update()		110,	1110,	111,	110,	1011,	101,	1110
2017-01-04 11:25:43 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:25:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:43 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:43 AI_Player.update()	update
2017-01-04 11:25:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:43 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:43 AI_Player.update()	update
2017-01-04 11:25:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:43 AI_Player.update()	Search took329ms
2017-01-04 11:25:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:43 AI_Player.update()		110,	101,	111,	1001,	111,	111,	11
2017-01-04 11:25:43 AI_Player.update()		1010,	1100,	111,	1100,	1011,	11,	110
2017-01-04 11:25:43 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-04 11:25:43 AI_Player.update()		11,	1001,	101,	1100,	11,	110,	1010
2017-01-04 11:25:43 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:25:43 AI_Player.update()		110,	1110,	111,	1001,	1011,	101,	1110
2017-01-04 11:25:43 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:25:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:43 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:43 AI_Player.update()	update
2017-01-04 11:25:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:43 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:43 AI_Player.update()	update
2017-01-04 11:25:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:43 AI_Player.update()	Search took111ms
2017-01-04 11:25:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:43 AI_Player.update()		110,	101,	111,	1001,	111,	111,	11
2017-01-04 11:25:43 AI_Player.update()		1100,	111,	1100,	1011,	11,	110,	1010
2017-01-04 11:25:43 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-04 11:25:43 AI_Player.update()		11,	1001,	101,	1100,	11,	110,	1010
2017-01-04 11:25:43 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:25:43 AI_Player.update()		110,	1110,	111,	1001,	1011,	101,	1110
2017-01-04 11:25:43 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:25:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:43 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:43 AI_Player.update()	update
2017-01-04 11:25:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:43 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:43 AI_Player.update()	update
2017-01-04 11:25:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:44 AI_Player.update()	Search took412ms
2017-01-04 11:25:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:44 AI_Player.update()		110,	101,	111,	1001,	111,	111,	11
2017-01-04 11:25:44 AI_Player.update()		1100,	111,	1100,	1011,	11,	110,	1010
2017-01-04 11:25:44 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-04 11:25:44 AI_Player.update()		11,	1001,	101,	1100,	11,	110,	1010
2017-01-04 11:25:44 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:25:44 AI_Player.update()		1110,	111,	1001,	1011,	101,	1110,	110
2017-01-04 11:25:44 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:25:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:25:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:44 AI_Player.update()	update
2017-01-04 11:25:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:44 AI_Player.update()	update
2017-01-04 11:25:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:44 AI_Player.update()	Search took455ms
2017-01-04 11:25:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:44 AI_Player.update()		110,	111,	111,	1001,	111,	111,	11
2017-01-04 11:25:44 AI_Player.update()		1100,	1010,	1100,	1011,	11,	110,	1010
2017-01-04 11:25:44 AI_Player.update()		1110,	1001,	1110,	1101,	111,	11,	1011
2017-01-04 11:25:44 AI_Player.update()		11,	111,	101,	1100,	11,	110,	1010
2017-01-04 11:25:44 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:25:44 AI_Player.update()		1110,	101,	1001,	1011,	101,	1110,	110
2017-01-04 11:25:44 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:25:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:25:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:44 AI_Player.update()	update
2017-01-04 11:25:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:25:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:44 AI_Player.update()	update
2017-01-04 11:25:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:44 AI_Player.update()	Search took315ms
2017-01-04 11:25:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:44 AI_Player.update()		110,	111,	111,	1011,	111,	111,	11
2017-01-04 11:25:44 AI_Player.update()		1100,	1010,	1100,	1101,	11,	110,	1010
2017-01-04 11:25:44 AI_Player.update()		1110,	1001,	1110,	1100,	111,	11,	1011
2017-01-04 11:25:44 AI_Player.update()		11,	111,	101,	1010,	11,	110,	1010
2017-01-04 11:25:44 AI_Player.update()		1110,	111,	1101,	1011,	1011,	1011,	1011
2017-01-04 11:25:44 AI_Player.update()		1110,	101,	1001,	110,	101,	1110,	110
2017-01-04 11:25:44 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:25:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:25:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:44 AI_Player.update()	update
2017-01-04 11:25:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:44 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:25:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:44 AI_Player.update()	update
2017-01-04 11:25:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:45 AI_Player.update()	Search took738ms
2017-01-04 11:25:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:45 AI_Player.update()		110,	1010,	111,	1011,	111,	111,	11
2017-01-04 11:25:45 AI_Player.update()		1100,	1001,	1100,	1101,	11,	110,	1010
2017-01-04 11:25:45 AI_Player.update()		1110,	111,	1110,	1100,	111,	11,	1011
2017-01-04 11:25:45 AI_Player.update()		11,	111,	101,	1010,	11,	110,	1010
2017-01-04 11:25:45 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1011,	1011
2017-01-04 11:25:45 AI_Player.update()		1110,	101,	1001,	110,	101,	1110,	110
2017-01-04 11:25:45 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:25:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:25:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:45 AI_Player.update()	update
2017-01-04 11:25:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:25:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:45 AI_Player.update()	update
2017-01-04 11:25:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:45 AI_Player.update()	Search took329ms
2017-01-04 11:25:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:45 AI_Player.update()		110,	1010,	111,	1011,	111,	1010,	11
2017-01-04 11:25:45 AI_Player.update()		1100,	1001,	1100,	1101,	11,	111,	1010
2017-01-04 11:25:45 AI_Player.update()		1110,	111,	1110,	1100,	111,	110,	1011
2017-01-04 11:25:45 AI_Player.update()		11,	111,	101,	1010,	11,	11,	1010
2017-01-04 11:25:45 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-04 11:25:45 AI_Player.update()		1110,	101,	1001,	110,	101,	1011,	110
2017-01-04 11:25:45 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:25:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:25:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:45 AI_Player.update()	update
2017-01-04 11:25:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:25:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:45 AI_Player.update()	update
2017-01-04 11:25:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:46 AI_Player.update()	Search took822ms
2017-01-04 11:25:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:46 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-04 11:25:46 AI_Player.update()		1100,	1001,	1100,	1011,	11,	111,	1010
2017-01-04 11:25:46 AI_Player.update()		1110,	111,	1110,	1101,	111,	110,	1011
2017-01-04 11:25:46 AI_Player.update()		11,	111,	101,	1100,	11,	11,	1010
2017-01-04 11:25:46 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:25:46 AI_Player.update()		1110,	101,	1001,	1011,	101,	1011,	110
2017-01-04 11:25:46 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-04 11:25:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:46 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:25:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:46 AI_Player.update()	update
2017-01-04 11:25:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:46 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:25:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:46 AI_Player.update()	update
2017-01-04 11:25:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:47 AI_Player.update()	Search took404ms
2017-01-04 11:25:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:47 AI_Player.update()		110,	1010,	111,	1011,	111,	1010,	11
2017-01-04 11:25:47 AI_Player.update()		1100,	1001,	1100,	1101,	11,	111,	1010
2017-01-04 11:25:47 AI_Player.update()		1110,	111,	1110,	1100,	111,	110,	1011
2017-01-04 11:25:47 AI_Player.update()		11,	111,	101,	1010,	11,	11,	1010
2017-01-04 11:25:47 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-04 11:25:47 AI_Player.update()		1110,	101,	1001,	110,	101,	1011,	110
2017-01-04 11:25:47 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:25:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:25:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:47 AI_Player.update()	update
2017-01-04 11:25:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:25:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:47 AI_Player.update()	update
2017-01-04 11:25:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:47 AI_Player.update()	Search took93ms
2017-01-04 11:25:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:47 AI_Player.update()		110,	1010,	111,	1011,	111,	1010,	11
2017-01-04 11:25:47 AI_Player.update()		1100,	1001,	1100,	1101,	11,	111,	1010
2017-01-04 11:25:47 AI_Player.update()		1110,	111,	1110,	1100,	111,	110,	1011
2017-01-04 11:25:47 AI_Player.update()		11,	111,	101,	1010,	11,	11,	1010
2017-01-04 11:25:47 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-04 11:25:47 AI_Player.update()		101,	1001,	110,	101,	1011,	110,	1110
2017-01-04 11:25:47 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:25:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:25:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:47 AI_Player.update()	update
2017-01-04 11:25:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:25:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:47 AI_Player.update()	update
2017-01-04 11:25:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:47 AI_Player.update()	Search took445ms
2017-01-04 11:25:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:47 AI_Player.update()		110,	1010,	111,	1011,	111,	111,	11
2017-01-04 11:25:47 AI_Player.update()		1100,	1001,	1100,	1101,	11,	110,	1010
2017-01-04 11:25:47 AI_Player.update()		1110,	111,	1110,	1100,	111,	11,	1011
2017-01-04 11:25:47 AI_Player.update()		11,	111,	101,	1010,	11,	110,	1010
2017-01-04 11:25:47 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-04 11:25:47 AI_Player.update()		101,	1001,	110,	101,	1011,	1110,	1110
2017-01-04 11:25:47 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:25:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:25:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:47 AI_Player.update()	update
2017-01-04 11:25:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:25:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:47 AI_Player.update()	update
2017-01-04 11:25:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:48 AI_Player.update()	Search took424ms
2017-01-04 11:25:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:48 AI_Player.update()		110,	1010,	111,	1011,	111,	110,	11
2017-01-04 11:25:48 AI_Player.update()		1100,	1001,	1100,	1101,	11,	11,	1010
2017-01-04 11:25:48 AI_Player.update()		1110,	111,	1110,	1100,	111,	110,	1011
2017-01-04 11:25:48 AI_Player.update()		11,	111,	101,	1010,	11,	110,	1010
2017-01-04 11:25:48 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1110,	1011
2017-01-04 11:25:48 AI_Player.update()		101,	1001,	110,	101,	1011,	1010,	1110
2017-01-04 11:25:48 AI_Player.update()		1100,	111,	1101,	1001,	1101,	111,	1001
2017-01-04 11:25:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:25:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:48 AI_Player.update()	update
2017-01-04 11:25:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:25:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:48 AI_Player.update()	update
2017-01-04 11:25:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:48 AI_Player.update()	Search took136ms
2017-01-04 11:25:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:48 AI_Player.update()		110,	1010,	111,	1011,	111,	110,	11
2017-01-04 11:25:48 AI_Player.update()		1010,	1100,	1001,	1100,	1101,	11,	11
2017-01-04 11:25:48 AI_Player.update()		1110,	111,	1110,	1100,	111,	110,	1011
2017-01-04 11:25:48 AI_Player.update()		11,	111,	101,	1010,	11,	110,	1010
2017-01-04 11:25:48 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1110,	1011
2017-01-04 11:25:48 AI_Player.update()		101,	1001,	110,	101,	1011,	1010,	1110
2017-01-04 11:25:48 AI_Player.update()		1100,	111,	1101,	1001,	1101,	111,	1001
2017-01-04 11:25:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:25:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:48 AI_Player.update()	update
2017-01-04 11:25:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:48 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:25:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:48 AI_Player.update()	update
2017-01-04 11:25:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:49 AI_Player.update()	Search took1061ms
2017-01-04 11:25:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:49 AI_Player.update()		110,	1010,	111,	1001,	111,	110,	11
2017-01-04 11:25:49 AI_Player.update()		1010,	1100,	1001,	1011,	1101,	11,	11
2017-01-04 11:25:49 AI_Player.update()		1110,	111,	1110,	1100,	111,	110,	1011
2017-01-04 11:25:49 AI_Player.update()		11,	111,	101,	1100,	11,	110,	1010
2017-01-04 11:25:49 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-04 11:25:49 AI_Player.update()		101,	1001,	110,	1011,	1011,	1010,	1110
2017-01-04 11:25:49 AI_Player.update()		1100,	111,	1101,	101,	1101,	111,	1001
2017-01-04 11:25:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:25:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:49 AI_Player.update()	update
2017-01-04 11:25:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:25:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:49 AI_Player.update()	update
2017-01-04 11:25:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:49 AI_Player.update()	Search took158ms
2017-01-04 11:25:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:49 AI_Player.update()		110,	1010,	111,	1001,	111,	110,	11
2017-01-04 11:25:49 AI_Player.update()		1100,	1001,	1011,	1101,	11,	11,	1010
2017-01-04 11:25:49 AI_Player.update()		1110,	111,	1110,	1100,	111,	110,	1011
2017-01-04 11:25:49 AI_Player.update()		11,	111,	101,	1100,	11,	110,	1010
2017-01-04 11:25:49 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-04 11:25:49 AI_Player.update()		101,	1001,	110,	1011,	1011,	1010,	1110
2017-01-04 11:25:49 AI_Player.update()		1100,	111,	1101,	101,	1101,	111,	1001
2017-01-04 11:25:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:25:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:49 AI_Player.update()	update
2017-01-04 11:25:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:49 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:25:49 AI_Player.update()	Player a has won!
2017-01-04 11:25:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:25:49 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:25:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:25:49 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:25:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:49 AI_Player.update()	update
2017-01-04 11:25:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:49 AI_Player.update()	Search took228ms
2017-01-04 11:25:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:49 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-04 11:25:49 AI_Player.update()		101,	1100,	111,	1010,	101,	1001,	1101
2017-01-04 11:25:49 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 11:25:49 AI_Player.update()		1101,	11,	1110,	1010,	101,	111,	1001
2017-01-04 11:25:49 AI_Player.update()		1110,	111,	1101,	1011,	1011,	110,	1011
2017-01-04 11:25:49 AI_Player.update()		1010,	1100,	101,	101,	1010,	1001,	101
2017-01-04 11:25:49 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1011,	1001
2017-01-04 11:25:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:49 AI_Player.update()	update
2017-01-04 11:25:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:49 AI_Player.update()	update
2017-01-04 11:25:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:49 AI_Player.update()	Search took41ms
2017-01-04 11:25:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:49 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-04 11:25:49 AI_Player.update()		101,	1100,	111,	1010,	101,	101,	1101
2017-01-04 11:25:49 AI_Player.update()		1110,	101,	1110,	101,	111,	111,	1011
2017-01-04 11:25:49 AI_Player.update()		1101,	11,	1110,	1010,	101,	110,	1001
2017-01-04 11:25:49 AI_Player.update()		1110,	111,	1101,	1011,	1011,	1001,	1011
2017-01-04 11:25:49 AI_Player.update()		1010,	1100,	101,	101,	1010,	1011,	101
2017-01-04 11:25:49 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1010,	1001
2017-01-04 11:25:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:49 AI_Player.update()	update
2017-01-04 11:25:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:49 AI_Player.update()	update
2017-01-04 11:25:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:50 AI_Player.update()	Search took981ms
2017-01-04 11:25:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:50 AI_Player.update()		110,	1011,	111,	101,	111,	1001,	11
2017-01-04 11:25:50 AI_Player.update()		101,	11,	111,	1010,	101,	101,	1101
2017-01-04 11:25:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	111,	1011
2017-01-04 11:25:50 AI_Player.update()		1101,	101,	1110,	1010,	101,	110,	1001
2017-01-04 11:25:50 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1001,	1011
2017-01-04 11:25:50 AI_Player.update()		1010,	111,	101,	101,	1010,	1011,	101
2017-01-04 11:25:50 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1010,	1001
2017-01-04 11:25:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:25:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:50 AI_Player.update()	update
2017-01-04 11:25:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:50 AI_Player.update()	update
2017-01-04 11:25:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:51 AI_Player.update()	Search took244ms
2017-01-04 11:25:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:51 AI_Player.update()		110,	1011,	111,	101,	111,	101,	11
2017-01-04 11:25:51 AI_Player.update()		101,	11,	111,	1010,	101,	111,	1101
2017-01-04 11:25:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-04 11:25:51 AI_Player.update()		1101,	101,	1110,	1010,	101,	1001,	1001
2017-01-04 11:25:51 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1011,	1011
2017-01-04 11:25:51 AI_Player.update()		1010,	111,	101,	101,	1010,	1010,	101
2017-01-04 11:25:51 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-04 11:25:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:25:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:51 AI_Player.update()	update
2017-01-04 11:25:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:51 AI_Player.update()	update
2017-01-04 11:25:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:51 AI_Player.update()	Search took736ms
2017-01-04 11:25:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:51 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 11:25:51 AI_Player.update()		101,	1011,	111,	1010,	101,	111,	1101
2017-01-04 11:25:51 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-04 11:25:51 AI_Player.update()		1101,	1100,	1110,	1010,	101,	1001,	1001
2017-01-04 11:25:51 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1011,	1011
2017-01-04 11:25:51 AI_Player.update()		1010,	11,	101,	101,	1010,	1010,	101
2017-01-04 11:25:51 AI_Player.update()		1100,	111,	1101,	111,	1101,	1001,	1001
2017-01-04 11:25:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:25:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:51 AI_Player.update()	update
2017-01-04 11:25:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:25:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:51 AI_Player.update()	update
2017-01-04 11:25:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:52 AI_Player.update()	Search took1004ms
2017-01-04 11:25:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:52 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 11:25:52 AI_Player.update()		101,	1100,	111,	1010,	101,	111,	1101
2017-01-04 11:25:52 AI_Player.update()		1110,	1011,	1110,	101,	111,	110,	1011
2017-01-04 11:25:52 AI_Player.update()		1101,	11,	1110,	1010,	101,	1001,	1001
2017-01-04 11:25:52 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1011,	1011
2017-01-04 11:25:52 AI_Player.update()		1010,	101,	101,	101,	1010,	1010,	101
2017-01-04 11:25:52 AI_Player.update()		1100,	11,	1101,	111,	1101,	1001,	1001
2017-01-04 11:25:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:52 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:25:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:52 AI_Player.update()	update
2017-01-04 11:25:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:52 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:25:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:52 AI_Player.update()	update
2017-01-04 11:25:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:53 AI_Player.update()	Search took959ms
2017-01-04 11:25:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:53 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 11:25:53 AI_Player.update()		101,	1100,	111,	1010,	101,	111,	1101
2017-01-04 11:25:53 AI_Player.update()		1110,	1011,	1110,	101,	111,	110,	1011
2017-01-04 11:25:53 AI_Player.update()		1101,	11,	1110,	1010,	101,	1001,	1001
2017-01-04 11:25:53 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1011,	1011
2017-01-04 11:25:53 AI_Player.update()		101,	1010,	101,	101,	101,	1010,	1010
2017-01-04 11:25:53 AI_Player.update()		1100,	11,	1101,	111,	1101,	1001,	1001
2017-01-04 11:25:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:53 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:25:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:53 AI_Player.update()	update
2017-01-04 11:25:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:53 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:25:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:53 AI_Player.update()	update
2017-01-04 11:25:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:54 AI_Player.update()	Search took976ms
2017-01-04 11:25:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:54 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-04 11:25:54 AI_Player.update()		101,	1100,	111,	101,	101,	111,	1101
2017-01-04 11:25:54 AI_Player.update()		1110,	1011,	1110,	1010,	111,	110,	1011
2017-01-04 11:25:54 AI_Player.update()		1101,	11,	1110,	1011,	101,	1001,	1001
2017-01-04 11:25:54 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1011,	1011
2017-01-04 11:25:54 AI_Player.update()		101,	1010,	101,	111,	101,	1010,	1010
2017-01-04 11:25:54 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-04 11:25:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:54 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:25:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:54 AI_Player.update()	update
2017-01-04 11:25:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:54 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:25:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:54 AI_Player.update()	update
2017-01-04 11:25:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:56 AI_Player.update()	Search took1284ms
2017-01-04 11:25:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:56 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 11:25:56 AI_Player.update()		101,	1100,	111,	1010,	101,	111,	1101
2017-01-04 11:25:56 AI_Player.update()		1110,	1011,	1110,	1011,	111,	110,	1011
2017-01-04 11:25:56 AI_Player.update()		1101,	11,	1110,	101,	101,	1001,	1001
2017-01-04 11:25:56 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1011,	1011
2017-01-04 11:25:56 AI_Player.update()		101,	1010,	101,	101,	101,	1010,	1010
2017-01-04 11:25:56 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:25:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:56 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:25:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:56 AI_Player.update()	update
2017-01-04 11:25:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:56 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:25:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:56 AI_Player.update()	update
2017-01-04 11:25:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:57 AI_Player.update()	Search took1285ms
2017-01-04 11:25:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:57 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 11:25:57 AI_Player.update()		101,	1011,	111,	1010,	101,	111,	1101
2017-01-04 11:25:57 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-04 11:25:57 AI_Player.update()		1101,	1100,	1110,	101,	101,	1001,	1001
2017-01-04 11:25:57 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1011,	1011
2017-01-04 11:25:57 AI_Player.update()		101,	11,	101,	101,	101,	1010,	1010
2017-01-04 11:25:57 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:25:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:25:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:57 AI_Player.update()	update
2017-01-04 11:25:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:25:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:57 AI_Player.update()	update
2017-01-04 11:25:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:57 AI_Player.update()	Search took641ms
2017-01-04 11:25:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:57 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 11:25:57 AI_Player.update()		101,	1100,	111,	1010,	101,	111,	1101
2017-01-04 11:25:57 AI_Player.update()		1110,	1011,	1110,	1011,	111,	110,	1011
2017-01-04 11:25:57 AI_Player.update()		1101,	11,	1110,	101,	101,	1001,	1001
2017-01-04 11:25:57 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1011,	1011
2017-01-04 11:25:57 AI_Player.update()		101,	1010,	101,	101,	101,	1010,	1010
2017-01-04 11:25:57 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:25:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:25:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:57 AI_Player.update()	update
2017-01-04 11:25:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:25:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:57 AI_Player.update()	update
2017-01-04 11:25:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:58 AI_Player.update()	Search took76ms
2017-01-04 11:25:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:58 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 11:25:58 AI_Player.update()		101,	1100,	111,	1010,	101,	111,	1101
2017-01-04 11:25:58 AI_Player.update()		1110,	1011,	1110,	1011,	111,	110,	1011
2017-01-04 11:25:58 AI_Player.update()		1101,	11,	1110,	101,	101,	1001,	1001
2017-01-04 11:25:58 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1011,	1011
2017-01-04 11:25:58 AI_Player.update()		1010,	101,	1010,	101,	101,	101,	1010
2017-01-04 11:25:58 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:25:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:58 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:25:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:58 AI_Player.update()	update
2017-01-04 11:25:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:58 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:25:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:58 AI_Player.update()	update
2017-01-04 11:25:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:25:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:25:59 AI_Player.update()	Search took1340ms
2017-01-04 11:25:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:59 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 11:25:59 AI_Player.update()		101,	1100,	111,	1010,	101,	111,	1101
2017-01-04 11:25:59 AI_Player.update()		1110,	1011,	1110,	1011,	111,	110,	1011
2017-01-04 11:25:59 AI_Player.update()		1101,	11,	1110,	101,	101,	1001,	1001
2017-01-04 11:25:59 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1011,	1011
2017-01-04 11:25:59 AI_Player.update()		101,	1010,	101,	101,	101,	1010,	1010
2017-01-04 11:25:59 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:25:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:25:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:59 AI_Player.update()	update
2017-01-04 11:25:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:25:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:25:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:25:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:25:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:25:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:25:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:25:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:25:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:59 AI_Player.update()	update
2017-01-04 11:25:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:25:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:25:59 AI_Player.update()	Search took22ms
2017-01-04 11:25:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:25:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:59 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-04 11:25:59 AI_Player.update()		101,	1100,	111,	1011,	101,	111,	1101
2017-01-04 11:25:59 AI_Player.update()		1110,	1011,	1110,	101,	111,	110,	1011
2017-01-04 11:25:59 AI_Player.update()		1101,	11,	1110,	111,	101,	1001,	1001
2017-01-04 11:25:59 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1011,	1011
2017-01-04 11:25:59 AI_Player.update()		101,	1010,	101,	1010,	101,	1010,	1010
2017-01-04 11:25:59 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-04 11:25:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:25:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:25:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:25:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:59 AI_Player.update()	update
2017-01-04 11:25:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:25:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:25:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:25:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:25:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:25:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:25:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:25:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:25:59 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:25:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:25:59 AI_Player.update()	update
2017-01-04 11:25:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:00 AI_Player.update()	Search took1345ms
2017-01-04 11:26:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:00 AI_Player.update()		110,	111,	111,	1011,	111,	101,	11
2017-01-04 11:26:00 AI_Player.update()		101,	1100,	111,	101,	101,	111,	1101
2017-01-04 11:26:00 AI_Player.update()		1110,	1011,	1110,	111,	111,	110,	1011
2017-01-04 11:26:00 AI_Player.update()		1101,	11,	1110,	101,	101,	1001,	1001
2017-01-04 11:26:00 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:26:00 AI_Player.update()		101,	1010,	101,	101,	101,	1010,	1010
2017-01-04 11:26:00 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:26:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:00 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:00 AI_Player.update()	update
2017-01-04 11:26:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:00 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:26:00 AI_Player.update()	Player a has won!
2017-01-04 11:26:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:26:00 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:26:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:26:00 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:26:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:00 AI_Player.update()	update
2017-01-04 11:26:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:01 AI_Player.update()	Search took250ms
2017-01-04 11:26:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:01 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-04 11:26:01 AI_Player.update()		1011,	1011,	1100,	101,	101,	101,	1010
2017-01-04 11:26:01 AI_Player.update()		1110,	1110,	1110,	1001,	111,	1011,	1011
2017-01-04 11:26:01 AI_Player.update()		110,	110,	101,	1010,	1100,	1100,	110
2017-01-04 11:26:01 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1110,	1011
2017-01-04 11:26:01 AI_Player.update()		1101,	110,	101,	111,	1001,	1001,	111
2017-01-04 11:26:01 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-04 11:26:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:01 AI_Player.update()	update
2017-01-04 11:26:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:01 AI_Player.update()	update
2017-01-04 11:26:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:01 AI_Player.update()	Search took157ms
2017-01-04 11:26:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:01 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-04 11:26:01 AI_Player.update()		1011,	1011,	1100,	101,	101,	1100,	1010
2017-01-04 11:26:01 AI_Player.update()		1110,	1110,	1110,	1001,	111,	101,	1011
2017-01-04 11:26:01 AI_Player.update()		110,	110,	101,	1010,	1100,	1011,	110
2017-01-04 11:26:01 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1100,	1011
2017-01-04 11:26:01 AI_Player.update()		1101,	110,	101,	111,	1001,	1110,	111
2017-01-04 11:26:01 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-04 11:26:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:01 AI_Player.update()	update
2017-01-04 11:26:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:01 AI_Player.update()	update
2017-01-04 11:26:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:01 AI_Player.update()	Search took282ms
2017-01-04 11:26:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:01 AI_Player.update()		110,	1011,	111,	1001,	111,	1001,	11
2017-01-04 11:26:01 AI_Player.update()		1011,	1110,	1100,	101,	101,	1100,	1010
2017-01-04 11:26:01 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 11:26:01 AI_Player.update()		110,	1011,	101,	1010,	1100,	1011,	110
2017-01-04 11:26:01 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1100,	1011
2017-01-04 11:26:01 AI_Player.update()		1101,	101,	101,	111,	1001,	1110,	111
2017-01-04 11:26:01 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-04 11:26:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:01 AI_Player.update()	update
2017-01-04 11:26:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:01 AI_Player.update()	update
2017-01-04 11:26:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:02 AI_Player.update()	Search took533ms
2017-01-04 11:26:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:02 AI_Player.update()		110,	1011,	111,	1001,	111,	1001,	11
2017-01-04 11:26:02 AI_Player.update()		1011,	1110,	1100,	101,	101,	1100,	1010
2017-01-04 11:26:02 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 11:26:02 AI_Player.update()		110,	110,	1011,	101,	1010,	1100,	1011
2017-01-04 11:26:02 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1100,	1011
2017-01-04 11:26:02 AI_Player.update()		1101,	101,	101,	111,	1001,	1110,	111
2017-01-04 11:26:02 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-04 11:26:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:02 AI_Player.update()	update
2017-01-04 11:26:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:02 AI_Player.update()	update
2017-01-04 11:26:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:02 AI_Player.update()	Search took793ms
2017-01-04 11:26:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:02 AI_Player.update()		110,	1110,	111,	1001,	111,	1001,	11
2017-01-04 11:26:02 AI_Player.update()		1011,	110,	1100,	101,	101,	1100,	1010
2017-01-04 11:26:02 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 11:26:02 AI_Player.update()		110,	110,	1011,	101,	1010,	1100,	1011
2017-01-04 11:26:02 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1100,	1011
2017-01-04 11:26:02 AI_Player.update()		1101,	101,	101,	111,	1001,	1110,	111
2017-01-04 11:26:02 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	1001,	1001
2017-01-04 11:26:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:02 AI_Player.update()	update
2017-01-04 11:26:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:26:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:02 AI_Player.update()	update
2017-01-04 11:26:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:04 AI_Player.update()	Search took1202ms
2017-01-04 11:26:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:04 AI_Player.update()		110,	1011,	111,	1001,	111,	1001,	11
2017-01-04 11:26:04 AI_Player.update()		1011,	1110,	1100,	101,	101,	1100,	1010
2017-01-04 11:26:04 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 11:26:04 AI_Player.update()		110,	110,	1011,	101,	1010,	1100,	1011
2017-01-04 11:26:04 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1100,	1011
2017-01-04 11:26:04 AI_Player.update()		1101,	101,	101,	111,	1001,	1110,	111
2017-01-04 11:26:04 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-04 11:26:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:26:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:04 AI_Player.update()	update
2017-01-04 11:26:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:26:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:04 AI_Player.update()	update
2017-01-04 11:26:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:04 AI_Player.update()	Search took722ms
2017-01-04 11:26:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:04 AI_Player.update()		110,	1110,	111,	1001,	111,	1001,	11
2017-01-04 11:26:04 AI_Player.update()		1011,	110,	1100,	101,	101,	1100,	1010
2017-01-04 11:26:04 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 11:26:04 AI_Player.update()		110,	110,	1011,	101,	1010,	1100,	1011
2017-01-04 11:26:04 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1100,	1011
2017-01-04 11:26:04 AI_Player.update()		1101,	101,	101,	111,	1001,	1110,	111
2017-01-04 11:26:04 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	1001,	1001
2017-01-04 11:26:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:26:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:04 AI_Player.update()	update
2017-01-04 11:26:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:04 AI_Player.update()	update
2017-01-04 11:26:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:05 AI_Player.update()	Search took1090ms
2017-01-04 11:26:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:05 AI_Player.update()		110,	1110,	111,	1001,	111,	1001,	11
2017-01-04 11:26:05 AI_Player.update()		1011,	110,	1100,	101,	101,	1100,	1010
2017-01-04 11:26:05 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 11:26:05 AI_Player.update()		110,	110,	1011,	101,	1010,	1100,	1011
2017-01-04 11:26:05 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1100,	1011
2017-01-04 11:26:05 AI_Player.update()		101,	101,	111,	1001,	1110,	111,	1101
2017-01-04 11:26:05 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	1001,	1001
2017-01-04 11:26:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:05 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:05 AI_Player.update()	update
2017-01-04 11:26:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:05 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:05 AI_Player.update()	update
2017-01-04 11:26:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:06 AI_Player.update()	Search took1032ms
2017-01-04 11:26:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:06 AI_Player.update()		110,	1110,	111,	1001,	111,	1001,	11
2017-01-04 11:26:06 AI_Player.update()		1011,	110,	1100,	101,	101,	1100,	1010
2017-01-04 11:26:06 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 11:26:06 AI_Player.update()		110,	110,	1011,	101,	1010,	1100,	1011
2017-01-04 11:26:06 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1100,	1011
2017-01-04 11:26:06 AI_Player.update()		1101,	101,	101,	111,	1001,	1110,	111
2017-01-04 11:26:06 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	1001,	1001
2017-01-04 11:26:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:06 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:06 AI_Player.update()	update
2017-01-04 11:26:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:06 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:26:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:06 AI_Player.update()	update
2017-01-04 11:26:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:07 AI_Player.update()	Search took247ms
2017-01-04 11:26:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:07 AI_Player.update()		110,	1110,	111,	1001,	111,	1001,	11
2017-01-04 11:26:07 AI_Player.update()		1011,	110,	1100,	101,	101,	1001,	1010
2017-01-04 11:26:07 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 11:26:07 AI_Player.update()		110,	110,	1011,	101,	1010,	101,	1011
2017-01-04 11:26:07 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1100,	1011
2017-01-04 11:26:07 AI_Player.update()		1101,	101,	101,	111,	1001,	1100,	111
2017-01-04 11:26:07 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	1110,	1001
2017-01-04 11:26:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:07 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:26:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:07 AI_Player.update()	update
2017-01-04 11:26:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:07 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:07 AI_Player.update()	update
2017-01-04 11:26:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:08 AI_Player.update()	Search took818ms
2017-01-04 11:26:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:08 AI_Player.update()		110,	1110,	111,	1011,	111,	1001,	11
2017-01-04 11:26:08 AI_Player.update()		1011,	110,	1100,	1001,	101,	1001,	1010
2017-01-04 11:26:08 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-04 11:26:08 AI_Player.update()		110,	110,	1011,	1001,	1010,	101,	1011
2017-01-04 11:26:08 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 11:26:08 AI_Player.update()		1101,	101,	101,	1011,	1001,	1100,	111
2017-01-04 11:26:08 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1110,	1001
2017-01-04 11:26:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:08 AI_Player.update()	update
2017-01-04 11:26:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:08 AI_Player.update()	update
2017-01-04 11:26:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:08 AI_Player.update()	Search took147ms
2017-01-04 11:26:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:08 AI_Player.update()		110,	1110,	111,	1011,	111,	1001,	11
2017-01-04 11:26:08 AI_Player.update()		1010,	1011,	110,	1100,	1001,	101,	1001
2017-01-04 11:26:08 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-04 11:26:08 AI_Player.update()		110,	110,	1011,	1001,	1010,	101,	1011
2017-01-04 11:26:08 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 11:26:08 AI_Player.update()		1101,	101,	101,	1011,	1001,	1100,	111
2017-01-04 11:26:08 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1110,	1001
2017-01-04 11:26:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:08 AI_Player.update()	update
2017-01-04 11:26:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:08 AI_Player.update()	update
2017-01-04 11:26:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:08 AI_Player.update()	Search took373ms
2017-01-04 11:26:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:08 AI_Player.update()		110,	1011,	111,	1011,	111,	1001,	11
2017-01-04 11:26:08 AI_Player.update()		1010,	1110,	110,	1100,	1001,	101,	1001
2017-01-04 11:26:08 AI_Player.update()		1110,	1011,	1110,	101,	111,	1100,	1011
2017-01-04 11:26:08 AI_Player.update()		110,	110,	1011,	1001,	1010,	101,	1011
2017-01-04 11:26:08 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-04 11:26:08 AI_Player.update()		1101,	101,	101,	1011,	1001,	1100,	111
2017-01-04 11:26:08 AI_Player.update()		1100,	101,	1101,	111,	1101,	1110,	1001
2017-01-04 11:26:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:08 AI_Player.update()	update
2017-01-04 11:26:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:08 AI_Player.update()	update
2017-01-04 11:26:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:08 AI_Player.update()	Search took182ms
2017-01-04 11:26:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:08 AI_Player.update()		110,	1011,	111,	1011,	111,	1001,	11
2017-01-04 11:26:08 AI_Player.update()		1001,	1010,	1110,	110,	1100,	1001,	101
2017-01-04 11:26:08 AI_Player.update()		1110,	1011,	1110,	101,	111,	1100,	1011
2017-01-04 11:26:08 AI_Player.update()		110,	110,	1011,	1001,	1010,	101,	1011
2017-01-04 11:26:08 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-04 11:26:08 AI_Player.update()		1101,	101,	101,	1011,	1001,	1100,	111
2017-01-04 11:26:08 AI_Player.update()		1100,	101,	1101,	111,	1101,	1110,	1001
2017-01-04 11:26:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:08 AI_Player.update()	update
2017-01-04 11:26:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:08 AI_Player.update()	update
2017-01-04 11:26:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:09 AI_Player.update()	Search took481ms
2017-01-04 11:26:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:09 AI_Player.update()		110,	101,	111,	1011,	111,	1001,	11
2017-01-04 11:26:09 AI_Player.update()		1001,	1011,	1110,	110,	1100,	1001,	101
2017-01-04 11:26:09 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-04 11:26:09 AI_Player.update()		110,	1011,	1011,	1001,	1010,	101,	1011
2017-01-04 11:26:09 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-04 11:26:09 AI_Player.update()		1101,	110,	101,	1011,	1001,	1100,	111
2017-01-04 11:26:09 AI_Player.update()		1100,	101,	1101,	111,	1101,	1110,	1001
2017-01-04 11:26:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:09 AI_Player.update()	update
2017-01-04 11:26:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:09 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:26:09 AI_Player.update()	Player a has won!
2017-01-04 11:26:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:26:09 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:26:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:26:09 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:26:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:09 AI_Player.update()	update
2017-01-04 11:26:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:09 AI_Player.update()	Search took419ms
2017-01-04 11:26:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:09 AI_Player.update()		110,	1101,	111,	1010,	111,	1101,	11
2017-01-04 11:26:09 AI_Player.update()		1010,	111,	11,	110,	1011,	1010,	101
2017-01-04 11:26:09 AI_Player.update()		1110,	101,	1110,	1101,	111,	1101,	1011
2017-01-04 11:26:09 AI_Player.update()		1010,	11,	1100,	11,	11,	110,	1110
2017-01-04 11:26:09 AI_Player.update()		1110,	110,	1101,	111,	1011,	111,	1011
2017-01-04 11:26:09 AI_Player.update()		1001,	1100,	11,	101,	1010,	1110,	111
2017-01-04 11:26:09 AI_Player.update()		1100,	11,	1101,	110,	1101,	1110,	1001
2017-01-04 11:26:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:09 AI_Player.update()	update
2017-01-04 11:26:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:09 AI_Player.update()	update
2017-01-04 11:26:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:10 AI_Player.update()	Search took981ms
2017-01-04 11:26:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:10 AI_Player.update()		110,	1101,	111,	110,	111,	1101,	11
2017-01-04 11:26:10 AI_Player.update()		1010,	111,	11,	1010,	1011,	1010,	101
2017-01-04 11:26:10 AI_Player.update()		1110,	101,	1110,	110,	111,	1101,	1011
2017-01-04 11:26:10 AI_Player.update()		1010,	11,	1100,	1101,	11,	110,	1110
2017-01-04 11:26:10 AI_Player.update()		1110,	110,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:10 AI_Player.update()		1001,	1100,	11,	111,	1010,	1110,	111
2017-01-04 11:26:10 AI_Player.update()		1100,	11,	1101,	101,	1101,	1110,	1001
2017-01-04 11:26:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:10 AI_Player.update()	update
2017-01-04 11:26:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:10 AI_Player.update()	update
2017-01-04 11:26:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:11 AI_Player.update()	Search took387ms
2017-01-04 11:26:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:11 AI_Player.update()		110,	1101,	111,	110,	111,	1101,	11
2017-01-04 11:26:11 AI_Player.update()		1010,	111,	11,	1010,	1011,	1010,	101
2017-01-04 11:26:11 AI_Player.update()		1110,	101,	1110,	110,	111,	1101,	1011
2017-01-04 11:26:11 AI_Player.update()		1010,	11,	1100,	1101,	11,	110,	1110
2017-01-04 11:26:11 AI_Player.update()		1110,	110,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:11 AI_Player.update()		111,	1001,	1100,	11,	111,	1010,	1110
2017-01-04 11:26:11 AI_Player.update()		1100,	11,	1101,	101,	1101,	1110,	1001
2017-01-04 11:26:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:11 AI_Player.update()	update
2017-01-04 11:26:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:11 AI_Player.update()	update
2017-01-04 11:26:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:11 AI_Player.update()	Search took430ms
2017-01-04 11:26:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:11 AI_Player.update()		110,	1101,	111,	1010,	111,	1101,	11
2017-01-04 11:26:11 AI_Player.update()		1010,	111,	11,	110,	1011,	1010,	101
2017-01-04 11:26:11 AI_Player.update()		1110,	101,	1110,	1101,	111,	1101,	1011
2017-01-04 11:26:11 AI_Player.update()		1010,	11,	1100,	11,	11,	110,	1110
2017-01-04 11:26:11 AI_Player.update()		1110,	110,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:11 AI_Player.update()		111,	1001,	1100,	101,	111,	1010,	1110
2017-01-04 11:26:11 AI_Player.update()		1100,	11,	1101,	110,	1101,	1110,	1001
2017-01-04 11:26:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:11 AI_Player.update()	update
2017-01-04 11:26:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:11 AI_Player.update()	update
2017-01-04 11:26:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:11 AI_Player.update()	Search took329ms
2017-01-04 11:26:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:11 AI_Player.update()		110,	111,	111,	1010,	111,	1101,	11
2017-01-04 11:26:11 AI_Player.update()		1010,	101,	11,	110,	1011,	1010,	101
2017-01-04 11:26:11 AI_Player.update()		1110,	11,	1110,	1101,	111,	1101,	1011
2017-01-04 11:26:11 AI_Player.update()		1010,	110,	1100,	11,	11,	110,	1110
2017-01-04 11:26:11 AI_Player.update()		1110,	1001,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:11 AI_Player.update()		111,	11,	1100,	101,	111,	1010,	1110
2017-01-04 11:26:11 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1110,	1001
2017-01-04 11:26:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:11 AI_Player.update()	update
2017-01-04 11:26:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:11 AI_Player.update()	update
2017-01-04 11:26:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:12 AI_Player.update()	Search took345ms
2017-01-04 11:26:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:12 AI_Player.update()		110,	111,	111,	110,	111,	1101,	11
2017-01-04 11:26:12 AI_Player.update()		1010,	101,	11,	1010,	1011,	1010,	101
2017-01-04 11:26:12 AI_Player.update()		1110,	11,	1110,	110,	111,	1101,	1011
2017-01-04 11:26:12 AI_Player.update()		1010,	110,	1100,	1101,	11,	110,	1110
2017-01-04 11:26:12 AI_Player.update()		1110,	1001,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:12 AI_Player.update()		111,	11,	1100,	11,	111,	1010,	1110
2017-01-04 11:26:12 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1110,	1001
2017-01-04 11:26:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:12 AI_Player.update()	update
2017-01-04 11:26:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:12 AI_Player.update()	update
2017-01-04 11:26:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:13 AI_Player.update()	Search took991ms
2017-01-04 11:26:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:13 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-04 11:26:13 AI_Player.update()		1010,	101,	11,	1010,	1011,	1101,	101
2017-01-04 11:26:13 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-04 11:26:13 AI_Player.update()		1010,	110,	1100,	1101,	11,	111,	1110
2017-01-04 11:26:13 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:13 AI_Player.update()		111,	11,	1100,	11,	111,	1110,	1110
2017-01-04 11:26:13 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1101,	1001
2017-01-04 11:26:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:13 AI_Player.update()	update
2017-01-04 11:26:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:13 AI_Player.update()	update
2017-01-04 11:26:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:14 AI_Player.update()	Search took1064ms
2017-01-04 11:26:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:14 AI_Player.update()		110,	111,	111,	110,	111,	1101,	11
2017-01-04 11:26:14 AI_Player.update()		1010,	101,	11,	1010,	1011,	1010,	101
2017-01-04 11:26:14 AI_Player.update()		1110,	11,	1110,	110,	111,	1101,	1011
2017-01-04 11:26:14 AI_Player.update()		1010,	110,	1100,	1101,	11,	110,	1110
2017-01-04 11:26:14 AI_Player.update()		1110,	1001,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:14 AI_Player.update()		111,	11,	1100,	11,	111,	1010,	1110
2017-01-04 11:26:14 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1110,	1001
2017-01-04 11:26:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:14 AI_Player.update()	update
2017-01-04 11:26:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:14 AI_Player.update()	update
2017-01-04 11:26:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:14 AI_Player.update()	Search took618ms
2017-01-04 11:26:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:14 AI_Player.update()		110,	1101,	111,	110,	111,	1101,	11
2017-01-04 11:26:14 AI_Player.update()		1010,	111,	11,	1010,	1011,	1010,	101
2017-01-04 11:26:14 AI_Player.update()		1110,	101,	1110,	110,	111,	1101,	1011
2017-01-04 11:26:14 AI_Player.update()		1010,	11,	1100,	1101,	11,	110,	1110
2017-01-04 11:26:14 AI_Player.update()		1110,	110,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:14 AI_Player.update()		111,	1001,	1100,	11,	111,	1010,	1110
2017-01-04 11:26:14 AI_Player.update()		1100,	11,	1101,	101,	1101,	1110,	1001
2017-01-04 11:26:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:14 AI_Player.update()	update
2017-01-04 11:26:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:14 AI_Player.update()	update
2017-01-04 11:26:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:15 AI_Player.update()	Search took364ms
2017-01-04 11:26:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:15 AI_Player.update()		110,	11,	111,	110,	111,	1101,	11
2017-01-04 11:26:15 AI_Player.update()		1010,	1101,	11,	1010,	1011,	1010,	101
2017-01-04 11:26:15 AI_Player.update()		1110,	111,	1110,	110,	111,	1101,	1011
2017-01-04 11:26:15 AI_Player.update()		1010,	101,	1100,	1101,	11,	110,	1110
2017-01-04 11:26:15 AI_Player.update()		1110,	11,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:15 AI_Player.update()		111,	110,	1100,	11,	111,	1010,	1110
2017-01-04 11:26:15 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1110,	1001
2017-01-04 11:26:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:15 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:15 AI_Player.update()	update
2017-01-04 11:26:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:15 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:15 AI_Player.update()	update
2017-01-04 11:26:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:15 AI_Player.update()	Search took151ms
2017-01-04 11:26:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:15 AI_Player.update()		110,	11,	111,	1010,	111,	1101,	11
2017-01-04 11:26:15 AI_Player.update()		1010,	1101,	11,	110,	1011,	1010,	101
2017-01-04 11:26:15 AI_Player.update()		1110,	111,	1110,	1101,	111,	1101,	1011
2017-01-04 11:26:15 AI_Player.update()		1010,	101,	1100,	11,	11,	110,	1110
2017-01-04 11:26:15 AI_Player.update()		1110,	11,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:15 AI_Player.update()		111,	110,	1100,	101,	111,	1010,	1110
2017-01-04 11:26:15 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1110,	1001
2017-01-04 11:26:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:15 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:15 AI_Player.update()	update
2017-01-04 11:26:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:15 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:15 AI_Player.update()	update
2017-01-04 11:26:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:15 AI_Player.update()	Search took588ms
2017-01-04 11:26:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:15 AI_Player.update()		110,	11,	111,	110,	111,	1101,	11
2017-01-04 11:26:15 AI_Player.update()		1010,	1101,	11,	1010,	1011,	1010,	101
2017-01-04 11:26:15 AI_Player.update()		1110,	111,	1110,	110,	111,	1101,	1011
2017-01-04 11:26:15 AI_Player.update()		1010,	101,	1100,	1101,	11,	110,	1110
2017-01-04 11:26:15 AI_Player.update()		1110,	11,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:15 AI_Player.update()		111,	110,	1100,	11,	111,	1010,	1110
2017-01-04 11:26:15 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1110,	1001
2017-01-04 11:26:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:15 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:15 AI_Player.update()	update
2017-01-04 11:26:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:15 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:15 AI_Player.update()	update
2017-01-04 11:26:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:16 AI_Player.update()	Search took311ms
2017-01-04 11:26:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:16 AI_Player.update()		110,	11,	111,	1010,	111,	1101,	11
2017-01-04 11:26:16 AI_Player.update()		1010,	1101,	11,	110,	1011,	1010,	101
2017-01-04 11:26:16 AI_Player.update()		1110,	111,	1110,	1101,	111,	1101,	1011
2017-01-04 11:26:16 AI_Player.update()		1010,	101,	1100,	11,	11,	110,	1110
2017-01-04 11:26:16 AI_Player.update()		1110,	11,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:16 AI_Player.update()		111,	110,	1100,	101,	111,	1010,	1110
2017-01-04 11:26:16 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1110,	1001
2017-01-04 11:26:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:16 AI_Player.update()	update
2017-01-04 11:26:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:16 AI_Player.update()	update
2017-01-04 11:26:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:16 AI_Player.update()	Search took577ms
2017-01-04 11:26:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:16 AI_Player.update()		110,	11,	111,	1010,	111,	1101,	11
2017-01-04 11:26:16 AI_Player.update()		1010,	1101,	11,	110,	1011,	1010,	101
2017-01-04 11:26:16 AI_Player.update()		1110,	111,	1110,	1101,	111,	1101,	1011
2017-01-04 11:26:16 AI_Player.update()		1010,	101,	1100,	11,	11,	110,	1110
2017-01-04 11:26:16 AI_Player.update()		1110,	11,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:16 AI_Player.update()		110,	1100,	101,	111,	1010,	1110,	111
2017-01-04 11:26:16 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1110,	1001
2017-01-04 11:26:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:16 AI_Player.update()	update
2017-01-04 11:26:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:16 AI_Player.update()	update
2017-01-04 11:26:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:16 AI_Player.update()	Search took115ms
2017-01-04 11:26:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:16 AI_Player.update()		110,	1001,	111,	1010,	111,	1101,	11
2017-01-04 11:26:16 AI_Player.update()		1010,	11,	11,	110,	1011,	1010,	101
2017-01-04 11:26:16 AI_Player.update()		1110,	1101,	1110,	1101,	111,	1101,	1011
2017-01-04 11:26:16 AI_Player.update()		1010,	111,	1100,	11,	11,	110,	1110
2017-01-04 11:26:16 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:16 AI_Player.update()		110,	11,	101,	111,	1010,	1110,	111
2017-01-04 11:26:16 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1110,	1001
2017-01-04 11:26:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:26:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:16 AI_Player.update()	update
2017-01-04 11:26:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:26:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:16 AI_Player.update()	update
2017-01-04 11:26:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:17 AI_Player.update()	Search took446ms
2017-01-04 11:26:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:17 AI_Player.update()		110,	1001,	111,	1010,	111,	1101,	11
2017-01-04 11:26:17 AI_Player.update()		101,	1010,	11,	11,	110,	1011,	1010
2017-01-04 11:26:17 AI_Player.update()		1110,	1101,	1110,	1101,	111,	1101,	1011
2017-01-04 11:26:17 AI_Player.update()		1010,	111,	1100,	11,	11,	110,	1110
2017-01-04 11:26:17 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:17 AI_Player.update()		110,	11,	101,	111,	1010,	1110,	111
2017-01-04 11:26:17 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1110,	1001
2017-01-04 11:26:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:26:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:17 AI_Player.update()	update
2017-01-04 11:26:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:26:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:17 AI_Player.update()	update
2017-01-04 11:26:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:17 AI_Player.update()	Search took250ms
2017-01-04 11:26:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:17 AI_Player.update()		110,	1100,	111,	1010,	111,	1101,	11
2017-01-04 11:26:17 AI_Player.update()		101,	1001,	11,	11,	110,	1011,	1010
2017-01-04 11:26:17 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1101,	1011
2017-01-04 11:26:17 AI_Player.update()		1010,	1101,	1100,	11,	11,	110,	1110
2017-01-04 11:26:17 AI_Player.update()		1110,	111,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:17 AI_Player.update()		110,	101,	101,	111,	1010,	1110,	111
2017-01-04 11:26:17 AI_Player.update()		1100,	11,	1101,	110,	1101,	1110,	1001
2017-01-04 11:26:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:26:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:17 AI_Player.update()	update
2017-01-04 11:26:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:17 AI_Player.update()	update
2017-01-04 11:26:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:17 AI_Player.update()	Search took68ms
2017-01-04 11:26:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:17 AI_Player.update()		110,	1001,	111,	1010,	111,	1101,	11
2017-01-04 11:26:17 AI_Player.update()		101,	1010,	11,	11,	110,	1011,	1010
2017-01-04 11:26:17 AI_Player.update()		1110,	1101,	1110,	1101,	111,	1101,	1011
2017-01-04 11:26:17 AI_Player.update()		1010,	111,	1100,	11,	11,	110,	1110
2017-01-04 11:26:17 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:17 AI_Player.update()		110,	11,	101,	111,	1010,	1110,	111
2017-01-04 11:26:17 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1110,	1001
2017-01-04 11:26:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:17 AI_Player.update()	update
2017-01-04 11:26:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:17 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:17 AI_Player.update()	update
2017-01-04 11:26:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:18 AI_Player.update()	Search took258ms
2017-01-04 11:26:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:18 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-04 11:26:18 AI_Player.update()		101,	1101,	11,	11,	110,	1011,	1010
2017-01-04 11:26:18 AI_Player.update()		1110,	111,	1110,	1101,	111,	1101,	1011
2017-01-04 11:26:18 AI_Player.update()		1010,	101,	1100,	11,	11,	110,	1110
2017-01-04 11:26:18 AI_Player.update()		1110,	11,	1101,	11,	1011,	111,	1011
2017-01-04 11:26:18 AI_Player.update()		110,	1100,	101,	111,	1010,	1110,	111
2017-01-04 11:26:18 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1110,	1001
2017-01-04 11:26:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:18 AI_Player.update()	update
2017-01-04 11:26:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:18 AI_Player.update()	update
2017-01-04 11:26:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:18 AI_Player.update()	Search took478ms
2017-01-04 11:26:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:18 AI_Player.update()		110,	1010,	111,	11,	111,	1101,	11
2017-01-04 11:26:18 AI_Player.update()		101,	1101,	11,	1101,	110,	1011,	1010
2017-01-04 11:26:18 AI_Player.update()		1110,	111,	1110,	11,	111,	1101,	1011
2017-01-04 11:26:18 AI_Player.update()		1010,	101,	1100,	11,	11,	110,	1110
2017-01-04 11:26:18 AI_Player.update()		1110,	11,	1101,	111,	1011,	111,	1011
2017-01-04 11:26:18 AI_Player.update()		110,	1100,	101,	110,	1010,	1110,	111
2017-01-04 11:26:18 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1110,	1001
2017-01-04 11:26:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:18 AI_Player.update()	update
2017-01-04 11:26:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:18 AI_Player.update()	update
2017-01-04 11:26:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:18 AI_Player.update()	Search took344ms
2017-01-04 11:26:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:18 AI_Player.update()		110,	1001,	111,	11,	111,	1101,	11
2017-01-04 11:26:18 AI_Player.update()		101,	1010,	11,	1101,	110,	1011,	1010
2017-01-04 11:26:18 AI_Player.update()		1110,	1101,	1110,	11,	111,	1101,	1011
2017-01-04 11:26:18 AI_Player.update()		1010,	111,	1100,	11,	11,	110,	1110
2017-01-04 11:26:18 AI_Player.update()		1110,	101,	1101,	111,	1011,	111,	1011
2017-01-04 11:26:18 AI_Player.update()		110,	11,	101,	110,	1010,	1110,	111
2017-01-04 11:26:18 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1110,	1001
2017-01-04 11:26:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:18 AI_Player.update()	update
2017-01-04 11:26:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:26:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:18 AI_Player.update()	update
2017-01-04 11:26:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:19 AI_Player.update()	Search took494ms
2017-01-04 11:26:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:19 AI_Player.update()		110,	1010,	111,	11,	111,	1101,	11
2017-01-04 11:26:19 AI_Player.update()		101,	1101,	11,	1101,	110,	1011,	1010
2017-01-04 11:26:19 AI_Player.update()		1110,	111,	1110,	11,	111,	1101,	1011
2017-01-04 11:26:19 AI_Player.update()		1010,	101,	1100,	11,	11,	110,	1110
2017-01-04 11:26:19 AI_Player.update()		1110,	11,	1101,	111,	1011,	111,	1011
2017-01-04 11:26:19 AI_Player.update()		110,	1100,	101,	110,	1010,	1110,	111
2017-01-04 11:26:19 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1110,	1001
2017-01-04 11:26:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:26:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:19 AI_Player.update()	update
2017-01-04 11:26:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:26:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:19 AI_Player.update()	update
2017-01-04 11:26:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:19 AI_Player.update()	Search took419ms
2017-01-04 11:26:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:19 AI_Player.update()		110,	1010,	111,	11,	111,	1011,	11
2017-01-04 11:26:19 AI_Player.update()		101,	1101,	11,	1101,	110,	1101,	1010
2017-01-04 11:26:19 AI_Player.update()		1110,	111,	1110,	11,	111,	110,	1011
2017-01-04 11:26:19 AI_Player.update()		1010,	101,	1100,	11,	11,	111,	1110
2017-01-04 11:26:19 AI_Player.update()		1110,	11,	1101,	111,	1011,	1110,	1011
2017-01-04 11:26:19 AI_Player.update()		110,	1100,	101,	110,	1010,	1110,	111
2017-01-04 11:26:19 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:26:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:26:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:19 AI_Player.update()	update
2017-01-04 11:26:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:26:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:19 AI_Player.update()	update
2017-01-04 11:26:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:20 AI_Player.update()	Search took504ms
2017-01-04 11:26:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:20 AI_Player.update()		110,	1010,	111,	11,	111,	1011,	11
2017-01-04 11:26:20 AI_Player.update()		1010,	101,	1101,	11,	1101,	110,	1101
2017-01-04 11:26:20 AI_Player.update()		1110,	111,	1110,	11,	111,	110,	1011
2017-01-04 11:26:20 AI_Player.update()		1010,	101,	1100,	11,	11,	111,	1110
2017-01-04 11:26:20 AI_Player.update()		1110,	11,	1101,	111,	1011,	1110,	1011
2017-01-04 11:26:20 AI_Player.update()		110,	1100,	101,	110,	1010,	1110,	111
2017-01-04 11:26:20 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:26:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:20 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:26:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:20 AI_Player.update()	update
2017-01-04 11:26:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:20 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:20 AI_Player.update()	update
2017-01-04 11:26:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:21 AI_Player.update()	Search took829ms
2017-01-04 11:26:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()		110,	1001,	111,	11,	111,	1011,	11
2017-01-04 11:26:21 AI_Player.update()		1010,	1010,	1101,	11,	1101,	110,	1101
2017-01-04 11:26:21 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-04 11:26:21 AI_Player.update()		1010,	111,	1100,	11,	11,	111,	1110
2017-01-04 11:26:21 AI_Player.update()		1110,	101,	1101,	111,	1011,	1110,	1011
2017-01-04 11:26:21 AI_Player.update()		110,	11,	101,	110,	1010,	1110,	111
2017-01-04 11:26:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:26:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()	update
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:21 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:26:21 AI_Player.update()	Player a has won!
2017-01-04 11:26:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:26:21 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:26:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:26:21 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:26:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()	update
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:21 AI_Player.update()	Search took65ms
2017-01-04 11:26:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-04 11:26:21 AI_Player.update()		1001,	1001,	101,	110,	111,	101,	110
2017-01-04 11:26:21 AI_Player.update()		1110,	1001,	1110,	11,	111,	1110,	1011
2017-01-04 11:26:21 AI_Player.update()		1110,	110,	110,	1010,	1100,	101,	1010
2017-01-04 11:26:21 AI_Player.update()		1110,	1001,	1101,	111,	1011,	11,	1011
2017-01-04 11:26:21 AI_Player.update()		101,	101,	101,	1100,	1010,	1010,	1100
2017-01-04 11:26:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1101,	1001
2017-01-04 11:26:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()	update
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()	update
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:21 AI_Player.update()	Search took38ms
2017-01-04 11:26:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 11:26:21 AI_Player.update()		1001,	1001,	101,	110,	111,	1110,	110
2017-01-04 11:26:21 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-04 11:26:21 AI_Player.update()		1110,	110,	110,	1010,	1100,	11,	1010
2017-01-04 11:26:21 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1010,	1011
2017-01-04 11:26:21 AI_Player.update()		101,	101,	101,	1100,	1010,	1101,	1100
2017-01-04 11:26:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 11:26:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()	update
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()	update
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:21 AI_Player.update()	Search took76ms
2017-01-04 11:26:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 11:26:21 AI_Player.update()		1001,	1001,	101,	1001,	111,	1110,	110
2017-01-04 11:26:21 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 11:26:21 AI_Player.update()		1110,	110,	110,	11,	1100,	11,	1010
2017-01-04 11:26:21 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:26:21 AI_Player.update()		101,	101,	101,	111,	1010,	1101,	1100
2017-01-04 11:26:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 11:26:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()	update
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()	update
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:21 AI_Player.update()	Search took209ms
2017-01-04 11:26:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 11:26:21 AI_Player.update()		1001,	1001,	101,	1001,	111,	101,	110
2017-01-04 11:26:21 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-04 11:26:21 AI_Player.update()		1110,	110,	110,	11,	1100,	1010,	1010
2017-01-04 11:26:21 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:26:21 AI_Player.update()		101,	101,	101,	111,	1010,	1001,	1100
2017-01-04 11:26:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:26:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()	update
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()	update
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:21 AI_Player.update()	Search took71ms
2017-01-04 11:26:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 11:26:21 AI_Player.update()		110,	1001,	1001,	101,	1001,	111,	101
2017-01-04 11:26:21 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-04 11:26:21 AI_Player.update()		1110,	110,	110,	11,	1100,	1010,	1010
2017-01-04 11:26:21 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:26:21 AI_Player.update()		101,	101,	101,	111,	1010,	1001,	1100
2017-01-04 11:26:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:26:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()	update
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:21 AI_Player.update()	update
2017-01-04 11:26:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:22 AI_Player.update()	Search took403ms
2017-01-04 11:26:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()		110,	1010,	111,	1100,	111,	1110,	11
2017-01-04 11:26:22 AI_Player.update()		110,	101,	1001,	101,	1001,	111,	101
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	110,	11,	1100,	1010,	1010
2017-01-04 11:26:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:26:22 AI_Player.update()		101,	1001,	101,	111,	1010,	1001,	1100
2017-01-04 11:26:22 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:22 AI_Player.update()	Search took122ms
2017-01-04 11:26:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 11:26:22 AI_Player.update()		110,	1001,	1001,	101,	1001,	111,	101
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-04 11:26:22 AI_Player.update()		1110,	110,	110,	11,	1100,	1010,	1010
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:26:22 AI_Player.update()		101,	101,	101,	111,	1010,	1001,	1100
2017-01-04 11:26:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:22 AI_Player.update()	Search took53ms
2017-01-04 11:26:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-04 11:26:22 AI_Player.update()		110,	1001,	1001,	110,	1001,	111,	101
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	1110,	11,	111,	11,	1011
2017-01-04 11:26:22 AI_Player.update()		1110,	110,	110,	1010,	1100,	1010,	1010
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1101,	1011
2017-01-04 11:26:22 AI_Player.update()		101,	101,	101,	1100,	1010,	1001,	1100
2017-01-04 11:26:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:22 AI_Player.update()	Search took254ms
2017-01-04 11:26:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 11:26:22 AI_Player.update()		110,	1001,	1001,	101,	1001,	111,	101
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-04 11:26:22 AI_Player.update()		1110,	110,	110,	11,	1100,	1010,	1010
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:26:22 AI_Player.update()		101,	101,	101,	111,	1010,	1001,	1100
2017-01-04 11:26:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:22 AI_Player.update()	Search took43ms
2017-01-04 11:26:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 11:26:22 AI_Player.update()		110,	1001,	1001,	101,	1001,	111,	101
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-04 11:26:22 AI_Player.update()		1110,	110,	110,	11,	1100,	1010,	1010
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:26:22 AI_Player.update()		101,	101,	111,	1010,	1001,	1100,	101
2017-01-04 11:26:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:22 AI_Player.update()	Search took149ms
2017-01-04 11:26:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()		110,	1010,	111,	1100,	111,	1110,	11
2017-01-04 11:26:22 AI_Player.update()		110,	101,	1001,	101,	1001,	111,	101
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	110,	11,	1100,	1010,	1010
2017-01-04 11:26:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:26:22 AI_Player.update()		101,	1001,	111,	1010,	1001,	1100,	101
2017-01-04 11:26:22 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:22 AI_Player.update()	Search took66ms
2017-01-04 11:26:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()		110,	1010,	111,	1100,	111,	1110,	11
2017-01-04 11:26:22 AI_Player.update()		110,	101,	1001,	101,	1001,	111,	101
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	110,	11,	1100,	1010,	1010
2017-01-04 11:26:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:26:22 AI_Player.update()		1001,	111,	1010,	1001,	1100,	101,	101
2017-01-04 11:26:22 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:22 AI_Player.update()	Search took170ms
2017-01-04 11:26:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()		110,	1010,	111,	1100,	111,	1110,	11
2017-01-04 11:26:22 AI_Player.update()		110,	101,	1001,	1100,	1001,	111,	101
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-04 11:26:22 AI_Player.update()		1110,	1001,	110,	110,	1100,	1010,	1010
2017-01-04 11:26:22 AI_Player.update()		1110,	110,	1101,	11,	1011,	1101,	1011
2017-01-04 11:26:22 AI_Player.update()		1001,	111,	1010,	1010,	1100,	101,	101
2017-01-04 11:26:22 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 11:26:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:26:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:22 AI_Player.update()	update
2017-01-04 11:26:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:23 AI_Player.update()	Search took338ms
2017-01-04 11:26:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:23 AI_Player.update()		110,	1010,	111,	1100,	111,	1110,	11
2017-01-04 11:26:23 AI_Player.update()		110,	101,	1001,	1100,	1001,	111,	101
2017-01-04 11:26:23 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-04 11:26:23 AI_Player.update()		1010,	1110,	1001,	110,	110,	1100,	1010
2017-01-04 11:26:23 AI_Player.update()		1110,	110,	1101,	11,	1011,	1101,	1011
2017-01-04 11:26:23 AI_Player.update()		1001,	111,	1010,	1010,	1100,	101,	101
2017-01-04 11:26:23 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 11:26:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:26:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:23 AI_Player.update()	update
2017-01-04 11:26:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:26:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:23 AI_Player.update()	update
2017-01-04 11:26:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:23 AI_Player.update()	Search took302ms
2017-01-04 11:26:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:23 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 11:26:23 AI_Player.update()		110,	1001,	1001,	1100,	1001,	111,	101
2017-01-04 11:26:23 AI_Player.update()		1110,	1110,	1110,	101,	111,	11,	1011
2017-01-04 11:26:23 AI_Player.update()		1010,	110,	1001,	110,	110,	1100,	1010
2017-01-04 11:26:23 AI_Player.update()		1110,	111,	1101,	11,	1011,	1101,	1011
2017-01-04 11:26:23 AI_Player.update()		1001,	101,	1010,	1010,	1100,	101,	101
2017-01-04 11:26:23 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 11:26:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:26:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:23 AI_Player.update()	update
2017-01-04 11:26:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:23 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:26:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:23 AI_Player.update()	update
2017-01-04 11:26:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:24 AI_Player.update()	Search took571ms
2017-01-04 11:26:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:24 AI_Player.update()		110,	1001,	111,	1100,	111,	1110,	11
2017-01-04 11:26:24 AI_Player.update()		110,	1110,	1001,	1100,	1001,	111,	101
2017-01-04 11:26:24 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 11:26:24 AI_Player.update()		1010,	111,	1001,	110,	110,	1100,	1010
2017-01-04 11:26:24 AI_Player.update()		1110,	101,	1101,	11,	1011,	1101,	1011
2017-01-04 11:26:24 AI_Player.update()		1001,	1010,	1010,	1010,	1100,	101,	101
2017-01-04 11:26:24 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 11:26:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:26:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:24 AI_Player.update()	update
2017-01-04 11:26:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:26:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:24 AI_Player.update()	update
2017-01-04 11:26:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:24 AI_Player.update()	Search took124ms
2017-01-04 11:26:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:24 AI_Player.update()		110,	1001,	111,	1100,	111,	1110,	11
2017-01-04 11:26:24 AI_Player.update()		110,	1110,	1001,	1100,	1001,	111,	101
2017-01-04 11:26:24 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 11:26:24 AI_Player.update()		111,	1001,	110,	110,	1100,	1010,	1010
2017-01-04 11:26:24 AI_Player.update()		1110,	101,	1101,	11,	1011,	1101,	1011
2017-01-04 11:26:24 AI_Player.update()		1001,	1010,	1010,	1010,	1100,	101,	101
2017-01-04 11:26:24 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 11:26:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:26:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:24 AI_Player.update()	update
2017-01-04 11:26:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:24 AI_Player.update()	update
2017-01-04 11:26:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:24 AI_Player.update()	Search took536ms
2017-01-04 11:26:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:24 AI_Player.update()		110,	1001,	111,	1100,	111,	1110,	11
2017-01-04 11:26:24 AI_Player.update()		110,	1110,	1001,	1100,	1001,	111,	101
2017-01-04 11:26:24 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 11:26:24 AI_Player.update()		111,	1001,	110,	110,	1100,	1010,	1010
2017-01-04 11:26:24 AI_Player.update()		1110,	101,	1101,	11,	1011,	1101,	1011
2017-01-04 11:26:24 AI_Player.update()		101,	1001,	1010,	1010,	1010,	1100,	101
2017-01-04 11:26:24 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 11:26:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:24 AI_Player.update()	update
2017-01-04 11:26:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:26:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:24 AI_Player.update()	update
2017-01-04 11:26:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:25 AI_Player.update()	Search took401ms
2017-01-04 11:26:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()		110,	1001,	111,	1100,	111,	111,	11
2017-01-04 11:26:25 AI_Player.update()		110,	1110,	1001,	1100,	1001,	11,	101
2017-01-04 11:26:25 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:25 AI_Player.update()		111,	1001,	110,	110,	1100,	1101,	1010
2017-01-04 11:26:25 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:25 AI_Player.update()		101,	1001,	1010,	1010,	1010,	101,	101
2017-01-04 11:26:25 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:26:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()	update
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:26:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()	update
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:25 AI_Player.update()	Search took94ms
2017-01-04 11:26:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()		110,	1001,	111,	1100,	111,	111,	11
2017-01-04 11:26:25 AI_Player.update()		110,	1110,	1001,	1100,	1001,	11,	101
2017-01-04 11:26:25 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:25 AI_Player.update()		1010,	111,	1001,	110,	110,	1100,	1101
2017-01-04 11:26:25 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:25 AI_Player.update()		101,	1001,	1010,	1010,	1010,	101,	101
2017-01-04 11:26:25 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:26:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()	update
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:26:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()	update
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:25 AI_Player.update()	Search took96ms
2017-01-04 11:26:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()		110,	1110,	111,	1100,	111,	111,	11
2017-01-04 11:26:25 AI_Player.update()		110,	110,	1001,	1100,	1001,	11,	101
2017-01-04 11:26:25 AI_Player.update()		1110,	111,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:25 AI_Player.update()		1010,	101,	1001,	110,	110,	1100,	1101
2017-01-04 11:26:25 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:25 AI_Player.update()		101,	101,	1010,	1010,	1010,	101,	101
2017-01-04 11:26:25 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:26:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()	update
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()	update
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:25 AI_Player.update()	Search took123ms
2017-01-04 11:26:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()		110,	1110,	111,	1100,	111,	111,	11
2017-01-04 11:26:25 AI_Player.update()		110,	110,	1001,	1100,	1001,	11,	101
2017-01-04 11:26:25 AI_Player.update()		1110,	111,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:25 AI_Player.update()		1010,	101,	1001,	110,	110,	1100,	1101
2017-01-04 11:26:25 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:25 AI_Player.update()		101,	1010,	1010,	1010,	101,	101,	101
2017-01-04 11:26:25 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()	update
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()	update
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:25 AI_Player.update()	Search took121ms
2017-01-04 11:26:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 11:26:25 AI_Player.update()		110,	111,	1001,	1100,	1001,	11,	101
2017-01-04 11:26:25 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:25 AI_Player.update()		1010,	1001,	1001,	110,	110,	1100,	1101
2017-01-04 11:26:25 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:25 AI_Player.update()		101,	1001,	1010,	1010,	101,	101,	101
2017-01-04 11:26:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()	update
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()	update
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:25 AI_Player.update()	Search took170ms
2017-01-04 11:26:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()		110,	111,	111,	1100,	111,	111,	11
2017-01-04 11:26:25 AI_Player.update()		110,	101,	1001,	1100,	1001,	11,	101
2017-01-04 11:26:25 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:25 AI_Player.update()		1010,	1010,	1001,	110,	110,	1100,	1101
2017-01-04 11:26:25 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:25 AI_Player.update()		101,	1110,	1010,	1010,	101,	101,	101
2017-01-04 11:26:25 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()	update
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:25 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:25 AI_Player.update()	update
2017-01-04 11:26:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:26 AI_Player.update()	Search took301ms
2017-01-04 11:26:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:26:26 AI_Player.update()		110,	1001,	1001,	1100,	1001,	11,	101
2017-01-04 11:26:26 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:26 AI_Player.update()		1010,	1001,	1001,	110,	110,	1100,	1101
2017-01-04 11:26:26 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:26 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	101
2017-01-04 11:26:26 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()	update
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()	update
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:26 AI_Player.update()	Search took87ms
2017-01-04 11:26:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()		110,	111,	111,	1100,	111,	111,	11
2017-01-04 11:26:26 AI_Player.update()		110,	101,	1001,	1100,	1001,	11,	101
2017-01-04 11:26:26 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:26 AI_Player.update()		1010,	1010,	1001,	110,	110,	1100,	1101
2017-01-04 11:26:26 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:26 AI_Player.update()		101,	1110,	1010,	1010,	101,	101,	101
2017-01-04 11:26:26 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()	update
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()	update
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:26 AI_Player.update()	Search took254ms
2017-01-04 11:26:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()		110,	111,	111,	1100,	111,	111,	11
2017-01-04 11:26:26 AI_Player.update()		110,	101,	1001,	1100,	1001,	11,	101
2017-01-04 11:26:26 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:26 AI_Player.update()		1010,	1001,	110,	110,	1100,	1101,	1010
2017-01-04 11:26:26 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:26 AI_Player.update()		101,	1110,	1010,	1010,	101,	101,	101
2017-01-04 11:26:26 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:26:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()	update
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()	update
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:26 AI_Player.update()	Search took156ms
2017-01-04 11:26:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 11:26:26 AI_Player.update()		110,	111,	1001,	1100,	1001,	11,	101
2017-01-04 11:26:26 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:26 AI_Player.update()		1010,	1001,	110,	110,	1100,	1101,	1010
2017-01-04 11:26:26 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:26 AI_Player.update()		101,	1001,	1010,	1010,	101,	101,	101
2017-01-04 11:26:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()	update
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()	update
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:26 AI_Player.update()	Search took219ms
2017-01-04 11:26:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()		110,	111,	111,	1100,	111,	111,	11
2017-01-04 11:26:26 AI_Player.update()		110,	101,	1001,	1100,	1001,	11,	101
2017-01-04 11:26:26 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:26 AI_Player.update()		1010,	1001,	110,	110,	1100,	1101,	1010
2017-01-04 11:26:26 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:26 AI_Player.update()		101,	1110,	1010,	1010,	101,	101,	101
2017-01-04 11:26:26 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()	update
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:26 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:26 AI_Player.update()	update
2017-01-04 11:26:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:27 AI_Player.update()	Search took331ms
2017-01-04 11:26:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:27 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:26:27 AI_Player.update()		110,	1001,	1001,	1100,	1001,	11,	101
2017-01-04 11:26:27 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:27 AI_Player.update()		1010,	1001,	110,	110,	1100,	1101,	1010
2017-01-04 11:26:27 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:27 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	101
2017-01-04 11:26:27 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:27 AI_Player.update()	update
2017-01-04 11:26:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:27 AI_Player.update()	update
2017-01-04 11:26:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:27 AI_Player.update()	Search took194ms
2017-01-04 11:26:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:27 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:26:27 AI_Player.update()		101,	110,	1001,	1001,	1100,	1001,	11
2017-01-04 11:26:27 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:27 AI_Player.update()		1010,	1001,	110,	110,	1100,	1101,	1010
2017-01-04 11:26:27 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:27 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	101
2017-01-04 11:26:27 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:27 AI_Player.update()	update
2017-01-04 11:26:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:27 AI_Player.update()	update
2017-01-04 11:26:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:27 AI_Player.update()	Search took148ms
2017-01-04 11:26:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:27 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 11:26:27 AI_Player.update()		11,	101,	110,	1001,	1001,	1100,	1001
2017-01-04 11:26:27 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-04 11:26:27 AI_Player.update()		1010,	1001,	110,	110,	1100,	1101,	1010
2017-01-04 11:26:27 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1100,	1011
2017-01-04 11:26:27 AI_Player.update()		101,	110,	1010,	1010,	101,	101,	101
2017-01-04 11:26:27 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1110,	1001
2017-01-04 11:26:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:27 AI_Player.update()	update
2017-01-04 11:26:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:27 AI_Player.update()	update
2017-01-04 11:26:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:27 AI_Player.update()	Search took172ms
2017-01-04 11:26:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:27 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 11:26:27 AI_Player.update()		11,	101,	110,	1001,	1001,	111,	1001
2017-01-04 11:26:27 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-04 11:26:27 AI_Player.update()		1010,	1001,	110,	110,	1100,	1010,	1010
2017-01-04 11:26:27 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 11:26:27 AI_Player.update()		101,	110,	1010,	1010,	101,	1100,	101
2017-01-04 11:26:27 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-04 11:26:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:27 AI_Player.update()	update
2017-01-04 11:26:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:27 AI_Player.update()	update
2017-01-04 11:26:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:28 AI_Player.update()	Search took280ms
2017-01-04 11:26:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 11:26:28 AI_Player.update()		101,	110,	1001,	1001,	111,	1001,	11
2017-01-04 11:26:28 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-04 11:26:28 AI_Player.update()		1010,	1001,	110,	110,	1100,	1010,	1010
2017-01-04 11:26:28 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 11:26:28 AI_Player.update()		101,	110,	1010,	1010,	101,	1100,	101
2017-01-04 11:26:28 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-04 11:26:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()	update
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:26:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()	update
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:28 AI_Player.update()	Search took157ms
2017-01-04 11:26:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 11:26:28 AI_Player.update()		110,	1001,	1001,	111,	1001,	11,	101
2017-01-04 11:26:28 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-04 11:26:28 AI_Player.update()		1010,	1001,	110,	110,	1100,	1010,	1010
2017-01-04 11:26:28 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 11:26:28 AI_Player.update()		101,	110,	1010,	1010,	101,	1100,	101
2017-01-04 11:26:28 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-04 11:26:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:26:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()	update
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:26:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()	update
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:28 AI_Player.update()	Search took193ms
2017-01-04 11:26:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 11:26:28 AI_Player.update()		110,	1001,	1001,	111,	1001,	1110,	101
2017-01-04 11:26:28 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-04 11:26:28 AI_Player.update()		1010,	1001,	110,	110,	1100,	1100,	1010
2017-01-04 11:26:28 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:28 AI_Player.update()		101,	110,	1010,	1010,	101,	1101,	101
2017-01-04 11:26:28 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:26:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:26:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()	update
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:26:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()	update
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:28 AI_Player.update()	Search took157ms
2017-01-04 11:26:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 11:26:28 AI_Player.update()		110,	1001,	1001,	101,	1001,	1110,	101
2017-01-04 11:26:28 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-04 11:26:28 AI_Player.update()		1010,	1001,	110,	11,	1100,	1100,	1010
2017-01-04 11:26:28 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:26:28 AI_Player.update()		101,	110,	1010,	1001,	101,	1101,	101
2017-01-04 11:26:28 AI_Player.update()		1100,	111,	1101,	1100,	1101,	1100,	1001
2017-01-04 11:26:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:26:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()	update
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:28 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:26:28 AI_Player.update()	Player a has won!
2017-01-04 11:26:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:26:28 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:26:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:26:28 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:26:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()	update
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:28 AI_Player.update()	Search took238ms
2017-01-04 11:26:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-04 11:26:28 AI_Player.update()		1010,	1101,	11,	1101,	110,	1001,	110
2017-01-04 11:26:28 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-04 11:26:28 AI_Player.update()		1010,	1001,	110,	1101,	1110,	11,	11
2017-01-04 11:26:28 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-04 11:26:28 AI_Player.update()		1010,	1110,	1001,	11,	11,	101,	1010
2017-01-04 11:26:28 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-04 11:26:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()	update
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()	update
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:28 AI_Player.update()	Search took31ms
2017-01-04 11:26:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-04 11:26:28 AI_Player.update()		1101,	11,	1101,	110,	1001,	110,	1010
2017-01-04 11:26:28 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-04 11:26:28 AI_Player.update()		1010,	1001,	110,	1101,	1110,	11,	11
2017-01-04 11:26:28 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-04 11:26:28 AI_Player.update()		1010,	1110,	1001,	11,	11,	101,	1010
2017-01-04 11:26:28 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-04 11:26:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()	update
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:28 AI_Player.update()	update
2017-01-04 11:26:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:30 AI_Player.update()	Search took1177ms
2017-01-04 11:26:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:30 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-04 11:26:30 AI_Player.update()		1101,	11,	1101,	110,	1001,	110,	1010
2017-01-04 11:26:30 AI_Player.update()		1110,	11,	1110,	1001,	111,	11,	1011
2017-01-04 11:26:30 AI_Player.update()		1010,	1001,	110,	1101,	1110,	1100,	11
2017-01-04 11:26:30 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:30 AI_Player.update()		1010,	1110,	1001,	11,	11,	110,	1010
2017-01-04 11:26:30 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:26:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:30 AI_Player.update()	update
2017-01-04 11:26:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:30 AI_Player.update()	update
2017-01-04 11:26:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:30 AI_Player.update()	Search took37ms
2017-01-04 11:26:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:30 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-04 11:26:30 AI_Player.update()		1101,	11,	1101,	110,	1001,	110,	1010
2017-01-04 11:26:30 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-04 11:26:30 AI_Player.update()		1010,	1001,	110,	1101,	1110,	11,	11
2017-01-04 11:26:30 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-04 11:26:30 AI_Player.update()		1010,	1110,	1001,	11,	11,	101,	1010
2017-01-04 11:26:30 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-04 11:26:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:30 AI_Player.update()	update
2017-01-04 11:26:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:30 AI_Player.update()	update
2017-01-04 11:26:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:31 AI_Player.update()	Search took1310ms
2017-01-04 11:26:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:31 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-04 11:26:31 AI_Player.update()		1101,	11,	1101,	110,	1001,	110,	1010
2017-01-04 11:26:31 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-04 11:26:31 AI_Player.update()		1010,	1001,	110,	1101,	1110,	11,	11
2017-01-04 11:26:31 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-04 11:26:31 AI_Player.update()		1010,	1010,	1110,	1001,	11,	11,	101
2017-01-04 11:26:31 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-04 11:26:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:31 AI_Player.update()	update
2017-01-04 11:26:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:31 AI_Player.update()	update
2017-01-04 11:26:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:31 AI_Player.update()	Search took120ms
2017-01-04 11:26:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:31 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-04 11:26:31 AI_Player.update()		1101,	11,	1101,	110,	1001,	1001,	1010
2017-01-04 11:26:31 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-04 11:26:31 AI_Player.update()		1010,	1001,	110,	1101,	1110,	110,	11
2017-01-04 11:26:31 AI_Player.update()		1110,	1101,	1101,	101,	1011,	11,	1011
2017-01-04 11:26:31 AI_Player.update()		1010,	1010,	1110,	1001,	11,	1100,	101
2017-01-04 11:26:31 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-04 11:26:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:31 AI_Player.update()	update
2017-01-04 11:26:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:26:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:31 AI_Player.update()	update
2017-01-04 11:26:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:31 AI_Player.update()	Search took391ms
2017-01-04 11:26:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:31 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-04 11:26:31 AI_Player.update()		1101,	11,	1101,	1001,	1001,	1001,	1010
2017-01-04 11:26:31 AI_Player.update()		1110,	11,	1110,	1101,	111,	110,	1011
2017-01-04 11:26:31 AI_Player.update()		1010,	1001,	110,	101,	1110,	110,	11
2017-01-04 11:26:31 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	11,	1011
2017-01-04 11:26:31 AI_Player.update()		1010,	1010,	1110,	1001,	11,	1100,	101
2017-01-04 11:26:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-04 11:26:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:26:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:31 AI_Player.update()	update
2017-01-04 11:26:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:31 AI_Player.update()	update
2017-01-04 11:26:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:32 AI_Player.update()	Search took155ms
2017-01-04 11:26:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:32 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-04 11:26:32 AI_Player.update()		1101,	11,	1101,	1001,	1001,	1001,	1010
2017-01-04 11:26:32 AI_Player.update()		1110,	11,	1110,	1101,	111,	110,	1011
2017-01-04 11:26:32 AI_Player.update()		1010,	1001,	110,	101,	1110,	110,	11
2017-01-04 11:26:32 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	11,	1011
2017-01-04 11:26:32 AI_Player.update()		1010,	1110,	1001,	11,	1100,	101,	1010
2017-01-04 11:26:32 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-04 11:26:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:32 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:32 AI_Player.update()	update
2017-01-04 11:26:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:32 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:32 AI_Player.update()	update
2017-01-04 11:26:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:33 AI_Player.update()	Search took969ms
2017-01-04 11:26:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:33 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-04 11:26:33 AI_Player.update()		1101,	11,	1101,	1001,	1001,	110,	1010
2017-01-04 11:26:33 AI_Player.update()		1110,	11,	1110,	1101,	111,	110,	1011
2017-01-04 11:26:33 AI_Player.update()		1010,	1001,	110,	101,	1110,	11,	11
2017-01-04 11:26:33 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	101,	1011
2017-01-04 11:26:33 AI_Player.update()		1010,	1110,	1001,	11,	1100,	11,	1010
2017-01-04 11:26:33 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 11:26:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:33 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:33 AI_Player.update()	update
2017-01-04 11:26:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:33 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:33 AI_Player.update()	update
2017-01-04 11:26:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:33 AI_Player.update()	Search took285ms
2017-01-04 11:26:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:33 AI_Player.update()		110,	11,	111,	110,	111,	1001,	11
2017-01-04 11:26:33 AI_Player.update()		1101,	11,	1101,	1001,	1001,	110,	1010
2017-01-04 11:26:33 AI_Player.update()		1110,	1001,	1110,	1101,	111,	110,	1011
2017-01-04 11:26:33 AI_Player.update()		1010,	1101,	110,	101,	1110,	11,	11
2017-01-04 11:26:33 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:26:33 AI_Player.update()		1010,	101,	1001,	11,	1100,	11,	1010
2017-01-04 11:26:33 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:26:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:33 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:33 AI_Player.update()	update
2017-01-04 11:26:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:33 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:33 AI_Player.update()	update
2017-01-04 11:26:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:33 AI_Player.update()	Search took346ms
2017-01-04 11:26:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:33 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-04 11:26:33 AI_Player.update()		1101,	11,	1101,	1001,	1001,	1001,	1010
2017-01-04 11:26:33 AI_Player.update()		1110,	1001,	1110,	1101,	111,	110,	1011
2017-01-04 11:26:33 AI_Player.update()		1010,	1101,	110,	101,	1110,	110,	11
2017-01-04 11:26:33 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	11,	1011
2017-01-04 11:26:33 AI_Player.update()		1010,	101,	1001,	11,	1100,	101,	1010
2017-01-04 11:26:33 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-04 11:26:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:33 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:33 AI_Player.update()	update
2017-01-04 11:26:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:33 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:33 AI_Player.update()	update
2017-01-04 11:26:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:33 AI_Player.update()	Search took219ms
2017-01-04 11:26:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:33 AI_Player.update()		110,	11,	111,	110,	111,	1001,	11
2017-01-04 11:26:33 AI_Player.update()		1101,	11,	1101,	1001,	1001,	110,	1010
2017-01-04 11:26:33 AI_Player.update()		1110,	1001,	1110,	1101,	111,	110,	1011
2017-01-04 11:26:33 AI_Player.update()		1010,	1101,	110,	101,	1110,	11,	11
2017-01-04 11:26:33 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	101,	1011
2017-01-04 11:26:33 AI_Player.update()		1010,	101,	1001,	11,	1100,	11,	1010
2017-01-04 11:26:33 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:26:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:33 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:33 AI_Player.update()	update
2017-01-04 11:26:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:33 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:33 AI_Player.update()	update
2017-01-04 11:26:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:34 AI_Player.update()	Search took410ms
2017-01-04 11:26:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:34 AI_Player.update()		110,	11,	111,	1001,	111,	1001,	11
2017-01-04 11:26:34 AI_Player.update()		1101,	11,	1101,	1101,	1001,	110,	1010
2017-01-04 11:26:34 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-04 11:26:34 AI_Player.update()		1010,	1101,	110,	1001,	1110,	11,	11
2017-01-04 11:26:34 AI_Player.update()		1110,	1110,	1101,	11,	1011,	101,	1011
2017-01-04 11:26:34 AI_Player.update()		1010,	101,	1001,	101,	1100,	11,	1010
2017-01-04 11:26:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	110,	1001
2017-01-04 11:26:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:34 AI_Player.update()	update
2017-01-04 11:26:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:26:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:34 AI_Player.update()	update
2017-01-04 11:26:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:34 AI_Player.update()	Search took247ms
2017-01-04 11:26:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:34 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-04 11:26:34 AI_Player.update()		1101,	11,	1101,	1101,	1001,	110,	1010
2017-01-04 11:26:34 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-04 11:26:34 AI_Player.update()		1010,	1101,	110,	1001,	1110,	101,	11
2017-01-04 11:26:34 AI_Player.update()		1110,	1110,	1101,	11,	1011,	11,	1011
2017-01-04 11:26:34 AI_Player.update()		1010,	101,	1001,	101,	1100,	110,	1010
2017-01-04 11:26:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1001,	1001
2017-01-04 11:26:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:26:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:34 AI_Player.update()	update
2017-01-04 11:26:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:34 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:26:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:34 AI_Player.update()	update
2017-01-04 11:26:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:35 AI_Player.update()	Search took647ms
2017-01-04 11:26:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:35 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-04 11:26:35 AI_Player.update()		1101,	11,	1101,	1001,	1001,	110,	1010
2017-01-04 11:26:35 AI_Player.update()		1110,	1001,	1110,	1101,	111,	11,	1011
2017-01-04 11:26:35 AI_Player.update()		1010,	1101,	110,	101,	1110,	101,	11
2017-01-04 11:26:35 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	11,	1011
2017-01-04 11:26:35 AI_Player.update()		1010,	101,	1001,	11,	1100,	110,	1010
2017-01-04 11:26:35 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-04 11:26:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:26:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:35 AI_Player.update()	update
2017-01-04 11:26:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:26:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:35 AI_Player.update()	update
2017-01-04 11:26:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:35 AI_Player.update()	Search took134ms
2017-01-04 11:26:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:35 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-04 11:26:35 AI_Player.update()		1101,	11,	1101,	1101,	1001,	110,	1010
2017-01-04 11:26:35 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-04 11:26:35 AI_Player.update()		1010,	1101,	110,	1001,	1110,	101,	11
2017-01-04 11:26:35 AI_Player.update()		1110,	1110,	1101,	11,	1011,	11,	1011
2017-01-04 11:26:35 AI_Player.update()		1010,	101,	1001,	101,	1100,	110,	1010
2017-01-04 11:26:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1001,	1001
2017-01-04 11:26:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:26:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:35 AI_Player.update()	update
2017-01-04 11:26:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:26:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:35 AI_Player.update()	update
2017-01-04 11:26:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:35 AI_Player.update()	Search took237ms
2017-01-04 11:26:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:35 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-04 11:26:35 AI_Player.update()		1101,	1001,	1101,	1101,	1001,	110,	1010
2017-01-04 11:26:35 AI_Player.update()		1110,	1101,	1110,	101,	111,	11,	1011
2017-01-04 11:26:35 AI_Player.update()		1010,	1110,	110,	1001,	1110,	101,	11
2017-01-04 11:26:35 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-04 11:26:35 AI_Player.update()		1010,	1010,	1001,	101,	1100,	110,	1010
2017-01-04 11:26:35 AI_Player.update()		1100,	11,	1101,	110,	1101,	1001,	1001
2017-01-04 11:26:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:26:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:35 AI_Player.update()	update
2017-01-04 11:26:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:26:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:35 AI_Player.update()	update
2017-01-04 11:26:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:35 AI_Player.update()	Search took118ms
2017-01-04 11:26:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:35 AI_Player.update()		110,	11,	111,	1101,	111,	110,	11
2017-01-04 11:26:35 AI_Player.update()		1101,	1001,	1101,	101,	1001,	110,	1010
2017-01-04 11:26:35 AI_Player.update()		1110,	1101,	1110,	1001,	111,	11,	1011
2017-01-04 11:26:35 AI_Player.update()		1010,	1110,	110,	11,	1110,	101,	11
2017-01-04 11:26:35 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-04 11:26:35 AI_Player.update()		1010,	1010,	1001,	110,	1100,	110,	1010
2017-01-04 11:26:35 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:26:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	6 2
2017-01-04 11:26:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:35 AI_Player.update()	update
2017-01-04 11:26:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:26:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:35 AI_Player.update()	update
2017-01-04 11:26:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:36 AI_Player.update()	Search took378ms
2017-01-04 11:26:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()		110,	1001,	111,	1101,	111,	110,	11
2017-01-04 11:26:36 AI_Player.update()		1101,	1101,	1101,	101,	1001,	110,	1010
2017-01-04 11:26:36 AI_Player.update()		1110,	1110,	1110,	1001,	111,	11,	1011
2017-01-04 11:26:36 AI_Player.update()		1010,	101,	110,	11,	1110,	101,	11
2017-01-04 11:26:36 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 11:26:36 AI_Player.update()		1010,	11,	1001,	110,	1100,	110,	1010
2017-01-04 11:26:36 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:26:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:26:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()	update
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:36 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:26:36 AI_Player.update()	Player a has won!
2017-01-04 11:26:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:26:36 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:26:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:26:36 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:26:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()	update
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:36 AI_Player.update()	Search took32ms
2017-01-04 11:26:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()		110,	1110,	111,	11,	111,	11,	11
2017-01-04 11:26:36 AI_Player.update()		1100,	11,	1010,	1100,	1010,	1100,	101
2017-01-04 11:26:36 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 11:26:36 AI_Player.update()		110,	111,	1010,	101,	1010,	1001,	101
2017-01-04 11:26:36 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:36 AI_Player.update()		110,	1101,	101,	110,	101,	110,	1101
2017-01-04 11:26:36 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()	update
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()	update
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:36 AI_Player.update()	Search took15ms
2017-01-04 11:26:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()		110,	1110,	111,	11,	111,	11,	11
2017-01-04 11:26:36 AI_Player.update()		11,	1010,	1100,	1010,	1100,	101,	1100
2017-01-04 11:26:36 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 11:26:36 AI_Player.update()		110,	111,	1010,	101,	1010,	1001,	101
2017-01-04 11:26:36 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:36 AI_Player.update()		110,	1101,	101,	110,	101,	110,	1101
2017-01-04 11:26:36 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()	update
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()	update
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:36 AI_Player.update()	Search took55ms
2017-01-04 11:26:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()		110,	1110,	111,	11,	111,	11,	11
2017-01-04 11:26:36 AI_Player.update()		1010,	1100,	1010,	1100,	101,	1100,	11
2017-01-04 11:26:36 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 11:26:36 AI_Player.update()		110,	111,	1010,	101,	1010,	1001,	101
2017-01-04 11:26:36 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:36 AI_Player.update()		110,	1101,	101,	110,	101,	110,	1101
2017-01-04 11:26:36 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()	update
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()	update
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:36 AI_Player.update()	Search took335ms
2017-01-04 11:26:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-04 11:26:36 AI_Player.update()		1010,	1010,	1010,	1100,	101,	1100,	11
2017-01-04 11:26:36 AI_Player.update()		1110,	111,	1110,	101,	111,	1001,	1011
2017-01-04 11:26:36 AI_Player.update()		110,	110,	1010,	101,	1010,	1001,	101
2017-01-04 11:26:36 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:36 AI_Player.update()		110,	1100,	101,	110,	101,	110,	1101
2017-01-04 11:26:36 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()	update
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()	update
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:36 AI_Player.update()	Search took341ms
2017-01-04 11:26:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-04 11:26:36 AI_Player.update()		1010,	1010,	1100,	101,	1100,	11,	1010
2017-01-04 11:26:36 AI_Player.update()		1110,	111,	1110,	101,	111,	1001,	1011
2017-01-04 11:26:36 AI_Player.update()		110,	110,	1010,	101,	1010,	1001,	101
2017-01-04 11:26:36 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:36 AI_Player.update()		110,	1100,	101,	110,	101,	110,	1101
2017-01-04 11:26:36 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()	update
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:36 AI_Player.update()	update
2017-01-04 11:26:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:37 AI_Player.update()	Search took648ms
2017-01-04 11:26:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:37 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 11:26:37 AI_Player.update()		1010,	1010,	1100,	101,	1100,	11,	1010
2017-01-04 11:26:37 AI_Player.update()		1110,	111,	1110,	101,	111,	1001,	1011
2017-01-04 11:26:37 AI_Player.update()		110,	110,	1010,	11,	1010,	1001,	101
2017-01-04 11:26:37 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1010,	1011
2017-01-04 11:26:37 AI_Player.update()		110,	1100,	101,	11,	101,	110,	1101
2017-01-04 11:26:37 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:37 AI_Player.update()	update
2017-01-04 11:26:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:37 AI_Player.update()	update
2017-01-04 11:26:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:38 AI_Player.update()	Search took1126ms
2017-01-04 11:26:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:38 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 11:26:38 AI_Player.update()		1010,	111,	1100,	101,	1100,	11,	1010
2017-01-04 11:26:38 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:26:38 AI_Player.update()		110,	1101,	1010,	11,	1010,	1001,	101
2017-01-04 11:26:38 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-04 11:26:38 AI_Player.update()		110,	1110,	101,	11,	101,	110,	1101
2017-01-04 11:26:38 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:38 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:38 AI_Player.update()	update
2017-01-04 11:26:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:38 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:38 AI_Player.update()	update
2017-01-04 11:26:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:39 AI_Player.update()	Search took292ms
2017-01-04 11:26:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:39 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 11:26:39 AI_Player.update()		1010,	111,	1100,	101,	1100,	11,	1010
2017-01-04 11:26:39 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-04 11:26:39 AI_Player.update()		110,	1101,	1010,	110,	1010,	1001,	101
2017-01-04 11:26:39 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:39 AI_Player.update()		110,	1110,	101,	11,	101,	110,	1101
2017-01-04 11:26:39 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1011,	1001
2017-01-04 11:26:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:39 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:39 AI_Player.update()	update
2017-01-04 11:26:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:39 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:39 AI_Player.update()	update
2017-01-04 11:26:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:39 AI_Player.update()	Search took541ms
2017-01-04 11:26:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:39 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 11:26:39 AI_Player.update()		1010,	111,	1100,	101,	1100,	11,	1010
2017-01-04 11:26:39 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-04 11:26:39 AI_Player.update()		1101,	1010,	110,	1010,	1001,	101,	110
2017-01-04 11:26:39 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:39 AI_Player.update()		110,	1110,	101,	11,	101,	110,	1101
2017-01-04 11:26:39 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1011,	1001
2017-01-04 11:26:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:39 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:39 AI_Player.update()	update
2017-01-04 11:26:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:39 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:39 AI_Player.update()	update
2017-01-04 11:26:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:39 AI_Player.update()	Search took121ms
2017-01-04 11:26:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:39 AI_Player.update()		110,	111,	111,	101,	111,	11,	11
2017-01-04 11:26:39 AI_Player.update()		1010,	110,	1100,	101,	1100,	11,	1010
2017-01-04 11:26:39 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-04 11:26:39 AI_Player.update()		1101,	1100,	110,	1010,	1001,	101,	110
2017-01-04 11:26:39 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:39 AI_Player.update()		110,	1100,	101,	11,	101,	110,	1101
2017-01-04 11:26:39 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1011,	1001
2017-01-04 11:26:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:39 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:39 AI_Player.update()	update
2017-01-04 11:26:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:39 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:39 AI_Player.update()	update
2017-01-04 11:26:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:40 AI_Player.update()	Search took545ms
2017-01-04 11:26:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:40 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 11:26:40 AI_Player.update()		1010,	1010,	1100,	101,	1100,	11,	1010
2017-01-04 11:26:40 AI_Player.update()		1110,	1100,	1110,	11,	111,	1001,	1011
2017-01-04 11:26:40 AI_Player.update()		1101,	1110,	110,	1010,	1001,	101,	110
2017-01-04 11:26:40 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:40 AI_Player.update()		110,	1010,	101,	11,	101,	110,	1101
2017-01-04 11:26:40 AI_Player.update()		1100,	111,	1101,	101,	1101,	1011,	1001
2017-01-04 11:26:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:40 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:40 AI_Player.update()	update
2017-01-04 11:26:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:40 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:40 AI_Player.update()	update
2017-01-04 11:26:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:40 AI_Player.update()	Search took439ms
2017-01-04 11:26:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:40 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 11:26:40 AI_Player.update()		1010,	1010,	1010,	1100,	101,	1100,	11
2017-01-04 11:26:40 AI_Player.update()		1110,	1100,	1110,	11,	111,	1001,	1011
2017-01-04 11:26:40 AI_Player.update()		1101,	1110,	110,	1010,	1001,	101,	110
2017-01-04 11:26:40 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:40 AI_Player.update()		110,	1010,	101,	11,	101,	110,	1101
2017-01-04 11:26:40 AI_Player.update()		1100,	111,	1101,	101,	1101,	1011,	1001
2017-01-04 11:26:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:40 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:40 AI_Player.update()	update
2017-01-04 11:26:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:40 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:40 AI_Player.update()	update
2017-01-04 11:26:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:41 AI_Player.update()	Search took473ms
2017-01-04 11:26:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:41 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 11:26:41 AI_Player.update()		1010,	1100,	1010,	1100,	101,	1100,	11
2017-01-04 11:26:41 AI_Player.update()		1110,	1110,	1110,	11,	111,	1001,	1011
2017-01-04 11:26:41 AI_Player.update()		1101,	1100,	110,	1010,	1001,	101,	110
2017-01-04 11:26:41 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:41 AI_Player.update()		110,	111,	101,	11,	101,	110,	1101
2017-01-04 11:26:41 AI_Player.update()		1100,	110,	1101,	101,	1101,	1011,	1001
2017-01-04 11:26:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:41 AI_Player.update()	update
2017-01-04 11:26:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:26:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:41 AI_Player.update()	update
2017-01-04 11:26:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:41 AI_Player.update()	Search took273ms
2017-01-04 11:26:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:41 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 11:26:41 AI_Player.update()		1010,	1110,	1010,	1100,	101,	1100,	11
2017-01-04 11:26:41 AI_Player.update()		1110,	1100,	1110,	11,	111,	1001,	1011
2017-01-04 11:26:41 AI_Player.update()		1101,	1010,	110,	1010,	1001,	101,	110
2017-01-04 11:26:41 AI_Player.update()		1110,	111,	1101,	11,	1011,	1010,	1011
2017-01-04 11:26:41 AI_Player.update()		110,	110,	101,	11,	101,	110,	1101
2017-01-04 11:26:41 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1011,	1001
2017-01-04 11:26:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:26:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:41 AI_Player.update()	update
2017-01-04 11:26:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:26:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:41 AI_Player.update()	update
2017-01-04 11:26:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:41 AI_Player.update()	Search took289ms
2017-01-04 11:26:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:41 AI_Player.update()		110,	1100,	111,	101,	111,	1011,	11
2017-01-04 11:26:41 AI_Player.update()		1010,	1110,	1010,	1100,	101,	11,	11
2017-01-04 11:26:41 AI_Player.update()		1110,	1100,	1110,	11,	111,	1100,	1011
2017-01-04 11:26:41 AI_Player.update()		1101,	1010,	110,	1010,	1001,	1001,	110
2017-01-04 11:26:41 AI_Player.update()		1110,	111,	1101,	11,	1011,	101,	1011
2017-01-04 11:26:41 AI_Player.update()		110,	110,	101,	11,	101,	1010,	1101
2017-01-04 11:26:41 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:26:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:26:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:41 AI_Player.update()	update
2017-01-04 11:26:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:26:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:41 AI_Player.update()	update
2017-01-04 11:26:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:41 AI_Player.update()	Search took169ms
2017-01-04 11:26:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:41 AI_Player.update()		110,	1100,	111,	101,	111,	1011,	11
2017-01-04 11:26:41 AI_Player.update()		11,	1010,	1110,	1010,	1100,	101,	11
2017-01-04 11:26:41 AI_Player.update()		1110,	1100,	1110,	11,	111,	1100,	1011
2017-01-04 11:26:41 AI_Player.update()		1101,	1010,	110,	1010,	1001,	1001,	110
2017-01-04 11:26:41 AI_Player.update()		1110,	111,	1101,	11,	1011,	101,	1011
2017-01-04 11:26:41 AI_Player.update()		110,	110,	101,	11,	101,	1010,	1101
2017-01-04 11:26:41 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:26:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:26:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:41 AI_Player.update()	update
2017-01-04 11:26:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:41 AI_Player.update()	update
2017-01-04 11:26:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:42 AI_Player.update()	Search took181ms
2017-01-04 11:26:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()		110,	1100,	111,	101,	111,	1011,	11
2017-01-04 11:26:42 AI_Player.update()		11,	1010,	1110,	101,	1100,	101,	11
2017-01-04 11:26:42 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-04 11:26:42 AI_Player.update()		1101,	1010,	110,	11,	1001,	1001,	110
2017-01-04 11:26:42 AI_Player.update()		1110,	111,	1101,	1010,	1011,	101,	1011
2017-01-04 11:26:42 AI_Player.update()		110,	110,	101,	11,	101,	1010,	1101
2017-01-04 11:26:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-04 11:26:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()	update
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()	update
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:42 AI_Player.update()	Search took69ms
2017-01-04 11:26:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-04 11:26:42 AI_Player.update()		11,	1100,	1110,	101,	1100,	101,	11
2017-01-04 11:26:42 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 11:26:42 AI_Player.update()		1101,	111,	110,	11,	1001,	1001,	110
2017-01-04 11:26:42 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:26:42 AI_Player.update()		110,	1010,	101,	11,	101,	1010,	1101
2017-01-04 11:26:42 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-04 11:26:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()	update
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()	update
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:42 AI_Player.update()	Search took89ms
2017-01-04 11:26:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-04 11:26:42 AI_Player.update()		11,	1100,	1110,	101,	1100,	101,	11
2017-01-04 11:26:42 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 11:26:42 AI_Player.update()		1101,	111,	110,	11,	1001,	1001,	110
2017-01-04 11:26:42 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:26:42 AI_Player.update()		1010,	101,	11,	101,	1010,	1101,	110
2017-01-04 11:26:42 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-04 11:26:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()	update
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:26:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()	update
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:42 AI_Player.update()	Search took139ms
2017-01-04 11:26:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-04 11:26:42 AI_Player.update()		11,	1100,	1110,	101,	1100,	101,	11
2017-01-04 11:26:42 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 11:26:42 AI_Player.update()		111,	110,	11,	1001,	1001,	110,	1101
2017-01-04 11:26:42 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:26:42 AI_Player.update()		1010,	101,	11,	101,	1010,	1101,	110
2017-01-04 11:26:42 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-04 11:26:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:26:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()	update
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:26:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()	update
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:42 AI_Player.update()	Search took181ms
2017-01-04 11:26:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-04 11:26:42 AI_Player.update()		11,	1100,	1110,	1010,	1100,	101,	11
2017-01-04 11:26:42 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-04 11:26:42 AI_Player.update()		111,	110,	11,	1010,	1001,	110,	1101
2017-01-04 11:26:42 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:42 AI_Player.update()		1010,	101,	11,	11,	1010,	1101,	110
2017-01-04 11:26:42 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 11:26:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:26:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()	update
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:26:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:42 AI_Player.update()	update
2017-01-04 11:26:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:43 AI_Player.update()	Search took550ms
2017-01-04 11:26:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:43 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-04 11:26:43 AI_Player.update()		11,	1100,	1110,	1010,	1100,	101,	11
2017-01-04 11:26:43 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-04 11:26:43 AI_Player.update()		110,	11,	1010,	1001,	110,	1101,	111
2017-01-04 11:26:43 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:43 AI_Player.update()		1010,	101,	11,	11,	1010,	1101,	110
2017-01-04 11:26:43 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 11:26:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:43 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:26:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:43 AI_Player.update()	update
2017-01-04 11:26:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:43 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:26:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:43 AI_Player.update()	update
2017-01-04 11:26:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:44 AI_Player.update()	Search took1297ms
2017-01-04 11:26:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:44 AI_Player.update()		110,	1100,	111,	101,	111,	1011,	11
2017-01-04 11:26:44 AI_Player.update()		11,	1010,	1110,	1010,	1100,	101,	11
2017-01-04 11:26:44 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-04 11:26:44 AI_Player.update()		110,	1010,	1010,	1001,	110,	1101,	111
2017-01-04 11:26:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:44 AI_Player.update()		1010,	110,	11,	11,	1010,	1101,	110
2017-01-04 11:26:44 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 11:26:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:44 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:26:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:44 AI_Player.update()	update
2017-01-04 11:26:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:44 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:26:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:44 AI_Player.update()	update
2017-01-04 11:26:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:45 AI_Player.update()	Search took1380ms
2017-01-04 11:26:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:45 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-04 11:26:45 AI_Player.update()		11,	1010,	1110,	1001,	1100,	101,	11
2017-01-04 11:26:45 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-04 11:26:45 AI_Player.update()		110,	1010,	1010,	101,	110,	1101,	111
2017-01-04 11:26:45 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-04 11:26:45 AI_Player.update()		1010,	110,	11,	101,	1010,	1101,	110
2017-01-04 11:26:45 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 11:26:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:45 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:26:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:45 AI_Player.update()	update
2017-01-04 11:26:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:45 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:45 AI_Player.update()	update
2017-01-04 11:26:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:46 AI_Player.update()	Search took422ms
2017-01-04 11:26:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:46 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 11:26:46 AI_Player.update()		11,	1100,	1110,	1001,	1100,	101,	11
2017-01-04 11:26:46 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-04 11:26:46 AI_Player.update()		110,	1100,	1010,	101,	110,	1101,	111
2017-01-04 11:26:46 AI_Player.update()		1110,	1010,	1101,	11,	1011,	101,	1011
2017-01-04 11:26:46 AI_Player.update()		1010,	11,	11,	101,	1010,	1101,	110
2017-01-04 11:26:46 AI_Player.update()		1100,	110,	1101,	101,	1101,	110,	1001
2017-01-04 11:26:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:46 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:46 AI_Player.update()	update
2017-01-04 11:26:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:46 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:46 AI_Player.update()	update
2017-01-04 11:26:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:46 AI_Player.update()	Search took138ms
2017-01-04 11:26:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:46 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-04 11:26:46 AI_Player.update()		11,	1010,	1110,	1001,	1100,	101,	11
2017-01-04 11:26:46 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-04 11:26:46 AI_Player.update()		110,	1010,	1010,	101,	110,	1101,	111
2017-01-04 11:26:46 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-04 11:26:46 AI_Player.update()		1010,	110,	11,	101,	1010,	1101,	110
2017-01-04 11:26:46 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 11:26:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:46 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:46 AI_Player.update()	update
2017-01-04 11:26:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:46 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:46 AI_Player.update()	update
2017-01-04 11:26:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:47 AI_Player.update()	Search took538ms
2017-01-04 11:26:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:47 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 11:26:47 AI_Player.update()		11,	1010,	1110,	1001,	1100,	1100,	11
2017-01-04 11:26:47 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1101,	1011
2017-01-04 11:26:47 AI_Player.update()		110,	1010,	1010,	101,	110,	101,	111
2017-01-04 11:26:47 AI_Player.update()		1110,	11,	1101,	11,	1011,	1101,	1011
2017-01-04 11:26:47 AI_Player.update()		1010,	110,	11,	101,	1010,	110,	110
2017-01-04 11:26:47 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 11:26:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:47 AI_Player.update()	update
2017-01-04 11:26:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:47 AI_Player.update()	update
2017-01-04 11:26:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:47 AI_Player.update()	Search took848ms
2017-01-04 11:26:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:47 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 11:26:47 AI_Player.update()		11,	1100,	1110,	1001,	1100,	1100,	11
2017-01-04 11:26:47 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1101,	1011
2017-01-04 11:26:47 AI_Player.update()		110,	11,	1010,	101,	110,	101,	111
2017-01-04 11:26:47 AI_Player.update()		1110,	110,	1101,	11,	1011,	1101,	1011
2017-01-04 11:26:47 AI_Player.update()		1010,	101,	11,	101,	1010,	110,	110
2017-01-04 11:26:47 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1011,	1001
2017-01-04 11:26:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:26:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:47 AI_Player.update()	update
2017-01-04 11:26:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:47 AI_Player.update()	update
2017-01-04 11:26:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:48 AI_Player.update()	Search took684ms
2017-01-04 11:26:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:48 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 11:26:48 AI_Player.update()		11,	1010,	1110,	1001,	1100,	1100,	11
2017-01-04 11:26:48 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1101,	1011
2017-01-04 11:26:48 AI_Player.update()		110,	1010,	1010,	101,	110,	101,	111
2017-01-04 11:26:48 AI_Player.update()		1110,	11,	1101,	11,	1011,	1101,	1011
2017-01-04 11:26:48 AI_Player.update()		1010,	110,	11,	101,	1010,	110,	110
2017-01-04 11:26:48 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 11:26:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:48 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:48 AI_Player.update()	update
2017-01-04 11:26:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:48 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:48 AI_Player.update()	update
2017-01-04 11:26:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:49 AI_Player.update()	Search took586ms
2017-01-04 11:26:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:49 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-04 11:26:49 AI_Player.update()		11,	1010,	1110,	1001,	1100,	1100,	11
2017-01-04 11:26:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-04 11:26:49 AI_Player.update()		110,	1010,	1010,	11,	110,	101,	111
2017-01-04 11:26:49 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-04 11:26:49 AI_Player.update()		1010,	110,	11,	101,	1010,	110,	110
2017-01-04 11:26:49 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1011,	1001
2017-01-04 11:26:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:26:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:49 AI_Player.update()	update
2017-01-04 11:26:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:26:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:49 AI_Player.update()	update
2017-01-04 11:26:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:49 AI_Player.update()	Search took487ms
2017-01-04 11:26:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:49 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 11:26:49 AI_Player.update()		11,	1100,	1110,	1001,	1100,	1100,	11
2017-01-04 11:26:49 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-04 11:26:49 AI_Player.update()		110,	1100,	1010,	11,	110,	101,	111
2017-01-04 11:26:49 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1101,	1011
2017-01-04 11:26:49 AI_Player.update()		1010,	11,	11,	101,	1010,	110,	110
2017-01-04 11:26:49 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1011,	1001
2017-01-04 11:26:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:26:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:49 AI_Player.update()	update
2017-01-04 11:26:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:49 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:26:49 AI_Player.update()	Player a has won!
2017-01-04 11:26:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:26:49 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:26:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:26:49 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:26:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:49 AI_Player.update()	update
2017-01-04 11:26:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:49 AI_Player.update()	Search took163ms
2017-01-04 11:26:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:49 AI_Player.update()		110,	1011,	111,	1010,	111,	1100,	11
2017-01-04 11:26:49 AI_Player.update()		1010,	11,	1010,	110,	11,	1110,	1110
2017-01-04 11:26:49 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 11:26:49 AI_Player.update()		101,	1010,	101,	110,	1001,	1011,	1100
2017-01-04 11:26:49 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:49 AI_Player.update()		110,	101,	101,	110,	101,	1001,	1100
2017-01-04 11:26:49 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:49 AI_Player.update()	update
2017-01-04 11:26:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:49 AI_Player.update()	update
2017-01-04 11:26:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:50 AI_Player.update()	Search took181ms
2017-01-04 11:26:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:50 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-04 11:26:50 AI_Player.update()		1010,	101,	1010,	110,	11,	1110,	1110
2017-01-04 11:26:50 AI_Player.update()		1110,	1010,	1110,	101,	111,	1011,	1011
2017-01-04 11:26:50 AI_Player.update()		101,	101,	101,	110,	1001,	1011,	1100
2017-01-04 11:26:50 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:50 AI_Player.update()		110,	1001,	101,	110,	101,	1001,	1100
2017-01-04 11:26:50 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:50 AI_Player.update()	update
2017-01-04 11:26:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:50 AI_Player.update()	update
2017-01-04 11:26:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:50 AI_Player.update()	Search took94ms
2017-01-04 11:26:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:50 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:26:50 AI_Player.update()		1010,	1010,	1010,	110,	11,	1110,	1110
2017-01-04 11:26:50 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 11:26:50 AI_Player.update()		101,	101,	101,	110,	1001,	1011,	1100
2017-01-04 11:26:50 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:50 AI_Player.update()		110,	1011,	101,	110,	101,	1001,	1100
2017-01-04 11:26:50 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:26:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:50 AI_Player.update()	update
2017-01-04 11:26:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:50 AI_Player.update()	update
2017-01-04 11:26:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:50 AI_Player.update()	Search took348ms
2017-01-04 11:26:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:50 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-04 11:26:50 AI_Player.update()		1010,	101,	1010,	110,	11,	1110,	1110
2017-01-04 11:26:50 AI_Player.update()		1110,	1010,	1110,	101,	111,	1011,	1011
2017-01-04 11:26:50 AI_Player.update()		101,	101,	101,	110,	1001,	1011,	1100
2017-01-04 11:26:50 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:50 AI_Player.update()		110,	1001,	101,	110,	101,	1001,	1100
2017-01-04 11:26:50 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:50 AI_Player.update()	update
2017-01-04 11:26:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:50 AI_Player.update()	update
2017-01-04 11:26:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:50 AI_Player.update()	Search took358ms
2017-01-04 11:26:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:50 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:26:50 AI_Player.update()		1010,	1010,	1010,	110,	11,	1110,	1110
2017-01-04 11:26:50 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 11:26:50 AI_Player.update()		101,	101,	101,	110,	1001,	1011,	1100
2017-01-04 11:26:50 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:50 AI_Player.update()		110,	1011,	101,	110,	101,	1001,	1100
2017-01-04 11:26:50 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:26:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:50 AI_Player.update()	update
2017-01-04 11:26:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:50 AI_Player.update()	update
2017-01-04 11:26:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:51 AI_Player.update()	Search took350ms
2017-01-04 11:26:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:51 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-04 11:26:51 AI_Player.update()		1010,	101,	1010,	110,	11,	1110,	1110
2017-01-04 11:26:51 AI_Player.update()		1110,	1010,	1110,	101,	111,	1011,	1011
2017-01-04 11:26:51 AI_Player.update()		101,	101,	101,	110,	1001,	1011,	1100
2017-01-04 11:26:51 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:51 AI_Player.update()		110,	1001,	101,	110,	101,	1001,	1100
2017-01-04 11:26:51 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:51 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:51 AI_Player.update()	update
2017-01-04 11:26:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:51 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:51 AI_Player.update()	update
2017-01-04 11:26:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:51 AI_Player.update()	Search took168ms
2017-01-04 11:26:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:51 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:26:51 AI_Player.update()		1010,	1010,	1010,	110,	11,	1110,	1110
2017-01-04 11:26:51 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 11:26:51 AI_Player.update()		101,	101,	101,	110,	1001,	1011,	1100
2017-01-04 11:26:51 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:51 AI_Player.update()		110,	1011,	101,	110,	101,	1001,	1100
2017-01-04 11:26:51 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:51 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:51 AI_Player.update()	update
2017-01-04 11:26:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:51 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:51 AI_Player.update()	update
2017-01-04 11:26:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:51 AI_Player.update()	Search took352ms
2017-01-04 11:26:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:51 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-04 11:26:51 AI_Player.update()		1010,	101,	1010,	110,	11,	1110,	1110
2017-01-04 11:26:51 AI_Player.update()		1110,	1010,	1110,	101,	111,	1011,	1011
2017-01-04 11:26:51 AI_Player.update()		101,	101,	101,	110,	1001,	1011,	1100
2017-01-04 11:26:51 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:51 AI_Player.update()		110,	1001,	101,	110,	101,	1001,	1100
2017-01-04 11:26:51 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:51 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:51 AI_Player.update()	update
2017-01-04 11:26:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:51 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:51 AI_Player.update()	update
2017-01-04 11:26:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:51 AI_Player.update()	Search took119ms
2017-01-04 11:26:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:51 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:26:51 AI_Player.update()		1010,	1010,	1010,	110,	11,	1110,	1110
2017-01-04 11:26:51 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 11:26:51 AI_Player.update()		101,	101,	101,	110,	1001,	1011,	1100
2017-01-04 11:26:51 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:51 AI_Player.update()		110,	1011,	101,	110,	101,	1001,	1100
2017-01-04 11:26:51 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:51 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:51 AI_Player.update()	update
2017-01-04 11:26:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:51 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:51 AI_Player.update()	update
2017-01-04 11:26:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:52 AI_Player.update()	Search took340ms
2017-01-04 11:26:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:52 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:26:52 AI_Player.update()		1010,	1010,	1010,	110,	11,	1110,	1110
2017-01-04 11:26:52 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 11:26:52 AI_Player.update()		1100,	101,	101,	101,	110,	1001,	1011
2017-01-04 11:26:52 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:52 AI_Player.update()		110,	1011,	101,	110,	101,	1001,	1100
2017-01-04 11:26:52 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:52 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:52 AI_Player.update()	update
2017-01-04 11:26:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:52 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:52 AI_Player.update()	update
2017-01-04 11:26:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:52 AI_Player.update()	Search took731ms
2017-01-04 11:26:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:52 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-04 11:26:52 AI_Player.update()		1010,	101,	1010,	110,	11,	1110,	1110
2017-01-04 11:26:52 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 11:26:52 AI_Player.update()		1100,	1001,	101,	101,	110,	1001,	1011
2017-01-04 11:26:52 AI_Player.update()		1110,	1011,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:52 AI_Player.update()		110,	11,	101,	110,	101,	1001,	1100
2017-01-04 11:26:52 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:52 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:52 AI_Player.update()	update
2017-01-04 11:26:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:52 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:52 AI_Player.update()	update
2017-01-04 11:26:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:53 AI_Player.update()	Search took476ms
2017-01-04 11:26:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:53 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:26:53 AI_Player.update()		1010,	101,	1010,	110,	11,	1110,	1110
2017-01-04 11:26:53 AI_Player.update()		1110,	1001,	1110,	101,	111,	1011,	1011
2017-01-04 11:26:53 AI_Player.update()		1100,	1011,	101,	101,	110,	1001,	1011
2017-01-04 11:26:53 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-04 11:26:53 AI_Player.update()		110,	101,	101,	110,	101,	1001,	1100
2017-01-04 11:26:53 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1011,	1001
2017-01-04 11:26:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:53 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:53 AI_Player.update()	update
2017-01-04 11:26:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:53 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:53 AI_Player.update()	update
2017-01-04 11:26:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:53 AI_Player.update()	Search took257ms
2017-01-04 11:26:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:53 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-04 11:26:53 AI_Player.update()		1010,	101,	1010,	110,	11,	1011,	1110
2017-01-04 11:26:53 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-04 11:26:53 AI_Player.update()		1100,	1011,	101,	101,	110,	101,	1011
2017-01-04 11:26:53 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-04 11:26:53 AI_Player.update()		110,	101,	101,	110,	101,	1011,	1100
2017-01-04 11:26:53 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1100,	1001
2017-01-04 11:26:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:53 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:53 AI_Player.update()	update
2017-01-04 11:26:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:53 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:53 AI_Player.update()	update
2017-01-04 11:26:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:54 AI_Player.update()	Search took901ms
2017-01-04 11:26:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:54 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-04 11:26:54 AI_Player.update()		1010,	1001,	1010,	110,	11,	1011,	1110
2017-01-04 11:26:54 AI_Player.update()		1110,	1011,	1110,	101,	111,	1001,	1011
2017-01-04 11:26:54 AI_Player.update()		1100,	11,	101,	101,	110,	101,	1011
2017-01-04 11:26:54 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 11:26:54 AI_Player.update()		110,	1010,	101,	110,	101,	1011,	1100
2017-01-04 11:26:54 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-04 11:26:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:26:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:54 AI_Player.update()	update
2017-01-04 11:26:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:26:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:54 AI_Player.update()	update
2017-01-04 11:26:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:54 AI_Player.update()	Search took339ms
2017-01-04 11:26:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:54 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-04 11:26:54 AI_Player.update()		1010,	1001,	1010,	110,	11,	1011,	1110
2017-01-04 11:26:54 AI_Player.update()		1110,	1011,	1110,	101,	111,	1001,	1011
2017-01-04 11:26:54 AI_Player.update()		1100,	11,	101,	101,	110,	101,	1011
2017-01-04 11:26:54 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 11:26:54 AI_Player.update()		1010,	101,	110,	101,	1011,	1100,	110
2017-01-04 11:26:54 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-04 11:26:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:26:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:54 AI_Player.update()	update
2017-01-04 11:26:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:54 AI_Player.update()	update
2017-01-04 11:26:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:26:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:26:56 AI_Player.update()	Search took1736ms
2017-01-04 11:26:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:56 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-04 11:26:56 AI_Player.update()		1010,	1001,	1010,	110,	11,	1011,	1110
2017-01-04 11:26:56 AI_Player.update()		1110,	1011,	1110,	101,	111,	1001,	1011
2017-01-04 11:26:56 AI_Player.update()		1011,	1100,	11,	101,	101,	110,	101
2017-01-04 11:26:56 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 11:26:56 AI_Player.update()		1010,	101,	110,	101,	1011,	1100,	110
2017-01-04 11:26:56 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-04 11:26:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:56 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:26:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:56 AI_Player.update()	update
2017-01-04 11:26:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:26:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:26:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:26:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:26:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:56 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:26:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:26:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:26:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:26:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:26:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:26:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:26:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:26:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:26:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:26:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:26:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:26:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:56 AI_Player.update()	update
2017-01-04 11:26:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:26:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:26:58 AI_Player.update()	Search took2064ms
2017-01-04 11:26:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:26:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:58 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-04 11:26:58 AI_Player.update()		1010,	101,	1010,	110,	11,	1011,	1110
2017-01-04 11:26:58 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-04 11:26:58 AI_Player.update()		1011,	1011,	11,	101,	101,	110,	101
2017-01-04 11:26:58 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-04 11:26:58 AI_Player.update()		1010,	101,	110,	101,	1011,	1100,	110
2017-01-04 11:26:58 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-04 11:26:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:26:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:26:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:58 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:58 AI_Player.update()	update
2017-01-04 11:26:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:26:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:26:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:26:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:26:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:26:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:26:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:26:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:26:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:26:58 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:26:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:26:58 AI_Player.update()	update
2017-01-04 11:26:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:01 AI_Player.update()	Search took2486ms
2017-01-04 11:27:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:01 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-04 11:27:01 AI_Player.update()		1010,	1001,	1010,	110,	11,	1011,	1110
2017-01-04 11:27:01 AI_Player.update()		1110,	1011,	1110,	101,	111,	1001,	1011
2017-01-04 11:27:01 AI_Player.update()		1011,	1100,	11,	101,	101,	110,	101
2017-01-04 11:27:01 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 11:27:01 AI_Player.update()		1010,	101,	110,	101,	1011,	1100,	110
2017-01-04 11:27:01 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-04 11:27:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:01 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:01 AI_Player.update()	update
2017-01-04 11:27:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:01 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:27:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:01 AI_Player.update()	update
2017-01-04 11:27:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:03 AI_Player.update()	Search took2384ms
2017-01-04 11:27:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:03 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 11:27:03 AI_Player.update()		1010,	1001,	1010,	110,	11,	1001,	1110
2017-01-04 11:27:03 AI_Player.update()		1110,	1011,	1110,	101,	111,	110,	1011
2017-01-04 11:27:03 AI_Player.update()		1011,	1100,	11,	101,	101,	1001,	101
2017-01-04 11:27:03 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 11:27:03 AI_Player.update()		1010,	101,	110,	101,	1011,	1100,	110
2017-01-04 11:27:03 AI_Player.update()		1100,	101,	1101,	11,	1101,	1110,	1001
2017-01-04 11:27:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:03 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:27:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:03 AI_Player.update()	update
2017-01-04 11:27:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:03 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:27:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:03 AI_Player.update()	update
2017-01-04 11:27:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:06 AI_Player.update()	Search took2667ms
2017-01-04 11:27:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:06 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 11:27:06 AI_Player.update()		1010,	1001,	1010,	110,	11,	1001,	1110
2017-01-04 11:27:06 AI_Player.update()		1110,	1011,	1110,	101,	111,	110,	1011
2017-01-04 11:27:06 AI_Player.update()		1011,	1100,	11,	101,	101,	1001,	101
2017-01-04 11:27:06 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 11:27:06 AI_Player.update()		101,	110,	101,	1011,	1100,	110,	1010
2017-01-04 11:27:06 AI_Player.update()		1100,	101,	1101,	11,	1101,	1110,	1001
2017-01-04 11:27:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:27:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:06 AI_Player.update()	update
2017-01-04 11:27:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:06 AI_Player.update()	update
2017-01-04 11:27:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:06 AI_Player.update()	Search took221ms
2017-01-04 11:27:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:06 AI_Player.update()		110,	1001,	111,	1010,	111,	1011,	11
2017-01-04 11:27:06 AI_Player.update()		1010,	1011,	1010,	110,	11,	1001,	1110
2017-01-04 11:27:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-04 11:27:06 AI_Player.update()		1011,	101,	11,	101,	101,	1001,	101
2017-01-04 11:27:06 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-04 11:27:06 AI_Player.update()		101,	101,	101,	1011,	1100,	110,	1010
2017-01-04 11:27:06 AI_Player.update()		1100,	101,	1101,	11,	1101,	1110,	1001
2017-01-04 11:27:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:06 AI_Player.update()	update
2017-01-04 11:27:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:06 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:06 AI_Player.update()	update
2017-01-04 11:27:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:07 AI_Player.update()	Search took470ms
2017-01-04 11:27:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:07 AI_Player.update()		110,	1011,	111,	1010,	111,	1011,	11
2017-01-04 11:27:07 AI_Player.update()		1010,	1100,	1010,	110,	11,	1001,	1110
2017-01-04 11:27:07 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-04 11:27:07 AI_Player.update()		1011,	110,	11,	101,	101,	1001,	101
2017-01-04 11:27:07 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 11:27:07 AI_Player.update()		101,	101,	101,	1011,	1100,	110,	1010
2017-01-04 11:27:07 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1110,	1001
2017-01-04 11:27:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:07 AI_Player.update()	update
2017-01-04 11:27:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:07 AI_Player.update()	update
2017-01-04 11:27:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:07 AI_Player.update()	Search took136ms
2017-01-04 11:27:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:07 AI_Player.update()		110,	1011,	111,	1010,	111,	1110,	11
2017-01-04 11:27:07 AI_Player.update()		1010,	1100,	1010,	110,	11,	1011,	1110
2017-01-04 11:27:07 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-04 11:27:07 AI_Player.update()		1011,	110,	11,	101,	101,	110,	101
2017-01-04 11:27:07 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 11:27:07 AI_Player.update()		101,	101,	101,	1011,	1100,	1100,	1010
2017-01-04 11:27:07 AI_Player.update()		1100,	1001,	1101,	11,	1101,	110,	1001
2017-01-04 11:27:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:07 AI_Player.update()	update
2017-01-04 11:27:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:27:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:07 AI_Player.update()	update
2017-01-04 11:27:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:07 AI_Player.update()	Search took728ms
2017-01-04 11:27:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:07 AI_Player.update()		110,	1011,	111,	1010,	111,	110,	11
2017-01-04 11:27:07 AI_Player.update()		1010,	1100,	1010,	110,	11,	1110,	1110
2017-01-04 11:27:07 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 11:27:07 AI_Player.update()		1011,	110,	11,	101,	101,	1001,	101
2017-01-04 11:27:07 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:27:07 AI_Player.update()		101,	101,	101,	1011,	1100,	1001,	1010
2017-01-04 11:27:07 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-04 11:27:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:27:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:07 AI_Player.update()	update
2017-01-04 11:27:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:27:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:07 AI_Player.update()	update
2017-01-04 11:27:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:08 AI_Player.update()	Search took615ms
2017-01-04 11:27:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:08 AI_Player.update()		110,	1011,	111,	1010,	111,	110,	11
2017-01-04 11:27:08 AI_Player.update()		1100,	1010,	110,	11,	1110,	1110,	1010
2017-01-04 11:27:08 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 11:27:08 AI_Player.update()		1011,	110,	11,	101,	101,	1001,	101
2017-01-04 11:27:08 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:27:08 AI_Player.update()		101,	101,	101,	1011,	1100,	1001,	1010
2017-01-04 11:27:08 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-04 11:27:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:08 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:27:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:08 AI_Player.update()	update
2017-01-04 11:27:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:08 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:27:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:08 AI_Player.update()	update
2017-01-04 11:27:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:09 AI_Player.update()	Search took632ms
2017-01-04 11:27:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()		110,	1011,	111,	1010,	111,	110,	11
2017-01-04 11:27:09 AI_Player.update()		1100,	1010,	110,	11,	1110,	1110,	1010
2017-01-04 11:27:09 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 11:27:09 AI_Player.update()		110,	11,	101,	101,	1001,	101,	1011
2017-01-04 11:27:09 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:27:09 AI_Player.update()		101,	101,	101,	1011,	1100,	1001,	1010
2017-01-04 11:27:09 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 11:27:09 AI_Player.update()	Player b has won!
2017-01-04 11:27:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:27:09 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:27:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:27:09 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:27:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:09 AI_Player.update()	Search took90ms
2017-01-04 11:27:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-04 11:27:09 AI_Player.update()		110,	1001,	11,	111,	11,	101,	101
2017-01-04 11:27:09 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-04 11:27:09 AI_Player.update()		1100,	1101,	1110,	1100,	1010,	1101,	1110
2017-01-04 11:27:09 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:09 AI_Player.update()		11,	101,	110,	1010,	1010,	1001,	101
2017-01-04 11:27:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:09 AI_Player.update()	Search took24ms
2017-01-04 11:27:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-04 11:27:09 AI_Player.update()		110,	1001,	11,	111,	11,	1010,	101
2017-01-04 11:27:09 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 11:27:09 AI_Player.update()		1100,	1101,	1110,	1100,	1010,	1010,	1110
2017-01-04 11:27:09 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:27:09 AI_Player.update()		11,	101,	110,	1010,	1010,	1011,	101
2017-01-04 11:27:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	1001,	1001
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:09 AI_Player.update()	Search took109ms
2017-01-04 11:27:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-04 11:27:09 AI_Player.update()		110,	1001,	11,	111,	11,	101,	101
2017-01-04 11:27:09 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-04 11:27:09 AI_Player.update()		1100,	1101,	1110,	1100,	1010,	1101,	1110
2017-01-04 11:27:09 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:09 AI_Player.update()		11,	101,	110,	1010,	1010,	1001,	101
2017-01-04 11:27:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:09 AI_Player.update()	Search took27ms
2017-01-04 11:27:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-04 11:27:09 AI_Player.update()		110,	1001,	11,	111,	11,	1010,	101
2017-01-04 11:27:09 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 11:27:09 AI_Player.update()		1100,	1101,	1110,	1100,	1010,	1010,	1110
2017-01-04 11:27:09 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:27:09 AI_Player.update()		11,	101,	110,	1010,	1010,	1011,	101
2017-01-04 11:27:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	1001,	1001
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:09 AI_Player.update()	Search took171ms
2017-01-04 11:27:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-04 11:27:09 AI_Player.update()		110,	1001,	11,	111,	11,	101,	101
2017-01-04 11:27:09 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-04 11:27:09 AI_Player.update()		1100,	1101,	1110,	1100,	1010,	1101,	1110
2017-01-04 11:27:09 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:09 AI_Player.update()		11,	101,	110,	1010,	1010,	1001,	101
2017-01-04 11:27:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:09 AI_Player.update()	Search took19ms
2017-01-04 11:27:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 11:27:09 AI_Player.update()		110,	1001,	11,	111,	11,	1010,	101
2017-01-04 11:27:09 AI_Player.update()		1110,	1010,	1110,	110,	111,	1101,	1011
2017-01-04 11:27:09 AI_Player.update()		1100,	1101,	1110,	1100,	1010,	1011,	1110
2017-01-04 11:27:09 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:09 AI_Player.update()		11,	101,	110,	1010,	1010,	1010,	101
2017-01-04 11:27:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:09 AI_Player.update()	Search took351ms
2017-01-04 11:27:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-04 11:27:09 AI_Player.update()		110,	1010,	11,	111,	11,	1010,	101
2017-01-04 11:27:09 AI_Player.update()		1110,	1101,	1110,	110,	111,	1101,	1011
2017-01-04 11:27:09 AI_Player.update()		1100,	11,	1110,	1100,	1010,	1011,	1110
2017-01-04 11:27:09 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:09 AI_Player.update()		11,	101,	110,	1010,	1010,	1010,	101
2017-01-04 11:27:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:27:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:27:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:09 AI_Player.update()	update
2017-01-04 11:27:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:10 AI_Player.update()	Search took363ms
2017-01-04 11:27:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:10 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-04 11:27:10 AI_Player.update()		110,	1010,	11,	110,	11,	1010,	101
2017-01-04 11:27:10 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:27:10 AI_Player.update()		1100,	11,	1110,	1010,	1010,	1011,	1110
2017-01-04 11:27:10 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:10 AI_Player.update()		11,	101,	110,	110,	1010,	1010,	101
2017-01-04 11:27:10 AI_Player.update()		1100,	101,	1101,	111,	1101,	1010,	1001
2017-01-04 11:27:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:10 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:27:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:10 AI_Player.update()	update
2017-01-04 11:27:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:10 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:27:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:10 AI_Player.update()	update
2017-01-04 11:27:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:11 AI_Player.update()	Search took1134ms
2017-01-04 11:27:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:11 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-04 11:27:11 AI_Player.update()		1010,	11,	110,	11,	1010,	101,	110
2017-01-04 11:27:11 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:27:11 AI_Player.update()		1100,	11,	1110,	1010,	1010,	1011,	1110
2017-01-04 11:27:11 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:11 AI_Player.update()		11,	101,	110,	110,	1010,	1010,	101
2017-01-04 11:27:11 AI_Player.update()		1100,	101,	1101,	111,	1101,	1010,	1001
2017-01-04 11:27:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:11 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:27:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:11 AI_Player.update()	update
2017-01-04 11:27:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:11 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:11 AI_Player.update()	update
2017-01-04 11:27:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:12 AI_Player.update()	Search took991ms
2017-01-04 11:27:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:12 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-04 11:27:12 AI_Player.update()		1010,	11,	110,	111,	1010,	101,	110
2017-01-04 11:27:12 AI_Player.update()		1110,	1101,	1110,	11,	111,	1101,	1011
2017-01-04 11:27:12 AI_Player.update()		1100,	11,	1110,	1100,	1010,	1011,	1110
2017-01-04 11:27:12 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:12 AI_Player.update()		11,	101,	110,	1010,	1010,	1010,	101
2017-01-04 11:27:12 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:27:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:12 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:12 AI_Player.update()	update
2017-01-04 11:27:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:12 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:12 AI_Player.update()	update
2017-01-04 11:27:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:13 AI_Player.update()	Search took576ms
2017-01-04 11:27:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:13 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-04 11:27:13 AI_Player.update()		1010,	11,	110,	111,	1010,	101,	110
2017-01-04 11:27:13 AI_Player.update()		1110,	1101,	1110,	11,	111,	1101,	1011
2017-01-04 11:27:13 AI_Player.update()		11,	1110,	1100,	1010,	1011,	1110,	1100
2017-01-04 11:27:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:13 AI_Player.update()		11,	101,	110,	1010,	1010,	1010,	101
2017-01-04 11:27:13 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:27:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:13 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:13 AI_Player.update()	update
2017-01-04 11:27:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:13 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:13 AI_Player.update()	update
2017-01-04 11:27:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:13 AI_Player.update()	Search took602ms
2017-01-04 11:27:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:13 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-04 11:27:13 AI_Player.update()		1010,	11,	110,	111,	1010,	101,	110
2017-01-04 11:27:13 AI_Player.update()		1110,	1101,	1110,	11,	111,	1101,	1011
2017-01-04 11:27:13 AI_Player.update()		1100,	11,	1110,	1100,	1010,	1011,	1110
2017-01-04 11:27:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:13 AI_Player.update()		11,	101,	110,	1010,	1010,	1010,	101
2017-01-04 11:27:13 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:27:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:13 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:13 AI_Player.update()	update
2017-01-04 11:27:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:13 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:13 AI_Player.update()	update
2017-01-04 11:27:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:14 AI_Player.update()	Search took438ms
2017-01-04 11:27:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:14 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-04 11:27:14 AI_Player.update()		1010,	11,	110,	111,	1010,	1101,	110
2017-01-04 11:27:14 AI_Player.update()		1110,	1101,	1110,	11,	111,	1011,	1011
2017-01-04 11:27:14 AI_Player.update()		1100,	11,	1110,	1100,	1010,	1001,	1110
2017-01-04 11:27:14 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:27:14 AI_Player.update()		11,	101,	110,	1010,	1010,	1010,	101
2017-01-04 11:27:14 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 11:27:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:14 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:14 AI_Player.update()	update
2017-01-04 11:27:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:14 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:14 AI_Player.update()	update
2017-01-04 11:27:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:14 AI_Player.update()	Search took266ms
2017-01-04 11:27:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:14 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 11:27:14 AI_Player.update()		1010,	1101,	110,	111,	1010,	1101,	110
2017-01-04 11:27:14 AI_Player.update()		1110,	11,	1110,	11,	111,	1011,	1011
2017-01-04 11:27:14 AI_Player.update()		1100,	101,	1110,	1100,	1010,	1001,	1110
2017-01-04 11:27:14 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:27:14 AI_Player.update()		11,	101,	110,	1010,	1010,	1010,	101
2017-01-04 11:27:14 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-04 11:27:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:14 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:14 AI_Player.update()	update
2017-01-04 11:27:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:14 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:14 AI_Player.update()	update
2017-01-04 11:27:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:14 AI_Player.update()	Search took435ms
2017-01-04 11:27:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:14 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 11:27:14 AI_Player.update()		1010,	1101,	110,	111,	1010,	1101,	110
2017-01-04 11:27:14 AI_Player.update()		1110,	11,	1110,	11,	111,	1011,	1011
2017-01-04 11:27:14 AI_Player.update()		101,	1110,	1100,	1010,	1001,	1110,	1100
2017-01-04 11:27:14 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:27:14 AI_Player.update()		11,	101,	110,	1010,	1010,	1010,	101
2017-01-04 11:27:14 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-04 11:27:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:14 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:14 AI_Player.update()	update
2017-01-04 11:27:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:14 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:14 AI_Player.update()	update
2017-01-04 11:27:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:15 AI_Player.update()	Search took271ms
2017-01-04 11:27:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:15 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 11:27:15 AI_Player.update()		1010,	1101,	110,	111,	1010,	1101,	110
2017-01-04 11:27:15 AI_Player.update()		1110,	11,	1110,	11,	111,	1011,	1011
2017-01-04 11:27:15 AI_Player.update()		1100,	101,	1110,	1100,	1010,	1001,	1110
2017-01-04 11:27:15 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:27:15 AI_Player.update()		11,	101,	110,	1010,	1010,	1010,	101
2017-01-04 11:27:15 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-04 11:27:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:15 AI_Player.update()	update
2017-01-04 11:27:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:15 AI_Player.update()	update
2017-01-04 11:27:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:15 AI_Player.update()	Search took409ms
2017-01-04 11:27:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:15 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 11:27:15 AI_Player.update()		1010,	1101,	110,	11,	1010,	1101,	110
2017-01-04 11:27:15 AI_Player.update()		1110,	11,	1110,	1100,	111,	1011,	1011
2017-01-04 11:27:15 AI_Player.update()		1100,	101,	1110,	1010,	1010,	1001,	1110
2017-01-04 11:27:15 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:27:15 AI_Player.update()		11,	101,	110,	110,	1010,	1010,	101
2017-01-04 11:27:15 AI_Player.update()		1100,	1001,	1101,	111,	1101,	101,	1001
2017-01-04 11:27:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:15 AI_Player.update()	update
2017-01-04 11:27:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:15 AI_Player.update()	update
2017-01-04 11:27:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:16 AI_Player.update()	Search took481ms
2017-01-04 11:27:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:16 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 11:27:16 AI_Player.update()		1010,	1101,	110,	11,	1010,	101,	110
2017-01-04 11:27:16 AI_Player.update()		1110,	11,	1110,	1100,	111,	1101,	1011
2017-01-04 11:27:16 AI_Player.update()		1100,	101,	1110,	1010,	1010,	1011,	1110
2017-01-04 11:27:16 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:16 AI_Player.update()		11,	101,	110,	110,	1010,	1010,	101
2017-01-04 11:27:16 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1010,	1001
2017-01-04 11:27:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:16 AI_Player.update()	update
2017-01-04 11:27:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:27:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:16 AI_Player.update()	update
2017-01-04 11:27:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:16 AI_Player.update()	Search took328ms
2017-01-04 11:27:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:16 AI_Player.update()		110,	1101,	111,	111,	111,	101,	11
2017-01-04 11:27:16 AI_Player.update()		1010,	11,	110,	11,	1010,	101,	110
2017-01-04 11:27:16 AI_Player.update()		1110,	101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:27:16 AI_Player.update()		1100,	101,	1110,	1010,	1010,	1011,	1110
2017-01-04 11:27:16 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:16 AI_Player.update()		11,	1001,	110,	110,	1010,	1010,	101
2017-01-04 11:27:16 AI_Player.update()		1100,	11,	1101,	111,	1101,	1010,	1001
2017-01-04 11:27:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:27:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:16 AI_Player.update()	update
2017-01-04 11:27:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:16 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:27:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:16 AI_Player.update()	update
2017-01-04 11:27:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:17 AI_Player.update()	Search took810ms
2017-01-04 11:27:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:17 AI_Player.update()		110,	1101,	111,	111,	111,	101,	11
2017-01-04 11:27:17 AI_Player.update()		1010,	11,	110,	11,	1010,	101,	110
2017-01-04 11:27:17 AI_Player.update()		1110,	101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:27:17 AI_Player.update()		1100,	101,	1110,	1010,	1010,	1011,	1110
2017-01-04 11:27:17 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:17 AI_Player.update()		101,	11,	1001,	110,	110,	1010,	1010
2017-01-04 11:27:17 AI_Player.update()		1100,	11,	1101,	111,	1101,	1010,	1001
2017-01-04 11:27:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:27:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:17 AI_Player.update()	update
2017-01-04 11:27:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:17 AI_Player.update()	update
2017-01-04 11:27:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:17 AI_Player.update()	Search took483ms
2017-01-04 11:27:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:17 AI_Player.update()		110,	1101,	111,	111,	111,	101,	11
2017-01-04 11:27:17 AI_Player.update()		1010,	11,	110,	11,	1010,	101,	110
2017-01-04 11:27:17 AI_Player.update()		1110,	101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:27:17 AI_Player.update()		1110,	1100,	101,	1110,	1010,	1010,	1011
2017-01-04 11:27:17 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:17 AI_Player.update()		101,	11,	1001,	110,	110,	1010,	1010
2017-01-04 11:27:17 AI_Player.update()		1100,	11,	1101,	111,	1101,	1010,	1001
2017-01-04 11:27:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:17 AI_Player.update()	update
2017-01-04 11:27:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:27:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:17 AI_Player.update()	update
2017-01-04 11:27:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:18 AI_Player.update()	Search took834ms
2017-01-04 11:27:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:18 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 11:27:18 AI_Player.update()		1010,	101,	110,	11,	1010,	101,	110
2017-01-04 11:27:18 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1101,	1011
2017-01-04 11:27:18 AI_Player.update()		1110,	101,	101,	1110,	1010,	1010,	1011
2017-01-04 11:27:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:18 AI_Player.update()		101,	11,	1001,	110,	110,	1010,	1010
2017-01-04 11:27:18 AI_Player.update()		1100,	1101,	1101,	111,	1101,	1010,	1001
2017-01-04 11:27:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:27:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:18 AI_Player.update()	update
2017-01-04 11:27:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:27:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:18 AI_Player.update()	update
2017-01-04 11:27:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:18 AI_Player.update()	Search took237ms
2017-01-04 11:27:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:18 AI_Player.update()		110,	1101,	111,	111,	111,	101,	11
2017-01-04 11:27:18 AI_Player.update()		1010,	11,	110,	11,	1010,	101,	110
2017-01-04 11:27:18 AI_Player.update()		1110,	101,	1110,	1100,	111,	1101,	1011
2017-01-04 11:27:18 AI_Player.update()		1110,	1100,	101,	1110,	1010,	1010,	1011
2017-01-04 11:27:18 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:18 AI_Player.update()		101,	11,	1001,	110,	110,	1010,	1010
2017-01-04 11:27:18 AI_Player.update()		1100,	11,	1101,	111,	1101,	1010,	1001
2017-01-04 11:27:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:27:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:18 AI_Player.update()	update
2017-01-04 11:27:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:18 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:27:18 AI_Player.update()	Player a has won!
2017-01-04 11:27:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:27:18 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:27:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:27:18 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:27:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:18 AI_Player.update()	update
2017-01-04 11:27:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:18 AI_Player.update()	Search took81ms
2017-01-04 11:27:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:18 AI_Player.update()		110,	1011,	111,	1110,	111,	1110,	11
2017-01-04 11:27:18 AI_Player.update()		1001,	1001,	111,	101,	1100,	101,	1011
2017-01-04 11:27:18 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-04 11:27:18 AI_Player.update()		1100,	110,	11,	1001,	101,	101,	111
2017-01-04 11:27:18 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-04 11:27:18 AI_Player.update()		110,	1001,	1110,	11,	1001,	11,	101
2017-01-04 11:27:18 AI_Player.update()		1100,	110,	1101,	101,	1101,	110,	1001
2017-01-04 11:27:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:18 AI_Player.update()	update
2017-01-04 11:27:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:18 AI_Player.update()	update
2017-01-04 11:27:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:19 AI_Player.update()	Search took346ms
2017-01-04 11:27:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()		110,	1001,	111,	1110,	111,	1110,	11
2017-01-04 11:27:19 AI_Player.update()		1001,	110,	111,	101,	1100,	101,	1011
2017-01-04 11:27:19 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-04 11:27:19 AI_Player.update()		1100,	110,	11,	1001,	101,	101,	111
2017-01-04 11:27:19 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 11:27:19 AI_Player.update()		110,	110,	1110,	11,	1001,	11,	101
2017-01-04 11:27:19 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 11:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()	update
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()	update
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:19 AI_Player.update()	Search took97ms
2017-01-04 11:27:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()		110,	1001,	111,	1110,	111,	1110,	11
2017-01-04 11:27:19 AI_Player.update()		110,	111,	101,	1100,	101,	1011,	1001
2017-01-04 11:27:19 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-04 11:27:19 AI_Player.update()		1100,	110,	11,	1001,	101,	101,	111
2017-01-04 11:27:19 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 11:27:19 AI_Player.update()		110,	110,	1110,	11,	1001,	11,	101
2017-01-04 11:27:19 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 11:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()	update
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()	update
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:19 AI_Player.update()	Search took82ms
2017-01-04 11:27:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()		110,	1001,	111,	1110,	111,	110,	11
2017-01-04 11:27:19 AI_Player.update()		110,	111,	101,	1100,	101,	1110,	1001
2017-01-04 11:27:19 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 11:27:19 AI_Player.update()		1100,	110,	11,	1001,	101,	110,	111
2017-01-04 11:27:19 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 11:27:19 AI_Player.update()		110,	110,	1110,	11,	1001,	101,	101
2017-01-04 11:27:19 AI_Player.update()		1100,	1011,	1101,	101,	1101,	11,	1001
2017-01-04 11:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()	update
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:27:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()	update
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:19 AI_Player.update()	Search took150ms
2017-01-04 11:27:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-04 11:27:19 AI_Player.update()		110,	111,	101,	1110,	101,	1110,	1001
2017-01-04 11:27:19 AI_Player.update()		1110,	110,	1110,	1100,	111,	1011,	1011
2017-01-04 11:27:19 AI_Player.update()		1100,	110,	11,	101,	101,	110,	111
2017-01-04 11:27:19 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-04 11:27:19 AI_Player.update()		110,	110,	1110,	1100,	1001,	101,	101
2017-01-04 11:27:19 AI_Player.update()		1100,	1011,	1101,	11,	1101,	11,	1001
2017-01-04 11:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()	update
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()	update
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:19 AI_Player.update()	Search took114ms
2017-01-04 11:27:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 11:27:19 AI_Player.update()		110,	111,	101,	1110,	101,	110,	1001
2017-01-04 11:27:19 AI_Player.update()		1110,	110,	1110,	1100,	111,	1110,	1011
2017-01-04 11:27:19 AI_Player.update()		1100,	110,	11,	101,	101,	1011,	111
2017-01-04 11:27:19 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	110,	1011
2017-01-04 11:27:19 AI_Player.update()		110,	110,	1110,	1100,	1001,	101,	101
2017-01-04 11:27:19 AI_Player.update()		1100,	1011,	1101,	11,	1101,	101,	1001
2017-01-04 11:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()	update
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()	update
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:19 AI_Player.update()	Search took229ms
2017-01-04 11:27:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()		110,	1001,	111,	1110,	111,	11,	11
2017-01-04 11:27:19 AI_Player.update()		110,	111,	101,	1100,	101,	110,	1001
2017-01-04 11:27:19 AI_Player.update()		1110,	110,	1110,	101,	111,	1110,	1011
2017-01-04 11:27:19 AI_Player.update()		1100,	110,	11,	1001,	101,	1011,	111
2017-01-04 11:27:19 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 11:27:19 AI_Player.update()		110,	110,	1110,	11,	1001,	101,	101
2017-01-04 11:27:19 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-04 11:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()	update
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:27:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:19 AI_Player.update()	update
2017-01-04 11:27:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:20 AI_Player.update()	Search took92ms
2017-01-04 11:27:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:20 AI_Player.update()		110,	1001,	111,	1110,	111,	11,	11
2017-01-04 11:27:20 AI_Player.update()		110,	111,	101,	1100,	101,	110,	1001
2017-01-04 11:27:20 AI_Player.update()		1110,	110,	1110,	101,	111,	1110,	1011
2017-01-04 11:27:20 AI_Player.update()		1100,	110,	11,	1001,	101,	1011,	111
2017-01-04 11:27:20 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 11:27:20 AI_Player.update()		101,	110,	110,	1110,	11,	1001,	101
2017-01-04 11:27:20 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-04 11:27:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:27:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:20 AI_Player.update()	update
2017-01-04 11:27:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:27:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:20 AI_Player.update()	update
2017-01-04 11:27:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:20 AI_Player.update()	Search took413ms
2017-01-04 11:27:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:20 AI_Player.update()		110,	1001,	111,	1110,	111,	11,	11
2017-01-04 11:27:20 AI_Player.update()		110,	111,	101,	1100,	101,	110,	1001
2017-01-04 11:27:20 AI_Player.update()		1110,	110,	1110,	101,	111,	1110,	1011
2017-01-04 11:27:20 AI_Player.update()		1100,	110,	11,	1001,	101,	1011,	111
2017-01-04 11:27:20 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 11:27:20 AI_Player.update()		101,	101,	110,	110,	1110,	11,	1001
2017-01-04 11:27:20 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-04 11:27:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:27:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:20 AI_Player.update()	update
2017-01-04 11:27:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:27:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:20 AI_Player.update()	update
2017-01-04 11:27:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:20 AI_Player.update()	Search took267ms
2017-01-04 11:27:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:20 AI_Player.update()		110,	1001,	111,	1110,	111,	110,	11
2017-01-04 11:27:20 AI_Player.update()		110,	111,	101,	1100,	101,	1110,	1001
2017-01-04 11:27:20 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 11:27:20 AI_Player.update()		1100,	110,	11,	1001,	101,	110,	111
2017-01-04 11:27:20 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	11,	1011
2017-01-04 11:27:20 AI_Player.update()		101,	101,	110,	110,	1110,	101,	1001
2017-01-04 11:27:20 AI_Player.update()		1100,	1011,	1101,	101,	1101,	11,	1001
2017-01-04 11:27:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:27:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:20 AI_Player.update()	update
2017-01-04 11:27:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:27:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:20 AI_Player.update()	update
2017-01-04 11:27:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:21 AI_Player.update()	Search took574ms
2017-01-04 11:27:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:21 AI_Player.update()		110,	1001,	111,	1110,	111,	11,	11
2017-01-04 11:27:21 AI_Player.update()		110,	111,	101,	1100,	101,	110,	1001
2017-01-04 11:27:21 AI_Player.update()		1110,	110,	1110,	101,	111,	1110,	1011
2017-01-04 11:27:21 AI_Player.update()		1100,	110,	11,	1001,	101,	1011,	111
2017-01-04 11:27:21 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 11:27:21 AI_Player.update()		101,	101,	110,	110,	1110,	11,	1001
2017-01-04 11:27:21 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-04 11:27:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:21 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:27:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:21 AI_Player.update()	update
2017-01-04 11:27:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:21 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:27:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:21 AI_Player.update()	update
2017-01-04 11:27:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:21 AI_Player.update()	Search took598ms
2017-01-04 11:27:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:21 AI_Player.update()		110,	1001,	111,	1110,	111,	110,	11
2017-01-04 11:27:21 AI_Player.update()		110,	111,	101,	1100,	101,	1110,	1001
2017-01-04 11:27:21 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 11:27:21 AI_Player.update()		1100,	110,	11,	1001,	101,	110,	111
2017-01-04 11:27:21 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	11,	1011
2017-01-04 11:27:21 AI_Player.update()		101,	101,	110,	110,	1110,	101,	1001
2017-01-04 11:27:21 AI_Player.update()		1100,	1011,	1101,	101,	1101,	11,	1001
2017-01-04 11:27:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:21 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:27:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:21 AI_Player.update()	update
2017-01-04 11:27:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:21 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:27:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:21 AI_Player.update()	update
2017-01-04 11:27:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:22 AI_Player.update()	Search took494ms
2017-01-04 11:27:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:22 AI_Player.update()		110,	1001,	111,	1110,	111,	110,	11
2017-01-04 11:27:22 AI_Player.update()		110,	111,	101,	1100,	101,	1110,	1001
2017-01-04 11:27:22 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 11:27:22 AI_Player.update()		110,	11,	1001,	101,	110,	111,	1100
2017-01-04 11:27:22 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	11,	1011
2017-01-04 11:27:22 AI_Player.update()		101,	101,	110,	110,	1110,	101,	1001
2017-01-04 11:27:22 AI_Player.update()		1100,	1011,	1101,	101,	1101,	11,	1001
2017-01-04 11:27:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:22 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:27:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:22 AI_Player.update()	update
2017-01-04 11:27:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:22 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:27:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:22 AI_Player.update()	update
2017-01-04 11:27:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:22 AI_Player.update()	Search took439ms
2017-01-04 11:27:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:22 AI_Player.update()		110,	111,	111,	1110,	111,	110,	11
2017-01-04 11:27:22 AI_Player.update()		110,	110,	101,	1100,	101,	1110,	1001
2017-01-04 11:27:22 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 11:27:22 AI_Player.update()		110,	1001,	1001,	101,	110,	111,	1100
2017-01-04 11:27:22 AI_Player.update()		1110,	101,	1101,	1100,	1011,	11,	1011
2017-01-04 11:27:22 AI_Player.update()		101,	1011,	110,	110,	1110,	101,	1001
2017-01-04 11:27:22 AI_Player.update()		1100,	1001,	1101,	101,	1101,	11,	1001
2017-01-04 11:27:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:22 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:27:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:22 AI_Player.update()	update
2017-01-04 11:27:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:22 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:27:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:22 AI_Player.update()	update
2017-01-04 11:27:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:23 AI_Player.update()	Search took467ms
2017-01-04 11:27:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:23 AI_Player.update()		110,	111,	111,	1110,	111,	1110,	11
2017-01-04 11:27:23 AI_Player.update()		110,	110,	101,	1100,	101,	1011,	1001
2017-01-04 11:27:23 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-04 11:27:23 AI_Player.update()		110,	1001,	1001,	101,	110,	11,	1100
2017-01-04 11:27:23 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 11:27:23 AI_Player.update()		101,	1011,	110,	110,	1110,	11,	1001
2017-01-04 11:27:23 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-04 11:27:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:27:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:23 AI_Player.update()	update
2017-01-04 11:27:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:23 AI_Player.update()	update
2017-01-04 11:27:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:23 AI_Player.update()	Search took118ms
2017-01-04 11:27:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:23 AI_Player.update()		110,	110,	111,	1110,	111,	1110,	11
2017-01-04 11:27:23 AI_Player.update()		110,	11,	101,	1100,	101,	1011,	1001
2017-01-04 11:27:23 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-04 11:27:23 AI_Player.update()		110,	101,	1001,	101,	110,	11,	1100
2017-01-04 11:27:23 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	101,	1011
2017-01-04 11:27:23 AI_Player.update()		101,	1001,	110,	110,	1110,	11,	1001
2017-01-04 11:27:23 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 11:27:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:23 AI_Player.update()	update
2017-01-04 11:27:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:23 AI_Player.update()	update
2017-01-04 11:27:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:23 AI_Player.update()	Search took433ms
2017-01-04 11:27:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:23 AI_Player.update()		110,	110,	111,	1110,	111,	1110,	11
2017-01-04 11:27:23 AI_Player.update()		11,	101,	1100,	101,	1011,	1001,	110
2017-01-04 11:27:23 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-04 11:27:23 AI_Player.update()		110,	101,	1001,	101,	110,	11,	1100
2017-01-04 11:27:23 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	101,	1011
2017-01-04 11:27:23 AI_Player.update()		101,	1001,	110,	110,	1110,	11,	1001
2017-01-04 11:27:23 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 11:27:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:23 AI_Player.update()	update
2017-01-04 11:27:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:23 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:23 AI_Player.update()	update
2017-01-04 11:27:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:24 AI_Player.update()	Search took164ms
2017-01-04 11:27:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:24 AI_Player.update()		110,	110,	111,	1110,	111,	1110,	11
2017-01-04 11:27:24 AI_Player.update()		11,	101,	1100,	101,	1011,	1001,	110
2017-01-04 11:27:24 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-04 11:27:24 AI_Player.update()		110,	101,	1001,	101,	110,	11,	1100
2017-01-04 11:27:24 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	101,	1011
2017-01-04 11:27:24 AI_Player.update()		1001,	101,	1001,	110,	110,	1110,	11
2017-01-04 11:27:24 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 11:27:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:24 AI_Player.update()	update
2017-01-04 11:27:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:27:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:24 AI_Player.update()	update
2017-01-04 11:27:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:24 AI_Player.update()	Search took313ms
2017-01-04 11:27:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:24 AI_Player.update()		110,	110,	111,	101,	111,	1110,	11
2017-01-04 11:27:24 AI_Player.update()		11,	101,	1100,	101,	1011,	1001,	110
2017-01-04 11:27:24 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-04 11:27:24 AI_Player.update()		110,	101,	1001,	1100,	110,	11,	1100
2017-01-04 11:27:24 AI_Player.update()		1110,	1011,	1101,	110,	1011,	101,	1011
2017-01-04 11:27:24 AI_Player.update()		1001,	101,	1001,	101,	110,	1110,	11
2017-01-04 11:27:24 AI_Player.update()		1100,	111,	1101,	1110,	1101,	110,	1001
2017-01-04 11:27:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:27:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:24 AI_Player.update()	update
2017-01-04 11:27:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:27:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:24 AI_Player.update()	update
2017-01-04 11:27:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:24 AI_Player.update()	Search took296ms
2017-01-04 11:27:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:24 AI_Player.update()		110,	110,	111,	1110,	111,	1110,	11
2017-01-04 11:27:24 AI_Player.update()		11,	101,	1100,	101,	1011,	1001,	110
2017-01-04 11:27:24 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-04 11:27:24 AI_Player.update()		110,	101,	1001,	101,	110,	11,	1100
2017-01-04 11:27:24 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	101,	1011
2017-01-04 11:27:24 AI_Player.update()		1001,	101,	1001,	110,	110,	1110,	11
2017-01-04 11:27:24 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 11:27:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:27:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:24 AI_Player.update()	update
2017-01-04 11:27:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:24 AI_Player.update()	update
2017-01-04 11:27:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:24 AI_Player.update()	Search took234ms
2017-01-04 11:27:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:24 AI_Player.update()		110,	101,	111,	1110,	111,	1110,	11
2017-01-04 11:27:24 AI_Player.update()		11,	1001,	1100,	101,	1011,	1001,	110
2017-01-04 11:27:24 AI_Player.update()		1110,	101,	1110,	101,	111,	111,	1011
2017-01-04 11:27:24 AI_Player.update()		110,	1011,	1001,	101,	110,	11,	1100
2017-01-04 11:27:24 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 11:27:24 AI_Player.update()		1001,	111,	1001,	110,	110,	1110,	11
2017-01-04 11:27:24 AI_Player.update()		1100,	110,	1101,	101,	1101,	110,	1001
2017-01-04 11:27:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:24 AI_Player.update()	update
2017-01-04 11:27:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:24 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:24 AI_Player.update()	update
2017-01-04 11:27:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:25 AI_Player.update()	Search took277ms
2017-01-04 11:27:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:25 AI_Player.update()		110,	1001,	111,	1110,	111,	1110,	11
2017-01-04 11:27:25 AI_Player.update()		11,	101,	1100,	101,	1011,	1001,	110
2017-01-04 11:27:25 AI_Player.update()		1110,	1011,	1110,	101,	111,	111,	1011
2017-01-04 11:27:25 AI_Player.update()		110,	101,	1001,	101,	110,	11,	1100
2017-01-04 11:27:25 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-04 11:27:25 AI_Player.update()		1001,	110,	1001,	110,	110,	1110,	11
2017-01-04 11:27:25 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 11:27:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:25 AI_Player.update()	update
2017-01-04 11:27:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:25 AI_Player.update()	update
2017-01-04 11:27:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:25 AI_Player.update()	Search took272ms
2017-01-04 11:27:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:25 AI_Player.update()		110,	1001,	111,	101,	111,	1110,	11
2017-01-04 11:27:25 AI_Player.update()		11,	101,	1100,	1110,	1011,	1001,	110
2017-01-04 11:27:25 AI_Player.update()		1110,	1011,	1110,	101,	111,	111,	1011
2017-01-04 11:27:25 AI_Player.update()		110,	101,	1001,	101,	110,	11,	1100
2017-01-04 11:27:25 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-04 11:27:25 AI_Player.update()		1001,	110,	1001,	1100,	110,	1110,	11
2017-01-04 11:27:25 AI_Player.update()		1100,	101,	1101,	110,	1101,	110,	1001
2017-01-04 11:27:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:25 AI_Player.update()	update
2017-01-04 11:27:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:27:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:25 AI_Player.update()	update
2017-01-04 11:27:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:26 AI_Player.update()	Search took945ms
2017-01-04 11:27:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:26 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-04 11:27:26 AI_Player.update()		11,	1011,	1100,	1110,	1011,	1001,	110
2017-01-04 11:27:26 AI_Player.update()		1110,	101,	1110,	101,	111,	111,	1011
2017-01-04 11:27:26 AI_Player.update()		110,	111,	1001,	101,	110,	11,	1100
2017-01-04 11:27:26 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:27:26 AI_Player.update()		1001,	101,	1001,	1100,	110,	1110,	11
2017-01-04 11:27:26 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-04 11:27:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:27:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:26 AI_Player.update()	update
2017-01-04 11:27:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:27:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:26 AI_Player.update()	update
2017-01-04 11:27:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:26 AI_Player.update()	Search took306ms
2017-01-04 11:27:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:26 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-04 11:27:26 AI_Player.update()		11,	1011,	1100,	1110,	1011,	1001,	110
2017-01-04 11:27:26 AI_Player.update()		1110,	101,	1110,	101,	111,	111,	1011
2017-01-04 11:27:26 AI_Player.update()		110,	111,	1001,	101,	110,	11,	1100
2017-01-04 11:27:26 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:27:26 AI_Player.update()		101,	1001,	1100,	110,	1110,	11,	1001
2017-01-04 11:27:26 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-04 11:27:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:27:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:26 AI_Player.update()	update
2017-01-04 11:27:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:27:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:26 AI_Player.update()	update
2017-01-04 11:27:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:26 AI_Player.update()	Search took183ms
2017-01-04 11:27:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:26 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-04 11:27:26 AI_Player.update()		1011,	1100,	1110,	1011,	1001,	110,	11
2017-01-04 11:27:26 AI_Player.update()		1110,	101,	1110,	101,	111,	111,	1011
2017-01-04 11:27:26 AI_Player.update()		110,	111,	1001,	101,	110,	11,	1100
2017-01-04 11:27:26 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:27:26 AI_Player.update()		101,	1001,	1100,	110,	1110,	11,	1001
2017-01-04 11:27:26 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-04 11:27:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:27:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:26 AI_Player.update()	update
2017-01-04 11:27:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:26 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:27:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:26 AI_Player.update()	update
2017-01-04 11:27:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:27 AI_Player.update()	Search took597ms
2017-01-04 11:27:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:27 AI_Player.update()		110,	101,	111,	110,	111,	1110,	11
2017-01-04 11:27:27 AI_Player.update()		1011,	1100,	1110,	101,	1001,	110,	11
2017-01-04 11:27:27 AI_Player.update()		1110,	101,	1110,	1011,	111,	111,	1011
2017-01-04 11:27:27 AI_Player.update()		110,	111,	1001,	101,	110,	11,	1100
2017-01-04 11:27:27 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:27:27 AI_Player.update()		101,	1001,	1100,	101,	1110,	11,	1001
2017-01-04 11:27:27 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-04 11:27:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:27:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:27 AI_Player.update()	update
2017-01-04 11:27:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:27 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:27:27 AI_Player.update()	Player a has won!
2017-01-04 11:27:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:27:27 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:27:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:27:27 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:27:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:27 AI_Player.update()	update
2017-01-04 11:27:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:27 AI_Player.update()	Search took117ms
2017-01-04 11:27:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:27 AI_Player.update()		110,	111,	111,	1100,	111,	1101,	11
2017-01-04 11:27:27 AI_Player.update()		1010,	1100,	101,	1010,	1100,	11,	101
2017-01-04 11:27:27 AI_Player.update()		1110,	101,	1110,	1101,	111,	1100,	1011
2017-01-04 11:27:27 AI_Player.update()		1100,	101,	1010,	1010,	1001,	1011,	1001
2017-01-04 11:27:27 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-04 11:27:27 AI_Player.update()		101,	1011,	1100,	110,	11,	1001,	1001
2017-01-04 11:27:27 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-04 11:27:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:27 AI_Player.update()	update
2017-01-04 11:27:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:27 AI_Player.update()	update
2017-01-04 11:27:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:27 AI_Player.update()	Search took218ms
2017-01-04 11:27:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:27 AI_Player.update()		110,	111,	111,	1100,	111,	1101,	11
2017-01-04 11:27:27 AI_Player.update()		1100,	101,	1010,	1100,	11,	101,	1010
2017-01-04 11:27:27 AI_Player.update()		1110,	101,	1110,	1101,	111,	1100,	1011
2017-01-04 11:27:27 AI_Player.update()		1100,	101,	1010,	1010,	1001,	1011,	1001
2017-01-04 11:27:27 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-04 11:27:27 AI_Player.update()		101,	1011,	1100,	110,	11,	1001,	1001
2017-01-04 11:27:27 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-04 11:27:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:27 AI_Player.update()	update
2017-01-04 11:27:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:27 AI_Player.update()	update
2017-01-04 11:27:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:28 AI_Player.update()	Search took370ms
2017-01-04 11:27:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:28 AI_Player.update()		110,	101,	111,	1100,	111,	1101,	11
2017-01-04 11:27:28 AI_Player.update()		1100,	101,	1010,	1100,	11,	101,	1010
2017-01-04 11:27:28 AI_Player.update()		1110,	101,	1110,	1101,	111,	1100,	1011
2017-01-04 11:27:28 AI_Player.update()		1100,	11,	1010,	1010,	1001,	1011,	1001
2017-01-04 11:27:28 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-04 11:27:28 AI_Player.update()		101,	11,	1100,	110,	11,	1001,	1001
2017-01-04 11:27:28 AI_Player.update()		1100,	111,	1101,	11,	1101,	1011,	1001
2017-01-04 11:27:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:28 AI_Player.update()	update
2017-01-04 11:27:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:28 AI_Player.update()	update
2017-01-04 11:27:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:28 AI_Player.update()	Search took269ms
2017-01-04 11:27:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:28 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 11:27:28 AI_Player.update()		1100,	101,	1010,	1100,	11,	1101,	1010
2017-01-04 11:27:28 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 11:27:28 AI_Player.update()		1100,	11,	1010,	1010,	1001,	1100,	1001
2017-01-04 11:27:28 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:28 AI_Player.update()		101,	11,	1100,	110,	11,	101,	1001
2017-01-04 11:27:28 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-04 11:27:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:28 AI_Player.update()	update
2017-01-04 11:27:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:27:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:28 AI_Player.update()	update
2017-01-04 11:27:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:28 AI_Player.update()	Search took168ms
2017-01-04 11:27:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:28 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 11:27:28 AI_Player.update()		1100,	101,	1010,	1101,	11,	1101,	1010
2017-01-04 11:27:28 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 11:27:28 AI_Player.update()		1100,	11,	1010,	1010,	1001,	1100,	1001
2017-01-04 11:27:28 AI_Player.update()		1110,	1011,	1101,	110,	1011,	1011,	1011
2017-01-04 11:27:28 AI_Player.update()		101,	11,	1100,	11,	11,	101,	1001
2017-01-04 11:27:28 AI_Player.update()		1100,	111,	1101,	1100,	1101,	1001,	1001
2017-01-04 11:27:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:27:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:28 AI_Player.update()	update
2017-01-04 11:27:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:27:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:28 AI_Player.update()	update
2017-01-04 11:27:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:29 AI_Player.update()	Search took333ms
2017-01-04 11:27:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 11:27:29 AI_Player.update()		1100,	101,	1010,	1100,	11,	1101,	1010
2017-01-04 11:27:29 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 11:27:29 AI_Player.update()		1100,	11,	1010,	1010,	1001,	1100,	1001
2017-01-04 11:27:29 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:29 AI_Player.update()		101,	11,	1100,	110,	11,	101,	1001
2017-01-04 11:27:29 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:27:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:29 AI_Player.update()	Search took128ms
2017-01-04 11:27:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()		110,	101,	111,	11,	111,	1011,	11
2017-01-04 11:27:29 AI_Player.update()		1100,	101,	1010,	1100,	11,	1101,	1010
2017-01-04 11:27:29 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:29 AI_Player.update()		1100,	11,	1010,	1101,	1001,	1100,	1001
2017-01-04 11:27:29 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:29 AI_Player.update()		101,	11,	1100,	1010,	11,	101,	1001
2017-01-04 11:27:29 AI_Player.update()		1100,	111,	1101,	110,	1101,	1001,	1001
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:29 AI_Player.update()	Search took350ms
2017-01-04 11:27:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()		110,	101,	111,	11,	111,	1011,	11
2017-01-04 11:27:29 AI_Player.update()		1100,	101,	1010,	1100,	11,	1101,	1010
2017-01-04 11:27:29 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:29 AI_Player.update()		1001,	1100,	11,	1010,	1101,	1001,	1100
2017-01-04 11:27:29 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:29 AI_Player.update()		101,	11,	1100,	1010,	11,	101,	1001
2017-01-04 11:27:29 AI_Player.update()		1100,	111,	1101,	110,	1101,	1001,	1001
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:29 AI_Player.update()	Search took109ms
2017-01-04 11:27:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()		110,	101,	111,	11,	111,	1011,	11
2017-01-04 11:27:29 AI_Player.update()		1100,	101,	1010,	1100,	11,	1101,	1010
2017-01-04 11:27:29 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:29 AI_Player.update()		1001,	1011,	11,	1010,	1101,	1001,	1100
2017-01-04 11:27:29 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:29 AI_Player.update()		101,	111,	1100,	1010,	11,	101,	1001
2017-01-04 11:27:29 AI_Player.update()		1100,	101,	1101,	110,	1101,	1001,	1001
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:29 AI_Player.update()	Search took16ms
2017-01-04 11:27:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()		110,	101,	111,	11,	111,	1011,	11
2017-01-04 11:27:29 AI_Player.update()		1100,	101,	1010,	1100,	11,	1101,	1010
2017-01-04 11:27:29 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:29 AI_Player.update()		1001,	1100,	11,	1010,	1101,	1001,	1100
2017-01-04 11:27:29 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:29 AI_Player.update()		101,	11,	1100,	1010,	11,	101,	1001
2017-01-04 11:27:29 AI_Player.update()		1100,	111,	1101,	110,	1101,	1001,	1001
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:29 AI_Player.update()	Search took133ms
2017-01-04 11:27:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()		110,	101,	111,	110,	111,	1011,	11
2017-01-04 11:27:29 AI_Player.update()		1100,	101,	1010,	11,	11,	1101,	1010
2017-01-04 11:27:29 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:29 AI_Player.update()		1001,	1100,	11,	1100,	1101,	1001,	1100
2017-01-04 11:27:29 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:29 AI_Player.update()		101,	11,	1100,	1010,	11,	101,	1001
2017-01-04 11:27:29 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:27:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:29 AI_Player.update()	Search took92ms
2017-01-04 11:27:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()		110,	101,	111,	110,	111,	1011,	11
2017-01-04 11:27:29 AI_Player.update()		1100,	101,	1010,	11,	11,	1101,	1010
2017-01-04 11:27:29 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:29 AI_Player.update()		1100,	11,	1100,	1101,	1001,	1100,	1001
2017-01-04 11:27:29 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:29 AI_Player.update()		101,	11,	1100,	1010,	11,	101,	1001
2017-01-04 11:27:29 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:27:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:27:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:29 AI_Player.update()	update
2017-01-04 11:27:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:30 AI_Player.update()	Search took178ms
2017-01-04 11:27:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()		110,	101,	111,	110,	111,	1011,	11
2017-01-04 11:27:30 AI_Player.update()		1010,	1100,	101,	1010,	11,	11,	1101
2017-01-04 11:27:30 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:30 AI_Player.update()		1100,	11,	1100,	1101,	1001,	1100,	1001
2017-01-04 11:27:30 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:30 AI_Player.update()		101,	11,	1100,	1010,	11,	101,	1001
2017-01-04 11:27:30 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:27:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:27:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()	update
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:27:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()	update
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:30 AI_Player.update()	Search took192ms
2017-01-04 11:27:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()		110,	101,	111,	110,	111,	1011,	11
2017-01-04 11:27:30 AI_Player.update()		1010,	1100,	101,	1010,	11,	11,	1101
2017-01-04 11:27:30 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:30 AI_Player.update()		11,	1100,	1101,	1001,	1100,	1001,	1100
2017-01-04 11:27:30 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:30 AI_Player.update()		101,	11,	1100,	1010,	11,	101,	1001
2017-01-04 11:27:30 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:27:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:27:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()	update
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:27:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()	update
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:30 AI_Player.update()	Search took202ms
2017-01-04 11:27:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()		110,	101,	111,	110,	111,	1011,	11
2017-01-04 11:27:30 AI_Player.update()		1010,	1100,	101,	1010,	11,	11,	1101
2017-01-04 11:27:30 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:30 AI_Player.update()		1100,	1101,	1001,	1100,	1001,	1100,	11
2017-01-04 11:27:30 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-04 11:27:30 AI_Player.update()		101,	11,	1100,	1010,	11,	101,	1001
2017-01-04 11:27:30 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:27:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:27:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()	update
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:27:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()	update
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:30 AI_Player.update()	Search took123ms
2017-01-04 11:27:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()		110,	101,	111,	110,	111,	11,	11
2017-01-04 11:27:30 AI_Player.update()		1010,	1100,	101,	1010,	11,	101,	1101
2017-01-04 11:27:30 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-04 11:27:30 AI_Player.update()		1100,	1101,	1001,	1100,	1001,	1011,	11
2017-01-04 11:27:30 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-04 11:27:30 AI_Player.update()		101,	11,	1100,	1010,	11,	1001,	1001
2017-01-04 11:27:30 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1011,	1001
2017-01-04 11:27:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:27:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()	update
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()	update
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:30 AI_Player.update()	Search took259ms
2017-01-04 11:27:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()		110,	101,	111,	110,	111,	11,	11
2017-01-04 11:27:30 AI_Player.update()		1100,	101,	1010,	11,	101,	1101,	1010
2017-01-04 11:27:30 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-04 11:27:30 AI_Player.update()		1100,	1101,	1001,	1100,	1001,	1011,	11
2017-01-04 11:27:30 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-04 11:27:30 AI_Player.update()		101,	11,	1100,	1010,	11,	1001,	1001
2017-01-04 11:27:30 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1011,	1001
2017-01-04 11:27:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:27:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()	update
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:27:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:30 AI_Player.update()	update
2017-01-04 11:27:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:31 AI_Player.update()	Search took112ms
2017-01-04 11:27:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:31 AI_Player.update()		110,	101,	111,	110,	111,	11,	11
2017-01-04 11:27:31 AI_Player.update()		1100,	101,	1010,	11,	101,	1101,	1010
2017-01-04 11:27:31 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1100,	1011
2017-01-04 11:27:31 AI_Player.update()		1100,	1011,	1001,	1100,	1001,	1011,	11
2017-01-04 11:27:31 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-04 11:27:31 AI_Player.update()		101,	111,	1100,	1010,	11,	1001,	1001
2017-01-04 11:27:31 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1011,	1001
2017-01-04 11:27:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:27:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:31 AI_Player.update()	update
2017-01-04 11:27:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:27:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:31 AI_Player.update()	update
2017-01-04 11:27:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:31 AI_Player.update()	Search took200ms
2017-01-04 11:27:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:31 AI_Player.update()		110,	101,	111,	110,	111,	11,	11
2017-01-04 11:27:31 AI_Player.update()		1100,	101,	1010,	11,	101,	1101,	1010
2017-01-04 11:27:31 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-04 11:27:31 AI_Player.update()		1100,	1101,	1001,	1100,	1001,	1011,	11
2017-01-04 11:27:31 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-04 11:27:31 AI_Player.update()		101,	11,	1100,	1010,	11,	1001,	1001
2017-01-04 11:27:31 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1011,	1001
2017-01-04 11:27:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:27:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:31 AI_Player.update()	update
2017-01-04 11:27:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:31 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:27:31 AI_Player.update()	Player a has won!
2017-01-04 11:27:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:27:31 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:27:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:27:31 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:27:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:31 AI_Player.update()	update
2017-01-04 11:27:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:31 AI_Player.update()	Search took163ms
2017-01-04 11:27:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:31 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 11:27:31 AI_Player.update()		1101,	1001,	1010,	101,	1001,	1010,	1010
2017-01-04 11:27:31 AI_Player.update()		1110,	110,	1110,	110,	111,	1100,	1011
2017-01-04 11:27:31 AI_Player.update()		101,	1010,	101,	11,	1010,	1011,	1010
2017-01-04 11:27:31 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1001,	1011
2017-01-04 11:27:31 AI_Player.update()		101,	1011,	1010,	1010,	1101,	1010,	101
2017-01-04 11:27:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-04 11:27:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:31 AI_Player.update()	update
2017-01-04 11:27:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:31 AI_Player.update()	update
2017-01-04 11:27:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:31 AI_Player.update()	Search took245ms
2017-01-04 11:27:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:31 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 11:27:31 AI_Player.update()		1101,	1001,	1010,	110,	1001,	1010,	1010
2017-01-04 11:27:31 AI_Player.update()		1110,	110,	1110,	11,	111,	1100,	1011
2017-01-04 11:27:31 AI_Player.update()		101,	1010,	101,	1100,	1010,	1011,	1010
2017-01-04 11:27:31 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:27:31 AI_Player.update()		101,	1011,	1010,	101,	1101,	1010,	101
2017-01-04 11:27:31 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-04 11:27:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:31 AI_Player.update()	update
2017-01-04 11:27:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:31 AI_Player.update()	update
2017-01-04 11:27:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:32 AI_Player.update()	Search took524ms
2017-01-04 11:27:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:32 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 11:27:32 AI_Player.update()		1101,	1001,	1010,	110,	1001,	1100,	1010
2017-01-04 11:27:32 AI_Player.update()		1110,	110,	1110,	11,	111,	1011,	1011
2017-01-04 11:27:32 AI_Player.update()		101,	1010,	101,	1100,	1010,	1001,	1010
2017-01-04 11:27:32 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:27:32 AI_Player.update()		101,	1011,	1010,	101,	1101,	11,	101
2017-01-04 11:27:32 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:27:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:32 AI_Player.update()	update
2017-01-04 11:27:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:32 AI_Player.update()	update
2017-01-04 11:27:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:32 AI_Player.update()	Search took373ms
2017-01-04 11:27:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:32 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 11:27:32 AI_Player.update()		1101,	1001,	1010,	11,	1001,	1100,	1010
2017-01-04 11:27:32 AI_Player.update()		1110,	110,	1110,	1100,	111,	1011,	1011
2017-01-04 11:27:32 AI_Player.update()		101,	1010,	101,	1010,	1010,	1001,	1010
2017-01-04 11:27:32 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:27:32 AI_Player.update()		101,	1011,	1010,	110,	1101,	11,	101
2017-01-04 11:27:32 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:27:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:32 AI_Player.update()	update
2017-01-04 11:27:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:32 AI_Player.update()	update
2017-01-04 11:27:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:33 AI_Player.update()	Search took803ms
2017-01-04 11:27:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:33 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 11:27:33 AI_Player.update()		1001,	1010,	11,	1001,	1100,	1010,	1101
2017-01-04 11:27:33 AI_Player.update()		1110,	110,	1110,	1100,	111,	1011,	1011
2017-01-04 11:27:33 AI_Player.update()		101,	1010,	101,	1010,	1010,	1001,	1010
2017-01-04 11:27:33 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:27:33 AI_Player.update()		101,	1011,	1010,	110,	1101,	11,	101
2017-01-04 11:27:33 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:27:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:33 AI_Player.update()	update
2017-01-04 11:27:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:33 AI_Player.update()	update
2017-01-04 11:27:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:33 AI_Player.update()	Search took273ms
2017-01-04 11:27:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:33 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:27:33 AI_Player.update()		1001,	1010,	11,	1100,	1100,	1010,	1101
2017-01-04 11:27:33 AI_Player.update()		1110,	110,	1110,	1010,	111,	1011,	1011
2017-01-04 11:27:33 AI_Player.update()		101,	1010,	101,	101,	1010,	1001,	1010
2017-01-04 11:27:33 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 11:27:33 AI_Player.update()		101,	1011,	1010,	101,	1101,	11,	101
2017-01-04 11:27:33 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:27:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:33 AI_Player.update()	update
2017-01-04 11:27:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:33 AI_Player.update()	update
2017-01-04 11:27:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:34 AI_Player.update()	Search took525ms
2017-01-04 11:27:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:34 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 11:27:34 AI_Player.update()		1001,	1010,	11,	1010,	1100,	1010,	1101
2017-01-04 11:27:34 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 11:27:34 AI_Player.update()		101,	1010,	101,	110,	1010,	1001,	1010
2017-01-04 11:27:34 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:27:34 AI_Player.update()		101,	1011,	1010,	110,	1101,	11,	101
2017-01-04 11:27:34 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:27:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:34 AI_Player.update()	update
2017-01-04 11:27:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:34 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:27:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:34 AI_Player.update()	update
2017-01-04 11:27:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:35 AI_Player.update()	Search took945ms
2017-01-04 11:27:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:35 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 11:27:35 AI_Player.update()		1010,	11,	1010,	1100,	1010,	1101,	1001
2017-01-04 11:27:35 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 11:27:35 AI_Player.update()		101,	1010,	101,	110,	1010,	1001,	1010
2017-01-04 11:27:35 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:27:35 AI_Player.update()		101,	1011,	1010,	110,	1101,	11,	101
2017-01-04 11:27:35 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:27:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:35 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:27:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:35 AI_Player.update()	update
2017-01-04 11:27:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:27:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:35 AI_Player.update()	update
2017-01-04 11:27:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:36 AI_Player.update()	Search took1197ms
2017-01-04 11:27:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:36 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 11:27:36 AI_Player.update()		1010,	11,	1010,	1100,	1010,	1101,	1001
2017-01-04 11:27:36 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 11:27:36 AI_Player.update()		1010,	101,	110,	1010,	1001,	1010,	101
2017-01-04 11:27:36 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:27:36 AI_Player.update()		101,	1011,	1010,	110,	1101,	11,	101
2017-01-04 11:27:36 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:27:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:27:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:36 AI_Player.update()	update
2017-01-04 11:27:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:36 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:36 AI_Player.update()	update
2017-01-04 11:27:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:37 AI_Player.update()	Search took808ms
2017-01-04 11:27:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:37 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:27:37 AI_Player.update()		1010,	11,	1010,	1100,	1010,	1101,	1001
2017-01-04 11:27:37 AI_Player.update()		1110,	110,	1110,	1100,	111,	1011,	1011
2017-01-04 11:27:37 AI_Player.update()		1010,	101,	110,	101,	1001,	1010,	101
2017-01-04 11:27:37 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:27:37 AI_Player.update()		101,	1011,	1010,	101,	1101,	11,	101
2017-01-04 11:27:37 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:27:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:37 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:37 AI_Player.update()	update
2017-01-04 11:27:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:37 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:37 AI_Player.update()	update
2017-01-04 11:27:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:37 AI_Player.update()	Search took619ms
2017-01-04 11:27:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:37 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 11:27:37 AI_Player.update()		1010,	11,	1010,	1100,	1010,	1101,	1001
2017-01-04 11:27:37 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 11:27:37 AI_Player.update()		1010,	101,	110,	1010,	1001,	1010,	101
2017-01-04 11:27:37 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:27:37 AI_Player.update()		101,	1011,	1010,	110,	1101,	11,	101
2017-01-04 11:27:37 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:27:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:37 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:37 AI_Player.update()	update
2017-01-04 11:27:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:37 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:37 AI_Player.update()	update
2017-01-04 11:27:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:38 AI_Player.update()	Search took754ms
2017-01-04 11:27:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:38 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:27:38 AI_Player.update()		1010,	11,	1010,	1100,	1010,	1101,	1001
2017-01-04 11:27:38 AI_Player.update()		1110,	110,	1110,	1100,	111,	1011,	1011
2017-01-04 11:27:38 AI_Player.update()		1010,	101,	110,	101,	1001,	1010,	101
2017-01-04 11:27:38 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:27:38 AI_Player.update()		101,	1011,	1010,	101,	1101,	11,	101
2017-01-04 11:27:38 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:27:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:38 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:38 AI_Player.update()	update
2017-01-04 11:27:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:38 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:38 AI_Player.update()	update
2017-01-04 11:27:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:38 AI_Player.update()	Search took133ms
2017-01-04 11:27:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:38 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 11:27:38 AI_Player.update()		1010,	11,	1010,	1100,	1010,	1101,	1001
2017-01-04 11:27:38 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 11:27:38 AI_Player.update()		1010,	101,	110,	1010,	1001,	1010,	101
2017-01-04 11:27:38 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:27:38 AI_Player.update()		101,	1011,	1010,	110,	1101,	11,	101
2017-01-04 11:27:38 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:27:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:38 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:38 AI_Player.update()	update
2017-01-04 11:27:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:38 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:38 AI_Player.update()	update
2017-01-04 11:27:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:39 AI_Player.update()	Search took773ms
2017-01-04 11:27:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:39 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:27:39 AI_Player.update()		1010,	11,	1010,	1100,	1010,	1101,	1001
2017-01-04 11:27:39 AI_Player.update()		1110,	110,	1110,	1100,	111,	1011,	1011
2017-01-04 11:27:39 AI_Player.update()		1010,	101,	110,	101,	1001,	1010,	101
2017-01-04 11:27:39 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:27:39 AI_Player.update()		101,	1011,	1010,	101,	1101,	11,	101
2017-01-04 11:27:39 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 11:27:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:39 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:39 AI_Player.update()	update
2017-01-04 11:27:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:39 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:39 AI_Player.update()	update
2017-01-04 11:27:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:40 AI_Player.update()	Search took604ms
2017-01-04 11:27:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:40 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:27:40 AI_Player.update()		1010,	11,	1010,	1100,	1010,	1010,	1001
2017-01-04 11:27:40 AI_Player.update()		1110,	110,	1110,	1100,	111,	1101,	1011
2017-01-04 11:27:40 AI_Player.update()		1010,	101,	110,	101,	1001,	1011,	101
2017-01-04 11:27:40 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:27:40 AI_Player.update()		101,	1011,	1010,	101,	1101,	1010,	101
2017-01-04 11:27:40 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-04 11:27:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:40 AI_Player.update()	update
2017-01-04 11:27:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:27:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:40 AI_Player.update()	update
2017-01-04 11:27:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:40 AI_Player.update()	Search took219ms
2017-01-04 11:27:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:40 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 11:27:40 AI_Player.update()		1010,	11,	1010,	1001,	1010,	1010,	1001
2017-01-04 11:27:40 AI_Player.update()		1110,	110,	1110,	1100,	111,	1101,	1011
2017-01-04 11:27:40 AI_Player.update()		1010,	101,	110,	1100,	1001,	1011,	101
2017-01-04 11:27:40 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:27:40 AI_Player.update()		101,	1011,	1010,	1010,	1101,	1010,	101
2017-01-04 11:27:40 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-04 11:27:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:27:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:40 AI_Player.update()	update
2017-01-04 11:27:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:40 AI_Player.update()	update
2017-01-04 11:27:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:42 AI_Player.update()	Search took1852ms
2017-01-04 11:27:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:42 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 11:27:42 AI_Player.update()		1010,	11,	1010,	1001,	1010,	1010,	1001
2017-01-04 11:27:42 AI_Player.update()		1110,	110,	1110,	1100,	111,	1101,	1011
2017-01-04 11:27:42 AI_Player.update()		101,	1010,	101,	110,	1100,	1001,	1011
2017-01-04 11:27:42 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:27:42 AI_Player.update()		101,	1011,	1010,	1010,	1101,	1010,	101
2017-01-04 11:27:42 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-04 11:27:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:42 AI_Player.update()	update
2017-01-04 11:27:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:42 AI_Player.update()	update
2017-01-04 11:27:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:42 AI_Player.update()	Search took670ms
2017-01-04 11:27:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:42 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 11:27:42 AI_Player.update()		1010,	11,	1010,	110,	1010,	1010,	1001
2017-01-04 11:27:42 AI_Player.update()		1110,	110,	1110,	1001,	111,	1101,	1011
2017-01-04 11:27:42 AI_Player.update()		101,	1010,	101,	1100,	1100,	1001,	1011
2017-01-04 11:27:42 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 11:27:42 AI_Player.update()		101,	1011,	1010,	101,	1101,	1010,	101
2017-01-04 11:27:42 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 11:27:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:42 AI_Player.update()	update
2017-01-04 11:27:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:42 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:42 AI_Player.update()	update
2017-01-04 11:27:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:43 AI_Player.update()	Search took1107ms
2017-01-04 11:27:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:43 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 11:27:43 AI_Player.update()		1010,	110,	1010,	110,	1010,	1010,	1001
2017-01-04 11:27:43 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-04 11:27:43 AI_Player.update()		101,	110,	101,	1100,	1100,	1001,	1011
2017-01-04 11:27:43 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 11:27:43 AI_Player.update()		101,	101,	1010,	101,	1101,	1010,	101
2017-01-04 11:27:43 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-04 11:27:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:43 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:43 AI_Player.update()	update
2017-01-04 11:27:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:43 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:43 AI_Player.update()	update
2017-01-04 11:27:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:44 AI_Player.update()	Search took140ms
2017-01-04 11:27:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:44 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 11:27:44 AI_Player.update()		1010,	11,	1010,	110,	1010,	1010,	1001
2017-01-04 11:27:44 AI_Player.update()		1110,	110,	1110,	1001,	111,	1101,	1011
2017-01-04 11:27:44 AI_Player.update()		101,	1010,	101,	1100,	1100,	1001,	1011
2017-01-04 11:27:44 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 11:27:44 AI_Player.update()		101,	1011,	1010,	101,	1101,	1010,	101
2017-01-04 11:27:44 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 11:27:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:44 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:44 AI_Player.update()	update
2017-01-04 11:27:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:44 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:44 AI_Player.update()	update
2017-01-04 11:27:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:45 AI_Player.update()	Search took1041ms
2017-01-04 11:27:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:45 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 11:27:45 AI_Player.update()		1010,	110,	1010,	110,	1010,	1010,	1001
2017-01-04 11:27:45 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-04 11:27:45 AI_Player.update()		101,	110,	101,	1100,	1100,	1001,	1011
2017-01-04 11:27:45 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 11:27:45 AI_Player.update()		101,	101,	1010,	101,	1101,	1010,	101
2017-01-04 11:27:45 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-04 11:27:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:45 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:45 AI_Player.update()	update
2017-01-04 11:27:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:45 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:45 AI_Player.update()	update
2017-01-04 11:27:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:45 AI_Player.update()	Search took80ms
2017-01-04 11:27:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:45 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 11:27:45 AI_Player.update()		1010,	11,	1010,	110,	1010,	1010,	1001
2017-01-04 11:27:45 AI_Player.update()		1110,	110,	1110,	1001,	111,	1101,	1011
2017-01-04 11:27:45 AI_Player.update()		101,	1010,	101,	1100,	1100,	1001,	1011
2017-01-04 11:27:45 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 11:27:45 AI_Player.update()		101,	1011,	1010,	101,	1101,	1010,	101
2017-01-04 11:27:45 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 11:27:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:45 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:45 AI_Player.update()	update
2017-01-04 11:27:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:45 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:45 AI_Player.update()	update
2017-01-04 11:27:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:46 AI_Player.update()	Search took905ms
2017-01-04 11:27:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:46 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 11:27:46 AI_Player.update()		11,	1010,	110,	1010,	1010,	1001,	1010
2017-01-04 11:27:46 AI_Player.update()		1110,	110,	1110,	1001,	111,	1101,	1011
2017-01-04 11:27:46 AI_Player.update()		101,	1010,	101,	1100,	1100,	1001,	1011
2017-01-04 11:27:46 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 11:27:46 AI_Player.update()		101,	1011,	1010,	101,	1101,	1010,	101
2017-01-04 11:27:46 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 11:27:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:46 AI_Player.update()	update
2017-01-04 11:27:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:46 AI_Player.update()	update
2017-01-04 11:27:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:46 AI_Player.update()	Search took517ms
2017-01-04 11:27:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:46 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 11:27:46 AI_Player.update()		11,	110,	110,	1010,	1010,	1001,	1010
2017-01-04 11:27:46 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1101,	1011
2017-01-04 11:27:46 AI_Player.update()		101,	101,	101,	1100,	1100,	1001,	1011
2017-01-04 11:27:46 AI_Player.update()		1110,	1011,	1101,	110,	1011,	1010,	1011
2017-01-04 11:27:46 AI_Player.update()		101,	101,	1010,	101,	1101,	1010,	101
2017-01-04 11:27:46 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-04 11:27:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:27:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:46 AI_Player.update()	update
2017-01-04 11:27:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:27:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:46 AI_Player.update()	update
2017-01-04 11:27:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:48 AI_Player.update()	Search took1548ms
2017-01-04 11:27:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:48 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 11:27:48 AI_Player.update()		1010,	11,	110,	110,	1010,	1010,	1001
2017-01-04 11:27:48 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1101,	1011
2017-01-04 11:27:48 AI_Player.update()		101,	101,	101,	1100,	1100,	1001,	1011
2017-01-04 11:27:48 AI_Player.update()		1110,	1011,	1101,	110,	1011,	1010,	1011
2017-01-04 11:27:48 AI_Player.update()		101,	101,	1010,	101,	1101,	1010,	101
2017-01-04 11:27:48 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-04 11:27:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:27:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:48 AI_Player.update()	update
2017-01-04 11:27:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:48 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:27:48 AI_Player.update()	Player a has won!
2017-01-04 11:27:48 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:27:48 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:27:48 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:27:48 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:27:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:48 AI_Player.update()	update
2017-01-04 11:27:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:48 AI_Player.update()	Search took305ms
2017-01-04 11:27:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:48 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 11:27:48 AI_Player.update()		111,	101,	1010,	101,	111,	110,	110
2017-01-04 11:27:48 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-04 11:27:48 AI_Player.update()		1100,	101,	1100,	110,	1010,	101,	111
2017-01-04 11:27:48 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 11:27:48 AI_Player.update()		11,	110,	1010,	11,	1010,	1100,	1001
2017-01-04 11:27:48 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:27:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:48 AI_Player.update()	update
2017-01-04 11:27:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:48 AI_Player.update()	update
2017-01-04 11:27:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:48 AI_Player.update()	Search took27ms
2017-01-04 11:27:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:48 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-04 11:27:48 AI_Player.update()		111,	101,	1010,	101,	111,	1010,	110
2017-01-04 11:27:48 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-04 11:27:48 AI_Player.update()		1100,	101,	1100,	110,	1010,	101,	111
2017-01-04 11:27:48 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:27:48 AI_Player.update()		11,	110,	1010,	11,	1010,	1010,	1001
2017-01-04 11:27:48 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:27:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:48 AI_Player.update()	update
2017-01-04 11:27:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:48 AI_Player.update()	update
2017-01-04 11:27:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:48 AI_Player.update()	Search took117ms
2017-01-04 11:27:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:48 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-04 11:27:48 AI_Player.update()		111,	110,	1010,	101,	111,	1010,	110
2017-01-04 11:27:48 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 11:27:48 AI_Player.update()		1100,	101,	1100,	110,	1010,	101,	111
2017-01-04 11:27:48 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:27:48 AI_Player.update()		11,	1100,	1010,	11,	1010,	1010,	1001
2017-01-04 11:27:48 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:27:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:48 AI_Player.update()	update
2017-01-04 11:27:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:48 AI_Player.update()	update
2017-01-04 11:27:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:49 AI_Player.update()	Search took277ms
2017-01-04 11:27:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:49 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-04 11:27:49 AI_Player.update()		110,	111,	110,	1010,	101,	111,	1010
2017-01-04 11:27:49 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 11:27:49 AI_Player.update()		1100,	101,	1100,	110,	1010,	101,	111
2017-01-04 11:27:49 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:27:49 AI_Player.update()		11,	1100,	1010,	11,	1010,	1010,	1001
2017-01-04 11:27:49 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:27:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:49 AI_Player.update()	update
2017-01-04 11:27:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:49 AI_Player.update()	update
2017-01-04 11:27:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:49 AI_Player.update()	Search took517ms
2017-01-04 11:27:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:49 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-04 11:27:49 AI_Player.update()		111,	110,	1010,	101,	111,	1010,	110
2017-01-04 11:27:49 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 11:27:49 AI_Player.update()		1100,	101,	1100,	110,	1010,	101,	111
2017-01-04 11:27:49 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:27:49 AI_Player.update()		11,	1100,	1010,	11,	1010,	1010,	1001
2017-01-04 11:27:49 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:27:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:49 AI_Player.update()	update
2017-01-04 11:27:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:49 AI_Player.update()	update
2017-01-04 11:27:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:49 AI_Player.update()	Search took193ms
2017-01-04 11:27:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:49 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-04 11:27:49 AI_Player.update()		110,	111,	110,	1010,	101,	111,	1010
2017-01-04 11:27:49 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 11:27:49 AI_Player.update()		1100,	101,	1100,	110,	1010,	101,	111
2017-01-04 11:27:49 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:27:49 AI_Player.update()		11,	1100,	1010,	11,	1010,	1010,	1001
2017-01-04 11:27:49 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:27:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:49 AI_Player.update()	update
2017-01-04 11:27:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:49 AI_Player.update()	update
2017-01-04 11:27:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:50 AI_Player.update()	Search took703ms
2017-01-04 11:27:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:50 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-04 11:27:50 AI_Player.update()		110,	111,	110,	1010,	101,	111,	1010
2017-01-04 11:27:50 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 11:27:50 AI_Player.update()		1100,	101,	1100,	1100,	1010,	101,	111
2017-01-04 11:27:50 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-04 11:27:50 AI_Player.update()		11,	1100,	1010,	1010,	1010,	1010,	1001
2017-01-04 11:27:50 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 11:27:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:50 AI_Player.update()	update
2017-01-04 11:27:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:50 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:27:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:50 AI_Player.update()	update
2017-01-04 11:27:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:52 AI_Player.update()	Search took1519ms
2017-01-04 11:27:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:52 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-04 11:27:52 AI_Player.update()		1010,	110,	111,	110,	1010,	101,	111
2017-01-04 11:27:52 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 11:27:52 AI_Player.update()		1100,	101,	1100,	1100,	1010,	101,	111
2017-01-04 11:27:52 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-04 11:27:52 AI_Player.update()		11,	1100,	1010,	1010,	1010,	1010,	1001
2017-01-04 11:27:52 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 11:27:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:27:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:52 AI_Player.update()	update
2017-01-04 11:27:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:27:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:52 AI_Player.update()	update
2017-01-04 11:27:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:52 AI_Player.update()	Search took705ms
2017-01-04 11:27:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:52 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-04 11:27:52 AI_Player.update()		1010,	101,	111,	110,	1010,	101,	111
2017-01-04 11:27:52 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 11:27:52 AI_Player.update()		1100,	110,	1100,	1100,	1010,	101,	111
2017-01-04 11:27:52 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-04 11:27:52 AI_Player.update()		11,	1010,	1010,	1010,	1010,	1010,	1001
2017-01-04 11:27:52 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:27:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:27:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:52 AI_Player.update()	update
2017-01-04 11:27:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:52 AI_Player.update()	update
2017-01-04 11:27:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:52 AI_Player.update()	Search took85ms
2017-01-04 11:27:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:52 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-04 11:27:52 AI_Player.update()		1010,	101,	111,	110,	1010,	101,	111
2017-01-04 11:27:52 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-04 11:27:52 AI_Player.update()		1100,	1100,	1100,	1100,	1010,	101,	111
2017-01-04 11:27:52 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 11:27:52 AI_Player.update()		11,	101,	1010,	1010,	1010,	1010,	1001
2017-01-04 11:27:52 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 11:27:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:27:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:52 AI_Player.update()	update
2017-01-04 11:27:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:52 AI_Player.update()	update
2017-01-04 11:27:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:53 AI_Player.update()	Search took602ms
2017-01-04 11:27:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-04 11:27:53 AI_Player.update()		1010,	101,	111,	110,	1010,	101,	111
2017-01-04 11:27:53 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-04 11:27:53 AI_Player.update()		1100,	1100,	1100,	1100,	1010,	101,	111
2017-01-04 11:27:53 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 11:27:53 AI_Player.update()		1001,	11,	101,	1010,	1010,	1010,	1010
2017-01-04 11:27:53 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 11:27:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()	update
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()	update
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:53 AI_Player.update()	Search took99ms
2017-01-04 11:27:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 11:27:53 AI_Player.update()		1010,	101,	111,	110,	1010,	101,	111
2017-01-04 11:27:53 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:53 AI_Player.update()		1100,	1100,	1100,	11,	1010,	101,	111
2017-01-04 11:27:53 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:27:53 AI_Player.update()		1001,	11,	101,	101,	1010,	1010,	1010
2017-01-04 11:27:53 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:27:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()	update
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()	update
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:53 AI_Player.update()	Search took156ms
2017-01-04 11:27:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 11:27:53 AI_Player.update()		111,	1010,	101,	111,	110,	1010,	101
2017-01-04 11:27:53 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:53 AI_Player.update()		1100,	1100,	1100,	11,	1010,	101,	111
2017-01-04 11:27:53 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:27:53 AI_Player.update()		1001,	11,	101,	101,	1010,	1010,	1010
2017-01-04 11:27:53 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:27:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()	update
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()	update
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:53 AI_Player.update()	Search took39ms
2017-01-04 11:27:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 11:27:53 AI_Player.update()		1010,	101,	111,	110,	1010,	101,	111
2017-01-04 11:27:53 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:53 AI_Player.update()		1100,	1100,	1100,	11,	1010,	101,	111
2017-01-04 11:27:53 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:27:53 AI_Player.update()		1001,	11,	101,	101,	1010,	1010,	1010
2017-01-04 11:27:53 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:27:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()	update
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()	update
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:53 AI_Player.update()	Search took96ms
2017-01-04 11:27:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 11:27:53 AI_Player.update()		111,	1010,	101,	111,	110,	1010,	101
2017-01-04 11:27:53 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:53 AI_Player.update()		1100,	1100,	1100,	11,	1010,	101,	111
2017-01-04 11:27:53 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:27:53 AI_Player.update()		1001,	11,	101,	101,	1010,	1010,	1010
2017-01-04 11:27:53 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:27:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()	update
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()	update
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:53 AI_Player.update()	Search took31ms
2017-01-04 11:27:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 11:27:53 AI_Player.update()		1010,	101,	111,	110,	1010,	101,	111
2017-01-04 11:27:53 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-04 11:27:53 AI_Player.update()		1100,	1100,	1100,	11,	1010,	101,	111
2017-01-04 11:27:53 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:27:53 AI_Player.update()		1001,	11,	101,	101,	1010,	1010,	1010
2017-01-04 11:27:53 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:27:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()	update
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:53 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:53 AI_Player.update()	update
2017-01-04 11:27:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:54 AI_Player.update()	Search took142ms
2017-01-04 11:27:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:54 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-04 11:27:54 AI_Player.update()		1010,	101,	111,	110,	1010,	101,	111
2017-01-04 11:27:54 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-04 11:27:54 AI_Player.update()		1100,	1100,	1100,	1100,	1010,	101,	111
2017-01-04 11:27:54 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 11:27:54 AI_Player.update()		1001,	11,	101,	1010,	1010,	1010,	1010
2017-01-04 11:27:54 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 11:27:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:54 AI_Player.update()	update
2017-01-04 11:27:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:54 AI_Player.update()	update
2017-01-04 11:27:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:54 AI_Player.update()	Search took161ms
2017-01-04 11:27:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:54 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-04 11:27:54 AI_Player.update()		101,	111,	110,	1010,	101,	111,	1010
2017-01-04 11:27:54 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-04 11:27:54 AI_Player.update()		1100,	1100,	1100,	1100,	1010,	101,	111
2017-01-04 11:27:54 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 11:27:54 AI_Player.update()		1001,	11,	101,	1010,	1010,	1010,	1010
2017-01-04 11:27:54 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 11:27:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:27:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:54 AI_Player.update()	update
2017-01-04 11:27:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:27:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:54 AI_Player.update()	update
2017-01-04 11:27:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:54 AI_Player.update()	Search took584ms
2017-01-04 11:27:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:54 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-04 11:27:54 AI_Player.update()		101,	111,	110,	1010,	101,	111,	1010
2017-01-04 11:27:54 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-04 11:27:54 AI_Player.update()		1100,	1100,	1100,	1010,	101,	111,	1100
2017-01-04 11:27:54 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 11:27:54 AI_Player.update()		1001,	11,	101,	1010,	1010,	1010,	1010
2017-01-04 11:27:54 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 11:27:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:27:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:54 AI_Player.update()	update
2017-01-04 11:27:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:27:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:27:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:54 AI_Player.update()	update
2017-01-04 11:27:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:55 AI_Player.update()	Search took271ms
2017-01-04 11:27:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:55 AI_Player.update()		110,	111,	111,	1010,	111,	110,	11
2017-01-04 11:27:55 AI_Player.update()		101,	110,	110,	1010,	101,	111,	1010
2017-01-04 11:27:55 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-04 11:27:55 AI_Player.update()		1100,	1010,	1100,	1010,	101,	111,	1100
2017-01-04 11:27:55 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 11:27:55 AI_Player.update()		1001,	110,	101,	1010,	1010,	1010,	1010
2017-01-04 11:27:55 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:27:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:27:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:55 AI_Player.update()	update
2017-01-04 11:27:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:27:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:55 AI_Player.update()	update
2017-01-04 11:27:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:55 AI_Player.update()	Search took107ms
2017-01-04 11:27:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:55 AI_Player.update()		110,	111,	111,	1010,	111,	110,	11
2017-01-04 11:27:55 AI_Player.update()		110,	110,	1010,	101,	111,	1010,	101
2017-01-04 11:27:55 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-04 11:27:55 AI_Player.update()		1100,	1010,	1100,	1010,	101,	111,	1100
2017-01-04 11:27:55 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 11:27:55 AI_Player.update()		1001,	110,	101,	1010,	1010,	1010,	1010
2017-01-04 11:27:55 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:27:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:27:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:55 AI_Player.update()	update
2017-01-04 11:27:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:55 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:27:55 AI_Player.update()	Player a has won!
2017-01-04 11:27:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:27:55 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:27:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:27:55 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:27:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:55 AI_Player.update()	update
2017-01-04 11:27:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:57 AI_Player.update()	Search took2175ms
2017-01-04 11:27:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:57 AI_Player.update()		110,	101,	111,	1101,	111,	110,	11
2017-01-04 11:27:57 AI_Player.update()		1100,	1010,	1110,	1010,	1011,	11,	101
2017-01-04 11:27:57 AI_Player.update()		1110,	101,	1110,	1011,	111,	1101,	1011
2017-01-04 11:27:57 AI_Player.update()		1011,	1110,	1110,	1011,	1010,	1010,	11
2017-01-04 11:27:57 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 11:27:57 AI_Player.update()		101,	1101,	1010,	1110,	1010,	1011,	101
2017-01-04 11:27:57 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 11:27:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:27:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:57 AI_Player.update()	update
2017-01-04 11:27:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:27:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:27:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:27:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:27:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:27:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:27:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:27:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:27:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:27:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:27:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:27:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:27:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:57 AI_Player.update()	update
2017-01-04 11:27:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:27:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:27:58 AI_Player.update()	Search took919ms
2017-01-04 11:27:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:58 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-04 11:27:58 AI_Player.update()		1100,	1010,	1110,	1010,	1011,	110,	101
2017-01-04 11:27:58 AI_Player.update()		1110,	101,	1110,	1011,	111,	11,	1011
2017-01-04 11:27:58 AI_Player.update()		1011,	1110,	1110,	1011,	1010,	1101,	11
2017-01-04 11:27:58 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 11:27:58 AI_Player.update()		101,	1101,	1010,	1110,	1010,	1010,	101
2017-01-04 11:27:58 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:27:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:58 AI_Player.update()	update
2017-01-04 11:27:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:27:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:27:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:27:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:27:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:58 AI_Player.update()	update
2017-01-04 11:27:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:27:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:27:58 AI_Player.update()	Search took556ms
2017-01-04 11:27:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:27:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:58 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-04 11:27:58 AI_Player.update()		1100,	1010,	1110,	1010,	1011,	110,	101
2017-01-04 11:27:58 AI_Player.update()		1110,	101,	1110,	1011,	111,	11,	1011
2017-01-04 11:27:58 AI_Player.update()		1110,	1110,	1011,	1010,	1101,	11,	1011
2017-01-04 11:27:58 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 11:27:58 AI_Player.update()		101,	1101,	1010,	1110,	1010,	1010,	101
2017-01-04 11:27:58 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:27:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:27:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:27:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:58 AI_Player.update()	update
2017-01-04 11:27:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:27:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:27:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:27:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:27:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:27:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:27:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:27:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:27:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:27:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:27:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:27:58 AI_Player.update()	update
2017-01-04 11:27:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:01 AI_Player.update()	Search took2351ms
2017-01-04 11:28:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:01 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-04 11:28:01 AI_Player.update()		1100,	101,	1110,	1010,	1011,	110,	101
2017-01-04 11:28:01 AI_Player.update()		1110,	1110,	1110,	1011,	111,	11,	1011
2017-01-04 11:28:01 AI_Player.update()		1110,	1001,	1011,	1010,	1101,	11,	1011
2017-01-04 11:28:01 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1010,	1011
2017-01-04 11:28:01 AI_Player.update()		101,	101,	1010,	1110,	1010,	1010,	101
2017-01-04 11:28:01 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:28:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:28:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:01 AI_Player.update()	update
2017-01-04 11:28:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:01 AI_Player.update()	update
2017-01-04 11:28:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:01 AI_Player.update()	Search took593ms
2017-01-04 11:28:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:01 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-04 11:28:01 AI_Player.update()		1100,	101,	1110,	1010,	1011,	110,	101
2017-01-04 11:28:01 AI_Player.update()		1110,	1110,	1110,	1011,	111,	11,	1011
2017-01-04 11:28:01 AI_Player.update()		1011,	1110,	1001,	1011,	1010,	1101,	11
2017-01-04 11:28:01 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1010,	1011
2017-01-04 11:28:01 AI_Player.update()		101,	101,	1010,	1110,	1010,	1010,	101
2017-01-04 11:28:01 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:28:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:01 AI_Player.update()	update
2017-01-04 11:28:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:01 AI_Player.update()	update
2017-01-04 11:28:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:02 AI_Player.update()	Search took225ms
2017-01-04 11:28:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:02 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 11:28:02 AI_Player.update()		1100,	101,	1110,	1011,	1011,	110,	101
2017-01-04 11:28:02 AI_Player.update()		1110,	1110,	1110,	1011,	111,	11,	1011
2017-01-04 11:28:02 AI_Player.update()		1011,	1110,	1001,	11,	1010,	1101,	11
2017-01-04 11:28:02 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1010,	1011
2017-01-04 11:28:02 AI_Player.update()		101,	101,	1010,	1100,	1010,	1010,	101
2017-01-04 11:28:02 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1011,	1001
2017-01-04 11:28:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:02 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:02 AI_Player.update()	update
2017-01-04 11:28:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:02 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:02 AI_Player.update()	update
2017-01-04 11:28:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:03 AI_Player.update()	Search took978ms
2017-01-04 11:28:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:03 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 11:28:03 AI_Player.update()		101,	1100,	101,	1110,	1011,	1011,	110
2017-01-04 11:28:03 AI_Player.update()		1110,	1110,	1110,	1011,	111,	11,	1011
2017-01-04 11:28:03 AI_Player.update()		1011,	1110,	1001,	11,	1010,	1101,	11
2017-01-04 11:28:03 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1010,	1011
2017-01-04 11:28:03 AI_Player.update()		101,	101,	1010,	1100,	1010,	1010,	101
2017-01-04 11:28:03 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1011,	1001
2017-01-04 11:28:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:03 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:03 AI_Player.update()	update
2017-01-04 11:28:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:03 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:28:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:03 AI_Player.update()	update
2017-01-04 11:28:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:04 AI_Player.update()	Search took1337ms
2017-01-04 11:28:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:04 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 11:28:04 AI_Player.update()		101,	1110,	101,	1110,	1011,	1011,	110
2017-01-04 11:28:04 AI_Player.update()		1110,	1110,	1110,	1011,	111,	11,	1011
2017-01-04 11:28:04 AI_Player.update()		1011,	1101,	1001,	11,	1010,	1101,	11
2017-01-04 11:28:04 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-04 11:28:04 AI_Player.update()		101,	101,	1010,	1100,	1010,	1010,	101
2017-01-04 11:28:04 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1011,	1001
2017-01-04 11:28:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:28:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:04 AI_Player.update()	update
2017-01-04 11:28:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:28:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:04 AI_Player.update()	update
2017-01-04 11:28:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:04 AI_Player.update()	Search took400ms
2017-01-04 11:28:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:04 AI_Player.update()		110,	1100,	111,	1101,	111,	101,	11
2017-01-04 11:28:04 AI_Player.update()		101,	1110,	101,	1010,	1011,	1011,	110
2017-01-04 11:28:04 AI_Player.update()		1110,	1110,	1110,	1110,	111,	11,	1011
2017-01-04 11:28:04 AI_Player.update()		1011,	1101,	1001,	1011,	1010,	1101,	11
2017-01-04 11:28:04 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 11:28:04 AI_Player.update()		101,	101,	1010,	1110,	1010,	1010,	101
2017-01-04 11:28:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:28:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:28:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:04 AI_Player.update()	update
2017-01-04 11:28:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:04 AI_Player.update()	update
2017-01-04 11:28:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:05 AI_Player.update()	Search took589ms
2017-01-04 11:28:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:05 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-04 11:28:05 AI_Player.update()		101,	1110,	101,	1010,	1011,	1011,	110
2017-01-04 11:28:05 AI_Player.update()		1110,	1101,	1110,	1110,	111,	11,	1011
2017-01-04 11:28:05 AI_Player.update()		1011,	101,	1001,	1011,	1010,	1101,	11
2017-01-04 11:28:05 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 11:28:05 AI_Player.update()		101,	1010,	1010,	1110,	1010,	1010,	101
2017-01-04 11:28:05 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:28:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:05 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:05 AI_Player.update()	update
2017-01-04 11:28:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:05 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:05 AI_Player.update()	update
2017-01-04 11:28:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:07 AI_Player.update()	Search took2141ms
2017-01-04 11:28:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:07 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-04 11:28:07 AI_Player.update()		101,	1110,	101,	1110,	1011,	1011,	110
2017-01-04 11:28:07 AI_Player.update()		1110,	1101,	1110,	1011,	111,	11,	1011
2017-01-04 11:28:07 AI_Player.update()		1011,	101,	1001,	11,	1010,	1101,	11
2017-01-04 11:28:07 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-04 11:28:07 AI_Player.update()		101,	1010,	1010,	1100,	1010,	1010,	101
2017-01-04 11:28:07 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1011,	1001
2017-01-04 11:28:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:07 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:07 AI_Player.update()	update
2017-01-04 11:28:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:07 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:07 AI_Player.update()	update
2017-01-04 11:28:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:08 AI_Player.update()	Search took555ms
2017-01-04 11:28:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:08 AI_Player.update()		110,	1110,	111,	1110,	111,	101,	11
2017-01-04 11:28:08 AI_Player.update()		101,	1110,	101,	1011,	1011,	1011,	110
2017-01-04 11:28:08 AI_Player.update()		1110,	1101,	1110,	11,	111,	11,	1011
2017-01-04 11:28:08 AI_Player.update()		1011,	101,	1001,	1110,	1010,	1101,	11
2017-01-04 11:28:08 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:08 AI_Player.update()		101,	1010,	1010,	1101,	1010,	1010,	101
2017-01-04 11:28:08 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-04 11:28:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:08 AI_Player.update()	update
2017-01-04 11:28:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:08 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:28:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:08 AI_Player.update()	update
2017-01-04 11:28:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:09 AI_Player.update()	Search took1368ms
2017-01-04 11:28:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:09 AI_Player.update()		110,	1110,	111,	1110,	111,	101,	11
2017-01-04 11:28:09 AI_Player.update()		1110,	101,	1011,	1011,	1011,	110,	101
2017-01-04 11:28:09 AI_Player.update()		1110,	1101,	1110,	11,	111,	11,	1011
2017-01-04 11:28:09 AI_Player.update()		1011,	101,	1001,	1110,	1010,	1101,	11
2017-01-04 11:28:09 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:09 AI_Player.update()		101,	1010,	1010,	1101,	1010,	1010,	101
2017-01-04 11:28:09 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-04 11:28:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:28:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:09 AI_Player.update()	update
2017-01-04 11:28:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:09 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:28:09 AI_Player.update()	Player a has won!
2017-01-04 11:28:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:28:09 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:28:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:28:09 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:28:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:09 AI_Player.update()	update
2017-01-04 11:28:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:09 AI_Player.update()	Search took349ms
2017-01-04 11:28:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:09 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 11:28:09 AI_Player.update()		11,	11,	1001,	1010,	111,	1101,	1010
2017-01-04 11:28:09 AI_Player.update()		1110,	1100,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:09 AI_Player.update()		11,	110,	101,	1001,	1101,	1001,	1010
2017-01-04 11:28:09 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	110,	1011
2017-01-04 11:28:09 AI_Player.update()		11,	1101,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:09 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:09 AI_Player.update()	update
2017-01-04 11:28:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:09 AI_Player.update()	update
2017-01-04 11:28:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:10 AI_Player.update()	Search took952ms
2017-01-04 11:28:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:10 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-04 11:28:10 AI_Player.update()		11,	1100,	1001,	1010,	111,	1101,	1010
2017-01-04 11:28:10 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:10 AI_Player.update()		11,	1010,	101,	1001,	1101,	1001,	1010
2017-01-04 11:28:10 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	110,	1011
2017-01-04 11:28:10 AI_Player.update()		11,	1010,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:10 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:10 AI_Player.update()	update
2017-01-04 11:28:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:10 AI_Player.update()	update
2017-01-04 11:28:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:11 AI_Player.update()	Search took411ms
2017-01-04 11:28:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:11 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-04 11:28:11 AI_Player.update()		1010,	11,	1100,	1001,	1010,	111,	1101
2017-01-04 11:28:11 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:11 AI_Player.update()		11,	1010,	101,	1001,	1101,	1001,	1010
2017-01-04 11:28:11 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	110,	1011
2017-01-04 11:28:11 AI_Player.update()		11,	1010,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:11 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:11 AI_Player.update()	update
2017-01-04 11:28:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:11 AI_Player.update()	update
2017-01-04 11:28:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:11 AI_Player.update()	Search took378ms
2017-01-04 11:28:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:11 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-04 11:28:11 AI_Player.update()		1010,	110,	1100,	1001,	1010,	111,	1101
2017-01-04 11:28:11 AI_Player.update()		1110,	1010,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:11 AI_Player.update()		11,	1101,	101,	1001,	1101,	1001,	1010
2017-01-04 11:28:11 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	110,	1011
2017-01-04 11:28:11 AI_Player.update()		11,	101,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:11 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:11 AI_Player.update()	update
2017-01-04 11:28:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:11 AI_Player.update()	update
2017-01-04 11:28:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:12 AI_Player.update()	Search took577ms
2017-01-04 11:28:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:12 AI_Player.update()		110,	11,	111,	11,	111,	111,	11
2017-01-04 11:28:12 AI_Player.update()		1010,	110,	1100,	1001,	1010,	1010,	1101
2017-01-04 11:28:12 AI_Player.update()		1110,	1010,	1110,	111,	111,	1001,	1011
2017-01-04 11:28:12 AI_Player.update()		11,	1101,	101,	1001,	1101,	110,	1010
2017-01-04 11:28:12 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1100,	1011
2017-01-04 11:28:12 AI_Player.update()		11,	101,	101,	1001,	1010,	1010,	11
2017-01-04 11:28:12 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-04 11:28:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:12 AI_Player.update()	update
2017-01-04 11:28:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:12 AI_Player.update()	update
2017-01-04 11:28:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:12 AI_Player.update()	Search took164ms
2017-01-04 11:28:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:12 AI_Player.update()		110,	11,	111,	11,	111,	111,	11
2017-01-04 11:28:12 AI_Player.update()		1010,	110,	1100,	1001,	1010,	1010,	1101
2017-01-04 11:28:12 AI_Player.update()		1110,	1010,	1110,	111,	111,	1001,	1011
2017-01-04 11:28:12 AI_Player.update()		1101,	101,	1001,	1101,	110,	1010,	11
2017-01-04 11:28:12 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1100,	1011
2017-01-04 11:28:12 AI_Player.update()		11,	101,	101,	1001,	1010,	1010,	11
2017-01-04 11:28:12 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-04 11:28:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:12 AI_Player.update()	update
2017-01-04 11:28:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:12 AI_Player.update()	update
2017-01-04 11:28:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:12 AI_Player.update()	Search took495ms
2017-01-04 11:28:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:12 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-04 11:28:12 AI_Player.update()		1010,	110,	1100,	1001,	1010,	111,	1101
2017-01-04 11:28:12 AI_Player.update()		1110,	1010,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:12 AI_Player.update()		1101,	101,	1001,	1101,	110,	1001,	11
2017-01-04 11:28:12 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:28:12 AI_Player.update()		11,	101,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:12 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:12 AI_Player.update()	update
2017-01-04 11:28:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:12 AI_Player.update()	update
2017-01-04 11:28:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:13 AI_Player.update()	Search took629ms
2017-01-04 11:28:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:13 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-04 11:28:13 AI_Player.update()		1010,	110,	1100,	11,	1010,	111,	1101
2017-01-04 11:28:13 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-04 11:28:13 AI_Player.update()		1101,	101,	1001,	111,	110,	1001,	11
2017-01-04 11:28:13 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1010,	1011
2017-01-04 11:28:13 AI_Player.update()		11,	101,	101,	1011,	1010,	1100,	11
2017-01-04 11:28:13 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:13 AI_Player.update()	update
2017-01-04 11:28:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:13 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:28:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:13 AI_Player.update()	update
2017-01-04 11:28:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:14 AI_Player.update()	Search took688ms
2017-01-04 11:28:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:14 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-04 11:28:14 AI_Player.update()		1010,	110,	1100,	1001,	1010,	111,	1101
2017-01-04 11:28:14 AI_Player.update()		1110,	1010,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:14 AI_Player.update()		1101,	101,	1001,	1101,	110,	1001,	11
2017-01-04 11:28:14 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:28:14 AI_Player.update()		11,	101,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:14 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:28:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:14 AI_Player.update()	update
2017-01-04 11:28:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:28:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:14 AI_Player.update()	update
2017-01-04 11:28:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:14 AI_Player.update()	Search took306ms
2017-01-04 11:28:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:14 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-04 11:28:14 AI_Player.update()		1010,	1010,	1100,	1001,	1010,	111,	1101
2017-01-04 11:28:14 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:14 AI_Player.update()		1101,	1010,	1001,	1101,	110,	1001,	11
2017-01-04 11:28:14 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:28:14 AI_Player.update()		11,	11,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:14 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:28:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:14 AI_Player.update()	update
2017-01-04 11:28:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:28:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:14 AI_Player.update()	update
2017-01-04 11:28:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:15 AI_Player.update()	Search took421ms
2017-01-04 11:28:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:15 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-04 11:28:15 AI_Player.update()		1010,	1100,	1001,	1010,	111,	1101,	1010
2017-01-04 11:28:15 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:15 AI_Player.update()		1101,	1010,	1001,	1101,	110,	1001,	11
2017-01-04 11:28:15 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:28:15 AI_Player.update()		11,	11,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:15 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:28:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:15 AI_Player.update()	update
2017-01-04 11:28:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:15 AI_Player.update()	update
2017-01-04 11:28:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:15 AI_Player.update()	Search took198ms
2017-01-04 11:28:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:15 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-04 11:28:15 AI_Player.update()		1100,	1001,	1010,	111,	1101,	1010,	1010
2017-01-04 11:28:15 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:15 AI_Player.update()		1101,	1010,	1001,	1101,	110,	1001,	11
2017-01-04 11:28:15 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:28:15 AI_Player.update()		11,	11,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:15 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:15 AI_Player.update()	update
2017-01-04 11:28:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:15 AI_Player.update()	update
2017-01-04 11:28:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:15 AI_Player.update()	Search took646ms
2017-01-04 11:28:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:15 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-04 11:28:15 AI_Player.update()		1100,	1001,	1010,	111,	1101,	1010,	1010
2017-01-04 11:28:15 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:15 AI_Player.update()		11,	1101,	1010,	1001,	1101,	110,	1001
2017-01-04 11:28:15 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:28:15 AI_Player.update()		11,	11,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:15 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:15 AI_Player.update()	update
2017-01-04 11:28:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:15 AI_Player.update()	update
2017-01-04 11:28:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:16 AI_Player.update()	Search took674ms
2017-01-04 11:28:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:16 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 11:28:16 AI_Player.update()		1100,	1001,	1010,	11,	1101,	1010,	1010
2017-01-04 11:28:16 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:16 AI_Player.update()		11,	1101,	1010,	111,	1101,	110,	1001
2017-01-04 11:28:16 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-04 11:28:16 AI_Player.update()		11,	11,	101,	1011,	1010,	1100,	11
2017-01-04 11:28:16 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:16 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:16 AI_Player.update()	update
2017-01-04 11:28:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:16 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:28:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:16 AI_Player.update()	update
2017-01-04 11:28:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:17 AI_Player.update()	Search took632ms
2017-01-04 11:28:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:17 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 11:28:17 AI_Player.update()		1100,	1001,	1010,	11,	1101,	1010,	1010
2017-01-04 11:28:17 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:17 AI_Player.update()		1101,	1010,	111,	1101,	110,	1001,	11
2017-01-04 11:28:17 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-04 11:28:17 AI_Player.update()		11,	11,	101,	1011,	1010,	1100,	11
2017-01-04 11:28:17 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:28:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:17 AI_Player.update()	update
2017-01-04 11:28:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:28:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:17 AI_Player.update()	update
2017-01-04 11:28:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:17 AI_Player.update()	Search took496ms
2017-01-04 11:28:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:17 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-04 11:28:17 AI_Player.update()		1100,	1001,	1010,	111,	1101,	1010,	1010
2017-01-04 11:28:17 AI_Player.update()		1110,	101,	1110,	1101,	111,	1010,	1011
2017-01-04 11:28:17 AI_Player.update()		1101,	1010,	111,	1001,	110,	1001,	11
2017-01-04 11:28:17 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-04 11:28:17 AI_Player.update()		11,	11,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:17 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:28:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:17 AI_Player.update()	update
2017-01-04 11:28:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:28:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:17 AI_Player.update()	update
2017-01-04 11:28:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:17 AI_Player.update()	Search took102ms
2017-01-04 11:28:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:17 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 11:28:17 AI_Player.update()		1100,	1001,	1010,	11,	1101,	1010,	1010
2017-01-04 11:28:17 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:17 AI_Player.update()		1101,	1010,	111,	1101,	110,	1001,	11
2017-01-04 11:28:17 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-04 11:28:17 AI_Player.update()		11,	11,	101,	1011,	1010,	1100,	11
2017-01-04 11:28:17 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:28:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:17 AI_Player.update()	update
2017-01-04 11:28:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:17 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:28:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:17 AI_Player.update()	update
2017-01-04 11:28:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:18 AI_Player.update()	Search took661ms
2017-01-04 11:28:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:18 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 11:28:18 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1010,	1010
2017-01-04 11:28:18 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-04 11:28:18 AI_Player.update()		1101,	1010,	111,	111,	110,	1001,	11
2017-01-04 11:28:18 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-04 11:28:18 AI_Player.update()		11,	11,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:18 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:28:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:28:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:18 AI_Player.update()	update
2017-01-04 11:28:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:28:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:18 AI_Player.update()	update
2017-01-04 11:28:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:18 AI_Player.update()	Search took177ms
2017-01-04 11:28:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:18 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 11:28:18 AI_Player.update()		1100,	1001,	1010,	1001,	1101,	1010,	1010
2017-01-04 11:28:18 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-04 11:28:18 AI_Player.update()		11,	1101,	1010,	111,	111,	110,	1001
2017-01-04 11:28:18 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-04 11:28:18 AI_Player.update()		11,	11,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:18 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:28:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:28:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:18 AI_Player.update()	update
2017-01-04 11:28:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:28:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:18 AI_Player.update()	update
2017-01-04 11:28:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:18 AI_Player.update()	Search took153ms
2017-01-04 11:28:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:18 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 11:28:18 AI_Player.update()		1010,	1100,	1001,	1010,	1001,	1101,	1010
2017-01-04 11:28:18 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-04 11:28:18 AI_Player.update()		11,	1101,	1010,	111,	111,	110,	1001
2017-01-04 11:28:18 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-04 11:28:18 AI_Player.update()		11,	11,	101,	1001,	1010,	1100,	11
2017-01-04 11:28:18 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:28:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:28:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:18 AI_Player.update()	update
2017-01-04 11:28:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:28:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:18 AI_Player.update()	update
2017-01-04 11:28:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:19 AI_Player.update()	Search took683ms
2017-01-04 11:28:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:19 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 11:28:19 AI_Player.update()		1010,	1100,	1001,	11,	1001,	1101,	1010
2017-01-04 11:28:19 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:19 AI_Player.update()		11,	1101,	1010,	1101,	111,	110,	1001
2017-01-04 11:28:19 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-04 11:28:19 AI_Player.update()		11,	11,	101,	1011,	1010,	1100,	11
2017-01-04 11:28:19 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:19 GameBoard.setupTreasurePanel()	5 6
2017-01-04 11:28:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:19 AI_Player.update()	update
2017-01-04 11:28:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:28:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:19 AI_Player.update()	update
2017-01-04 11:28:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:20 AI_Player.update()	Search took531ms
2017-01-04 11:28:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:20 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 11:28:20 AI_Player.update()		1010,	101,	1001,	11,	1001,	1101,	1010
2017-01-04 11:28:20 AI_Player.update()		1110,	1101,	1110,	111,	111,	1010,	1011
2017-01-04 11:28:20 AI_Player.update()		11,	101,	1010,	1101,	111,	110,	1001
2017-01-04 11:28:20 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-04 11:28:20 AI_Player.update()		11,	11,	101,	1011,	1010,	1100,	11
2017-01-04 11:28:20 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:28:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:28:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:20 AI_Player.update()	update
2017-01-04 11:28:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 11:28:20 AI_Player.update()	Player b has won!
2017-01-04 11:28:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:28:20 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:28:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:28:20 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:28:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:20 AI_Player.update()	update
2017-01-04 11:28:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:20 AI_Player.update()	Search took83ms
2017-01-04 11:28:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:20 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 11:28:20 AI_Player.update()		101,	1110,	110,	1010,	101,	1101,	1011
2017-01-04 11:28:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-04 11:28:20 AI_Player.update()		1011,	1100,	1001,	1010,	110,	1011,	1110
2017-01-04 11:28:20 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:28:20 AI_Player.update()		101,	110,	101,	1010,	1101,	101,	1010
2017-01-04 11:28:20 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:28:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:20 AI_Player.update()	update
2017-01-04 11:28:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:20 AI_Player.update()	update
2017-01-04 11:28:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:20 AI_Player.update()	Search took573ms
2017-01-04 11:28:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:20 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 11:28:20 AI_Player.update()		101,	1110,	110,	1010,	101,	1101,	1011
2017-01-04 11:28:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-04 11:28:20 AI_Player.update()		1100,	1001,	1010,	110,	1011,	1110,	1011
2017-01-04 11:28:20 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:28:20 AI_Player.update()		101,	110,	101,	1010,	1101,	101,	1010
2017-01-04 11:28:20 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:28:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:20 AI_Player.update()	update
2017-01-04 11:28:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:20 AI_Player.update()	update
2017-01-04 11:28:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:20 AI_Player.update()	Search took83ms
2017-01-04 11:28:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:20 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 11:28:20 AI_Player.update()		1110,	110,	1010,	101,	1101,	1011,	101
2017-01-04 11:28:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-04 11:28:20 AI_Player.update()		1100,	1001,	1010,	110,	1011,	1110,	1011
2017-01-04 11:28:20 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:28:20 AI_Player.update()		101,	110,	101,	1010,	1101,	101,	1010
2017-01-04 11:28:20 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:28:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:20 AI_Player.update()	update
2017-01-04 11:28:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:20 AI_Player.update()	update
2017-01-04 11:28:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:21 AI_Player.update()	Search took365ms
2017-01-04 11:28:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:21 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 11:28:21 AI_Player.update()		1110,	110,	1010,	101,	1101,	1011,	101
2017-01-04 11:28:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-04 11:28:21 AI_Player.update()		1011,	1100,	1001,	1010,	110,	1011,	1110
2017-01-04 11:28:21 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:28:21 AI_Player.update()		101,	110,	101,	1010,	1101,	101,	1010
2017-01-04 11:28:21 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:28:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:21 AI_Player.update()	update
2017-01-04 11:28:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:21 AI_Player.update()	update
2017-01-04 11:28:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:21 AI_Player.update()	Search took211ms
2017-01-04 11:28:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:21 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 11:28:21 AI_Player.update()		110,	1010,	101,	1101,	1011,	101,	1110
2017-01-04 11:28:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-04 11:28:21 AI_Player.update()		1011,	1100,	1001,	1010,	110,	1011,	1110
2017-01-04 11:28:21 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:28:21 AI_Player.update()		101,	110,	101,	1010,	1101,	101,	1010
2017-01-04 11:28:21 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:28:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:21 AI_Player.update()	update
2017-01-04 11:28:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:21 AI_Player.update()	update
2017-01-04 11:28:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:21 AI_Player.update()	Search took196ms
2017-01-04 11:28:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:21 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 11:28:21 AI_Player.update()		110,	1010,	101,	1101,	1011,	101,	1110
2017-01-04 11:28:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-04 11:28:21 AI_Player.update()		1110,	1011,	1100,	1001,	1010,	110,	1011
2017-01-04 11:28:21 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:28:21 AI_Player.update()		101,	110,	101,	1010,	1101,	101,	1010
2017-01-04 11:28:21 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:28:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:21 AI_Player.update()	update
2017-01-04 11:28:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:21 AI_Player.update()	update
2017-01-04 11:28:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:21 AI_Player.update()	Search took263ms
2017-01-04 11:28:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:21 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-04 11:28:21 AI_Player.update()		110,	101,	101,	1101,	1011,	101,	1110
2017-01-04 11:28:21 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-04 11:28:21 AI_Player.update()		1110,	110,	1100,	1001,	1010,	110,	1011
2017-01-04 11:28:21 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:28:21 AI_Player.update()		101,	11,	101,	1010,	1101,	101,	1010
2017-01-04 11:28:21 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:28:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:21 AI_Player.update()	update
2017-01-04 11:28:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:21 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:21 AI_Player.update()	update
2017-01-04 11:28:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:22 AI_Player.update()	Search took490ms
2017-01-04 11:28:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:22 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-04 11:28:22 AI_Player.update()		110,	101,	101,	1101,	1011,	101,	1110
2017-01-04 11:28:22 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-04 11:28:22 AI_Player.update()		110,	1100,	1001,	1010,	110,	1011,	1110
2017-01-04 11:28:22 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:28:22 AI_Player.update()		101,	11,	101,	1010,	1101,	101,	1010
2017-01-04 11:28:22 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:28:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:22 AI_Player.update()	update
2017-01-04 11:28:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:22 AI_Player.update()	update
2017-01-04 11:28:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:22 AI_Player.update()	Search took462ms
2017-01-04 11:28:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:22 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 11:28:22 AI_Player.update()		110,	101,	101,	1101,	1011,	1001,	1110
2017-01-04 11:28:22 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1011,	1011
2017-01-04 11:28:22 AI_Player.update()		110,	1100,	1001,	1010,	110,	1100,	1110
2017-01-04 11:28:22 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-04 11:28:22 AI_Player.update()		101,	11,	101,	1010,	1101,	1001,	1010
2017-01-04 11:28:22 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:28:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:22 AI_Player.update()	update
2017-01-04 11:28:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:22 AI_Player.update()	update
2017-01-04 11:28:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:23 AI_Player.update()	Search took665ms
2017-01-04 11:28:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:23 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:28:23 AI_Player.update()		110,	1010,	101,	1101,	1011,	1001,	1110
2017-01-04 11:28:23 AI_Player.update()		1110,	101,	1110,	1001,	111,	1011,	1011
2017-01-04 11:28:23 AI_Player.update()		110,	1011,	1001,	1010,	110,	1100,	1110
2017-01-04 11:28:23 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 11:28:23 AI_Player.update()		101,	110,	101,	1010,	1101,	1001,	1010
2017-01-04 11:28:23 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:28:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:23 AI_Player.update()	update
2017-01-04 11:28:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:23 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:23 AI_Player.update()	update
2017-01-04 11:28:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:24 AI_Player.update()	Search took620ms
2017-01-04 11:28:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:24 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 11:28:24 AI_Player.update()		110,	1010,	101,	1101,	1011,	1011,	1110
2017-01-04 11:28:24 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-04 11:28:24 AI_Player.update()		110,	1011,	1001,	1010,	110,	101,	1110
2017-01-04 11:28:24 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-04 11:28:24 AI_Player.update()		101,	110,	101,	1010,	1101,	1001,	1010
2017-01-04 11:28:24 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 11:28:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:24 AI_Player.update()	update
2017-01-04 11:28:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:28:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:24 AI_Player.update()	update
2017-01-04 11:28:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:24 AI_Player.update()	Search took100ms
2017-01-04 11:28:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:24 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 11:28:24 AI_Player.update()		110,	1010,	101,	1101,	1011,	1011,	1110
2017-01-04 11:28:24 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-04 11:28:24 AI_Player.update()		1011,	1001,	1010,	110,	101,	1110,	110
2017-01-04 11:28:24 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-04 11:28:24 AI_Player.update()		101,	110,	101,	1010,	1101,	1001,	1010
2017-01-04 11:28:24 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 11:28:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:28:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:24 AI_Player.update()	update
2017-01-04 11:28:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:28:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:24 AI_Player.update()	update
2017-01-04 11:28:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:24 AI_Player.update()	Search took295ms
2017-01-04 11:28:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:24 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 11:28:24 AI_Player.update()		110,	1010,	101,	1101,	1011,	1011,	1110
2017-01-04 11:28:24 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-04 11:28:24 AI_Player.update()		1011,	1001,	1010,	110,	101,	1110,	110
2017-01-04 11:28:24 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-04 11:28:24 AI_Player.update()		1010,	101,	110,	101,	1010,	1101,	1001
2017-01-04 11:28:24 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 11:28:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:28:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:24 AI_Player.update()	update
2017-01-04 11:28:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:24 AI_Player.update()	update
2017-01-04 11:28:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:24 AI_Player.update()	Search took283ms
2017-01-04 11:28:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:24 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-04 11:28:24 AI_Player.update()		110,	101,	101,	1101,	1011,	1011,	1110
2017-01-04 11:28:24 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-04 11:28:24 AI_Player.update()		1011,	1100,	1010,	110,	101,	1110,	110
2017-01-04 11:28:24 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1001,	1011
2017-01-04 11:28:24 AI_Player.update()		1010,	11,	110,	101,	1010,	1101,	1001
2017-01-04 11:28:24 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-04 11:28:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:24 AI_Player.update()	update
2017-01-04 11:28:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:24 AI_Player.update()	update
2017-01-04 11:28:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:25 AI_Player.update()	Search took427ms
2017-01-04 11:28:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:25 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-04 11:28:25 AI_Player.update()		101,	101,	1101,	1011,	1011,	1110,	110
2017-01-04 11:28:25 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-04 11:28:25 AI_Player.update()		1011,	1100,	1010,	110,	101,	1110,	110
2017-01-04 11:28:25 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1001,	1011
2017-01-04 11:28:25 AI_Player.update()		1010,	11,	110,	101,	1010,	1101,	1001
2017-01-04 11:28:25 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-04 11:28:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:25 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:25 AI_Player.update()	update
2017-01-04 11:28:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:25 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:25 AI_Player.update()	update
2017-01-04 11:28:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:25 AI_Player.update()	Search took671ms
2017-01-04 11:28:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:25 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-04 11:28:25 AI_Player.update()		110,	101,	101,	1101,	1011,	1011,	1110
2017-01-04 11:28:25 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-04 11:28:25 AI_Player.update()		1011,	1100,	1010,	110,	101,	1110,	110
2017-01-04 11:28:25 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1001,	1011
2017-01-04 11:28:25 AI_Player.update()		1010,	11,	110,	101,	1010,	1101,	1001
2017-01-04 11:28:25 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-04 11:28:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:25 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:25 AI_Player.update()	update
2017-01-04 11:28:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:25 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:25 AI_Player.update()	update
2017-01-04 11:28:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:26 AI_Player.update()	Search took517ms
2017-01-04 11:28:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:26 AI_Player.update()		110,	1010,	111,	110,	111,	1011,	11
2017-01-04 11:28:26 AI_Player.update()		110,	101,	101,	1101,	1011,	1100,	1110
2017-01-04 11:28:26 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1110,	1011
2017-01-04 11:28:26 AI_Player.update()		1011,	1100,	1010,	110,	101,	1001,	110
2017-01-04 11:28:26 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-04 11:28:26 AI_Player.update()		1010,	11,	110,	101,	1010,	101,	1001
2017-01-04 11:28:26 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:28:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:26 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:26 AI_Player.update()	update
2017-01-04 11:28:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:26 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:26 AI_Player.update()	update
2017-01-04 11:28:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:27 AI_Player.update()	Search took919ms
2017-01-04 11:28:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:27 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-04 11:28:27 AI_Player.update()		110,	101,	101,	110,	1011,	1100,	1110
2017-01-04 11:28:27 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1110,	1011
2017-01-04 11:28:27 AI_Player.update()		1011,	1100,	1010,	1001,	101,	1001,	110
2017-01-04 11:28:27 AI_Player.update()		1110,	101,	1101,	110,	1011,	1101,	1011
2017-01-04 11:28:27 AI_Player.update()		1010,	11,	110,	1100,	1010,	101,	1001
2017-01-04 11:28:27 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 11:28:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:27 AI_Player.update()	update
2017-01-04 11:28:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:28:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:27 AI_Player.update()	update
2017-01-04 11:28:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:27 AI_Player.update()	Search took188ms
2017-01-04 11:28:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:27 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-04 11:28:27 AI_Player.update()		110,	101,	101,	110,	1011,	1100,	1110
2017-01-04 11:28:27 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1110,	1011
2017-01-04 11:28:27 AI_Player.update()		1100,	1010,	1001,	101,	1001,	110,	1011
2017-01-04 11:28:27 AI_Player.update()		1110,	101,	1101,	110,	1011,	1101,	1011
2017-01-04 11:28:27 AI_Player.update()		1010,	11,	110,	1100,	1010,	101,	1001
2017-01-04 11:28:27 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 11:28:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:28:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:27 AI_Player.update()	update
2017-01-04 11:28:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:28:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:27 AI_Player.update()	update
2017-01-04 11:28:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:28 AI_Player.update()	Search took473ms
2017-01-04 11:28:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:28 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 11:28:28 AI_Player.update()		110,	1001,	101,	110,	1011,	1100,	1110
2017-01-04 11:28:28 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1110,	1011
2017-01-04 11:28:28 AI_Player.update()		1100,	101,	1001,	101,	1001,	110,	1011
2017-01-04 11:28:28 AI_Player.update()		1110,	11,	1101,	110,	1011,	1101,	1011
2017-01-04 11:28:28 AI_Player.update()		1010,	1001,	110,	1100,	1010,	101,	1001
2017-01-04 11:28:28 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-04 11:28:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:28:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:28 AI_Player.update()	update
2017-01-04 11:28:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:28:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:28 AI_Player.update()	update
2017-01-04 11:28:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:28 AI_Player.update()	Search took628ms
2017-01-04 11:28:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:28 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 11:28:28 AI_Player.update()		1110,	110,	1001,	101,	110,	1011,	1100
2017-01-04 11:28:28 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1110,	1011
2017-01-04 11:28:28 AI_Player.update()		1100,	101,	1001,	101,	1001,	110,	1011
2017-01-04 11:28:28 AI_Player.update()		1110,	11,	1101,	110,	1011,	1101,	1011
2017-01-04 11:28:28 AI_Player.update()		1010,	1001,	110,	1100,	1010,	101,	1001
2017-01-04 11:28:28 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-04 11:28:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:28:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:28 AI_Player.update()	update
2017-01-04 11:28:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:28 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:28:28 AI_Player.update()	Player a has won!
2017-01-04 11:28:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:28:28 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:28:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:28:28 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:28:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:28 AI_Player.update()	update
2017-01-04 11:28:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:29 AI_Player.update()	Search took276ms
2017-01-04 11:28:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:29 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 11:28:29 AI_Player.update()		110,	1101,	1001,	1001,	1011,	1010,	1010
2017-01-04 11:28:29 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 11:28:29 AI_Player.update()		1001,	111,	1101,	1100,	1100,	1001,	1010
2017-01-04 11:28:29 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:28:29 AI_Player.update()		101,	1001,	1010,	1100,	1011,	110,	101
2017-01-04 11:28:29 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:29 AI_Player.update()	update
2017-01-04 11:28:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:29 AI_Player.update()	update
2017-01-04 11:28:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:29 AI_Player.update()	Search took139ms
2017-01-04 11:28:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:29 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 11:28:29 AI_Player.update()		110,	1101,	1001,	1001,	1011,	1010,	1010
2017-01-04 11:28:29 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 11:28:29 AI_Player.update()		111,	1101,	1100,	1100,	1001,	1010,	1001
2017-01-04 11:28:29 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:28:29 AI_Player.update()		101,	1001,	1010,	1100,	1011,	110,	101
2017-01-04 11:28:29 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:29 AI_Player.update()	update
2017-01-04 11:28:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:29 AI_Player.update()	update
2017-01-04 11:28:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:29 AI_Player.update()	Search took404ms
2017-01-04 11:28:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:29 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 11:28:29 AI_Player.update()		110,	1101,	1001,	1001,	1011,	1010,	1010
2017-01-04 11:28:29 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:29 AI_Player.update()		111,	1101,	1100,	1100,	1001,	11,	1001
2017-01-04 11:28:29 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:28:29 AI_Player.update()		101,	1001,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:29 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 11:28:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:29 AI_Player.update()	update
2017-01-04 11:28:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:29 AI_Player.update()	update
2017-01-04 11:28:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:29 AI_Player.update()	Search took80ms
2017-01-04 11:28:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:29 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-04 11:28:29 AI_Player.update()		110,	1101,	1001,	1001,	1011,	1010,	1010
2017-01-04 11:28:29 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:29 AI_Player.update()		111,	1101,	1100,	1100,	1001,	1010,	1001
2017-01-04 11:28:29 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-04 11:28:29 AI_Player.update()		101,	1001,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:29 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:29 AI_Player.update()	update
2017-01-04 11:28:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:29 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:29 AI_Player.update()	update
2017-01-04 11:28:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:30 AI_Player.update()	Search took456ms
2017-01-04 11:28:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:30 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 11:28:30 AI_Player.update()		110,	1101,	1001,	1001,	1011,	1010,	1010
2017-01-04 11:28:30 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:30 AI_Player.update()		111,	1101,	1100,	1100,	1001,	11,	1001
2017-01-04 11:28:30 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:28:30 AI_Player.update()		101,	1001,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:30 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 11:28:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:30 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:30 AI_Player.update()	update
2017-01-04 11:28:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:30 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:30 AI_Player.update()	update
2017-01-04 11:28:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:30 AI_Player.update()	Search took115ms
2017-01-04 11:28:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:30 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-04 11:28:30 AI_Player.update()		110,	1101,	1001,	1001,	1011,	1010,	1010
2017-01-04 11:28:30 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:30 AI_Player.update()		111,	1101,	1100,	1100,	1001,	1010,	1001
2017-01-04 11:28:30 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-04 11:28:30 AI_Player.update()		101,	1001,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:30 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:30 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:30 AI_Player.update()	update
2017-01-04 11:28:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:30 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:30 AI_Player.update()	update
2017-01-04 11:28:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:30 AI_Player.update()	Search took401ms
2017-01-04 11:28:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:30 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-04 11:28:30 AI_Player.update()		110,	1101,	1001,	1001,	1011,	1010,	1010
2017-01-04 11:28:30 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:30 AI_Player.update()		1101,	1100,	1100,	1001,	1010,	1001,	111
2017-01-04 11:28:30 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-04 11:28:30 AI_Player.update()		101,	1001,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:30 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:30 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:30 AI_Player.update()	update
2017-01-04 11:28:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:30 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:30 AI_Player.update()	update
2017-01-04 11:28:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:30 AI_Player.update()	Search took189ms
2017-01-04 11:28:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:30 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-04 11:28:30 AI_Player.update()		110,	1101,	1001,	1001,	1011,	1010,	1010
2017-01-04 11:28:30 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:30 AI_Player.update()		1100,	1100,	1001,	1010,	1001,	111,	1101
2017-01-04 11:28:30 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-04 11:28:30 AI_Player.update()		101,	1001,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:30 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:30 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:30 AI_Player.update()	update
2017-01-04 11:28:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:30 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:30 AI_Player.update()	update
2017-01-04 11:28:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:31 AI_Player.update()	Search took663ms
2017-01-04 11:28:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:31 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 11:28:31 AI_Player.update()		110,	1101,	1001,	1001,	1011,	1010,	1010
2017-01-04 11:28:31 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-04 11:28:31 AI_Player.update()		1100,	1100,	1001,	1010,	1001,	11,	1101
2017-01-04 11:28:31 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:28:31 AI_Player.update()		101,	1001,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:31 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 11:28:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:31 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:31 AI_Player.update()	update
2017-01-04 11:28:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:31 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:31 AI_Player.update()	update
2017-01-04 11:28:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:32 AI_Player.update()	Search took636ms
2017-01-04 11:28:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:32 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-04 11:28:32 AI_Player.update()		110,	1101,	1001,	1001,	1011,	1010,	1010
2017-01-04 11:28:32 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:32 AI_Player.update()		1100,	1100,	1001,	1010,	1001,	111,	1101
2017-01-04 11:28:32 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-04 11:28:32 AI_Player.update()		101,	1001,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:32 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:32 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:32 AI_Player.update()	update
2017-01-04 11:28:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:32 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:32 AI_Player.update()	update
2017-01-04 11:28:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:32 AI_Player.update()	Search took522ms
2017-01-04 11:28:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:32 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-04 11:28:32 AI_Player.update()		110,	1101,	1001,	1001,	1011,	1010,	1010
2017-01-04 11:28:32 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:32 AI_Player.update()		1100,	1001,	1010,	1001,	111,	1101,	1100
2017-01-04 11:28:32 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-04 11:28:32 AI_Player.update()		101,	1001,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:32 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:32 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:32 AI_Player.update()	update
2017-01-04 11:28:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:32 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:32 AI_Player.update()	update
2017-01-04 11:28:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:33 AI_Player.update()	Search took676ms
2017-01-04 11:28:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:33 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 11:28:33 AI_Player.update()		110,	1101,	1001,	1001,	1011,	1010,	1010
2017-01-04 11:28:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1101,	1011
2017-01-04 11:28:33 AI_Player.update()		1100,	1001,	1010,	1001,	111,	11,	1100
2017-01-04 11:28:33 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:28:33 AI_Player.update()		101,	1001,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:33 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 11:28:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:33 AI_Player.update()	update
2017-01-04 11:28:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:33 AI_Player.update()	update
2017-01-04 11:28:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:33 AI_Player.update()	Search took558ms
2017-01-04 11:28:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:33 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 11:28:33 AI_Player.update()		110,	1101,	1001,	1001,	1011,	1101,	1010
2017-01-04 11:28:33 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 11:28:33 AI_Player.update()		1100,	1001,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:33 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:28:33 AI_Player.update()		101,	1001,	1010,	1100,	1011,	110,	101
2017-01-04 11:28:33 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:33 AI_Player.update()	update
2017-01-04 11:28:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:33 AI_Player.update()	update
2017-01-04 11:28:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:34 AI_Player.update()	Search took279ms
2017-01-04 11:28:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:34 AI_Player.update()		110,	1101,	111,	1011,	111,	1010,	11
2017-01-04 11:28:34 AI_Player.update()		110,	11,	1001,	1001,	1011,	1101,	1010
2017-01-04 11:28:34 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-04 11:28:34 AI_Player.update()		1100,	1110,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:34 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:28:34 AI_Player.update()		101,	1011,	1010,	1100,	1011,	110,	101
2017-01-04 11:28:34 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:34 AI_Player.update()	update
2017-01-04 11:28:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:34 AI_Player.update()	update
2017-01-04 11:28:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:34 AI_Player.update()	Search took410ms
2017-01-04 11:28:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:34 AI_Player.update()		110,	1101,	111,	1011,	111,	1101,	11
2017-01-04 11:28:34 AI_Player.update()		110,	11,	1001,	1001,	1011,	11,	1010
2017-01-04 11:28:34 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:34 AI_Player.update()		1100,	1110,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:34 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	110,	1011
2017-01-04 11:28:34 AI_Player.update()		101,	1011,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:34 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:34 AI_Player.update()	update
2017-01-04 11:28:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:34 AI_Player.update()	update
2017-01-04 11:28:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:34 AI_Player.update()	Search took70ms
2017-01-04 11:28:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:34 AI_Player.update()		110,	11,	111,	1011,	111,	1101,	11
2017-01-04 11:28:34 AI_Player.update()		110,	1001,	1001,	1001,	1011,	11,	1010
2017-01-04 11:28:34 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:34 AI_Player.update()		1100,	1001,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:34 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-04 11:28:34 AI_Player.update()		101,	101,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:34 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:34 AI_Player.update()	update
2017-01-04 11:28:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:34 AI_Player.update()	update
2017-01-04 11:28:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:35 AI_Player.update()	Search took444ms
2017-01-04 11:28:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:35 AI_Player.update()		110,	11,	111,	1011,	111,	1010,	11
2017-01-04 11:28:35 AI_Player.update()		110,	1001,	1001,	1001,	1011,	1101,	1010
2017-01-04 11:28:35 AI_Player.update()		1110,	1110,	1110,	101,	111,	11,	1011
2017-01-04 11:28:35 AI_Player.update()		1100,	1001,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:35 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:28:35 AI_Player.update()		101,	101,	1010,	1100,	1011,	110,	101
2017-01-04 11:28:35 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:35 AI_Player.update()	update
2017-01-04 11:28:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:35 AI_Player.update()	update
2017-01-04 11:28:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:35 AI_Player.update()	Search took234ms
2017-01-04 11:28:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:35 AI_Player.update()		110,	1001,	111,	1011,	111,	1010,	11
2017-01-04 11:28:35 AI_Player.update()		110,	1110,	1001,	1001,	1011,	1101,	1010
2017-01-04 11:28:35 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-04 11:28:35 AI_Player.update()		1100,	1011,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:35 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:28:35 AI_Player.update()		101,	1101,	1010,	1100,	1011,	110,	101
2017-01-04 11:28:35 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:35 AI_Player.update()	update
2017-01-04 11:28:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:35 AI_Player.update()	update
2017-01-04 11:28:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:35 AI_Player.update()	Search took431ms
2017-01-04 11:28:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:35 AI_Player.update()		110,	1001,	111,	1011,	111,	1101,	11
2017-01-04 11:28:35 AI_Player.update()		110,	1110,	1001,	1001,	1011,	11,	1010
2017-01-04 11:28:35 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:35 AI_Player.update()		1100,	1011,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:35 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:28:35 AI_Player.update()		101,	1101,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:35 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:35 AI_Player.update()	update
2017-01-04 11:28:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:35 AI_Player.update()	update
2017-01-04 11:28:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:35 AI_Player.update()	Search took80ms
2017-01-04 11:28:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:35 AI_Player.update()		110,	1110,	111,	1011,	111,	1101,	11
2017-01-04 11:28:35 AI_Player.update()		110,	1001,	1001,	1001,	1011,	11,	1010
2017-01-04 11:28:35 AI_Player.update()		1110,	1011,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:35 AI_Player.update()		1100,	101,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:35 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:28:35 AI_Player.update()		101,	11,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:35 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:35 AI_Player.update()	update
2017-01-04 11:28:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:35 AI_Player.update()	update
2017-01-04 11:28:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:36 AI_Player.update()	Search took447ms
2017-01-04 11:28:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:36 AI_Player.update()		110,	1110,	111,	1011,	111,	11,	11
2017-01-04 11:28:36 AI_Player.update()		110,	1001,	1001,	1001,	1011,	1010,	1010
2017-01-04 11:28:36 AI_Player.update()		1110,	1011,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:36 AI_Player.update()		1100,	101,	1010,	1001,	111,	110,	1100
2017-01-04 11:28:36 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:28:36 AI_Player.update()		101,	11,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:36 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-04 11:28:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:36 AI_Player.update()	update
2017-01-04 11:28:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:36 AI_Player.update()	update
2017-01-04 11:28:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:36 AI_Player.update()	Search took164ms
2017-01-04 11:28:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:36 AI_Player.update()		110,	1110,	111,	1011,	111,	1101,	11
2017-01-04 11:28:36 AI_Player.update()		110,	1001,	1001,	1001,	1011,	11,	1010
2017-01-04 11:28:36 AI_Player.update()		1110,	1011,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:36 AI_Player.update()		1100,	101,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:36 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:28:36 AI_Player.update()		101,	11,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:36 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:36 AI_Player.update()	update
2017-01-04 11:28:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:36 AI_Player.update()	update
2017-01-04 11:28:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:36 AI_Player.update()	Search took383ms
2017-01-04 11:28:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:36 AI_Player.update()		110,	1110,	111,	1011,	111,	1010,	11
2017-01-04 11:28:36 AI_Player.update()		110,	1001,	1001,	1001,	1011,	1101,	1010
2017-01-04 11:28:36 AI_Player.update()		1110,	1011,	1110,	101,	111,	11,	1011
2017-01-04 11:28:36 AI_Player.update()		1100,	101,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:36 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:28:36 AI_Player.update()		101,	11,	1010,	1100,	1011,	110,	101
2017-01-04 11:28:36 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:36 AI_Player.update()	update
2017-01-04 11:28:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:36 AI_Player.update()	update
2017-01-04 11:28:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:37 AI_Player.update()	Search took312ms
2017-01-04 11:28:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:37 AI_Player.update()		110,	1001,	111,	1011,	111,	1010,	11
2017-01-04 11:28:37 AI_Player.update()		110,	1011,	1001,	1001,	1011,	1101,	1010
2017-01-04 11:28:37 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-04 11:28:37 AI_Player.update()		1100,	1101,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:37 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:28:37 AI_Player.update()		101,	1001,	1010,	1100,	1011,	110,	101
2017-01-04 11:28:37 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:37 AI_Player.update()	update
2017-01-04 11:28:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:37 AI_Player.update()	update
2017-01-04 11:28:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:37 AI_Player.update()	Search took467ms
2017-01-04 11:28:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:37 AI_Player.update()		110,	1001,	111,	1011,	111,	1101,	11
2017-01-04 11:28:37 AI_Player.update()		110,	1011,	1001,	1001,	1011,	11,	1010
2017-01-04 11:28:37 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:37 AI_Player.update()		1100,	1101,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:37 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-04 11:28:37 AI_Player.update()		101,	1001,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:37 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:37 AI_Player.update()	update
2017-01-04 11:28:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:37 AI_Player.update()	update
2017-01-04 11:28:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:37 AI_Player.update()	Search took78ms
2017-01-04 11:28:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:37 AI_Player.update()		110,	1011,	111,	1011,	111,	1101,	11
2017-01-04 11:28:37 AI_Player.update()		110,	101,	1001,	1001,	1011,	11,	1010
2017-01-04 11:28:37 AI_Player.update()		1110,	1101,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:37 AI_Player.update()		1100,	11,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:37 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	110,	1011
2017-01-04 11:28:37 AI_Player.update()		101,	1110,	1010,	1100,	1011,	1010,	101
2017-01-04 11:28:37 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:37 AI_Player.update()	update
2017-01-04 11:28:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:37 AI_Player.update()	update
2017-01-04 11:28:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:38 AI_Player.update()	Search took219ms
2017-01-04 11:28:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:38 AI_Player.update()		110,	1011,	111,	1011,	111,	1101,	11
2017-01-04 11:28:38 AI_Player.update()		110,	101,	1001,	1001,	1011,	11,	1010
2017-01-04 11:28:38 AI_Player.update()		1110,	1101,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:38 AI_Player.update()		1100,	11,	1010,	1001,	111,	1010,	1100
2017-01-04 11:28:38 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	110,	1011
2017-01-04 11:28:38 AI_Player.update()		1110,	1010,	1100,	1011,	1010,	101,	101
2017-01-04 11:28:38 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:38 AI_Player.update()	update
2017-01-04 11:28:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:38 AI_Player.update()	update
2017-01-04 11:28:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:38 AI_Player.update()	Search took152ms
2017-01-04 11:28:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:38 AI_Player.update()		110,	1011,	111,	1011,	111,	1101,	11
2017-01-04 11:28:38 AI_Player.update()		110,	101,	1001,	1001,	1011,	11,	1010
2017-01-04 11:28:38 AI_Player.update()		1110,	1101,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:38 AI_Player.update()		1100,	1100,	11,	1010,	1001,	111,	1010
2017-01-04 11:28:38 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	110,	1011
2017-01-04 11:28:38 AI_Player.update()		1110,	1010,	1100,	1011,	1010,	101,	101
2017-01-04 11:28:38 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 11:28:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:38 AI_Player.update()	update
2017-01-04 11:28:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:28:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:38 AI_Player.update()	update
2017-01-04 11:28:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:38 AI_Player.update()	Search took427ms
2017-01-04 11:28:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:38 AI_Player.update()		110,	1011,	111,	101,	111,	1101,	11
2017-01-04 11:28:38 AI_Player.update()		110,	101,	1001,	1011,	1011,	11,	1010
2017-01-04 11:28:38 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1010,	1011
2017-01-04 11:28:38 AI_Player.update()		1100,	1100,	11,	101,	1001,	111,	1010
2017-01-04 11:28:38 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	110,	1011
2017-01-04 11:28:38 AI_Player.update()		1110,	1010,	1100,	1010,	1010,	101,	101
2017-01-04 11:28:38 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:28:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:28:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:38 AI_Player.update()	update
2017-01-04 11:28:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:38 AI_Player.update()	update
2017-01-04 11:28:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:39 AI_Player.update()	Search took397ms
2017-01-04 11:28:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:39 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-04 11:28:39 AI_Player.update()		110,	1011,	1001,	1011,	1011,	11,	1010
2017-01-04 11:28:39 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-04 11:28:39 AI_Player.update()		1100,	1101,	11,	101,	1001,	111,	1010
2017-01-04 11:28:39 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-04 11:28:39 AI_Player.update()		1110,	1001,	1100,	1010,	1010,	101,	101
2017-01-04 11:28:39 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1010,	1001
2017-01-04 11:28:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:39 AI_Player.update()	update
2017-01-04 11:28:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:39 AI_Player.update()	update
2017-01-04 11:28:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:39 AI_Player.update()	Search took395ms
2017-01-04 11:28:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:39 AI_Player.update()		110,	1001,	111,	1011,	111,	1101,	11
2017-01-04 11:28:39 AI_Player.update()		110,	1011,	1001,	101,	1011,	11,	1010
2017-01-04 11:28:39 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-04 11:28:39 AI_Player.update()		1100,	1101,	11,	1001,	1001,	111,	1010
2017-01-04 11:28:39 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-04 11:28:39 AI_Player.update()		1110,	1001,	1100,	1010,	1010,	101,	101
2017-01-04 11:28:39 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:28:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:39 AI_Player.update()	update
2017-01-04 11:28:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:39 AI_Player.update()	update
2017-01-04 11:28:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:39 AI_Player.update()	Search took264ms
2017-01-04 11:28:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:39 AI_Player.update()		110,	1001,	111,	1011,	111,	1101,	11
2017-01-04 11:28:39 AI_Player.update()		110,	1011,	1001,	101,	1011,	11,	1010
2017-01-04 11:28:39 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-04 11:28:39 AI_Player.update()		1010,	1100,	1101,	11,	1001,	1001,	111
2017-01-04 11:28:39 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-04 11:28:39 AI_Player.update()		1110,	1001,	1100,	1010,	1010,	101,	101
2017-01-04 11:28:39 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:28:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:39 AI_Player.update()	update
2017-01-04 11:28:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:39 AI_Player.update()	update
2017-01-04 11:28:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:39 AI_Player.update()	Search took239ms
2017-01-04 11:28:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:39 AI_Player.update()		110,	1001,	111,	1011,	111,	11,	11
2017-01-04 11:28:39 AI_Player.update()		110,	1011,	1001,	101,	1011,	1010,	1010
2017-01-04 11:28:39 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-04 11:28:39 AI_Player.update()		1010,	1100,	1101,	11,	1001,	110,	111
2017-01-04 11:28:39 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 11:28:39 AI_Player.update()		1110,	1001,	1100,	1010,	1010,	1010,	101
2017-01-04 11:28:39 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1101,	1001
2017-01-04 11:28:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:39 AI_Player.update()	update
2017-01-04 11:28:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:39 AI_Player.update()	update
2017-01-04 11:28:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:40 AI_Player.update()	Search took261ms
2017-01-04 11:28:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:40 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 11:28:40 AI_Player.update()		110,	1011,	1001,	1011,	1011,	1010,	1010
2017-01-04 11:28:40 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-04 11:28:40 AI_Player.update()		1010,	1100,	1101,	101,	1001,	110,	111
2017-01-04 11:28:40 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:40 AI_Player.update()		1110,	1001,	1100,	1010,	1010,	1010,	101
2017-01-04 11:28:40 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1101,	1001
2017-01-04 11:28:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:40 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:40 AI_Player.update()	update
2017-01-04 11:28:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:40 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:40 AI_Player.update()	update
2017-01-04 11:28:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:40 AI_Player.update()	Search took515ms
2017-01-04 11:28:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:40 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-04 11:28:40 AI_Player.update()		110,	101,	1001,	1011,	1011,	1010,	1010
2017-01-04 11:28:40 AI_Player.update()		1110,	1100,	1110,	11,	111,	1001,	1011
2017-01-04 11:28:40 AI_Player.update()		1010,	1100,	1101,	101,	1001,	110,	111
2017-01-04 11:28:40 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:40 AI_Player.update()		1110,	1010,	1100,	1010,	1010,	1010,	101
2017-01-04 11:28:40 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1101,	1001
2017-01-04 11:28:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:40 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:40 AI_Player.update()	update
2017-01-04 11:28:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:40 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:40 AI_Player.update()	update
2017-01-04 11:28:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:41 AI_Player.update()	Search took528ms
2017-01-04 11:28:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:41 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-04 11:28:41 AI_Player.update()		110,	101,	1001,	1011,	1011,	1010,	1010
2017-01-04 11:28:41 AI_Player.update()		1110,	1100,	1110,	11,	111,	1001,	1011
2017-01-04 11:28:41 AI_Player.update()		1100,	1101,	101,	1001,	110,	111,	1010
2017-01-04 11:28:41 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:41 AI_Player.update()		1110,	1010,	1100,	1010,	1010,	1010,	101
2017-01-04 11:28:41 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1101,	1001
2017-01-04 11:28:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:41 AI_Player.update()	update
2017-01-04 11:28:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:28:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:41 AI_Player.update()	update
2017-01-04 11:28:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:41 AI_Player.update()	Search took562ms
2017-01-04 11:28:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:41 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-04 11:28:41 AI_Player.update()		110,	1100,	1001,	1011,	1011,	1010,	1010
2017-01-04 11:28:41 AI_Player.update()		1110,	1101,	1110,	11,	111,	1001,	1011
2017-01-04 11:28:41 AI_Player.update()		1100,	1001,	101,	1001,	110,	111,	1010
2017-01-04 11:28:41 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:41 AI_Player.update()		1110,	1001,	1100,	1010,	1010,	1010,	101
2017-01-04 11:28:41 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	1101,	1001
2017-01-04 11:28:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:28:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:41 AI_Player.update()	update
2017-01-04 11:28:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:41 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:28:41 AI_Player.update()	Player a has won!
2017-01-04 11:28:41 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:28:41 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:28:41 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:28:41 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:28:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:41 AI_Player.update()	update
2017-01-04 11:28:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:41 AI_Player.update()	Search took43ms
2017-01-04 11:28:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:41 AI_Player.update()		110,	1011,	111,	1100,	111,	1001,	11
2017-01-04 11:28:41 AI_Player.update()		1010,	110,	110,	1010,	11,	11,	1001
2017-01-04 11:28:41 AI_Player.update()		1110,	110,	1110,	110,	111,	1001,	1011
2017-01-04 11:28:41 AI_Player.update()		110,	1110,	1100,	1010,	101,	1110,	101
2017-01-04 11:28:41 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-04 11:28:41 AI_Player.update()		101,	1110,	1100,	1001,	1100,	111,	101
2017-01-04 11:28:41 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:28:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:41 AI_Player.update()	update
2017-01-04 11:28:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:41 AI_Player.update()	update
2017-01-04 11:28:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:41 AI_Player.update()	Search took27ms
2017-01-04 11:28:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:41 AI_Player.update()		110,	1011,	111,	1100,	111,	1100,	11
2017-01-04 11:28:41 AI_Player.update()		1010,	110,	110,	1010,	11,	1001,	1001
2017-01-04 11:28:41 AI_Player.update()		1110,	110,	1110,	110,	111,	11,	1011
2017-01-04 11:28:41 AI_Player.update()		110,	1110,	1100,	1010,	101,	1001,	101
2017-01-04 11:28:41 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 11:28:41 AI_Player.update()		101,	1110,	1100,	1001,	1100,	101,	101
2017-01-04 11:28:41 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	111,	1001
2017-01-04 11:28:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:41 AI_Player.update()	update
2017-01-04 11:28:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:41 AI_Player.update()	update
2017-01-04 11:28:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:42 AI_Player.update()	Search took120ms
2017-01-04 11:28:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()		110,	110,	111,	1100,	111,	1100,	11
2017-01-04 11:28:42 AI_Player.update()		1010,	110,	110,	1010,	11,	1001,	1001
2017-01-04 11:28:42 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-04 11:28:42 AI_Player.update()		110,	1100,	1100,	1010,	101,	1001,	101
2017-01-04 11:28:42 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1110,	1011
2017-01-04 11:28:42 AI_Player.update()		101,	1010,	1100,	1001,	1100,	101,	101
2017-01-04 11:28:42 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	111,	1001
2017-01-04 11:28:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()	update
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()	update
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:42 AI_Player.update()	Search took111ms
2017-01-04 11:28:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 11:28:42 AI_Player.update()		1010,	110,	110,	1010,	11,	1100,	1001
2017-01-04 11:28:42 AI_Player.update()		1110,	1110,	1110,	110,	111,	1001,	1011
2017-01-04 11:28:42 AI_Player.update()		110,	1100,	1100,	1010,	101,	11,	101
2017-01-04 11:28:42 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1001,	1011
2017-01-04 11:28:42 AI_Player.update()		101,	1010,	1100,	1001,	1100,	1110,	101
2017-01-04 11:28:42 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	101,	1001
2017-01-04 11:28:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()	update
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()	update
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:42 AI_Player.update()	Search took182ms
2017-01-04 11:28:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 11:28:42 AI_Player.update()		1010,	110,	110,	1010,	11,	1100,	1001
2017-01-04 11:28:42 AI_Player.update()		1110,	1110,	1110,	110,	111,	1001,	1011
2017-01-04 11:28:42 AI_Player.update()		110,	1100,	1100,	1010,	101,	11,	101
2017-01-04 11:28:42 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1001,	1011
2017-01-04 11:28:42 AI_Player.update()		101,	101,	1010,	1100,	1001,	1100,	1110
2017-01-04 11:28:42 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	101,	1001
2017-01-04 11:28:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()	update
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()	update
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:42 AI_Player.update()	Search took150ms
2017-01-04 11:28:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 11:28:42 AI_Player.update()		110,	110,	1010,	11,	1100,	1001,	1010
2017-01-04 11:28:42 AI_Player.update()		1110,	1110,	1110,	110,	111,	1001,	1011
2017-01-04 11:28:42 AI_Player.update()		110,	1100,	1100,	1010,	101,	11,	101
2017-01-04 11:28:42 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1001,	1011
2017-01-04 11:28:42 AI_Player.update()		101,	101,	1010,	1100,	1001,	1100,	1110
2017-01-04 11:28:42 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	101,	1001
2017-01-04 11:28:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()	update
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()	update
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:42 AI_Player.update()	Search took133ms
2017-01-04 11:28:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 11:28:42 AI_Player.update()		110,	1010,	11,	1100,	1001,	1010,	110
2017-01-04 11:28:42 AI_Player.update()		1110,	1110,	1110,	110,	111,	1001,	1011
2017-01-04 11:28:42 AI_Player.update()		110,	1100,	1100,	1010,	101,	11,	101
2017-01-04 11:28:42 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1001,	1011
2017-01-04 11:28:42 AI_Player.update()		101,	101,	1010,	1100,	1001,	1100,	1110
2017-01-04 11:28:42 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	101,	1001
2017-01-04 11:28:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()	update
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:42 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:42 AI_Player.update()	update
2017-01-04 11:28:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:43 AI_Player.update()	Search took348ms
2017-01-04 11:28:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 11:28:43 AI_Player.update()		110,	110,	1010,	11,	1100,	1001,	1010
2017-01-04 11:28:43 AI_Player.update()		1110,	1110,	1110,	110,	111,	1001,	1011
2017-01-04 11:28:43 AI_Player.update()		110,	1100,	1100,	1010,	101,	11,	101
2017-01-04 11:28:43 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1001,	1011
2017-01-04 11:28:43 AI_Player.update()		101,	101,	1010,	1100,	1001,	1100,	1110
2017-01-04 11:28:43 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	101,	1001
2017-01-04 11:28:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()	update
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()	update
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:43 AI_Player.update()	Search took115ms
2017-01-04 11:28:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 11:28:43 AI_Player.update()		110,	1010,	11,	1100,	1001,	1010,	110
2017-01-04 11:28:43 AI_Player.update()		1110,	1110,	1110,	110,	111,	1001,	1011
2017-01-04 11:28:43 AI_Player.update()		110,	1100,	1100,	1010,	101,	11,	101
2017-01-04 11:28:43 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1001,	1011
2017-01-04 11:28:43 AI_Player.update()		101,	101,	1010,	1100,	1001,	1100,	1110
2017-01-04 11:28:43 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	101,	1001
2017-01-04 11:28:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()	update
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()	update
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:43 AI_Player.update()	Search took321ms
2017-01-04 11:28:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()		110,	1010,	111,	1100,	111,	111,	11
2017-01-04 11:28:43 AI_Player.update()		110,	1110,	11,	1100,	1001,	1010,	110
2017-01-04 11:28:43 AI_Player.update()		1110,	1100,	1110,	110,	111,	1001,	1011
2017-01-04 11:28:43 AI_Player.update()		110,	1110,	1100,	1010,	101,	11,	101
2017-01-04 11:28:43 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-04 11:28:43 AI_Player.update()		101,	1011,	1010,	1100,	1001,	1100,	1110
2017-01-04 11:28:43 AI_Player.update()		1100,	110,	1101,	1001,	1101,	101,	1001
2017-01-04 11:28:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()	update
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()	update
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:43 AI_Player.update()	Search took171ms
2017-01-04 11:28:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()		110,	1010,	111,	1001,	111,	111,	11
2017-01-04 11:28:43 AI_Player.update()		110,	1110,	11,	1100,	1001,	1010,	110
2017-01-04 11:28:43 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1001,	1011
2017-01-04 11:28:43 AI_Player.update()		110,	1110,	1100,	110,	101,	11,	101
2017-01-04 11:28:43 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:28:43 AI_Player.update()		101,	1011,	1010,	110,	1001,	1100,	1110
2017-01-04 11:28:43 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 11:28:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()	update
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()	update
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:43 AI_Player.update()	Search took234ms
2017-01-04 11:28:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-04 11:28:43 AI_Player.update()		110,	1110,	11,	1100,	1001,	1001,	110
2017-01-04 11:28:43 AI_Player.update()		1110,	1100,	1110,	1100,	111,	11,	1011
2017-01-04 11:28:43 AI_Player.update()		110,	1110,	1100,	110,	101,	1001,	101
2017-01-04 11:28:43 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:28:43 AI_Player.update()		101,	1011,	1010,	110,	1001,	101,	1110
2017-01-04 11:28:43 AI_Player.update()		1100,	110,	1101,	1100,	1101,	111,	1001
2017-01-04 11:28:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()	update
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:43 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:43 AI_Player.update()	update
2017-01-04 11:28:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:44 AI_Player.update()	Search took136ms
2017-01-04 11:28:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:28:44 AI_Player.update()		110,	1010,	11,	1100,	1001,	1001,	110
2017-01-04 11:28:44 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-04 11:28:44 AI_Player.update()		110,	1100,	1100,	110,	101,	1001,	101
2017-01-04 11:28:44 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:28:44 AI_Player.update()		101,	101,	1010,	110,	1001,	101,	1110
2017-01-04 11:28:44 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	111,	1001
2017-01-04 11:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()	update
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()	update
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:44 AI_Player.update()	Search took266ms
2017-01-04 11:28:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-04 11:28:44 AI_Player.update()		110,	1110,	11,	1100,	1001,	1001,	110
2017-01-04 11:28:44 AI_Player.update()		1110,	1100,	1110,	1100,	111,	11,	1011
2017-01-04 11:28:44 AI_Player.update()		110,	1110,	1100,	110,	101,	1001,	101
2017-01-04 11:28:44 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:28:44 AI_Player.update()		101,	1011,	1010,	110,	1001,	101,	1110
2017-01-04 11:28:44 AI_Player.update()		1100,	110,	1101,	1100,	1101,	111,	1001
2017-01-04 11:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()	update
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()	update
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:44 AI_Player.update()	Search took147ms
2017-01-04 11:28:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:28:44 AI_Player.update()		110,	1010,	11,	1100,	1001,	1001,	110
2017-01-04 11:28:44 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-04 11:28:44 AI_Player.update()		110,	1100,	1100,	110,	101,	1001,	101
2017-01-04 11:28:44 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:28:44 AI_Player.update()		101,	101,	1010,	110,	1001,	101,	1110
2017-01-04 11:28:44 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	111,	1001
2017-01-04 11:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()	update
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()	update
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:44 AI_Player.update()	Search took300ms
2017-01-04 11:28:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:28:44 AI_Player.update()		110,	1010,	11,	1100,	1001,	1001,	110
2017-01-04 11:28:44 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-04 11:28:44 AI_Player.update()		101,	110,	1100,	1100,	110,	101,	1001
2017-01-04 11:28:44 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:28:44 AI_Player.update()		101,	101,	1010,	110,	1001,	101,	1110
2017-01-04 11:28:44 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	111,	1001
2017-01-04 11:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()	update
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()	update
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:44 AI_Player.update()	Search took103ms
2017-01-04 11:28:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 11:28:44 AI_Player.update()		1010,	11,	1100,	1001,	1001,	110,	110
2017-01-04 11:28:44 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-04 11:28:44 AI_Player.update()		101,	110,	1100,	1100,	110,	101,	1001
2017-01-04 11:28:44 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:28:44 AI_Player.update()		101,	101,	1010,	110,	1001,	101,	1110
2017-01-04 11:28:44 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	111,	1001
2017-01-04 11:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()	update
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()	update
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:44 AI_Player.update()	Search took88ms
2017-01-04 11:28:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 11:28:44 AI_Player.update()		1010,	11,	1100,	1001,	1001,	1010,	110
2017-01-04 11:28:44 AI_Player.update()		1110,	1110,	1110,	1100,	111,	110,	1011
2017-01-04 11:28:44 AI_Player.update()		101,	110,	1100,	1100,	110,	11,	1001
2017-01-04 11:28:44 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:44 AI_Player.update()		101,	101,	1010,	110,	1001,	1100,	1110
2017-01-04 11:28:44 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 11:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()	update
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:44 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:44 AI_Player.update()	update
2017-01-04 11:28:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:45 AI_Player.update()	Search took97ms
2017-01-04 11:28:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:45 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 11:28:45 AI_Player.update()		11,	1100,	1001,	1001,	1010,	110,	1010
2017-01-04 11:28:45 AI_Player.update()		1110,	1110,	1110,	1100,	111,	110,	1011
2017-01-04 11:28:45 AI_Player.update()		101,	110,	1100,	1100,	110,	11,	1001
2017-01-04 11:28:45 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:45 AI_Player.update()		101,	101,	1010,	110,	1001,	1100,	1110
2017-01-04 11:28:45 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 11:28:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:45 AI_Player.update()	update
2017-01-04 11:28:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:45 AI_Player.update()	update
2017-01-04 11:28:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:45 AI_Player.update()	Search took129ms
2017-01-04 11:28:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:45 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-04 11:28:45 AI_Player.update()		11,	1100,	1001,	1001,	1010,	110,	1010
2017-01-04 11:28:45 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-04 11:28:45 AI_Player.update()		101,	110,	1100,	1100,	110,	101,	1001
2017-01-04 11:28:45 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:28:45 AI_Player.update()		101,	101,	1010,	110,	1001,	101,	1110
2017-01-04 11:28:45 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	111,	1001
2017-01-04 11:28:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:45 AI_Player.update()	update
2017-01-04 11:28:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:45 AI_Player.update()	update
2017-01-04 11:28:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:45 AI_Player.update()	Search took451ms
2017-01-04 11:28:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:45 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-04 11:28:45 AI_Player.update()		1100,	1001,	1001,	1010,	110,	1010,	11
2017-01-04 11:28:45 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-04 11:28:45 AI_Player.update()		101,	110,	1100,	1100,	110,	101,	1001
2017-01-04 11:28:45 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:28:45 AI_Player.update()		101,	101,	1010,	110,	1001,	101,	1110
2017-01-04 11:28:45 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	111,	1001
2017-01-04 11:28:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:45 AI_Player.update()	update
2017-01-04 11:28:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:45 AI_Player.update()	update
2017-01-04 11:28:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:45 AI_Player.update()	Search took115ms
2017-01-04 11:28:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:45 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 11:28:45 AI_Player.update()		1100,	1001,	1001,	1010,	110,	110,	11
2017-01-04 11:28:45 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1010,	1011
2017-01-04 11:28:45 AI_Player.update()		101,	110,	1100,	1100,	110,	11,	1001
2017-01-04 11:28:45 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:45 AI_Player.update()		101,	101,	1010,	110,	1001,	1100,	1110
2017-01-04 11:28:45 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 11:28:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:45 AI_Player.update()	update
2017-01-04 11:28:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:45 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:45 AI_Player.update()	update
2017-01-04 11:28:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:46 AI_Player.update()	Search took444ms
2017-01-04 11:28:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:46 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 11:28:46 AI_Player.update()		1001,	1001,	1010,	110,	110,	11,	1100
2017-01-04 11:28:46 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1010,	1011
2017-01-04 11:28:46 AI_Player.update()		101,	110,	1100,	1100,	110,	11,	1001
2017-01-04 11:28:46 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:46 AI_Player.update()		101,	101,	1010,	110,	1001,	1100,	1110
2017-01-04 11:28:46 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 11:28:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:46 AI_Player.update()	update
2017-01-04 11:28:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:46 AI_Player.update()	update
2017-01-04 11:28:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:46 AI_Player.update()	Search took71ms
2017-01-04 11:28:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:46 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 11:28:46 AI_Player.update()		1100,	1001,	1001,	1010,	110,	110,	11
2017-01-04 11:28:46 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1010,	1011
2017-01-04 11:28:46 AI_Player.update()		101,	110,	1100,	1100,	110,	11,	1001
2017-01-04 11:28:46 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:46 AI_Player.update()		101,	101,	1010,	110,	1001,	1100,	1110
2017-01-04 11:28:46 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 11:28:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:46 AI_Player.update()	update
2017-01-04 11:28:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:46 AI_Player.update()	update
2017-01-04 11:28:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:46 AI_Player.update()	Search took437ms
2017-01-04 11:28:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:46 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 11:28:46 AI_Player.update()		1100,	1001,	1001,	1010,	110,	110,	11
2017-01-04 11:28:46 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1010,	1011
2017-01-04 11:28:46 AI_Player.update()		101,	110,	1100,	1100,	110,	11,	1001
2017-01-04 11:28:46 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:46 AI_Player.update()		1110,	101,	101,	1010,	110,	1001,	1100
2017-01-04 11:28:46 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 11:28:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:28:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:46 AI_Player.update()	update
2017-01-04 11:28:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:28:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:46 AI_Player.update()	update
2017-01-04 11:28:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:46 AI_Player.update()	Search took119ms
2017-01-04 11:28:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:46 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 11:28:46 AI_Player.update()		11,	1100,	1001,	1001,	1010,	110,	110
2017-01-04 11:28:46 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1010,	1011
2017-01-04 11:28:46 AI_Player.update()		101,	110,	1100,	1100,	110,	11,	1001
2017-01-04 11:28:46 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:46 AI_Player.update()		1110,	101,	101,	1010,	110,	1001,	1100
2017-01-04 11:28:46 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 11:28:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:28:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:46 AI_Player.update()	update
2017-01-04 11:28:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:46 AI_Player.update()	update
2017-01-04 11:28:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:47 AI_Player.update()	Search took220ms
2017-01-04 11:28:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()		110,	1100,	111,	1001,	111,	111,	11
2017-01-04 11:28:47 AI_Player.update()		11,	1110,	1001,	1001,	1010,	110,	110
2017-01-04 11:28:47 AI_Player.update()		1110,	110,	1110,	1100,	111,	1010,	1011
2017-01-04 11:28:47 AI_Player.update()		101,	1110,	1100,	1100,	110,	11,	1001
2017-01-04 11:28:47 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:47 AI_Player.update()		1110,	1011,	101,	1010,	110,	1001,	1100
2017-01-04 11:28:47 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 11:28:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()	update
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()	update
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:47 AI_Player.update()	Search took63ms
2017-01-04 11:28:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()		110,	1110,	111,	1001,	111,	111,	11
2017-01-04 11:28:47 AI_Player.update()		11,	110,	1001,	1001,	1010,	110,	110
2017-01-04 11:28:47 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1010,	1011
2017-01-04 11:28:47 AI_Player.update()		101,	101,	1100,	1100,	110,	11,	1001
2017-01-04 11:28:47 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:47 AI_Player.update()		1110,	110,	101,	1010,	110,	1001,	1100
2017-01-04 11:28:47 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 11:28:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()	update
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()	update
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:47 AI_Player.update()	Search took189ms
2017-01-04 11:28:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()		110,	1110,	111,	1001,	111,	111,	11
2017-01-04 11:28:47 AI_Player.update()		11,	110,	1001,	1001,	1010,	110,	110
2017-01-04 11:28:47 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1010,	1011
2017-01-04 11:28:47 AI_Player.update()		101,	101,	1100,	1100,	110,	11,	1001
2017-01-04 11:28:47 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:47 AI_Player.update()		110,	101,	1010,	110,	1001,	1100,	1110
2017-01-04 11:28:47 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 11:28:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:28:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()	update
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()	update
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:47 AI_Player.update()	Search took40ms
2017-01-04 11:28:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()		110,	1110,	111,	1001,	111,	111,	11
2017-01-04 11:28:47 AI_Player.update()		110,	1001,	1001,	1010,	110,	110,	11
2017-01-04 11:28:47 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1010,	1011
2017-01-04 11:28:47 AI_Player.update()		101,	101,	1100,	1100,	110,	11,	1001
2017-01-04 11:28:47 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-04 11:28:47 AI_Player.update()		110,	101,	1010,	110,	1001,	1100,	1110
2017-01-04 11:28:47 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 11:28:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()	update
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()	update
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:47 AI_Player.update()	Search took450ms
2017-01-04 11:28:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()		110,	1110,	111,	1010,	111,	111,	11
2017-01-04 11:28:47 AI_Player.update()		110,	1001,	1001,	1100,	110,	110,	11
2017-01-04 11:28:47 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1010,	1011
2017-01-04 11:28:47 AI_Player.update()		101,	101,	1100,	1010,	110,	11,	1001
2017-01-04 11:28:47 AI_Player.update()		1110,	1011,	1101,	110,	1011,	101,	1011
2017-01-04 11:28:47 AI_Player.update()		110,	101,	1010,	1100,	1001,	1100,	1110
2017-01-04 11:28:47 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-04 11:28:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()	update
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()	update
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:47 AI_Player.update()	Search took100ms
2017-01-04 11:28:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-04 11:28:47 AI_Player.update()		110,	1001,	1001,	1100,	110,	111,	11
2017-01-04 11:28:47 AI_Player.update()		1110,	1110,	1110,	1100,	111,	110,	1011
2017-01-04 11:28:47 AI_Player.update()		101,	101,	1100,	1010,	110,	1010,	1001
2017-01-04 11:28:47 AI_Player.update()		1110,	1011,	1101,	110,	1011,	11,	1011
2017-01-04 11:28:47 AI_Player.update()		110,	101,	1010,	1100,	1001,	101,	1110
2017-01-04 11:28:47 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:28:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:47 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:47 AI_Player.update()	update
2017-01-04 11:28:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:48 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:48 AI_Player.update()	update
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:48 AI_Player.update()	Search took210ms
2017-01-04 11:28:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:48 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-04 11:28:48 AI_Player.update()		11,	110,	1001,	1001,	1100,	110,	111
2017-01-04 11:28:48 AI_Player.update()		1110,	1110,	1110,	1100,	111,	110,	1011
2017-01-04 11:28:48 AI_Player.update()		101,	101,	1100,	1010,	110,	1010,	1001
2017-01-04 11:28:48 AI_Player.update()		1110,	1011,	1101,	110,	1011,	11,	1011
2017-01-04 11:28:48 AI_Player.update()		110,	101,	1010,	1100,	1001,	101,	1110
2017-01-04 11:28:48 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:28:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:48 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:48 AI_Player.update()	update
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:48 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:48 AI_Player.update()	update
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:48 AI_Player.update()	Search took233ms
2017-01-04 11:28:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:48 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 11:28:48 AI_Player.update()		11,	1110,	1001,	1001,	1100,	110,	111
2017-01-04 11:28:48 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 11:28:48 AI_Player.update()		101,	1011,	1100,	1010,	110,	1010,	1001
2017-01-04 11:28:48 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 11:28:48 AI_Player.update()		110,	1100,	1010,	1100,	1001,	101,	1110
2017-01-04 11:28:48 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:28:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:48 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:48 AI_Player.update()	update
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:48 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:48 AI_Player.update()	update
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:48 AI_Player.update()	Search took131ms
2017-01-04 11:28:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:48 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 11:28:48 AI_Player.update()		11,	1110,	1001,	1001,	1100,	110,	111
2017-01-04 11:28:48 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 11:28:48 AI_Player.update()		1001,	101,	1011,	1100,	1010,	110,	1010
2017-01-04 11:28:48 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 11:28:48 AI_Player.update()		110,	1100,	1010,	1100,	1001,	101,	1110
2017-01-04 11:28:48 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:28:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:48 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:48 AI_Player.update()	update
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:48 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:48 AI_Player.update()	update
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:48 AI_Player.update()	Search took388ms
2017-01-04 11:28:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:48 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 11:28:48 AI_Player.update()		1110,	1001,	1001,	1100,	110,	111,	11
2017-01-04 11:28:48 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 11:28:48 AI_Player.update()		1001,	101,	1011,	1100,	1010,	110,	1010
2017-01-04 11:28:48 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 11:28:48 AI_Player.update()		110,	1100,	1010,	1100,	1001,	101,	1110
2017-01-04 11:28:48 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:28:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:48 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:48 AI_Player.update()	update
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:48 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:48 AI_Player.update()	update
2017-01-04 11:28:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:49 AI_Player.update()	Search took138ms
2017-01-04 11:28:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 11:28:49 AI_Player.update()		1001,	1001,	1100,	110,	111,	11,	1110
2017-01-04 11:28:49 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 11:28:49 AI_Player.update()		1001,	101,	1011,	1100,	1010,	110,	1010
2017-01-04 11:28:49 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 11:28:49 AI_Player.update()		110,	1100,	1010,	1100,	1001,	101,	1110
2017-01-04 11:28:49 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:28:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()	update
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()	update
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:49 AI_Player.update()	Search took425ms
2017-01-04 11:28:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 11:28:49 AI_Player.update()		1001,	1001,	1100,	110,	111,	11,	1110
2017-01-04 11:28:49 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 11:28:49 AI_Player.update()		1010,	1001,	101,	1011,	1100,	1010,	110
2017-01-04 11:28:49 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 11:28:49 AI_Player.update()		110,	1100,	1010,	1100,	1001,	101,	1110
2017-01-04 11:28:49 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:28:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:28:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()	update
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()	update
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:49 AI_Player.update()	Search took253ms
2017-01-04 11:28:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 11:28:49 AI_Player.update()		1110,	1001,	1001,	1100,	110,	111,	11
2017-01-04 11:28:49 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 11:28:49 AI_Player.update()		1010,	1001,	101,	1011,	1100,	1010,	110
2017-01-04 11:28:49 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 11:28:49 AI_Player.update()		110,	1100,	1010,	1100,	1001,	101,	1110
2017-01-04 11:28:49 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:28:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()	update
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:49 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:28:49 AI_Player.update()	Player a has won!
2017-01-04 11:28:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:28:49 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:28:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:28:49 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:28:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()	update
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:49 AI_Player.update()	Search took47ms
2017-01-04 11:28:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-04 11:28:49 AI_Player.update()		1100,	1001,	110,	1010,	1010,	111,	111
2017-01-04 11:28:49 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-04 11:28:49 AI_Player.update()		1010,	1011,	1011,	1010,	110,	1010,	11
2017-01-04 11:28:49 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 11:28:49 AI_Player.update()		1001,	11,	101,	1100,	1010,	1010,	1101
2017-01-04 11:28:49 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	111,	1001
2017-01-04 11:28:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()	update
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()	update
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:49 AI_Player.update()	Search took66ms
2017-01-04 11:28:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-04 11:28:49 AI_Player.update()		1001,	110,	1010,	1010,	111,	111,	1100
2017-01-04 11:28:49 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-04 11:28:49 AI_Player.update()		1010,	1011,	1011,	1010,	110,	1010,	11
2017-01-04 11:28:49 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 11:28:49 AI_Player.update()		1001,	11,	101,	1100,	1010,	1010,	1101
2017-01-04 11:28:49 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	111,	1001
2017-01-04 11:28:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()	update
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:49 AI_Player.update()	update
2017-01-04 11:28:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:50 AI_Player.update()	Search took78ms
2017-01-04 11:28:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-04 11:28:50 AI_Player.update()		1100,	1001,	110,	1010,	1010,	111,	111
2017-01-04 11:28:50 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-04 11:28:50 AI_Player.update()		1010,	1011,	1011,	1010,	110,	1010,	11
2017-01-04 11:28:50 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 11:28:50 AI_Player.update()		1001,	11,	101,	1100,	1010,	1010,	1101
2017-01-04 11:28:50 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	111,	1001
2017-01-04 11:28:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()	update
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()	update
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:50 AI_Player.update()	Search took82ms
2017-01-04 11:28:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()		110,	1100,	111,	111,	111,	111,	11
2017-01-04 11:28:50 AI_Player.update()		1100,	1001,	110,	1010,	1010,	1010,	111
2017-01-04 11:28:50 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-04 11:28:50 AI_Player.update()		1010,	1011,	1011,	1010,	110,	110,	11
2017-01-04 11:28:50 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:50 AI_Player.update()		1001,	11,	101,	1100,	1010,	101,	1101
2017-01-04 11:28:50 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:28:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()	update
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()	update
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:50 AI_Player.update()	Search took179ms
2017-01-04 11:28:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()		110,	1001,	111,	111,	111,	111,	11
2017-01-04 11:28:50 AI_Player.update()		1100,	1100,	110,	1010,	1010,	1010,	111
2017-01-04 11:28:50 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-04 11:28:50 AI_Player.update()		1010,	1001,	1011,	1010,	110,	110,	11
2017-01-04 11:28:50 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:50 AI_Player.update()		1001,	1100,	101,	1100,	1010,	101,	1101
2017-01-04 11:28:50 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:28:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()	update
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()	update
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:50 AI_Player.update()	Search took95ms
2017-01-04 11:28:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()		110,	1001,	111,	111,	111,	111,	11
2017-01-04 11:28:50 AI_Player.update()		1100,	110,	1010,	1010,	1010,	111,	1100
2017-01-04 11:28:50 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-04 11:28:50 AI_Player.update()		1010,	1001,	1011,	1010,	110,	110,	11
2017-01-04 11:28:50 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:50 AI_Player.update()		1001,	1100,	101,	1100,	1010,	101,	1101
2017-01-04 11:28:50 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:28:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()	update
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()	update
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:50 AI_Player.update()	Search took344ms
2017-01-04 11:28:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()		110,	11,	111,	111,	111,	111,	11
2017-01-04 11:28:50 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	111,	1100
2017-01-04 11:28:50 AI_Player.update()		1110,	110,	1110,	101,	111,	111,	1011
2017-01-04 11:28:50 AI_Player.update()		1010,	1001,	1011,	1010,	110,	110,	11
2017-01-04 11:28:50 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:50 AI_Player.update()		1001,	1011,	101,	1100,	1010,	101,	1101
2017-01-04 11:28:50 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:28:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:28:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()	update
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:50 AI_Player.update()	update
2017-01-04 11:28:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:51 AI_Player.update()	Search took621ms
2017-01-04 11:28:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:51 AI_Player.update()		110,	11,	111,	111,	111,	111,	11
2017-01-04 11:28:51 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	111,	1100
2017-01-04 11:28:51 AI_Player.update()		1110,	110,	1110,	101,	111,	111,	1011
2017-01-04 11:28:51 AI_Player.update()		1001,	1011,	1010,	110,	110,	11,	1010
2017-01-04 11:28:51 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:51 AI_Player.update()		1001,	1011,	101,	1100,	1010,	101,	1101
2017-01-04 11:28:51 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:28:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:51 AI_Player.update()	update
2017-01-04 11:28:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:28:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:51 AI_Player.update()	update
2017-01-04 11:28:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:51 AI_Player.update()	Search took418ms
2017-01-04 11:28:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:51 AI_Player.update()		110,	1001,	111,	111,	111,	111,	11
2017-01-04 11:28:51 AI_Player.update()		1100,	110,	1010,	1010,	1010,	111,	1100
2017-01-04 11:28:51 AI_Player.update()		1110,	1011,	1110,	101,	111,	111,	1011
2017-01-04 11:28:51 AI_Player.update()		1001,	1001,	1010,	110,	110,	11,	1010
2017-01-04 11:28:51 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:51 AI_Player.update()		1001,	1100,	101,	1100,	1010,	101,	1101
2017-01-04 11:28:51 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:28:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:28:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:51 AI_Player.update()	update
2017-01-04 11:28:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:51 AI_Player.update()	update
2017-01-04 11:28:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:52 AI_Player.update()	Search took769ms
2017-01-04 11:28:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:52 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 11:28:52 AI_Player.update()		1100,	1011,	1010,	1010,	1010,	111,	1100
2017-01-04 11:28:52 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-04 11:28:52 AI_Player.update()		1001,	1011,	1010,	110,	110,	11,	1010
2017-01-04 11:28:52 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:52 AI_Player.update()		1001,	11,	101,	1100,	1010,	101,	1101
2017-01-04 11:28:52 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:28:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:52 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:52 AI_Player.update()	update
2017-01-04 11:28:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:52 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:52 AI_Player.update()	update
2017-01-04 11:28:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:53 AI_Player.update()	Search took682ms
2017-01-04 11:28:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:53 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 11:28:53 AI_Player.update()		1100,	1011,	1010,	1010,	1010,	111,	1100
2017-01-04 11:28:53 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-04 11:28:53 AI_Player.update()		1001,	1011,	1010,	110,	110,	11,	1010
2017-01-04 11:28:53 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:53 AI_Player.update()		11,	101,	1100,	1010,	101,	1101,	1001
2017-01-04 11:28:53 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:28:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:53 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:28:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:53 AI_Player.update()	update
2017-01-04 11:28:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:53 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:28:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:53 AI_Player.update()	update
2017-01-04 11:28:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:54 AI_Player.update()	Search took1481ms
2017-01-04 11:28:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:54 AI_Player.update()		110,	1001,	111,	111,	111,	111,	11
2017-01-04 11:28:54 AI_Player.update()		1100,	110,	1010,	1010,	1010,	111,	1100
2017-01-04 11:28:54 AI_Player.update()		1110,	1011,	1110,	101,	111,	111,	1011
2017-01-04 11:28:54 AI_Player.update()		1001,	1001,	1010,	110,	110,	11,	1010
2017-01-04 11:28:54 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:54 AI_Player.update()		11,	1100,	1100,	1010,	101,	1101,	1001
2017-01-04 11:28:54 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:28:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:28:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:54 AI_Player.update()	update
2017-01-04 11:28:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:54 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:28:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:54 AI_Player.update()	update
2017-01-04 11:28:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:55 AI_Player.update()	Search took1058ms
2017-01-04 11:28:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:55 AI_Player.update()		110,	1001,	111,	111,	111,	111,	11
2017-01-04 11:28:55 AI_Player.update()		1100,	1100,	110,	1010,	1010,	1010,	111
2017-01-04 11:28:55 AI_Player.update()		1110,	1011,	1110,	101,	111,	111,	1011
2017-01-04 11:28:55 AI_Player.update()		1001,	1001,	1010,	110,	110,	11,	1010
2017-01-04 11:28:55 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:55 AI_Player.update()		11,	1100,	1100,	1010,	101,	1101,	1001
2017-01-04 11:28:55 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:28:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:28:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:55 AI_Player.update()	update
2017-01-04 11:28:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:55 AI_Player.update()	update
2017-01-04 11:28:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:55 AI_Player.update()	Search took62ms
2017-01-04 11:28:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:55 AI_Player.update()		110,	101,	111,	111,	111,	111,	11
2017-01-04 11:28:55 AI_Player.update()		1100,	1001,	110,	1010,	1010,	1010,	111
2017-01-04 11:28:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	111,	1011
2017-01-04 11:28:55 AI_Player.update()		1001,	1011,	1010,	110,	110,	11,	1010
2017-01-04 11:28:55 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:55 AI_Player.update()		11,	1011,	1100,	1010,	101,	1101,	1001
2017-01-04 11:28:55 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:28:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:55 AI_Player.update()	update
2017-01-04 11:28:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:55 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:55 AI_Player.update()	update
2017-01-04 11:28:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:56 AI_Player.update()	Search took586ms
2017-01-04 11:28:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:56 AI_Player.update()		110,	101,	111,	111,	111,	111,	11
2017-01-04 11:28:56 AI_Player.update()		1001,	110,	1010,	1010,	1010,	111,	1100
2017-01-04 11:28:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	111,	1011
2017-01-04 11:28:56 AI_Player.update()		1001,	1011,	1010,	110,	110,	11,	1010
2017-01-04 11:28:56 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:56 AI_Player.update()		11,	1011,	1100,	1010,	101,	1101,	1001
2017-01-04 11:28:56 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:28:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:28:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:56 AI_Player.update()	update
2017-01-04 11:28:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:56 AI_Player.update()	update
2017-01-04 11:28:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:56 AI_Player.update()	Search took162ms
2017-01-04 11:28:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:56 AI_Player.update()		110,	101,	111,	111,	111,	111,	11
2017-01-04 11:28:56 AI_Player.update()		1001,	110,	1010,	1010,	1010,	111,	1100
2017-01-04 11:28:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	111,	1011
2017-01-04 11:28:56 AI_Player.update()		1010,	1001,	1011,	1010,	110,	110,	11
2017-01-04 11:28:56 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-04 11:28:56 AI_Player.update()		11,	1011,	1100,	1010,	101,	1101,	1001
2017-01-04 11:28:56 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:28:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:28:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:56 AI_Player.update()	update
2017-01-04 11:28:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:28:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:28:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:56 AI_Player.update()	update
2017-01-04 11:28:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:57 AI_Player.update()	Search took887ms
2017-01-04 11:28:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:57 AI_Player.update()		110,	101,	111,	111,	111,	111,	11
2017-01-04 11:28:57 AI_Player.update()		1001,	110,	1010,	1010,	1010,	111,	1100
2017-01-04 11:28:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-04 11:28:57 AI_Player.update()		1010,	1001,	1011,	1010,	110,	1010,	11
2017-01-04 11:28:57 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1101,	1011
2017-01-04 11:28:57 AI_Player.update()		11,	1011,	1100,	1010,	101,	1010,	1001
2017-01-04 11:28:57 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	111,	1001
2017-01-04 11:28:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:28:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:57 AI_Player.update()	update
2017-01-04 11:28:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:57 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:28:57 AI_Player.update()	Player a has won!
2017-01-04 11:28:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:28:57 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:28:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:28:57 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:28:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:57 AI_Player.update()	update
2017-01-04 11:28:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:57 AI_Player.update()	Search took100ms
2017-01-04 11:28:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:57 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 11:28:57 AI_Player.update()		1100,	110,	1010,	11,	110,	1110,	1001
2017-01-04 11:28:57 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:57 AI_Player.update()		1011,	1001,	110,	101,	101,	1001,	101
2017-01-04 11:28:57 AI_Player.update()		1110,	1001,	1101,	110,	1011,	101,	1011
2017-01-04 11:28:57 AI_Player.update()		1100,	1010,	1100,	1010,	101,	11,	1011
2017-01-04 11:28:57 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 11:28:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:57 AI_Player.update()	update
2017-01-04 11:28:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:57 AI_Player.update()	update
2017-01-04 11:28:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:58 AI_Player.update()	Search took397ms
2017-01-04 11:28:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:58 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 11:28:58 AI_Player.update()		1001,	1100,	110,	1010,	11,	110,	1110
2017-01-04 11:28:58 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:58 AI_Player.update()		1011,	1001,	110,	101,	101,	1001,	101
2017-01-04 11:28:58 AI_Player.update()		1110,	1001,	1101,	110,	1011,	101,	1011
2017-01-04 11:28:58 AI_Player.update()		1100,	1010,	1100,	1010,	101,	11,	1011
2017-01-04 11:28:58 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 11:28:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:58 AI_Player.update()	update
2017-01-04 11:28:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:58 AI_Player.update()	update
2017-01-04 11:28:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:58 AI_Player.update()	Search took235ms
2017-01-04 11:28:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:58 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:28:58 AI_Player.update()		1001,	1100,	110,	110,	11,	110,	1110
2017-01-04 11:28:58 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-04 11:28:58 AI_Player.update()		1011,	1001,	110,	101,	101,	1001,	101
2017-01-04 11:28:58 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 11:28:58 AI_Player.update()		1100,	1010,	1100,	110,	101,	11,	1011
2017-01-04 11:28:58 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-04 11:28:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:28:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:58 AI_Player.update()	update
2017-01-04 11:28:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:28:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:58 AI_Player.update()	update
2017-01-04 11:28:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:58 AI_Player.update()	Search took365ms
2017-01-04 11:28:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:58 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:28:58 AI_Player.update()		1110,	1001,	1100,	110,	110,	11,	110
2017-01-04 11:28:58 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-04 11:28:58 AI_Player.update()		1011,	1001,	110,	101,	101,	1001,	101
2017-01-04 11:28:58 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 11:28:58 AI_Player.update()		1100,	1010,	1100,	110,	101,	11,	1011
2017-01-04 11:28:58 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-04 11:28:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:28:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:58 AI_Player.update()	update
2017-01-04 11:28:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:58 AI_Player.update()	update
2017-01-04 11:28:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:58 AI_Player.update()	Search took280ms
2017-01-04 11:28:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:58 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 11:28:58 AI_Player.update()		1110,	1010,	1100,	110,	110,	11,	110
2017-01-04 11:28:58 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-04 11:28:58 AI_Player.update()		1011,	1001,	110,	101,	101,	1001,	101
2017-01-04 11:28:58 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 11:28:58 AI_Player.update()		1100,	1100,	1100,	110,	101,	11,	1011
2017-01-04 11:28:58 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-04 11:28:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:58 AI_Player.update()	update
2017-01-04 11:28:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:58 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:58 AI_Player.update()	update
2017-01-04 11:28:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:28:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:28:59 AI_Player.update()	Search took244ms
2017-01-04 11:28:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:59 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 11:28:59 AI_Player.update()		1110,	1001,	1100,	110,	110,	11,	110
2017-01-04 11:28:59 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-04 11:28:59 AI_Player.update()		1011,	1010,	110,	101,	101,	1001,	101
2017-01-04 11:28:59 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 11:28:59 AI_Player.update()		1100,	101,	1100,	110,	101,	11,	1011
2017-01-04 11:28:59 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	110,	1001
2017-01-04 11:28:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:59 AI_Player.update()	update
2017-01-04 11:28:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:28:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:28:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:28:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:28:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:59 AI_Player.update()	update
2017-01-04 11:28:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:28:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:28:59 AI_Player.update()	Search took473ms
2017-01-04 11:28:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:28:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:59 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 11:28:59 AI_Player.update()		1110,	1001,	1100,	1010,	110,	11,	110
2017-01-04 11:28:59 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-04 11:28:59 AI_Player.update()		1011,	1010,	110,	101,	101,	1001,	101
2017-01-04 11:28:59 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-04 11:28:59 AI_Player.update()		1100,	101,	1100,	1010,	101,	11,	1011
2017-01-04 11:28:59 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-04 11:28:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:28:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:28:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:28:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:59 AI_Player.update()	update
2017-01-04 11:28:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:28:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:28:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:28:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:28:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:28:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:28:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:28:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:28:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:28:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:28:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:28:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:28:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:28:59 AI_Player.update()	update
2017-01-04 11:28:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:00 AI_Player.update()	Search took314ms
2017-01-04 11:29:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:00 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 11:29:00 AI_Player.update()		1110,	1001,	1100,	1010,	110,	11,	110
2017-01-04 11:29:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 11:29:00 AI_Player.update()		1011,	1100,	110,	101,	101,	1001,	101
2017-01-04 11:29:00 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 11:29:00 AI_Player.update()		1100,	1001,	1100,	1010,	101,	11,	1011
2017-01-04 11:29:00 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:29:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:29:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:00 AI_Player.update()	update
2017-01-04 11:29:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:00 AI_Player.update()	update
2017-01-04 11:29:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:00 AI_Player.update()	Search took131ms
2017-01-04 11:29:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:00 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 11:29:00 AI_Player.update()		1110,	1001,	1100,	1010,	110,	101,	110
2017-01-04 11:29:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:29:00 AI_Player.update()		1011,	1100,	110,	101,	101,	1010,	101
2017-01-04 11:29:00 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-04 11:29:00 AI_Player.update()		1100,	1001,	1100,	1010,	101,	101,	1011
2017-01-04 11:29:00 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-04 11:29:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:00 AI_Player.update()	update
2017-01-04 11:29:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:00 AI_Player.update()	update
2017-01-04 11:29:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:00 AI_Player.update()	Search took406ms
2017-01-04 11:29:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:00 AI_Player.update()		110,	1001,	111,	110,	111,	11,	11
2017-01-04 11:29:00 AI_Player.update()		1110,	1001,	1100,	1010,	110,	110,	110
2017-01-04 11:29:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:29:00 AI_Player.update()		1011,	1100,	110,	101,	101,	11,	101
2017-01-04 11:29:00 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 11:29:00 AI_Player.update()		1100,	1001,	1100,	1010,	101,	1001,	1011
2017-01-04 11:29:00 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:00 AI_Player.update()	update
2017-01-04 11:29:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:00 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:00 AI_Player.update()	update
2017-01-04 11:29:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:01 AI_Player.update()	Search took420ms
2017-01-04 11:29:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:01 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 11:29:01 AI_Player.update()		1110,	1001,	1100,	1010,	110,	101,	110
2017-01-04 11:29:01 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:29:01 AI_Player.update()		1011,	1100,	110,	101,	101,	1010,	101
2017-01-04 11:29:01 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-04 11:29:01 AI_Player.update()		1100,	1001,	1100,	1010,	101,	101,	1011
2017-01-04 11:29:01 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-04 11:29:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:01 AI_Player.update()	update
2017-01-04 11:29:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:01 AI_Player.update()	update
2017-01-04 11:29:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:01 AI_Player.update()	Search took311ms
2017-01-04 11:29:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:01 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 11:29:01 AI_Player.update()		1110,	1001,	1100,	1010,	110,	101,	110
2017-01-04 11:29:01 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:29:01 AI_Player.update()		1011,	1100,	110,	101,	101,	1010,	101
2017-01-04 11:29:01 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-04 11:29:01 AI_Player.update()		1011,	1100,	1001,	1100,	1010,	101,	101
2017-01-04 11:29:01 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-04 11:29:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:01 AI_Player.update()	update
2017-01-04 11:29:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:01 AI_Player.update()	update
2017-01-04 11:29:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:01 AI_Player.update()	Search took388ms
2017-01-04 11:29:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:01 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 11:29:01 AI_Player.update()		1110,	1001,	1100,	1010,	110,	101,	110
2017-01-04 11:29:01 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:29:01 AI_Player.update()		101,	1011,	1100,	110,	101,	101,	1010
2017-01-04 11:29:01 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-04 11:29:01 AI_Player.update()		1011,	1100,	1001,	1100,	1010,	101,	101
2017-01-04 11:29:01 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-04 11:29:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:01 AI_Player.update()	update
2017-01-04 11:29:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:29:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:01 AI_Player.update()	update
2017-01-04 11:29:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:02 AI_Player.update()	Search took352ms
2017-01-04 11:29:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:02 AI_Player.update()		110,	1001,	111,	110,	111,	11,	11
2017-01-04 11:29:02 AI_Player.update()		1110,	1001,	1100,	1010,	110,	110,	110
2017-01-04 11:29:02 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:29:02 AI_Player.update()		101,	1011,	1100,	110,	101,	11,	1010
2017-01-04 11:29:02 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 11:29:02 AI_Player.update()		1011,	1100,	1001,	1100,	1010,	1001,	101
2017-01-04 11:29:02 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:29:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:02 AI_Player.update()	update
2017-01-04 11:29:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:29:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:02 AI_Player.update()	update
2017-01-04 11:29:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:02 AI_Player.update()	Search took814ms
2017-01-04 11:29:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:02 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 11:29:02 AI_Player.update()		1110,	1001,	1100,	110,	110,	110,	110
2017-01-04 11:29:02 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 11:29:02 AI_Player.update()		101,	1011,	1100,	101,	101,	11,	1010
2017-01-04 11:29:02 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 11:29:02 AI_Player.update()		1011,	1100,	1001,	110,	1010,	1001,	101
2017-01-04 11:29:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:29:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:29:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:02 AI_Player.update()	update
2017-01-04 11:29:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:29:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:02 AI_Player.update()	update
2017-01-04 11:29:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:03 AI_Player.update()	Search took538ms
2017-01-04 11:29:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:03 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 11:29:03 AI_Player.update()		1110,	1001,	1100,	110,	110,	110,	110
2017-01-04 11:29:03 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 11:29:03 AI_Player.update()		101,	1011,	1100,	101,	101,	11,	1010
2017-01-04 11:29:03 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 11:29:03 AI_Player.update()		1100,	1001,	110,	1010,	1001,	101,	1011
2017-01-04 11:29:03 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:29:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:03 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:29:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:03 AI_Player.update()	update
2017-01-04 11:29:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:03 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:29:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:03 AI_Player.update()	update
2017-01-04 11:29:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:04 AI_Player.update()	Search took1471ms
2017-01-04 11:29:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:04 AI_Player.update()		110,	1001,	111,	1100,	111,	11,	11
2017-01-04 11:29:04 AI_Player.update()		1110,	1001,	1100,	101,	110,	110,	110
2017-01-04 11:29:04 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 11:29:04 AI_Player.update()		101,	1011,	1100,	1010,	101,	11,	1010
2017-01-04 11:29:04 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:29:04 AI_Player.update()		1100,	1001,	110,	110,	1001,	101,	1011
2017-01-04 11:29:04 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 11:29:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:04 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:29:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:04 AI_Player.update()	update
2017-01-04 11:29:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:04 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:29:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:04 AI_Player.update()	update
2017-01-04 11:29:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:05 AI_Player.update()	Search took720ms
2017-01-04 11:29:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:05 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 11:29:05 AI_Player.update()		1110,	1001,	1100,	110,	110,	110,	110
2017-01-04 11:29:05 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 11:29:05 AI_Player.update()		101,	1011,	1100,	101,	101,	11,	1010
2017-01-04 11:29:05 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 11:29:05 AI_Player.update()		1100,	1001,	110,	1010,	1001,	101,	1011
2017-01-04 11:29:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:29:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:05 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:29:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:05 AI_Player.update()	update
2017-01-04 11:29:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:05 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:29:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:05 AI_Player.update()	update
2017-01-04 11:29:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:06 AI_Player.update()	Search took773ms
2017-01-04 11:29:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:06 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 11:29:06 AI_Player.update()		1110,	1001,	1100,	110,	110,	11,	110
2017-01-04 11:29:06 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 11:29:06 AI_Player.update()		101,	1011,	1100,	101,	101,	101,	1010
2017-01-04 11:29:06 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 11:29:06 AI_Player.update()		1100,	1001,	110,	1010,	1001,	101,	1011
2017-01-04 11:29:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:29:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:29:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:06 AI_Player.update()	update
2017-01-04 11:29:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:29:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:06 AI_Player.update()	update
2017-01-04 11:29:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:06 AI_Player.update()	Search took87ms
2017-01-04 11:29:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:06 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 11:29:06 AI_Player.update()		1110,	1001,	1100,	110,	110,	110,	110
2017-01-04 11:29:06 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 11:29:06 AI_Player.update()		101,	1011,	1100,	101,	101,	11,	1010
2017-01-04 11:29:06 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 11:29:06 AI_Player.update()		1100,	1001,	110,	1010,	1001,	101,	1011
2017-01-04 11:29:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:29:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:29:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:06 AI_Player.update()	update
2017-01-04 11:29:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:29:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:06 AI_Player.update()	update
2017-01-04 11:29:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:06 AI_Player.update()	Search took210ms
2017-01-04 11:29:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:06 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 11:29:06 AI_Player.update()		110,	1110,	1001,	1100,	110,	110,	110
2017-01-04 11:29:06 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 11:29:06 AI_Player.update()		101,	1011,	1100,	101,	101,	11,	1010
2017-01-04 11:29:06 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 11:29:06 AI_Player.update()		1100,	1001,	110,	1010,	1001,	101,	1011
2017-01-04 11:29:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 11:29:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:29:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:06 AI_Player.update()	update
2017-01-04 11:29:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:06 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:29:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:06 AI_Player.update()	update
2017-01-04 11:29:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:07 AI_Player.update()	Search took766ms
2017-01-04 11:29:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:07 AI_Player.update()		110,	1001,	111,	1100,	111,	11,	11
2017-01-04 11:29:07 AI_Player.update()		110,	1110,	1001,	1010,	110,	110,	110
2017-01-04 11:29:07 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:29:07 AI_Player.update()		101,	1011,	1100,	110,	101,	11,	1010
2017-01-04 11:29:07 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-04 11:29:07 AI_Player.update()		1100,	1001,	110,	1100,	1001,	101,	1011
2017-01-04 11:29:07 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	6 3
2017-01-04 11:29:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:07 AI_Player.update()	update
2017-01-04 11:29:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:07 AI_Player.update()	update
2017-01-04 11:29:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:07 AI_Player.update()	Search took337ms
2017-01-04 11:29:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:07 AI_Player.update()		110,	1001,	111,	1100,	111,	11,	11
2017-01-04 11:29:07 AI_Player.update()		1110,	1001,	1010,	110,	110,	110,	110
2017-01-04 11:29:07 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:29:07 AI_Player.update()		101,	1011,	1100,	110,	101,	11,	1010
2017-01-04 11:29:07 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-04 11:29:07 AI_Player.update()		1100,	1001,	110,	1100,	1001,	101,	1011
2017-01-04 11:29:07 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:07 AI_Player.update()	update
2017-01-04 11:29:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:07 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:29:07 AI_Player.update()	Player a has won!
2017-01-04 11:29:07 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:29:07 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:29:07 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:29:07 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:29:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:07 AI_Player.update()	update
2017-01-04 11:29:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:08 AI_Player.update()	Search took353ms
2017-01-04 11:29:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 11:29:08 AI_Player.update()		1010,	101,	1010,	1010,	1010,	1100,	1001
2017-01-04 11:29:08 AI_Player.update()		1110,	110,	1110,	1010,	111,	1011,	1011
2017-01-04 11:29:08 AI_Player.update()		11,	1110,	111,	110,	1001,	1010,	110
2017-01-04 11:29:08 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-04 11:29:08 AI_Player.update()		1001,	1010,	11,	101,	1110,	1010,	1001
2017-01-04 11:29:08 AI_Player.update()		1100,	101,	1101,	110,	1101,	1110,	1001
2017-01-04 11:29:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()	update
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()	update
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:08 AI_Player.update()	Search took91ms
2017-01-04 11:29:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 11:29:08 AI_Player.update()		101,	1010,	1010,	1010,	1100,	1001,	1010
2017-01-04 11:29:08 AI_Player.update()		1110,	110,	1110,	1010,	111,	1011,	1011
2017-01-04 11:29:08 AI_Player.update()		11,	1110,	111,	110,	1001,	1010,	110
2017-01-04 11:29:08 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-04 11:29:08 AI_Player.update()		1001,	1010,	11,	101,	1110,	1010,	1001
2017-01-04 11:29:08 AI_Player.update()		1100,	101,	1101,	110,	1101,	1110,	1001
2017-01-04 11:29:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()	update
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()	update
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:08 AI_Player.update()	Search took228ms
2017-01-04 11:29:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-04 11:29:08 AI_Player.update()		101,	1010,	1010,	101,	1100,	1001,	1010
2017-01-04 11:29:08 AI_Player.update()		1110,	110,	1110,	1010,	111,	1011,	1011
2017-01-04 11:29:08 AI_Player.update()		11,	1110,	111,	1010,	1001,	1010,	110
2017-01-04 11:29:08 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-04 11:29:08 AI_Player.update()		1001,	1010,	11,	1101,	1110,	1010,	1001
2017-01-04 11:29:08 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-04 11:29:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()	update
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()	update
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:08 AI_Player.update()	Search took86ms
2017-01-04 11:29:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-04 11:29:08 AI_Player.update()		101,	1010,	1010,	101,	1100,	1001,	1010
2017-01-04 11:29:08 AI_Player.update()		1110,	110,	1110,	1010,	111,	1011,	1011
2017-01-04 11:29:08 AI_Player.update()		110,	11,	1110,	111,	1010,	1001,	1010
2017-01-04 11:29:08 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-04 11:29:08 AI_Player.update()		1001,	1010,	11,	1101,	1110,	1010,	1001
2017-01-04 11:29:08 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-04 11:29:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()	update
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()	update
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:08 AI_Player.update()	Search took97ms
2017-01-04 11:29:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 11:29:08 AI_Player.update()		101,	110,	1010,	101,	1100,	1001,	1010
2017-01-04 11:29:08 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-04 11:29:08 AI_Player.update()		110,	101,	1110,	111,	1010,	1001,	1010
2017-01-04 11:29:08 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-04 11:29:08 AI_Player.update()		1001,	101,	11,	1101,	1110,	1010,	1001
2017-01-04 11:29:08 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1110,	1001
2017-01-04 11:29:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()	update
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:08 AI_Player.update()	update
2017-01-04 11:29:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:09 AI_Player.update()	Search took375ms
2017-01-04 11:29:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:09 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 11:29:09 AI_Player.update()		101,	110,	1010,	101,	1100,	1001,	1010
2017-01-04 11:29:09 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-04 11:29:09 AI_Player.update()		1010,	110,	101,	1110,	111,	1010,	1001
2017-01-04 11:29:09 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-04 11:29:09 AI_Player.update()		1001,	101,	11,	1101,	1110,	1010,	1001
2017-01-04 11:29:09 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1110,	1001
2017-01-04 11:29:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:09 AI_Player.update()	update
2017-01-04 11:29:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:29:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:09 AI_Player.update()	update
2017-01-04 11:29:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:09 AI_Player.update()	Search took115ms
2017-01-04 11:29:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:09 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 11:29:09 AI_Player.update()		101,	110,	1010,	101,	1100,	1001,	1010
2017-01-04 11:29:09 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-04 11:29:09 AI_Player.update()		110,	101,	1110,	111,	1010,	1001,	1010
2017-01-04 11:29:09 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-04 11:29:09 AI_Player.update()		1001,	101,	11,	1101,	1110,	1010,	1001
2017-01-04 11:29:09 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1110,	1001
2017-01-04 11:29:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:29:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:09 AI_Player.update()	update
2017-01-04 11:29:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:29:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:09 AI_Player.update()	update
2017-01-04 11:29:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:09 AI_Player.update()	Search took208ms
2017-01-04 11:29:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:09 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 11:29:09 AI_Player.update()		101,	11,	1010,	101,	1100,	1001,	1010
2017-01-04 11:29:09 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-04 11:29:09 AI_Player.update()		110,	1010,	1110,	111,	1010,	1001,	1010
2017-01-04 11:29:09 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-04 11:29:09 AI_Player.update()		1001,	1100,	11,	1101,	1110,	1010,	1001
2017-01-04 11:29:09 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1110,	1001
2017-01-04 11:29:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:29:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:09 AI_Player.update()	update
2017-01-04 11:29:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	1 3
2017-01-04 11:29:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:09 AI_Player.update()	update
2017-01-04 11:29:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:09 AI_Player.update()	Search took131ms
2017-01-04 11:29:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:09 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 11:29:09 AI_Player.update()		1010,	101,	11,	1010,	101,	1100,	1001
2017-01-04 11:29:09 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-04 11:29:09 AI_Player.update()		110,	1010,	1110,	111,	1010,	1001,	1010
2017-01-04 11:29:09 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-04 11:29:09 AI_Player.update()		1001,	1100,	11,	1101,	1110,	1010,	1001
2017-01-04 11:29:09 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1110,	1001
2017-01-04 11:29:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	1 3
2017-01-04 11:29:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:09 AI_Player.update()	update
2017-01-04 11:29:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:29:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:09 AI_Player.update()	update
2017-01-04 11:29:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:10 AI_Player.update()	Search took565ms
2017-01-04 11:29:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:10 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 11:29:10 AI_Player.update()		1010,	101,	11,	1010,	101,	1100,	1001
2017-01-04 11:29:10 AI_Player.update()		1110,	101,	1110,	111,	111,	1011,	1011
2017-01-04 11:29:10 AI_Player.update()		110,	1010,	1110,	110,	1010,	1001,	1010
2017-01-04 11:29:10 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-04 11:29:10 AI_Player.update()		1001,	1100,	11,	101,	1110,	1010,	1001
2017-01-04 11:29:10 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-04 11:29:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:10 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:29:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:10 AI_Player.update()	update
2017-01-04 11:29:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:10 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:29:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:10 AI_Player.update()	update
2017-01-04 11:29:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:11 AI_Player.update()	Search took1216ms
2017-01-04 11:29:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:11 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 11:29:11 AI_Player.update()		1010,	101,	11,	111,	101,	1100,	1001
2017-01-04 11:29:11 AI_Player.update()		1110,	101,	1110,	110,	111,	1011,	1011
2017-01-04 11:29:11 AI_Player.update()		110,	1010,	1110,	1101,	1010,	1001,	1010
2017-01-04 11:29:11 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 11:29:11 AI_Player.update()		1001,	1100,	11,	110,	1110,	1010,	1001
2017-01-04 11:29:11 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1110,	1001
2017-01-04 11:29:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:11 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:29:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:11 AI_Player.update()	update
2017-01-04 11:29:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:11 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:29:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:11 AI_Player.update()	update
2017-01-04 11:29:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:11 AI_Player.update()	Search took375ms
2017-01-04 11:29:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:11 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 11:29:11 AI_Player.update()		1010,	101,	11,	1010,	101,	1100,	1001
2017-01-04 11:29:11 AI_Player.update()		1110,	101,	1110,	111,	111,	1011,	1011
2017-01-04 11:29:11 AI_Player.update()		110,	1010,	1110,	110,	1010,	1001,	1010
2017-01-04 11:29:11 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-04 11:29:11 AI_Player.update()		1001,	1100,	11,	101,	1110,	1010,	1001
2017-01-04 11:29:11 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-04 11:29:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:11 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:29:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:11 AI_Player.update()	update
2017-01-04 11:29:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:11 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:29:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:11 AI_Player.update()	update
2017-01-04 11:29:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:13 AI_Player.update()	Search took1611ms
2017-01-04 11:29:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:13 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 11:29:13 AI_Player.update()		1010,	101,	11,	1010,	101,	1100,	1001
2017-01-04 11:29:13 AI_Player.update()		1110,	101,	1110,	111,	111,	1011,	1011
2017-01-04 11:29:13 AI_Player.update()		1010,	110,	1010,	1110,	110,	1010,	1001
2017-01-04 11:29:13 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-04 11:29:13 AI_Player.update()		1001,	1100,	11,	101,	1110,	1010,	1001
2017-01-04 11:29:13 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-04 11:29:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:13 GameBoard.setupTreasurePanel()	2 3
2017-01-04 11:29:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:13 AI_Player.update()	update
2017-01-04 11:29:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:13 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:13 AI_Player.update()	update
2017-01-04 11:29:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:14 AI_Player.update()	Search took1474ms
2017-01-04 11:29:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:14 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 11:29:14 AI_Player.update()		1010,	101,	11,	1010,	101,	1100,	1001
2017-01-04 11:29:14 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-04 11:29:14 AI_Player.update()		1010,	110,	1010,	111,	110,	1010,	1001
2017-01-04 11:29:14 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1001,	1011
2017-01-04 11:29:14 AI_Player.update()		1001,	1100,	11,	1101,	1110,	1010,	1001
2017-01-04 11:29:14 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1110,	1001
2017-01-04 11:29:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:14 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:14 AI_Player.update()	update
2017-01-04 11:29:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:14 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:29:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:14 AI_Player.update()	update
2017-01-04 11:29:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:15 AI_Player.update()	Search took117ms
2017-01-04 11:29:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:15 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 11:29:15 AI_Player.update()		1010,	101,	11,	1010,	101,	1100,	1001
2017-01-04 11:29:15 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-04 11:29:15 AI_Player.update()		1001,	1010,	110,	1010,	111,	110,	1010
2017-01-04 11:29:15 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1001,	1011
2017-01-04 11:29:15 AI_Player.update()		1001,	1100,	11,	1101,	1110,	1010,	1001
2017-01-04 11:29:15 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1110,	1001
2017-01-04 11:29:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:15 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:29:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:15 AI_Player.update()	update
2017-01-04 11:29:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:15 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:29:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:15 AI_Player.update()	update
2017-01-04 11:29:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:15 AI_Player.update()	Search took659ms
2017-01-04 11:29:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:15 AI_Player.update()		110,	110,	111,	110,	111,	1100,	11
2017-01-04 11:29:15 AI_Player.update()		1010,	101,	11,	1010,	101,	1011,	1001
2017-01-04 11:29:15 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 11:29:15 AI_Player.update()		1001,	1010,	110,	1010,	111,	1001,	1010
2017-01-04 11:29:15 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-04 11:29:15 AI_Player.update()		1001,	1100,	11,	1101,	1110,	1110,	1001
2017-01-04 11:29:15 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 11:29:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:15 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:29:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:15 AI_Player.update()	update
2017-01-04 11:29:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:15 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:29:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:15 AI_Player.update()	update
2017-01-04 11:29:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:16 AI_Player.update()	Search took1251ms
2017-01-04 11:29:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:16 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-04 11:29:16 AI_Player.update()		1010,	101,	11,	1010,	101,	1011,	1001
2017-01-04 11:29:16 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 11:29:16 AI_Player.update()		1001,	101,	110,	1010,	111,	1001,	1010
2017-01-04 11:29:16 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1010,	1011
2017-01-04 11:29:16 AI_Player.update()		1001,	1010,	11,	1101,	1110,	1110,	1001
2017-01-04 11:29:16 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 11:29:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:16 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:29:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:16 AI_Player.update()	update
2017-01-04 11:29:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:16 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:29:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:16 AI_Player.update()	update
2017-01-04 11:29:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:18 AI_Player.update()	Search took1443ms
2017-01-04 11:29:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:18 AI_Player.update()		110,	101,	111,	110,	111,	1011,	11
2017-01-04 11:29:18 AI_Player.update()		1010,	101,	11,	1010,	101,	110,	1001
2017-01-04 11:29:18 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-04 11:29:18 AI_Player.update()		1001,	101,	110,	1010,	111,	1010,	1010
2017-01-04 11:29:18 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1110,	1011
2017-01-04 11:29:18 AI_Player.update()		1001,	1010,	11,	1101,	1110,	1010,	1001
2017-01-04 11:29:18 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-04 11:29:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:18 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:29:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:18 AI_Player.update()	update
2017-01-04 11:29:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:18 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:29:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:18 AI_Player.update()	update
2017-01-04 11:29:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:20 AI_Player.update()	Search took2215ms
2017-01-04 11:29:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:20 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 11:29:20 AI_Player.update()		1010,	101,	11,	110,	101,	110,	1001
2017-01-04 11:29:20 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-04 11:29:20 AI_Player.update()		1001,	101,	110,	1010,	111,	1010,	1010
2017-01-04 11:29:20 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-04 11:29:20 AI_Player.update()		1001,	1010,	11,	1110,	1110,	1010,	1001
2017-01-04 11:29:20 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1100,	1001
2017-01-04 11:29:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:20 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:29:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:20 AI_Player.update()	update
2017-01-04 11:29:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:20 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:29:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:20 AI_Player.update()	update
2017-01-04 11:29:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:21 AI_Player.update()	Search took693ms
2017-01-04 11:29:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:21 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 11:29:21 AI_Player.update()		1010,	1010,	11,	110,	101,	110,	1001
2017-01-04 11:29:21 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 11:29:21 AI_Player.update()		1001,	1100,	110,	1010,	111,	1010,	1010
2017-01-04 11:29:21 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-04 11:29:21 AI_Player.update()		1001,	110,	11,	1110,	1110,	1010,	1001
2017-01-04 11:29:21 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-04 11:29:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:21 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:29:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:21 AI_Player.update()	update
2017-01-04 11:29:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:21 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:29:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:21 AI_Player.update()	update
2017-01-04 11:29:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:22 AI_Player.update()	Search took1471ms
2017-01-04 11:29:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:22 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 11:29:22 AI_Player.update()		1010,	1010,	11,	110,	101,	1011,	1001
2017-01-04 11:29:22 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 11:29:22 AI_Player.update()		1001,	1100,	110,	1010,	111,	1001,	1010
2017-01-04 11:29:22 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:29:22 AI_Player.update()		1001,	110,	11,	1110,	1110,	1110,	1001
2017-01-04 11:29:22 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:29:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:29:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:22 AI_Player.update()	update
2017-01-04 11:29:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:22 AI_Player.update()	update
2017-01-04 11:29:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:22 AI_Player.update()	Search took125ms
2017-01-04 11:29:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:22 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 11:29:22 AI_Player.update()		1010,	1010,	11,	110,	101,	110,	1001
2017-01-04 11:29:22 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 11:29:22 AI_Player.update()		1001,	1100,	110,	1010,	111,	1010,	1010
2017-01-04 11:29:22 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-04 11:29:22 AI_Player.update()		1001,	110,	11,	1110,	1110,	1010,	1001
2017-01-04 11:29:22 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-04 11:29:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:22 AI_Player.update()	update
2017-01-04 11:29:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:22 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:22 AI_Player.update()	update
2017-01-04 11:29:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:23 AI_Player.update()	Search took1009ms
2017-01-04 11:29:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:23 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 11:29:23 AI_Player.update()		1010,	1010,	11,	110,	101,	1011,	1001
2017-01-04 11:29:23 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 11:29:23 AI_Player.update()		1001,	1100,	110,	1010,	111,	1001,	1010
2017-01-04 11:29:23 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:29:23 AI_Player.update()		1001,	110,	11,	1110,	1110,	1110,	1001
2017-01-04 11:29:23 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:29:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:23 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:23 AI_Player.update()	update
2017-01-04 11:29:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:23 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:23 AI_Player.update()	update
2017-01-04 11:29:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:26 AI_Player.update()	Search took2229ms
2017-01-04 11:29:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:26 AI_Player.update()		110,	101,	111,	1101,	111,	1100,	11
2017-01-04 11:29:26 AI_Player.update()		1010,	1010,	11,	101,	101,	1011,	1001
2017-01-04 11:29:26 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-04 11:29:26 AI_Player.update()		1001,	1100,	110,	1010,	111,	1001,	1010
2017-01-04 11:29:26 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:29:26 AI_Player.update()		1001,	110,	11,	1010,	1110,	1110,	1001
2017-01-04 11:29:26 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:29:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:26 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:26 AI_Player.update()	update
2017-01-04 11:29:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:26 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:26 AI_Player.update()	update
2017-01-04 11:29:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:26 AI_Player.update()	Search took458ms
2017-01-04 11:29:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:26 AI_Player.update()		110,	101,	111,	1101,	111,	1100,	11
2017-01-04 11:29:26 AI_Player.update()		1010,	1010,	11,	101,	101,	1011,	1001
2017-01-04 11:29:26 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-04 11:29:26 AI_Player.update()		1100,	110,	1010,	111,	1001,	1010,	1001
2017-01-04 11:29:26 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:29:26 AI_Player.update()		1001,	110,	11,	1010,	1110,	1110,	1001
2017-01-04 11:29:26 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:29:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:26 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:26 AI_Player.update()	update
2017-01-04 11:29:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:26 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:26 AI_Player.update()	update
2017-01-04 11:29:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:27 AI_Player.update()	Search took1134ms
2017-01-04 11:29:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:27 AI_Player.update()		110,	1010,	111,	1101,	111,	1100,	11
2017-01-04 11:29:27 AI_Player.update()		1010,	101,	11,	101,	101,	1011,	1001
2017-01-04 11:29:27 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-04 11:29:27 AI_Player.update()		1100,	1010,	1010,	111,	1001,	1010,	1001
2017-01-04 11:29:27 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:29:27 AI_Player.update()		1001,	101,	11,	1010,	1110,	1110,	1001
2017-01-04 11:29:27 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:29:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:27 AI_Player.update()	update
2017-01-04 11:29:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:27 AI_Player.update()	update
2017-01-04 11:29:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:28 AI_Player.update()	Search took472ms
2017-01-04 11:29:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:28 AI_Player.update()		110,	1010,	111,	1101,	111,	1100,	11
2017-01-04 11:29:28 AI_Player.update()		1010,	101,	11,	101,	101,	1011,	1001
2017-01-04 11:29:28 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-04 11:29:28 AI_Player.update()		1010,	1010,	111,	1001,	1010,	1001,	1100
2017-01-04 11:29:28 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:29:28 AI_Player.update()		1001,	101,	11,	1010,	1110,	1110,	1001
2017-01-04 11:29:28 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:29:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:28 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:28 AI_Player.update()	update
2017-01-04 11:29:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:28 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:28 AI_Player.update()	update
2017-01-04 11:29:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:28 AI_Player.update()	Search took280ms
2017-01-04 11:29:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:28 AI_Player.update()		110,	101,	111,	1101,	111,	1100,	11
2017-01-04 11:29:28 AI_Player.update()		1010,	110,	11,	101,	101,	1011,	1001
2017-01-04 11:29:28 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-04 11:29:28 AI_Player.update()		1010,	110,	111,	1001,	1010,	1001,	1100
2017-01-04 11:29:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:29:28 AI_Player.update()		1001,	101,	11,	1010,	1110,	1110,	1001
2017-01-04 11:29:28 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:29:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:28 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:28 AI_Player.update()	update
2017-01-04 11:29:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:28 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:28 AI_Player.update()	update
2017-01-04 11:29:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:29 AI_Player.update()	Search took1172ms
2017-01-04 11:29:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:29 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 11:29:29 AI_Player.update()		1010,	110,	11,	110,	101,	1011,	1001
2017-01-04 11:29:29 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-04 11:29:29 AI_Player.update()		1010,	110,	111,	1010,	1010,	1001,	1100
2017-01-04 11:29:29 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:29:29 AI_Player.update()		1001,	101,	11,	1110,	1110,	1110,	1001
2017-01-04 11:29:29 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1010,	1001
2017-01-04 11:29:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:29 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:29 AI_Player.update()	update
2017-01-04 11:29:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:29 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:29:29 AI_Player.update()	Player a has won!
2017-01-04 11:29:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:29:29 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:29:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:29:29 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:29:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:29 AI_Player.update()	update
2017-01-04 11:29:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:30 AI_Player.update()	Search took580ms
2017-01-04 11:29:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:30 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 11:29:30 AI_Player.update()		1010,	11,	110,	101,	101,	1110,	1100
2017-01-04 11:29:30 AI_Player.update()		1110,	11,	1110,	1101,	111,	11,	1011
2017-01-04 11:29:30 AI_Player.update()		1010,	101,	11,	1100,	11,	110,	101
2017-01-04 11:29:30 AI_Player.update()		1110,	111,	1101,	110,	1011,	1100,	1011
2017-01-04 11:29:30 AI_Player.update()		11,	101,	101,	101,	11,	1110,	111
2017-01-04 11:29:30 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:29:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:30 AI_Player.update()	update
2017-01-04 11:29:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:30 AI_Player.update()	update
2017-01-04 11:29:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:30 AI_Player.update()	Search took136ms
2017-01-04 11:29:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:30 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 11:29:30 AI_Player.update()		11,	110,	101,	101,	1110,	1100,	1010
2017-01-04 11:29:30 AI_Player.update()		1110,	11,	1110,	1101,	111,	11,	1011
2017-01-04 11:29:30 AI_Player.update()		1010,	101,	11,	1100,	11,	110,	101
2017-01-04 11:29:30 AI_Player.update()		1110,	111,	1101,	110,	1011,	1100,	1011
2017-01-04 11:29:30 AI_Player.update()		11,	101,	101,	101,	11,	1110,	111
2017-01-04 11:29:30 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:29:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:30 AI_Player.update()	update
2017-01-04 11:29:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:30 AI_Player.update()	update
2017-01-04 11:29:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:30 AI_Player.update()	Search took362ms
2017-01-04 11:29:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:30 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 11:29:30 AI_Player.update()		110,	101,	101,	1110,	1100,	1010,	11
2017-01-04 11:29:30 AI_Player.update()		1110,	11,	1110,	1101,	111,	11,	1011
2017-01-04 11:29:30 AI_Player.update()		1010,	101,	11,	1100,	11,	110,	101
2017-01-04 11:29:30 AI_Player.update()		1110,	111,	1101,	110,	1011,	1100,	1011
2017-01-04 11:29:30 AI_Player.update()		11,	101,	101,	101,	11,	1110,	111
2017-01-04 11:29:30 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:29:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:30 AI_Player.update()	update
2017-01-04 11:29:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:30 AI_Player.update()	update
2017-01-04 11:29:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:30 AI_Player.update()	Search took41ms
2017-01-04 11:29:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:30 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 11:29:30 AI_Player.update()		11,	110,	101,	101,	1110,	1100,	1010
2017-01-04 11:29:30 AI_Player.update()		1110,	11,	1110,	1101,	111,	11,	1011
2017-01-04 11:29:30 AI_Player.update()		1010,	101,	11,	1100,	11,	110,	101
2017-01-04 11:29:30 AI_Player.update()		1110,	111,	1101,	110,	1011,	1100,	1011
2017-01-04 11:29:30 AI_Player.update()		11,	101,	101,	101,	11,	1110,	111
2017-01-04 11:29:30 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:29:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:30 AI_Player.update()	update
2017-01-04 11:29:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:30 AI_Player.update()	update
2017-01-04 11:29:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:31 AI_Player.update()	Search took287ms
2017-01-04 11:29:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:31 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 11:29:31 AI_Player.update()		11,	110,	101,	101,	1110,	1100,	1010
2017-01-04 11:29:31 AI_Player.update()		1110,	110,	1110,	1101,	111,	11,	1011
2017-01-04 11:29:31 AI_Player.update()		1010,	11,	11,	1100,	11,	110,	101
2017-01-04 11:29:31 AI_Player.update()		1110,	101,	1101,	110,	1011,	1100,	1011
2017-01-04 11:29:31 AI_Player.update()		11,	111,	101,	101,	11,	1110,	111
2017-01-04 11:29:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 11:29:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:31 AI_Player.update()	update
2017-01-04 11:29:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:29:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:31 AI_Player.update()	update
2017-01-04 11:29:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:31 AI_Player.update()	Search took169ms
2017-01-04 11:29:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:31 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 11:29:31 AI_Player.update()		1010,	11,	110,	101,	101,	1110,	1100
2017-01-04 11:29:31 AI_Player.update()		1110,	110,	1110,	1101,	111,	11,	1011
2017-01-04 11:29:31 AI_Player.update()		1010,	11,	11,	1100,	11,	110,	101
2017-01-04 11:29:31 AI_Player.update()		1110,	101,	1101,	110,	1011,	1100,	1011
2017-01-04 11:29:31 AI_Player.update()		11,	111,	101,	101,	11,	1110,	111
2017-01-04 11:29:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 11:29:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:29:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:31 AI_Player.update()	update
2017-01-04 11:29:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:31 AI_Player.update()	update
2017-01-04 11:29:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:31 AI_Player.update()	Search took477ms
2017-01-04 11:29:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:31 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 11:29:31 AI_Player.update()		11,	110,	101,	101,	1110,	1100,	1010
2017-01-04 11:29:31 AI_Player.update()		1110,	110,	1110,	1101,	111,	11,	1011
2017-01-04 11:29:31 AI_Player.update()		1010,	11,	11,	1100,	11,	110,	101
2017-01-04 11:29:31 AI_Player.update()		1110,	101,	1101,	110,	1011,	1100,	1011
2017-01-04 11:29:31 AI_Player.update()		11,	111,	101,	101,	11,	1110,	111
2017-01-04 11:29:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 11:29:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:31 AI_Player.update()	update
2017-01-04 11:29:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:31 AI_Player.update()	update
2017-01-04 11:29:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:32 AI_Player.update()	Search took217ms
2017-01-04 11:29:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:32 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 11:29:32 AI_Player.update()		11,	110,	101,	101,	1110,	1100,	1010
2017-01-04 11:29:32 AI_Player.update()		1110,	11,	1110,	1101,	111,	11,	1011
2017-01-04 11:29:32 AI_Player.update()		1010,	101,	11,	1100,	11,	110,	101
2017-01-04 11:29:32 AI_Player.update()		1110,	111,	1101,	110,	1011,	1100,	1011
2017-01-04 11:29:32 AI_Player.update()		11,	101,	101,	101,	11,	1110,	111
2017-01-04 11:29:32 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:29:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:32 AI_Player.update()	update
2017-01-04 11:29:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:32 AI_Player.update()	update
2017-01-04 11:29:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:32 AI_Player.update()	Search took316ms
2017-01-04 11:29:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:32 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 11:29:32 AI_Player.update()		11,	110,	101,	110,	1110,	1100,	1010
2017-01-04 11:29:32 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 11:29:32 AI_Player.update()		1010,	101,	11,	1101,	11,	110,	101
2017-01-04 11:29:32 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:29:32 AI_Player.update()		11,	101,	101,	110,	11,	1110,	111
2017-01-04 11:29:32 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:29:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:32 AI_Player.update()	update
2017-01-04 11:29:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:29:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:32 AI_Player.update()	update
2017-01-04 11:29:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:32 AI_Player.update()	Search took316ms
2017-01-04 11:29:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:32 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 11:29:32 AI_Player.update()		11,	110,	101,	110,	1110,	1100,	1010
2017-01-04 11:29:32 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 11:29:32 AI_Player.update()		101,	11,	1101,	11,	110,	101,	1010
2017-01-04 11:29:32 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1100,	1011
2017-01-04 11:29:32 AI_Player.update()		11,	101,	101,	110,	11,	1110,	111
2017-01-04 11:29:32 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 11:29:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:29:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:32 AI_Player.update()	update
2017-01-04 11:29:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:32 AI_Player.update()	update
2017-01-04 11:29:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:33 AI_Player.update()	Search took478ms
2017-01-04 11:29:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:33 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-04 11:29:33 AI_Player.update()		11,	110,	101,	110,	1110,	11,	1010
2017-01-04 11:29:33 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 11:29:33 AI_Player.update()		101,	11,	1101,	11,	110,	1100,	1010
2017-01-04 11:29:33 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1110,	1011
2017-01-04 11:29:33 AI_Player.update()		11,	101,	101,	110,	11,	110,	111
2017-01-04 11:29:33 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:33 AI_Player.update()	update
2017-01-04 11:29:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:33 AI_Player.update()	update
2017-01-04 11:29:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:33 AI_Player.update()	Search took552ms
2017-01-04 11:29:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:33 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-04 11:29:33 AI_Player.update()		11,	11,	101,	110,	1110,	11,	1010
2017-01-04 11:29:33 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 11:29:33 AI_Player.update()		101,	111,	1101,	11,	110,	1100,	1010
2017-01-04 11:29:33 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1110,	1011
2017-01-04 11:29:33 AI_Player.update()		11,	1010,	101,	110,	11,	110,	111
2017-01-04 11:29:33 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:33 AI_Player.update()	update
2017-01-04 11:29:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:29:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:33 AI_Player.update()	update
2017-01-04 11:29:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:34 AI_Player.update()	Search took763ms
2017-01-04 11:29:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:34 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-04 11:29:34 AI_Player.update()		11,	11,	101,	110,	1110,	11,	1010
2017-01-04 11:29:34 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 11:29:34 AI_Player.update()		1010,	101,	111,	1101,	11,	110,	1100
2017-01-04 11:29:34 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1110,	1011
2017-01-04 11:29:34 AI_Player.update()		11,	1010,	101,	110,	11,	110,	111
2017-01-04 11:29:34 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:34 GameBoard.setupTreasurePanel()	3 4
2017-01-04 11:29:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:34 AI_Player.update()	update
2017-01-04 11:29:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:34 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:29:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:34 AI_Player.update()	update
2017-01-04 11:29:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:35 AI_Player.update()	Search took400ms
2017-01-04 11:29:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-04 11:29:35 AI_Player.update()		1010,	11,	11,	101,	110,	1110,	11
2017-01-04 11:29:35 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 11:29:35 AI_Player.update()		1010,	101,	111,	1101,	11,	110,	1100
2017-01-04 11:29:35 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1110,	1011
2017-01-04 11:29:35 AI_Player.update()		11,	1010,	101,	110,	11,	110,	111
2017-01-04 11:29:35 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:29:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()	update
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:29:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()	update
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:35 AI_Player.update()	Search took458ms
2017-01-04 11:29:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()		110,	110,	111,	101,	111,	1110,	11
2017-01-04 11:29:35 AI_Player.update()		1010,	11,	11,	101,	110,	101,	11
2017-01-04 11:29:35 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-04 11:29:35 AI_Player.update()		1010,	101,	111,	1101,	11,	1110,	1100
2017-01-04 11:29:35 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-04 11:29:35 AI_Player.update()		11,	1010,	101,	110,	11,	101,	111
2017-01-04 11:29:35 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-04 11:29:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:29:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()	update
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:29:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()	update
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:35 AI_Player.update()	Search took70ms
2017-01-04 11:29:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()		110,	11,	111,	101,	111,	1110,	11
2017-01-04 11:29:35 AI_Player.update()		1010,	11,	11,	101,	110,	101,	11
2017-01-04 11:29:35 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-04 11:29:35 AI_Player.update()		1010,	101,	111,	1101,	11,	1110,	1100
2017-01-04 11:29:35 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-04 11:29:35 AI_Player.update()		11,	110,	101,	110,	11,	101,	111
2017-01-04 11:29:35 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-04 11:29:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:29:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()	update
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:29:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()	update
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:35 AI_Player.update()	Search took222ms
2017-01-04 11:29:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()		110,	110,	111,	101,	111,	1110,	11
2017-01-04 11:29:35 AI_Player.update()		1010,	11,	11,	101,	110,	101,	11
2017-01-04 11:29:35 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-04 11:29:35 AI_Player.update()		1010,	101,	111,	1101,	11,	1110,	1100
2017-01-04 11:29:35 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-04 11:29:35 AI_Player.update()		11,	1010,	101,	110,	11,	101,	111
2017-01-04 11:29:35 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-04 11:29:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:29:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()	update
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:29:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()	update
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:35 AI_Player.update()	Search took71ms
2017-01-04 11:29:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 11:29:35 AI_Player.update()		1010,	11,	11,	101,	110,	110,	11
2017-01-04 11:29:35 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-04 11:29:35 AI_Player.update()		1010,	101,	111,	1101,	11,	110,	1100
2017-01-04 11:29:35 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 11:29:35 AI_Player.update()		11,	1010,	101,	110,	11,	1100,	111
2017-01-04 11:29:35 AI_Player.update()		1100,	110,	1101,	101,	1101,	1110,	1001
2017-01-04 11:29:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:29:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()	update
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:29:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:35 AI_Player.update()	update
2017-01-04 11:29:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:36 AI_Player.update()	Search took513ms
2017-01-04 11:29:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:36 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 11:29:36 AI_Player.update()		1010,	11,	11,	101,	110,	110,	11
2017-01-04 11:29:36 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-04 11:29:36 AI_Player.update()		1010,	101,	111,	101,	11,	110,	1100
2017-01-04 11:29:36 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-04 11:29:36 AI_Player.update()		11,	1010,	101,	1100,	11,	1100,	111
2017-01-04 11:29:36 AI_Player.update()		1100,	110,	1101,	110,	1101,	1110,	1001
2017-01-04 11:29:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:29:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:36 AI_Player.update()	update
2017-01-04 11:29:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:36 AI_Player.update()	update
2017-01-04 11:29:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:36 AI_Player.update()	Search took124ms
2017-01-04 11:29:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:36 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 11:29:36 AI_Player.update()		11,	11,	101,	110,	110,	11,	1010
2017-01-04 11:29:36 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-04 11:29:36 AI_Player.update()		1010,	101,	111,	101,	11,	110,	1100
2017-01-04 11:29:36 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-04 11:29:36 AI_Player.update()		11,	1010,	101,	1100,	11,	1100,	111
2017-01-04 11:29:36 AI_Player.update()		1100,	110,	1101,	110,	1101,	1110,	1001
2017-01-04 11:29:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:36 AI_Player.update()	update
2017-01-04 11:29:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:36 AI_Player.update()	update
2017-01-04 11:29:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:36 AI_Player.update()	Search took217ms
2017-01-04 11:29:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:36 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 11:29:36 AI_Player.update()		11,	11,	101,	110,	110,	11,	1010
2017-01-04 11:29:36 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-04 11:29:36 AI_Player.update()		1100,	1010,	101,	111,	101,	11,	110
2017-01-04 11:29:36 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-04 11:29:36 AI_Player.update()		11,	1010,	101,	1100,	11,	1100,	111
2017-01-04 11:29:36 AI_Player.update()		1100,	110,	1101,	110,	1101,	1110,	1001
2017-01-04 11:29:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:36 AI_Player.update()	update
2017-01-04 11:29:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:36 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:36 AI_Player.update()	update
2017-01-04 11:29:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:37 AI_Player.update()	Search took326ms
2017-01-04 11:29:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 11:29:37 AI_Player.update()		11,	11,	101,	101,	110,	11,	1010
2017-01-04 11:29:37 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-04 11:29:37 AI_Player.update()		1100,	1010,	101,	101,	101,	11,	110
2017-01-04 11:29:37 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-04 11:29:37 AI_Player.update()		11,	1010,	101,	1101,	11,	1100,	111
2017-01-04 11:29:37 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-04 11:29:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:37 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()	update
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:37 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()	update
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:37 AI_Player.update()	Search took216ms
2017-01-04 11:29:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 11:29:37 AI_Player.update()		11,	11,	101,	101,	110,	11,	1010
2017-01-04 11:29:37 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-04 11:29:37 AI_Player.update()		1100,	1010,	101,	101,	101,	11,	110
2017-01-04 11:29:37 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-04 11:29:37 AI_Player.update()		1010,	101,	1101,	11,	1100,	111,	11
2017-01-04 11:29:37 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-04 11:29:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:37 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()	update
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:37 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()	update
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:37 AI_Player.update()	Search took297ms
2017-01-04 11:29:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()		110,	110,	111,	110,	111,	11,	11
2017-01-04 11:29:37 AI_Player.update()		11,	11,	101,	101,	110,	1110,	1010
2017-01-04 11:29:37 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-04 11:29:37 AI_Player.update()		1100,	1010,	101,	101,	101,	101,	110
2017-01-04 11:29:37 AI_Player.update()		1110,	101,	1101,	111,	1011,	111,	1011
2017-01-04 11:29:37 AI_Player.update()		1010,	101,	1101,	11,	1100,	1110,	11
2017-01-04 11:29:37 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 11:29:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:37 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()	update
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:37 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()	update
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:37 AI_Player.update()	Search took159ms
2017-01-04 11:29:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()		110,	110,	111,	110,	111,	11,	11
2017-01-04 11:29:37 AI_Player.update()		11,	110,	101,	101,	110,	1110,	1010
2017-01-04 11:29:37 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-04 11:29:37 AI_Player.update()		1100,	11,	101,	101,	101,	101,	110
2017-01-04 11:29:37 AI_Player.update()		1110,	1010,	1101,	111,	1011,	111,	1011
2017-01-04 11:29:37 AI_Player.update()		1010,	101,	1101,	11,	1100,	1110,	11
2017-01-04 11:29:37 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 11:29:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:37 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()	update
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:37 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()	update
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:37 AI_Player.update()	Search took223ms
2017-01-04 11:29:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-04 11:29:37 AI_Player.update()		11,	110,	101,	110,	110,	1110,	1010
2017-01-04 11:29:37 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 11:29:37 AI_Player.update()		1100,	11,	101,	110,	101,	101,	110
2017-01-04 11:29:37 AI_Player.update()		1110,	1010,	1101,	101,	1011,	111,	1011
2017-01-04 11:29:37 AI_Player.update()		1010,	101,	1101,	111,	1100,	1110,	11
2017-01-04 11:29:37 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 11:29:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:37 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()	update
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:37 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:37 AI_Player.update()	update
2017-01-04 11:29:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:38 AI_Player.update()	Search took199ms
2017-01-04 11:29:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:38 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-04 11:29:38 AI_Player.update()		11,	110,	101,	110,	110,	1110,	1010
2017-01-04 11:29:38 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 11:29:38 AI_Player.update()		1100,	11,	101,	110,	101,	101,	110
2017-01-04 11:29:38 AI_Player.update()		1110,	1010,	1101,	101,	1011,	111,	1011
2017-01-04 11:29:38 AI_Player.update()		11,	1010,	101,	1101,	111,	1100,	1110
2017-01-04 11:29:38 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 11:29:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:38 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:38 AI_Player.update()	update
2017-01-04 11:29:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:38 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:38 AI_Player.update()	update
2017-01-04 11:29:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:38 AI_Player.update()	Search took56ms
2017-01-04 11:29:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:38 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-04 11:29:38 AI_Player.update()		11,	11,	101,	110,	110,	1110,	1010
2017-01-04 11:29:38 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 11:29:38 AI_Player.update()		1100,	1010,	101,	110,	101,	101,	110
2017-01-04 11:29:38 AI_Player.update()		1110,	1010,	1101,	101,	1011,	111,	1011
2017-01-04 11:29:38 AI_Player.update()		11,	101,	101,	1101,	111,	1100,	1110
2017-01-04 11:29:38 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 11:29:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:38 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:38 AI_Player.update()	update
2017-01-04 11:29:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:38 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:38 AI_Player.update()	update
2017-01-04 11:29:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:38 AI_Player.update()	Search took274ms
2017-01-04 11:29:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:38 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-04 11:29:38 AI_Player.update()		11,	11,	101,	110,	110,	1110,	1010
2017-01-04 11:29:38 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 11:29:38 AI_Player.update()		1100,	1010,	101,	110,	101,	101,	110
2017-01-04 11:29:38 AI_Player.update()		1110,	1010,	1101,	101,	1011,	111,	1011
2017-01-04 11:29:38 AI_Player.update()		1110,	11,	101,	101,	1101,	111,	1100
2017-01-04 11:29:38 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 11:29:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:38 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:38 AI_Player.update()	update
2017-01-04 11:29:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:38 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:38 AI_Player.update()	update
2017-01-04 11:29:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:39 AI_Player.update()	Search took549ms
2017-01-04 11:29:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:39 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-04 11:29:39 AI_Player.update()		11,	11,	101,	1100,	110,	1110,	1010
2017-01-04 11:29:39 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-04 11:29:39 AI_Player.update()		1100,	1010,	101,	101,	101,	101,	110
2017-01-04 11:29:39 AI_Player.update()		1110,	1010,	1101,	110,	1011,	111,	1011
2017-01-04 11:29:39 AI_Player.update()		1110,	11,	101,	101,	1101,	111,	1100
2017-01-04 11:29:39 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:39 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:39 AI_Player.update()	update
2017-01-04 11:29:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:39 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:39 AI_Player.update()	update
2017-01-04 11:29:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:39 AI_Player.update()	Search took194ms
2017-01-04 11:29:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:39 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-04 11:29:39 AI_Player.update()		11,	11,	101,	110,	110,	1110,	1010
2017-01-04 11:29:39 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 11:29:39 AI_Player.update()		1100,	1010,	101,	110,	101,	101,	110
2017-01-04 11:29:39 AI_Player.update()		1110,	1010,	1101,	101,	1011,	111,	1011
2017-01-04 11:29:39 AI_Player.update()		1110,	11,	101,	101,	1101,	111,	1100
2017-01-04 11:29:39 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 11:29:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:39 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:39 AI_Player.update()	update
2017-01-04 11:29:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:39 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:39 AI_Player.update()	update
2017-01-04 11:29:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:39 AI_Player.update()	Search took517ms
2017-01-04 11:29:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:39 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-04 11:29:39 AI_Player.update()		11,	11,	101,	1100,	110,	1110,	1010
2017-01-04 11:29:39 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-04 11:29:39 AI_Player.update()		1100,	1010,	101,	101,	101,	101,	110
2017-01-04 11:29:39 AI_Player.update()		1110,	1010,	1101,	110,	1011,	111,	1011
2017-01-04 11:29:39 AI_Player.update()		1110,	11,	101,	101,	1101,	111,	1100
2017-01-04 11:29:39 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:39 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:39 AI_Player.update()	update
2017-01-04 11:29:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:39 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:39 AI_Player.update()	update
2017-01-04 11:29:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:40 AI_Player.update()	Search took244ms
2017-01-04 11:29:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:40 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 11:29:40 AI_Player.update()		11,	11,	101,	11,	110,	1110,	1010
2017-01-04 11:29:40 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 11:29:40 AI_Player.update()		1100,	1010,	101,	110,	101,	101,	110
2017-01-04 11:29:40 AI_Player.update()		1110,	1010,	1101,	101,	1011,	111,	1011
2017-01-04 11:29:40 AI_Player.update()		1110,	11,	101,	110,	1101,	111,	1100
2017-01-04 11:29:40 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:40 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:40 AI_Player.update()	update
2017-01-04 11:29:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:40 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:40 AI_Player.update()	update
2017-01-04 11:29:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:40 AI_Player.update()	Search took299ms
2017-01-04 11:29:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:40 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 11:29:40 AI_Player.update()		11,	11,	101,	11,	110,	1110,	1010
2017-01-04 11:29:40 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 11:29:40 AI_Player.update()		1100,	1010,	101,	110,	101,	101,	110
2017-01-04 11:29:40 AI_Player.update()		1110,	1010,	1101,	101,	1011,	111,	1011
2017-01-04 11:29:40 AI_Player.update()		11,	101,	110,	1101,	111,	1100,	1110
2017-01-04 11:29:40 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:40 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:40 AI_Player.update()	update
2017-01-04 11:29:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:40 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:40 AI_Player.update()	update
2017-01-04 11:29:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:40 AI_Player.update()	Search took223ms
2017-01-04 11:29:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:40 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 11:29:40 AI_Player.update()		11,	11,	101,	101,	110,	1110,	1010
2017-01-04 11:29:40 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-04 11:29:40 AI_Player.update()		1100,	1010,	101,	1100,	101,	101,	110
2017-01-04 11:29:40 AI_Player.update()		1110,	1010,	1101,	110,	1011,	111,	1011
2017-01-04 11:29:40 AI_Player.update()		11,	101,	110,	101,	111,	1100,	1110
2017-01-04 11:29:40 AI_Player.update()		1100,	110,	1101,	1101,	1101,	101,	1001
2017-01-04 11:29:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:40 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:40 AI_Player.update()	update
2017-01-04 11:29:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:40 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:40 AI_Player.update()	update
2017-01-04 11:29:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:41 AI_Player.update()	Search took727ms
2017-01-04 11:29:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:41 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 11:29:41 AI_Player.update()		11,	11,	101,	101,	110,	1110,	1010
2017-01-04 11:29:41 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-04 11:29:41 AI_Player.update()		1100,	1010,	101,	1100,	101,	101,	110
2017-01-04 11:29:41 AI_Player.update()		1110,	101,	1101,	110,	1011,	111,	1011
2017-01-04 11:29:41 AI_Player.update()		11,	110,	110,	101,	111,	1100,	1110
2017-01-04 11:29:41 AI_Player.update()		1100,	110,	1101,	1101,	1101,	101,	1001
2017-01-04 11:29:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:41 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:41 AI_Player.update()	update
2017-01-04 11:29:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:41 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:41 AI_Player.update()	update
2017-01-04 11:29:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:41 AI_Player.update()	Search took139ms
2017-01-04 11:29:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:41 AI_Player.update()		110,	11,	111,	1101,	111,	11,	11
2017-01-04 11:29:41 AI_Player.update()		11,	11,	101,	101,	110,	1110,	1010
2017-01-04 11:29:41 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:29:41 AI_Player.update()		1100,	1010,	101,	11,	101,	101,	110
2017-01-04 11:29:41 AI_Player.update()		1110,	101,	1101,	1100,	1011,	111,	1011
2017-01-04 11:29:41 AI_Player.update()		11,	110,	110,	110,	111,	1100,	1110
2017-01-04 11:29:41 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:41 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:41 AI_Player.update()	update
2017-01-04 11:29:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:41 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:41 AI_Player.update()	update
2017-01-04 11:29:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:42 AI_Player.update()	Search took649ms
2017-01-04 11:29:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:42 AI_Player.update()		110,	11,	111,	1101,	111,	11,	11
2017-01-04 11:29:42 AI_Player.update()		11,	1010,	101,	101,	110,	1110,	1010
2017-01-04 11:29:42 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:29:42 AI_Player.update()		1100,	101,	101,	11,	101,	101,	110
2017-01-04 11:29:42 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-04 11:29:42 AI_Player.update()		11,	110,	110,	110,	111,	1100,	1110
2017-01-04 11:29:42 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-04 11:29:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:42 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:42 AI_Player.update()	update
2017-01-04 11:29:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:42 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:42 AI_Player.update()	update
2017-01-04 11:29:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:42 AI_Player.update()	Search took172ms
2017-01-04 11:29:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:42 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 11:29:42 AI_Player.update()		11,	1010,	101,	1101,	110,	1110,	1010
2017-01-04 11:29:42 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:29:42 AI_Player.update()		1100,	101,	101,	101,	101,	101,	110
2017-01-04 11:29:42 AI_Player.update()		1110,	110,	1101,	11,	1011,	111,	1011
2017-01-04 11:29:42 AI_Player.update()		11,	110,	110,	1100,	111,	1100,	1110
2017-01-04 11:29:42 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 11:29:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:42 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:42 AI_Player.update()	update
2017-01-04 11:29:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:42 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:42 AI_Player.update()	update
2017-01-04 11:29:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:42 AI_Player.update()	Search took550ms
2017-01-04 11:29:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:42 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 11:29:42 AI_Player.update()		11,	1010,	101,	1101,	110,	1110,	1010
2017-01-04 11:29:42 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-04 11:29:42 AI_Player.update()		1100,	110,	101,	101,	101,	101,	110
2017-01-04 11:29:42 AI_Player.update()		1110,	110,	1101,	11,	1011,	111,	1011
2017-01-04 11:29:42 AI_Player.update()		11,	11,	110,	1100,	111,	1100,	1110
2017-01-04 11:29:42 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 11:29:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:42 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:42 AI_Player.update()	update
2017-01-04 11:29:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:42 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:42 AI_Player.update()	update
2017-01-04 11:29:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:43 AI_Player.update()	Search took202ms
2017-01-04 11:29:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:43 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-04 11:29:43 AI_Player.update()		11,	1010,	101,	101,	110,	1110,	1010
2017-01-04 11:29:43 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-04 11:29:43 AI_Player.update()		1100,	110,	101,	101,	101,	101,	110
2017-01-04 11:29:43 AI_Player.update()		1110,	110,	1101,	101,	1011,	111,	1011
2017-01-04 11:29:43 AI_Player.update()		11,	11,	110,	11,	111,	1100,	1110
2017-01-04 11:29:43 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 11:29:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:43 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:43 AI_Player.update()	update
2017-01-04 11:29:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:43 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:43 AI_Player.update()	update
2017-01-04 11:29:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:43 AI_Player.update()	Search took597ms
2017-01-04 11:29:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:43 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 11:29:43 AI_Player.update()		11,	1010,	101,	101,	110,	11,	1010
2017-01-04 11:29:43 AI_Player.update()		1110,	101,	1110,	1101,	111,	1110,	1011
2017-01-04 11:29:43 AI_Player.update()		1100,	110,	101,	101,	101,	11,	110
2017-01-04 11:29:43 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:29:43 AI_Player.update()		11,	11,	110,	11,	111,	111,	1110
2017-01-04 11:29:43 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-04 11:29:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:43 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:43 AI_Player.update()	update
2017-01-04 11:29:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:43 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:43 AI_Player.update()	update
2017-01-04 11:29:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:43 AI_Player.update()	Search took279ms
2017-01-04 11:29:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:43 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 11:29:43 AI_Player.update()		11,	1010,	101,	101,	110,	11,	1010
2017-01-04 11:29:43 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1110,	1011
2017-01-04 11:29:43 AI_Player.update()		1100,	101,	101,	101,	101,	11,	110
2017-01-04 11:29:43 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:29:43 AI_Player.update()		11,	110,	110,	11,	111,	111,	1110
2017-01-04 11:29:43 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-04 11:29:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:43 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:43 AI_Player.update()	update
2017-01-04 11:29:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:43 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:43 AI_Player.update()	update
2017-01-04 11:29:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:44 AI_Player.update()	Search took661ms
2017-01-04 11:29:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:44 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 11:29:44 AI_Player.update()		11,	1010,	101,	1101,	110,	11,	1010
2017-01-04 11:29:44 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-04 11:29:44 AI_Player.update()		1100,	101,	101,	101,	101,	11,	110
2017-01-04 11:29:44 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-04 11:29:44 AI_Player.update()		11,	110,	110,	1100,	111,	111,	1110
2017-01-04 11:29:44 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-04 11:29:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:44 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:44 AI_Player.update()	update
2017-01-04 11:29:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:44 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:44 AI_Player.update()	update
2017-01-04 11:29:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:44 AI_Player.update()	Search took322ms
2017-01-04 11:29:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:44 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 11:29:44 AI_Player.update()		11,	1010,	101,	101,	110,	11,	1010
2017-01-04 11:29:44 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1110,	1011
2017-01-04 11:29:44 AI_Player.update()		1100,	101,	101,	101,	101,	11,	110
2017-01-04 11:29:44 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:29:44 AI_Player.update()		11,	110,	110,	11,	111,	111,	1110
2017-01-04 11:29:44 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-04 11:29:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:44 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:44 AI_Player.update()	update
2017-01-04 11:29:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:44 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:44 AI_Player.update()	update
2017-01-04 11:29:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:45 AI_Player.update()	Search took666ms
2017-01-04 11:29:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:45 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 11:29:45 AI_Player.update()		11,	1010,	101,	1101,	110,	11,	1010
2017-01-04 11:29:45 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-04 11:29:45 AI_Player.update()		1100,	101,	101,	101,	101,	11,	110
2017-01-04 11:29:45 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-04 11:29:45 AI_Player.update()		11,	110,	110,	1100,	111,	111,	1110
2017-01-04 11:29:45 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-04 11:29:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:45 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:45 AI_Player.update()	update
2017-01-04 11:29:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:45 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:45 AI_Player.update()	update
2017-01-04 11:29:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:45 AI_Player.update()	Search took354ms
2017-01-04 11:29:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:45 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 11:29:45 AI_Player.update()		11,	1010,	101,	101,	110,	11,	1010
2017-01-04 11:29:45 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1110,	1011
2017-01-04 11:29:45 AI_Player.update()		1100,	101,	101,	101,	101,	11,	110
2017-01-04 11:29:45 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:29:45 AI_Player.update()		11,	110,	110,	11,	111,	111,	1110
2017-01-04 11:29:45 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-04 11:29:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:45 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:45 AI_Player.update()	update
2017-01-04 11:29:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:45 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:45 AI_Player.update()	update
2017-01-04 11:29:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:46 AI_Player.update()	Search took644ms
2017-01-04 11:29:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:46 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 11:29:46 AI_Player.update()		11,	1010,	101,	101,	110,	11,	1010
2017-01-04 11:29:46 AI_Player.update()		1110,	101,	1110,	1101,	111,	1110,	1011
2017-01-04 11:29:46 AI_Player.update()		1100,	110,	101,	101,	101,	11,	110
2017-01-04 11:29:46 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 11:29:46 AI_Player.update()		11,	11,	110,	11,	111,	111,	1110
2017-01-04 11:29:46 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-04 11:29:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:46 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:46 AI_Player.update()	update
2017-01-04 11:29:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:46 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:46 AI_Player.update()	update
2017-01-04 11:29:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:46 AI_Player.update()	Search took254ms
2017-01-04 11:29:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:46 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 11:29:46 AI_Player.update()		11,	1010,	101,	1101,	110,	11,	1010
2017-01-04 11:29:46 AI_Player.update()		1110,	101,	1110,	101,	111,	1110,	1011
2017-01-04 11:29:46 AI_Player.update()		1100,	110,	101,	101,	101,	11,	110
2017-01-04 11:29:46 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-04 11:29:46 AI_Player.update()		11,	11,	110,	1100,	111,	111,	1110
2017-01-04 11:29:46 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-04 11:29:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:46 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:46 AI_Player.update()	update
2017-01-04 11:29:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:46 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:46 AI_Player.update()	update
2017-01-04 11:29:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:47 AI_Player.update()	Search took549ms
2017-01-04 11:29:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:47 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 11:29:47 AI_Player.update()		11,	101,	101,	1101,	110,	11,	1010
2017-01-04 11:29:47 AI_Player.update()		1110,	110,	1110,	101,	111,	1110,	1011
2017-01-04 11:29:47 AI_Player.update()		1100,	110,	101,	101,	101,	11,	110
2017-01-04 11:29:47 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-04 11:29:47 AI_Player.update()		11,	11,	110,	1100,	111,	111,	1110
2017-01-04 11:29:47 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1100,	1001
2017-01-04 11:29:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:47 AI_Player.update()	update
2017-01-04 11:29:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:47 AI_Player.update()	update
2017-01-04 11:29:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:47 AI_Player.update()	Search took308ms
2017-01-04 11:29:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:47 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:29:47 AI_Player.update()		11,	110,	101,	1101,	110,	11,	1010
2017-01-04 11:29:47 AI_Player.update()		1110,	110,	1110,	101,	111,	1110,	1011
2017-01-04 11:29:47 AI_Player.update()		1100,	11,	101,	101,	101,	11,	110
2017-01-04 11:29:47 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-04 11:29:47 AI_Player.update()		11,	1010,	110,	1100,	111,	111,	1110
2017-01-04 11:29:47 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1100,	1001
2017-01-04 11:29:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:29:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:47 AI_Player.update()	update
2017-01-04 11:29:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:47 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:29:47 AI_Player.update()	Player a has won!
2017-01-04 11:29:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:29:47 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:29:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:29:47 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:29:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:47 AI_Player.update()	update
2017-01-04 11:29:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:47 AI_Player.update()	Search took133ms
2017-01-04 11:29:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:47 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-04 11:29:47 AI_Player.update()		1110,	101,	1101,	110,	1010,	1010,	1010
2017-01-04 11:29:47 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:47 AI_Player.update()		1110,	110,	11,	110,	101,	1100,	11
2017-01-04 11:29:47 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	110,	1011
2017-01-04 11:29:47 AI_Player.update()		101,	1110,	101,	1100,	1110,	110,	1001
2017-01-04 11:29:47 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1011,	1001
2017-01-04 11:29:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:47 AI_Player.update()	update
2017-01-04 11:29:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:47 AI_Player.update()	update
2017-01-04 11:29:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:48 AI_Player.update()	Search took143ms
2017-01-04 11:29:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:48 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-04 11:29:48 AI_Player.update()		1110,	11,	1101,	110,	1010,	1010,	1010
2017-01-04 11:29:48 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:48 AI_Player.update()		1110,	1001,	11,	110,	101,	1100,	11
2017-01-04 11:29:48 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-04 11:29:48 AI_Player.update()		101,	1010,	101,	1100,	1110,	110,	1001
2017-01-04 11:29:48 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-04 11:29:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:48 AI_Player.update()	update
2017-01-04 11:29:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:48 AI_Player.update()	update
2017-01-04 11:29:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:48 AI_Player.update()	Search took450ms
2017-01-04 11:29:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:48 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-04 11:29:48 AI_Player.update()		1110,	11,	1101,	110,	1010,	1010,	1010
2017-01-04 11:29:48 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:48 AI_Player.update()		1001,	11,	110,	101,	1100,	11,	1110
2017-01-04 11:29:48 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-04 11:29:48 AI_Player.update()		101,	1010,	101,	1100,	1110,	110,	1001
2017-01-04 11:29:48 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-04 11:29:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:48 AI_Player.update()	update
2017-01-04 11:29:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:29:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:48 AI_Player.update()	update
2017-01-04 11:29:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:49 AI_Player.update()	Search took550ms
2017-01-04 11:29:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:49 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-04 11:29:49 AI_Player.update()		1010,	1110,	11,	1101,	110,	1010,	1010
2017-01-04 11:29:49 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:49 AI_Player.update()		1001,	11,	110,	101,	1100,	11,	1110
2017-01-04 11:29:49 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-04 11:29:49 AI_Player.update()		101,	1010,	101,	1100,	1110,	110,	1001
2017-01-04 11:29:49 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-04 11:29:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:29:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:49 AI_Player.update()	update
2017-01-04 11:29:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:49 AI_Player.update()	update
2017-01-04 11:29:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:49 AI_Player.update()	Search took542ms
2017-01-04 11:29:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:49 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-04 11:29:49 AI_Player.update()		1010,	1110,	11,	1100,	110,	1010,	1010
2017-01-04 11:29:49 AI_Player.update()		1110,	110,	1110,	1101,	111,	1001,	1011
2017-01-04 11:29:49 AI_Player.update()		1001,	11,	110,	101,	1100,	11,	1110
2017-01-04 11:29:49 AI_Player.update()		1110,	1110,	1101,	101,	1011,	110,	1011
2017-01-04 11:29:49 AI_Player.update()		101,	1010,	101,	1010,	1110,	110,	1001
2017-01-04 11:29:49 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:49 AI_Player.update()	update
2017-01-04 11:29:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:49 AI_Player.update()	update
2017-01-04 11:29:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:49 AI_Player.update()	Search took245ms
2017-01-04 11:29:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:49 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-04 11:29:49 AI_Player.update()		1010,	110,	11,	1100,	110,	1010,	1010
2017-01-04 11:29:49 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-04 11:29:49 AI_Player.update()		1001,	1110,	110,	101,	1100,	11,	1110
2017-01-04 11:29:49 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-04 11:29:49 AI_Player.update()		101,	101,	101,	1010,	1110,	110,	1001
2017-01-04 11:29:49 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:49 AI_Player.update()	update
2017-01-04 11:29:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:49 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:49 AI_Player.update()	update
2017-01-04 11:29:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:50 AI_Player.update()	Search took866ms
2017-01-04 11:29:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:50 AI_Player.update()		110,	1110,	111,	1100,	111,	1001,	11
2017-01-04 11:29:50 AI_Player.update()		1010,	110,	11,	11,	110,	1010,	1010
2017-01-04 11:29:50 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-04 11:29:50 AI_Player.update()		1001,	1110,	110,	1101,	1100,	11,	1110
2017-01-04 11:29:50 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-04 11:29:50 AI_Player.update()		101,	101,	101,	101,	1110,	110,	1001
2017-01-04 11:29:50 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1011,	1001
2017-01-04 11:29:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:50 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:50 AI_Player.update()	update
2017-01-04 11:29:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:50 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:50 AI_Player.update()	update
2017-01-04 11:29:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:50 AI_Player.update()	Search took217ms
2017-01-04 11:29:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:50 AI_Player.update()		110,	110,	111,	1100,	111,	1001,	11
2017-01-04 11:29:50 AI_Player.update()		1010,	11,	11,	11,	110,	1010,	1010
2017-01-04 11:29:50 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-04 11:29:50 AI_Player.update()		1001,	1010,	110,	1101,	1100,	11,	1110
2017-01-04 11:29:50 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:29:50 AI_Player.update()		101,	101,	101,	101,	1110,	110,	1001
2017-01-04 11:29:50 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1011,	1001
2017-01-04 11:29:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:50 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:50 AI_Player.update()	update
2017-01-04 11:29:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:50 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:50 AI_Player.update()	update
2017-01-04 11:29:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:51 AI_Player.update()	Search took782ms
2017-01-04 11:29:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:51 AI_Player.update()		110,	110,	111,	1100,	111,	1001,	11
2017-01-04 11:29:51 AI_Player.update()		1010,	11,	11,	11,	110,	1010,	1010
2017-01-04 11:29:51 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-04 11:29:51 AI_Player.update()		1010,	110,	1101,	1100,	11,	1110,	1001
2017-01-04 11:29:51 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:29:51 AI_Player.update()		101,	101,	101,	101,	1110,	110,	1001
2017-01-04 11:29:51 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1011,	1001
2017-01-04 11:29:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:51 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:29:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:51 AI_Player.update()	update
2017-01-04 11:29:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:51 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:29:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:51 AI_Player.update()	update
2017-01-04 11:29:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:52 AI_Player.update()	Search took306ms
2017-01-04 11:29:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:52 AI_Player.update()		110,	110,	111,	1100,	111,	1001,	11
2017-01-04 11:29:52 AI_Player.update()		11,	11,	11,	110,	1010,	1010,	1010
2017-01-04 11:29:52 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-04 11:29:52 AI_Player.update()		1010,	110,	1101,	1100,	11,	1110,	1001
2017-01-04 11:29:52 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:29:52 AI_Player.update()		101,	101,	101,	101,	1110,	110,	1001
2017-01-04 11:29:52 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1011,	1001
2017-01-04 11:29:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:29:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:52 AI_Player.update()	update
2017-01-04 11:29:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:52 AI_Player.update()	update
2017-01-04 11:29:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:52 AI_Player.update()	Search took315ms
2017-01-04 11:29:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:52 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-04 11:29:52 AI_Player.update()		11,	11,	11,	1100,	1010,	1010,	1010
2017-01-04 11:29:52 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-04 11:29:52 AI_Player.update()		1010,	110,	1101,	101,	11,	1110,	1001
2017-01-04 11:29:52 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:29:52 AI_Player.update()		101,	101,	101,	1010,	1110,	110,	1001
2017-01-04 11:29:52 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:52 AI_Player.update()	update
2017-01-04 11:29:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:52 AI_Player.update()	update
2017-01-04 11:29:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:52 AI_Player.update()	Search took151ms
2017-01-04 11:29:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:52 AI_Player.update()		110,	11,	111,	110,	111,	1001,	11
2017-01-04 11:29:52 AI_Player.update()		11,	1110,	11,	1100,	1010,	1010,	1010
2017-01-04 11:29:52 AI_Player.update()		1110,	110,	1110,	1100,	111,	1001,	1011
2017-01-04 11:29:52 AI_Player.update()		1010,	101,	1101,	101,	11,	1110,	1001
2017-01-04 11:29:52 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:29:52 AI_Player.update()		101,	1110,	101,	1010,	1110,	110,	1001
2017-01-04 11:29:52 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:52 AI_Player.update()	update
2017-01-04 11:29:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:52 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:52 AI_Player.update()	update
2017-01-04 11:29:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:53 AI_Player.update()	Search took1332ms
2017-01-04 11:29:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:53 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-04 11:29:53 AI_Player.update()		11,	1110,	11,	1100,	1010,	1010,	1010
2017-01-04 11:29:53 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:53 AI_Player.update()		1010,	101,	1101,	101,	11,	1110,	1001
2017-01-04 11:29:53 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 11:29:53 AI_Player.update()		101,	1110,	101,	1100,	1110,	110,	1001
2017-01-04 11:29:53 AI_Player.update()		1100,	110,	1101,	110,	1101,	1011,	1001
2017-01-04 11:29:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:53 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:29:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:53 AI_Player.update()	update
2017-01-04 11:29:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:53 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:29:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:53 AI_Player.update()	update
2017-01-04 11:29:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:54 AI_Player.update()	Search took773ms
2017-01-04 11:29:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:54 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-04 11:29:54 AI_Player.update()		11,	1110,	11,	101,	1010,	1010,	1010
2017-01-04 11:29:54 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:54 AI_Player.update()		1010,	101,	1101,	1010,	11,	1110,	1001
2017-01-04 11:29:54 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-04 11:29:54 AI_Player.update()		101,	1110,	101,	110,	1110,	110,	1001
2017-01-04 11:29:54 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:29:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:54 AI_Player.update()	update
2017-01-04 11:29:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:29:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:54 AI_Player.update()	update
2017-01-04 11:29:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:55 AI_Player.update()	Search took763ms
2017-01-04 11:29:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:55 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-04 11:29:55 AI_Player.update()		11,	1110,	11,	101,	1010,	1010,	1010
2017-01-04 11:29:55 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:55 AI_Player.update()		101,	1101,	1010,	11,	1110,	1001,	1010
2017-01-04 11:29:55 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-04 11:29:55 AI_Player.update()		101,	1110,	101,	110,	1110,	110,	1001
2017-01-04 11:29:55 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:55 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:29:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:55 AI_Player.update()	update
2017-01-04 11:29:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:55 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:29:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:55 AI_Player.update()	update
2017-01-04 11:29:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:56 AI_Player.update()	Search took1501ms
2017-01-04 11:29:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:56 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-04 11:29:56 AI_Player.update()		11,	1110,	11,	101,	1010,	1010,	1010
2017-01-04 11:29:56 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:56 AI_Player.update()		101,	1101,	1010,	11,	1110,	1001,	1010
2017-01-04 11:29:56 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-04 11:29:56 AI_Player.update()		1110,	101,	110,	1110,	110,	1001,	101
2017-01-04 11:29:56 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:56 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:29:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:56 AI_Player.update()	update
2017-01-04 11:29:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:56 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:29:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:56 AI_Player.update()	update
2017-01-04 11:29:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:57 AI_Player.update()	Search took609ms
2017-01-04 11:29:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:57 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-04 11:29:57 AI_Player.update()		11,	1110,	11,	101,	1010,	1010,	1010
2017-01-04 11:29:57 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:57 AI_Player.update()		101,	1101,	1010,	11,	1110,	1001,	1010
2017-01-04 11:29:57 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-04 11:29:57 AI_Player.update()		101,	110,	1110,	110,	1001,	101,	1110
2017-01-04 11:29:57 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:29:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:57 AI_Player.update()	update
2017-01-04 11:29:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:29:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:57 AI_Player.update()	update
2017-01-04 11:29:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:57 AI_Player.update()	Search took60ms
2017-01-04 11:29:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:57 AI_Player.update()		110,	1110,	111,	1100,	111,	1001,	11
2017-01-04 11:29:57 AI_Player.update()		11,	110,	11,	101,	1010,	1010,	1010
2017-01-04 11:29:57 AI_Player.update()		1110,	1101,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:57 AI_Player.update()		101,	101,	1010,	11,	1110,	1001,	1010
2017-01-04 11:29:57 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-04 11:29:57 AI_Player.update()		101,	110,	1110,	110,	1001,	101,	1110
2017-01-04 11:29:57 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:57 AI_Player.update()	update
2017-01-04 11:29:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:57 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:57 AI_Player.update()	update
2017-01-04 11:29:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:58 AI_Player.update()	Search took505ms
2017-01-04 11:29:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:58 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-04 11:29:58 AI_Player.update()		11,	1110,	11,	101,	1010,	1010,	1010
2017-01-04 11:29:58 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:58 AI_Player.update()		101,	1101,	1010,	11,	1110,	1001,	1010
2017-01-04 11:29:58 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-04 11:29:58 AI_Player.update()		101,	110,	1110,	110,	1001,	101,	1110
2017-01-04 11:29:58 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:58 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:58 AI_Player.update()	update
2017-01-04 11:29:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:58 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:58 AI_Player.update()	update
2017-01-04 11:29:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:58 AI_Player.update()	Search took87ms
2017-01-04 11:29:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:58 AI_Player.update()		110,	1110,	111,	1100,	111,	1001,	11
2017-01-04 11:29:58 AI_Player.update()		11,	110,	11,	101,	1010,	1010,	1010
2017-01-04 11:29:58 AI_Player.update()		1110,	1101,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:58 AI_Player.update()		101,	101,	1010,	11,	1110,	1001,	1010
2017-01-04 11:29:58 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-04 11:29:58 AI_Player.update()		101,	110,	1110,	110,	1001,	101,	1110
2017-01-04 11:29:58 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:58 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:58 AI_Player.update()	update
2017-01-04 11:29:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:58 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:58 AI_Player.update()	update
2017-01-04 11:29:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:58 AI_Player.update()	Search took478ms
2017-01-04 11:29:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:58 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-04 11:29:58 AI_Player.update()		11,	1110,	11,	101,	1010,	1010,	1010
2017-01-04 11:29:58 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:58 AI_Player.update()		101,	1101,	1010,	11,	1110,	1001,	1010
2017-01-04 11:29:58 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-04 11:29:58 AI_Player.update()		101,	110,	1110,	110,	1001,	101,	1110
2017-01-04 11:29:58 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:58 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:58 AI_Player.update()	update
2017-01-04 11:29:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:58 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:58 AI_Player.update()	update
2017-01-04 11:29:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:58 AI_Player.update()	Search took86ms
2017-01-04 11:29:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:58 AI_Player.update()		110,	1110,	111,	1100,	111,	1001,	11
2017-01-04 11:29:58 AI_Player.update()		11,	110,	11,	101,	1010,	1010,	1010
2017-01-04 11:29:58 AI_Player.update()		1110,	1101,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:58 AI_Player.update()		101,	101,	1010,	11,	1110,	1001,	1010
2017-01-04 11:29:58 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-04 11:29:58 AI_Player.update()		101,	110,	1110,	110,	1001,	101,	1110
2017-01-04 11:29:58 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:58 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:58 AI_Player.update()	update
2017-01-04 11:29:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:58 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:58 AI_Player.update()	update
2017-01-04 11:29:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:59 AI_Player.update()	Search took439ms
2017-01-04 11:29:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:59 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-04 11:29:59 AI_Player.update()		11,	1110,	11,	101,	1010,	1010,	1010
2017-01-04 11:29:59 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:59 AI_Player.update()		101,	1101,	1010,	11,	1110,	1001,	1010
2017-01-04 11:29:59 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-04 11:29:59 AI_Player.update()		101,	110,	1110,	110,	1001,	101,	1110
2017-01-04 11:29:59 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 11:29:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:59 AI_Player.update()	update
2017-01-04 11:29:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:59 AI_Player.update()	update
2017-01-04 11:29:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:29:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:29:59 AI_Player.update()	Search took87ms
2017-01-04 11:29:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:59 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-04 11:29:59 AI_Player.update()		11,	1110,	11,	1100,	1010,	1010,	1010
2017-01-04 11:29:59 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:59 AI_Player.update()		101,	1101,	1010,	101,	1110,	1001,	1010
2017-01-04 11:29:59 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 11:29:59 AI_Player.update()		101,	110,	1110,	1100,	1001,	101,	1110
2017-01-04 11:29:59 AI_Player.update()		1100,	110,	1101,	110,	1101,	1011,	1001
2017-01-04 11:29:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:59 AI_Player.update()	update
2017-01-04 11:29:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:29:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:29:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:29:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:59 AI_Player.update()	update
2017-01-04 11:29:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:29:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:29:59 AI_Player.update()	Search took476ms
2017-01-04 11:29:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:59 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-04 11:29:59 AI_Player.update()		11,	1110,	11,	1100,	1010,	1010,	1010
2017-01-04 11:29:59 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 11:29:59 AI_Player.update()		101,	1101,	1010,	101,	1110,	1001,	1010
2017-01-04 11:29:59 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 11:29:59 AI_Player.update()		1110,	101,	110,	1110,	1100,	1001,	101
2017-01-04 11:29:59 AI_Player.update()		1100,	110,	1101,	110,	1101,	1011,	1001
2017-01-04 11:29:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:29:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:29:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:29:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:59 AI_Player.update()	update
2017-01-04 11:29:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:29:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:29:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:29:59 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:29:59 AI_Player.update()	Player a has won!
2017-01-04 11:29:59 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:29:59 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:29:59 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:29:59 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:29:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:29:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:29:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:29:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:29:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:29:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:29:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:29:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:29:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:29:59 AI_Player.update()	update
2017-01-04 11:29:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:00 AI_Player.update()	Search took172ms
2017-01-04 11:30:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:00 AI_Player.update()		110,	1001,	111,	1110,	111,	101,	11
2017-01-04 11:30:00 AI_Player.update()		1010,	1011,	101,	1100,	101,	11,	11
2017-01-04 11:30:00 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-04 11:30:00 AI_Player.update()		1100,	1101,	1010,	101,	1010,	1001,	1001
2017-01-04 11:30:00 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-04 11:30:00 AI_Player.update()		111,	1010,	101,	110,	11,	1001,	110
2017-01-04 11:30:00 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	111,	1001
2017-01-04 11:30:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:00 AI_Player.update()	update
2017-01-04 11:30:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:00 AI_Player.update()	update
2017-01-04 11:30:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:00 AI_Player.update()	Search took428ms
2017-01-04 11:30:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:00 AI_Player.update()		110,	1011,	111,	1110,	111,	101,	11
2017-01-04 11:30:00 AI_Player.update()		1010,	110,	101,	1100,	101,	11,	11
2017-01-04 11:30:00 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 11:30:00 AI_Player.update()		1100,	101,	1010,	101,	1010,	1001,	1001
2017-01-04 11:30:00 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1101,	1011
2017-01-04 11:30:00 AI_Player.update()		111,	1010,	101,	110,	11,	1001,	110
2017-01-04 11:30:00 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	111,	1001
2017-01-04 11:30:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:00 AI_Player.update()	update
2017-01-04 11:30:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:00 AI_Player.update()	update
2017-01-04 11:30:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:00 AI_Player.update()	Search took296ms
2017-01-04 11:30:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:00 AI_Player.update()		110,	1011,	111,	1110,	111,	101,	11
2017-01-04 11:30:00 AI_Player.update()		110,	101,	1100,	101,	11,	11,	1010
2017-01-04 11:30:00 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 11:30:00 AI_Player.update()		1100,	101,	1010,	101,	1010,	1001,	1001
2017-01-04 11:30:00 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1101,	1011
2017-01-04 11:30:00 AI_Player.update()		111,	1010,	101,	110,	11,	1001,	110
2017-01-04 11:30:00 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	111,	1001
2017-01-04 11:30:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:00 AI_Player.update()	update
2017-01-04 11:30:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:00 AI_Player.update()	update
2017-01-04 11:30:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:01 AI_Player.update()	Search took381ms
2017-01-04 11:30:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:01 AI_Player.update()		110,	1011,	111,	1110,	111,	101,	11
2017-01-04 11:30:01 AI_Player.update()		110,	101,	1100,	101,	11,	11,	1010
2017-01-04 11:30:01 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 11:30:01 AI_Player.update()		1001,	1100,	101,	1010,	101,	1010,	1001
2017-01-04 11:30:01 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1101,	1011
2017-01-04 11:30:01 AI_Player.update()		111,	1010,	101,	110,	11,	1001,	110
2017-01-04 11:30:01 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	111,	1001
2017-01-04 11:30:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:01 AI_Player.update()	update
2017-01-04 11:30:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:01 AI_Player.update()	update
2017-01-04 11:30:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:01 AI_Player.update()	Search took331ms
2017-01-04 11:30:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:01 AI_Player.update()		110,	1001,	111,	1110,	111,	101,	11
2017-01-04 11:30:01 AI_Player.update()		110,	1011,	1100,	101,	11,	11,	1010
2017-01-04 11:30:01 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-04 11:30:01 AI_Player.update()		1001,	1101,	101,	1010,	101,	1010,	1001
2017-01-04 11:30:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-04 11:30:01 AI_Player.update()		111,	1010,	101,	110,	11,	1001,	110
2017-01-04 11:30:01 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	111,	1001
2017-01-04 11:30:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:01 AI_Player.update()	update
2017-01-04 11:30:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:01 AI_Player.update()	update
2017-01-04 11:30:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:01 AI_Player.update()	Search took157ms
2017-01-04 11:30:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:01 AI_Player.update()		110,	1011,	111,	1110,	111,	101,	11
2017-01-04 11:30:01 AI_Player.update()		110,	101,	1100,	101,	11,	11,	1010
2017-01-04 11:30:01 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 11:30:01 AI_Player.update()		1001,	1100,	101,	1010,	101,	1010,	1001
2017-01-04 11:30:01 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1101,	1011
2017-01-04 11:30:01 AI_Player.update()		111,	1010,	101,	110,	11,	1001,	110
2017-01-04 11:30:01 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	111,	1001
2017-01-04 11:30:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:01 AI_Player.update()	update
2017-01-04 11:30:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:01 AI_Player.update()	update
2017-01-04 11:30:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:01 AI_Player.update()	Search took305ms
2017-01-04 11:30:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:01 AI_Player.update()		110,	1001,	111,	1110,	111,	101,	11
2017-01-04 11:30:01 AI_Player.update()		110,	1011,	1100,	101,	11,	11,	1010
2017-01-04 11:30:01 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-04 11:30:01 AI_Player.update()		1001,	1101,	101,	1010,	101,	1010,	1001
2017-01-04 11:30:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-04 11:30:01 AI_Player.update()		111,	1010,	101,	110,	11,	1001,	110
2017-01-04 11:30:01 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	111,	1001
2017-01-04 11:30:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:01 AI_Player.update()	update
2017-01-04 11:30:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:01 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:01 AI_Player.update()	update
2017-01-04 11:30:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:02 AI_Player.update()	Search took86ms
2017-01-04 11:30:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()		110,	1011,	111,	1110,	111,	101,	11
2017-01-04 11:30:02 AI_Player.update()		110,	101,	1100,	101,	11,	11,	1010
2017-01-04 11:30:02 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 11:30:02 AI_Player.update()		1001,	1100,	101,	1010,	101,	1010,	1001
2017-01-04 11:30:02 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1101,	1011
2017-01-04 11:30:02 AI_Player.update()		111,	1010,	101,	110,	11,	1001,	110
2017-01-04 11:30:02 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	111,	1001
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:02 AI_Player.update()	Search took284ms
2017-01-04 11:30:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()		110,	1011,	111,	1110,	111,	101,	11
2017-01-04 11:30:02 AI_Player.update()		101,	1100,	101,	11,	11,	1010,	110
2017-01-04 11:30:02 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 11:30:02 AI_Player.update()		1001,	1100,	101,	1010,	101,	1010,	1001
2017-01-04 11:30:02 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1101,	1011
2017-01-04 11:30:02 AI_Player.update()		111,	1010,	101,	110,	11,	1001,	110
2017-01-04 11:30:02 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	111,	1001
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:02 AI_Player.update()	Search took21ms
2017-01-04 11:30:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()		110,	1100,	111,	1110,	111,	101,	11
2017-01-04 11:30:02 AI_Player.update()		101,	1101,	101,	11,	11,	1010,	110
2017-01-04 11:30:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-04 11:30:02 AI_Player.update()		1001,	1010,	101,	1010,	101,	1010,	1001
2017-01-04 11:30:02 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1101,	1011
2017-01-04 11:30:02 AI_Player.update()		111,	1001,	101,	110,	11,	1001,	110
2017-01-04 11:30:02 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	111,	1001
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:02 AI_Player.update()	Search took147ms
2017-01-04 11:30:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()		110,	1011,	111,	1110,	111,	101,	11
2017-01-04 11:30:02 AI_Player.update()		101,	1100,	101,	11,	11,	1010,	110
2017-01-04 11:30:02 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 11:30:02 AI_Player.update()		1001,	1100,	101,	1010,	101,	1010,	1001
2017-01-04 11:30:02 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1101,	1011
2017-01-04 11:30:02 AI_Player.update()		111,	1010,	101,	110,	11,	1001,	110
2017-01-04 11:30:02 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	111,	1001
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:02 AI_Player.update()	Search took46ms
2017-01-04 11:30:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()		110,	1100,	111,	1110,	111,	101,	11
2017-01-04 11:30:02 AI_Player.update()		101,	1101,	101,	11,	11,	1010,	110
2017-01-04 11:30:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-04 11:30:02 AI_Player.update()		1001,	1010,	101,	1010,	101,	1010,	1001
2017-01-04 11:30:02 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1101,	1011
2017-01-04 11:30:02 AI_Player.update()		111,	1001,	101,	110,	11,	1001,	110
2017-01-04 11:30:02 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	111,	1001
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:02 AI_Player.update()	Search took145ms
2017-01-04 11:30:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-04 11:30:02 AI_Player.update()		101,	1101,	101,	101,	11,	1010,	110
2017-01-04 11:30:02 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-04 11:30:02 AI_Player.update()		1001,	1010,	101,	101,	101,	1010,	1001
2017-01-04 11:30:02 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1101,	1011
2017-01-04 11:30:02 AI_Player.update()		111,	1001,	101,	1011,	11,	1001,	110
2017-01-04 11:30:02 AI_Player.update()		1100,	1011,	1101,	1110,	1101,	111,	1001
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:02 AI_Player.update()	Search took126ms
2017-01-04 11:30:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-04 11:30:02 AI_Player.update()		101,	1100,	101,	101,	11,	1010,	110
2017-01-04 11:30:02 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 11:30:02 AI_Player.update()		1001,	1010,	101,	101,	101,	1010,	1001
2017-01-04 11:30:02 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1101,	1011
2017-01-04 11:30:02 AI_Player.update()		111,	1011,	101,	1011,	11,	1001,	110
2017-01-04 11:30:02 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	111,	1001
2017-01-04 11:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:30:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:02 AI_Player.update()	update
2017-01-04 11:30:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:03 AI_Player.update()	Search took486ms
2017-01-04 11:30:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:03 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-04 11:30:03 AI_Player.update()		101,	1100,	101,	101,	11,	1010,	110
2017-01-04 11:30:03 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 11:30:03 AI_Player.update()		1010,	101,	101,	101,	1010,	1001,	1001
2017-01-04 11:30:03 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1101,	1011
2017-01-04 11:30:03 AI_Player.update()		111,	1011,	101,	1011,	11,	1001,	110
2017-01-04 11:30:03 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	111,	1001
2017-01-04 11:30:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:30:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:03 AI_Player.update()	update
2017-01-04 11:30:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:30:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:03 AI_Player.update()	update
2017-01-04 11:30:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:03 AI_Player.update()	Search took149ms
2017-01-04 11:30:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:03 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-04 11:30:03 AI_Player.update()		110,	101,	1100,	101,	101,	11,	1010
2017-01-04 11:30:03 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 11:30:03 AI_Player.update()		1010,	101,	101,	101,	1010,	1001,	1001
2017-01-04 11:30:03 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1101,	1011
2017-01-04 11:30:03 AI_Player.update()		111,	1011,	101,	1011,	11,	1001,	110
2017-01-04 11:30:03 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	111,	1001
2017-01-04 11:30:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:30:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:03 AI_Player.update()	update
2017-01-04 11:30:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:30:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:03 AI_Player.update()	update
2017-01-04 11:30:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:04 AI_Player.update()	Search took528ms
2017-01-04 11:30:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:04 AI_Player.update()		110,	1101,	111,	11,	111,	111,	11
2017-01-04 11:30:04 AI_Player.update()		110,	101,	1100,	101,	101,	101,	1010
2017-01-04 11:30:04 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-04 11:30:04 AI_Player.update()		1010,	101,	101,	101,	1010,	1100,	1001
2017-01-04 11:30:04 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 11:30:04 AI_Player.update()		111,	1011,	101,	1011,	11,	1101,	110
2017-01-04 11:30:04 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:30:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:30:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:04 AI_Player.update()	update
2017-01-04 11:30:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:30:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:04 AI_Player.update()	update
2017-01-04 11:30:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:04 AI_Player.update()	Search took750ms
2017-01-04 11:30:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:04 AI_Player.update()		110,	1101,	111,	11,	111,	111,	11
2017-01-04 11:30:04 AI_Player.update()		110,	101,	1100,	101,	101,	101,	1010
2017-01-04 11:30:04 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-04 11:30:04 AI_Player.update()		101,	101,	101,	1010,	1100,	1001,	1010
2017-01-04 11:30:04 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 11:30:04 AI_Player.update()		111,	1011,	101,	1011,	11,	1101,	110
2017-01-04 11:30:04 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:30:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:30:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:04 AI_Player.update()	update
2017-01-04 11:30:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:30:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:04 AI_Player.update()	update
2017-01-04 11:30:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:05 AI_Player.update()	Search took379ms
2017-01-04 11:30:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:05 AI_Player.update()		110,	1101,	111,	1110,	111,	111,	11
2017-01-04 11:30:05 AI_Player.update()		110,	101,	1100,	11,	101,	101,	1010
2017-01-04 11:30:05 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 11:30:05 AI_Player.update()		101,	101,	101,	1010,	1100,	1001,	1010
2017-01-04 11:30:05 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:30:05 AI_Player.update()		111,	1011,	101,	110,	11,	1101,	110
2017-01-04 11:30:05 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1001,	1001
2017-01-04 11:30:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	4 5
2017-01-04 11:30:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:05 AI_Player.update()	update
2017-01-04 11:30:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:05 AI_Player.update()	update
2017-01-04 11:30:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:05 AI_Player.update()	Search took243ms
2017-01-04 11:30:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:05 AI_Player.update()		110,	1101,	111,	1110,	111,	1001,	11
2017-01-04 11:30:05 AI_Player.update()		110,	101,	1100,	11,	101,	111,	1010
2017-01-04 11:30:05 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:30:05 AI_Player.update()		101,	101,	101,	1010,	1100,	11,	1010
2017-01-04 11:30:05 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:30:05 AI_Player.update()		111,	1011,	101,	110,	11,	1001,	110
2017-01-04 11:30:05 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1101,	1001
2017-01-04 11:30:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:05 AI_Player.update()	update
2017-01-04 11:30:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:05 AI_Player.update()	update
2017-01-04 11:30:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:05 AI_Player.update()	Search took399ms
2017-01-04 11:30:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:05 AI_Player.update()		110,	1101,	111,	1110,	111,	1001,	11
2017-01-04 11:30:05 AI_Player.update()		110,	101,	1100,	11,	101,	111,	1010
2017-01-04 11:30:05 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:30:05 AI_Player.update()		1010,	101,	101,	101,	1010,	1100,	11
2017-01-04 11:30:05 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:30:05 AI_Player.update()		111,	1011,	101,	110,	11,	1001,	110
2017-01-04 11:30:05 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1101,	1001
2017-01-04 11:30:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:05 AI_Player.update()	update
2017-01-04 11:30:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:05 AI_Player.update()	update
2017-01-04 11:30:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:05 AI_Player.update()	Search took102ms
2017-01-04 11:30:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:05 AI_Player.update()		110,	1101,	111,	1110,	111,	1001,	11
2017-01-04 11:30:05 AI_Player.update()		110,	101,	1100,	11,	101,	111,	1010
2017-01-04 11:30:05 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:30:05 AI_Player.update()		101,	101,	101,	1010,	1100,	11,	1010
2017-01-04 11:30:05 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:30:05 AI_Player.update()		111,	1011,	101,	110,	11,	1001,	110
2017-01-04 11:30:05 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1101,	1001
2017-01-04 11:30:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:05 AI_Player.update()	update
2017-01-04 11:30:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:05 AI_Player.update()	update
2017-01-04 11:30:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:06 AI_Player.update()	Search took412ms
2017-01-04 11:30:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:06 AI_Player.update()		110,	1101,	111,	1110,	111,	1001,	11
2017-01-04 11:30:06 AI_Player.update()		110,	101,	1100,	11,	101,	111,	1010
2017-01-04 11:30:06 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:30:06 AI_Player.update()		1010,	101,	101,	101,	1010,	1100,	11
2017-01-04 11:30:06 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 11:30:06 AI_Player.update()		111,	1011,	101,	110,	11,	1001,	110
2017-01-04 11:30:06 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1101,	1001
2017-01-04 11:30:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:06 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:06 AI_Player.update()	update
2017-01-04 11:30:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:06 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:06 AI_Player.update()	update
2017-01-04 11:30:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:06 AI_Player.update()	Search took120ms
2017-01-04 11:30:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:06 AI_Player.update()		110,	1101,	111,	11,	111,	1001,	11
2017-01-04 11:30:06 AI_Player.update()		110,	101,	1100,	101,	101,	111,	1010
2017-01-04 11:30:06 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:30:06 AI_Player.update()		1010,	101,	101,	1010,	1010,	1100,	11
2017-01-04 11:30:06 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 11:30:06 AI_Player.update()		111,	1011,	101,	1011,	11,	1001,	110
2017-01-04 11:30:06 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1101,	1001
2017-01-04 11:30:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:06 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:06 AI_Player.update()	update
2017-01-04 11:30:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:06 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:06 AI_Player.update()	update
2017-01-04 11:30:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:07 AI_Player.update()	Search took891ms
2017-01-04 11:30:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:07 AI_Player.update()		110,	1101,	111,	11,	111,	111,	11
2017-01-04 11:30:07 AI_Player.update()		110,	101,	1100,	101,	101,	101,	1010
2017-01-04 11:30:07 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-04 11:30:07 AI_Player.update()		1010,	101,	101,	1010,	1010,	1001,	11
2017-01-04 11:30:07 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 11:30:07 AI_Player.update()		111,	1011,	101,	1011,	11,	1101,	110
2017-01-04 11:30:07 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1001,	1001
2017-01-04 11:30:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:07 AI_Player.update()	update
2017-01-04 11:30:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:30:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:07 AI_Player.update()	update
2017-01-04 11:30:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:07 AI_Player.update()	Search took222ms
2017-01-04 11:30:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:07 AI_Player.update()		110,	1101,	111,	11,	111,	1001,	11
2017-01-04 11:30:07 AI_Player.update()		110,	101,	1100,	101,	101,	111,	1010
2017-01-04 11:30:07 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:30:07 AI_Player.update()		1010,	101,	101,	1010,	1010,	1100,	11
2017-01-04 11:30:07 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 11:30:07 AI_Player.update()		111,	1011,	101,	1011,	11,	1001,	110
2017-01-04 11:30:07 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1101,	1001
2017-01-04 11:30:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:30:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:07 AI_Player.update()	update
2017-01-04 11:30:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:07 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:30:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:07 AI_Player.update()	update
2017-01-04 11:30:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:08 AI_Player.update()	Search took957ms
2017-01-04 11:30:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:08 AI_Player.update()		110,	1101,	111,	11,	111,	1001,	11
2017-01-04 11:30:08 AI_Player.update()		1010,	110,	101,	1100,	101,	101,	111
2017-01-04 11:30:08 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:30:08 AI_Player.update()		1010,	101,	101,	1010,	1010,	1100,	11
2017-01-04 11:30:08 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 11:30:08 AI_Player.update()		111,	1011,	101,	1011,	11,	1001,	110
2017-01-04 11:30:08 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1101,	1001
2017-01-04 11:30:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:08 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:30:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:08 AI_Player.update()	update
2017-01-04 11:30:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:08 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:30:08 AI_Player.update()	Player a has won!
2017-01-04 11:30:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:30:08 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:30:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:30:08 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:30:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:08 AI_Player.update()	update
2017-01-04 11:30:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:09 AI_Player.update()	Search took1175ms
2017-01-04 11:30:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:09 AI_Player.update()		110,	1011,	111,	1100,	111,	1100,	11
2017-01-04 11:30:09 AI_Player.update()		1010,	1001,	1010,	101,	11,	1010,	1110
2017-01-04 11:30:09 AI_Player.update()		1110,	1100,	1110,	110,	111,	1010,	1011
2017-01-04 11:30:09 AI_Player.update()		1011,	111,	101,	1001,	101,	110,	1010
2017-01-04 11:30:09 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:30:09 AI_Player.update()		111,	1110,	1101,	1001,	1010,	110,	11
2017-01-04 11:30:09 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:30:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:09 AI_Player.update()	update
2017-01-04 11:30:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:09 AI_Player.update()	update
2017-01-04 11:30:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:10 AI_Player.update()	Search took409ms
2017-01-04 11:30:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:10 AI_Player.update()		110,	1011,	111,	1100,	111,	1100,	11
2017-01-04 11:30:10 AI_Player.update()		1010,	1001,	1010,	101,	11,	1010,	1110
2017-01-04 11:30:10 AI_Player.update()		1110,	1100,	1110,	110,	111,	1010,	1011
2017-01-04 11:30:10 AI_Player.update()		1010,	1011,	111,	101,	1001,	101,	110
2017-01-04 11:30:10 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:30:10 AI_Player.update()		111,	1110,	1101,	1001,	1010,	110,	11
2017-01-04 11:30:10 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1010,	1001
2017-01-04 11:30:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:10 AI_Player.update()	update
2017-01-04 11:30:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:10 AI_Player.update()	update
2017-01-04 11:30:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:11 AI_Player.update()	Search took1069ms
2017-01-04 11:30:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:11 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-04 11:30:11 AI_Player.update()		1010,	1001,	1010,	110,	11,	1010,	1110
2017-01-04 11:30:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 11:30:11 AI_Player.update()		1010,	1011,	111,	1010,	1001,	101,	110
2017-01-04 11:30:11 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:11 AI_Player.update()		111,	1110,	1101,	1110,	1010,	110,	11
2017-01-04 11:30:11 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:11 AI_Player.update()	update
2017-01-04 11:30:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:11 AI_Player.update()	update
2017-01-04 11:30:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:11 AI_Player.update()	Search took189ms
2017-01-04 11:30:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:11 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-04 11:30:11 AI_Player.update()		1010,	1100,	1010,	110,	11,	1010,	1110
2017-01-04 11:30:11 AI_Player.update()		1110,	1011,	1110,	101,	111,	1010,	1011
2017-01-04 11:30:11 AI_Player.update()		1010,	1101,	111,	1010,	1001,	101,	110
2017-01-04 11:30:11 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:11 AI_Player.update()		111,	1100,	1101,	1110,	1010,	110,	11
2017-01-04 11:30:11 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:11 AI_Player.update()	update
2017-01-04 11:30:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:11 AI_Player.update()	update
2017-01-04 11:30:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:11 AI_Player.update()	Search took189ms
2017-01-04 11:30:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:11 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-04 11:30:11 AI_Player.update()		1010,	1100,	1010,	101,	11,	1010,	1110
2017-01-04 11:30:11 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:11 AI_Player.update()		1010,	1101,	111,	1001,	1001,	101,	110
2017-01-04 11:30:11 AI_Player.update()		1110,	1110,	1101,	1110,	1011,	1100,	1011
2017-01-04 11:30:11 AI_Player.update()		111,	1100,	1101,	1100,	1010,	110,	11
2017-01-04 11:30:11 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 11:30:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:11 AI_Player.update()	update
2017-01-04 11:30:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:11 AI_Player.update()	update
2017-01-04 11:30:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:11 AI_Player.update()	Search took216ms
2017-01-04 11:30:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:11 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-04 11:30:11 AI_Player.update()		1110,	1010,	1100,	1010,	101,	11,	1010
2017-01-04 11:30:11 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:11 AI_Player.update()		1010,	1101,	111,	1001,	1001,	101,	110
2017-01-04 11:30:11 AI_Player.update()		1110,	1110,	1101,	1110,	1011,	1100,	1011
2017-01-04 11:30:11 AI_Player.update()		111,	1100,	1101,	1100,	1010,	110,	11
2017-01-04 11:30:11 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 11:30:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:11 AI_Player.update()	update
2017-01-04 11:30:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:11 AI_Player.update()	update
2017-01-04 11:30:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:12 AI_Player.update()	Search took498ms
2017-01-04 11:30:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:12 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-04 11:30:12 AI_Player.update()		1110,	1010,	1100,	110,	101,	11,	1010
2017-01-04 11:30:12 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:12 AI_Player.update()		1010,	1101,	111,	1010,	1001,	101,	110
2017-01-04 11:30:12 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:12 AI_Player.update()		111,	1100,	1101,	1110,	1010,	110,	11
2017-01-04 11:30:12 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:12 AI_Player.update()	update
2017-01-04 11:30:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:12 AI_Player.update()	update
2017-01-04 11:30:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:13 AI_Player.update()	Search took969ms
2017-01-04 11:30:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:13 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-04 11:30:13 AI_Player.update()		1110,	1011,	1100,	110,	101,	11,	1010
2017-01-04 11:30:13 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:13 AI_Player.update()		1010,	1110,	111,	1010,	1001,	101,	110
2017-01-04 11:30:13 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:13 AI_Player.update()		111,	1011,	1101,	1110,	1010,	110,	11
2017-01-04 11:30:13 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:13 AI_Player.update()	update
2017-01-04 11:30:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:13 AI_Player.update()	update
2017-01-04 11:30:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:13 AI_Player.update()	Search took268ms
2017-01-04 11:30:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:13 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-04 11:30:13 AI_Player.update()		1110,	1101,	1100,	110,	101,	11,	1010
2017-01-04 11:30:13 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:13 AI_Player.update()		1010,	1100,	111,	1010,	1001,	101,	110
2017-01-04 11:30:13 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:13 AI_Player.update()		111,	1001,	1101,	1110,	1010,	110,	11
2017-01-04 11:30:13 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:13 AI_Player.update()	update
2017-01-04 11:30:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:13 AI_Player.update()	update
2017-01-04 11:30:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:13 AI_Player.update()	Search took44ms
2017-01-04 11:30:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:13 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-04 11:30:13 AI_Player.update()		1110,	1110,	1100,	110,	101,	11,	1010
2017-01-04 11:30:13 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:13 AI_Player.update()		1010,	1011,	111,	1010,	1001,	101,	110
2017-01-04 11:30:13 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:13 AI_Player.update()		111,	1010,	1101,	1110,	1010,	110,	11
2017-01-04 11:30:13 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:13 AI_Player.update()	update
2017-01-04 11:30:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:13 AI_Player.update()	update
2017-01-04 11:30:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:14 AI_Player.update()	Search took565ms
2017-01-04 11:30:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:14 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-04 11:30:14 AI_Player.update()		1110,	1110,	1100,	110,	101,	11,	1010
2017-01-04 11:30:14 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:14 AI_Player.update()		1010,	1011,	111,	1010,	1001,	101,	110
2017-01-04 11:30:14 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:14 AI_Player.update()		11,	111,	1010,	1101,	1110,	1010,	110
2017-01-04 11:30:14 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:14 AI_Player.update()	update
2017-01-04 11:30:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:14 AI_Player.update()	update
2017-01-04 11:30:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:14 AI_Player.update()	Search took247ms
2017-01-04 11:30:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:14 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-04 11:30:14 AI_Player.update()		1110,	1101,	1100,	110,	101,	11,	1010
2017-01-04 11:30:14 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:14 AI_Player.update()		1010,	1100,	111,	1010,	1001,	101,	110
2017-01-04 11:30:14 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:14 AI_Player.update()		11,	1001,	1010,	1101,	1110,	1010,	110
2017-01-04 11:30:14 AI_Player.update()		1100,	111,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:14 AI_Player.update()	update
2017-01-04 11:30:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:14 AI_Player.update()	update
2017-01-04 11:30:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:14 AI_Player.update()	Search took353ms
2017-01-04 11:30:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:14 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-04 11:30:14 AI_Player.update()		1110,	1110,	1100,	110,	101,	11,	1010
2017-01-04 11:30:14 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:14 AI_Player.update()		1010,	1011,	111,	1010,	1001,	101,	110
2017-01-04 11:30:14 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:14 AI_Player.update()		11,	111,	1010,	1101,	1110,	1010,	110
2017-01-04 11:30:14 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:14 AI_Player.update()	update
2017-01-04 11:30:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:14 AI_Player.update()	update
2017-01-04 11:30:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:15 AI_Player.update()	Search took201ms
2017-01-04 11:30:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:15 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-04 11:30:15 AI_Player.update()		1110,	1110,	1100,	110,	101,	11,	1010
2017-01-04 11:30:15 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:15 AI_Player.update()		1010,	1011,	111,	1010,	1001,	101,	110
2017-01-04 11:30:15 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:15 AI_Player.update()		110,	11,	111,	1010,	1101,	1110,	1010
2017-01-04 11:30:15 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:15 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:15 AI_Player.update()	update
2017-01-04 11:30:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:15 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:15 AI_Player.update()	update
2017-01-04 11:30:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:15 AI_Player.update()	Search took453ms
2017-01-04 11:30:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:15 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-04 11:30:15 AI_Player.update()		1110,	1110,	1100,	110,	101,	11,	1010
2017-01-04 11:30:15 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:15 AI_Player.update()		1010,	1011,	111,	1010,	1001,	101,	110
2017-01-04 11:30:15 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:15 AI_Player.update()		11,	111,	1010,	1101,	1110,	1010,	110
2017-01-04 11:30:15 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:15 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:15 AI_Player.update()	update
2017-01-04 11:30:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:15 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:15 AI_Player.update()	update
2017-01-04 11:30:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:15 AI_Player.update()	Search took245ms
2017-01-04 11:30:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:15 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-04 11:30:15 AI_Player.update()		1110,	1110,	1100,	110,	101,	11,	1010
2017-01-04 11:30:15 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:15 AI_Player.update()		1010,	1011,	111,	1010,	1001,	101,	110
2017-01-04 11:30:15 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:15 AI_Player.update()		110,	11,	111,	1010,	1101,	1110,	1010
2017-01-04 11:30:15 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:15 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:15 AI_Player.update()	update
2017-01-04 11:30:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:15 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:15 AI_Player.update()	update
2017-01-04 11:30:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:16 AI_Player.update()	Search took401ms
2017-01-04 11:30:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-04 11:30:16 AI_Player.update()		1110,	1101,	1100,	110,	101,	11,	1010
2017-01-04 11:30:16 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:16 AI_Player.update()		1010,	1100,	111,	1010,	1001,	101,	110
2017-01-04 11:30:16 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:16 AI_Player.update()		110,	1001,	111,	1010,	1101,	1110,	1010
2017-01-04 11:30:16 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()	update
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()	update
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:16 AI_Player.update()	Search took53ms
2017-01-04 11:30:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-04 11:30:16 AI_Player.update()		1110,	1110,	1100,	110,	101,	11,	1010
2017-01-04 11:30:16 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:16 AI_Player.update()		1010,	1011,	111,	1010,	1001,	101,	110
2017-01-04 11:30:16 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:16 AI_Player.update()		110,	11,	111,	1010,	1101,	1110,	1010
2017-01-04 11:30:16 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()	update
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()	update
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:16 AI_Player.update()	Search took408ms
2017-01-04 11:30:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-04 11:30:16 AI_Player.update()		1110,	1101,	1100,	110,	101,	11,	1010
2017-01-04 11:30:16 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:16 AI_Player.update()		1010,	1100,	111,	1010,	1001,	101,	110
2017-01-04 11:30:16 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:16 AI_Player.update()		110,	1001,	111,	1010,	1101,	1110,	1010
2017-01-04 11:30:16 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-04 11:30:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()	update
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()	update
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:16 AI_Player.update()	Search took59ms
2017-01-04 11:30:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()		110,	1011,	111,	110,	111,	1100,	11
2017-01-04 11:30:16 AI_Player.update()		1110,	1101,	1100,	1010,	101,	11,	1010
2017-01-04 11:30:16 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:16 AI_Player.update()		1010,	1100,	111,	1001,	1001,	101,	110
2017-01-04 11:30:16 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:30:16 AI_Player.update()		110,	1001,	111,	1100,	1101,	1110,	1010
2017-01-04 11:30:16 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-04 11:30:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()	update
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()	update
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:16 AI_Player.update()	Search took158ms
2017-01-04 11:30:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()		110,	1011,	111,	110,	111,	1100,	11
2017-01-04 11:30:16 AI_Player.update()		1110,	1101,	1100,	1010,	101,	11,	1010
2017-01-04 11:30:16 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:16 AI_Player.update()		1010,	1100,	111,	1001,	1001,	101,	110
2017-01-04 11:30:16 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1100,	1011
2017-01-04 11:30:16 AI_Player.update()		1010,	110,	1001,	111,	1100,	1101,	1110
2017-01-04 11:30:16 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-04 11:30:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()	update
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:16 AI_Player.update()	update
2017-01-04 11:30:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:17 AI_Player.update()	Search took100ms
2017-01-04 11:30:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:17 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-04 11:30:17 AI_Player.update()		1110,	1101,	1100,	110,	101,	11,	1010
2017-01-04 11:30:17 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:17 AI_Player.update()		1010,	1100,	111,	1010,	1001,	101,	110
2017-01-04 11:30:17 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:17 AI_Player.update()		1010,	110,	1001,	1010,	1100,	1101,	1110
2017-01-04 11:30:17 AI_Player.update()		1100,	11,	1101,	111,	1101,	1010,	1001
2017-01-04 11:30:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:17 AI_Player.update()	update
2017-01-04 11:30:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:30:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:17 AI_Player.update()	update
2017-01-04 11:30:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:17 AI_Player.update()	Search took133ms
2017-01-04 11:30:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:17 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-04 11:30:17 AI_Player.update()		1110,	1101,	1100,	110,	101,	11,	1010
2017-01-04 11:30:17 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:17 AI_Player.update()		1010,	1100,	111,	1010,	1001,	101,	110
2017-01-04 11:30:17 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:17 AI_Player.update()		1110,	1010,	110,	1001,	1010,	1100,	1101
2017-01-04 11:30:17 AI_Player.update()		1100,	11,	1101,	111,	1101,	1010,	1001
2017-01-04 11:30:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:30:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:17 AI_Player.update()	update
2017-01-04 11:30:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:30:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:17 AI_Player.update()	update
2017-01-04 11:30:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:17 AI_Player.update()	Search took399ms
2017-01-04 11:30:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:17 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-04 11:30:17 AI_Player.update()		1110,	1110,	1100,	110,	101,	11,	1010
2017-01-04 11:30:17 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:17 AI_Player.update()		1010,	1011,	111,	1010,	1001,	101,	110
2017-01-04 11:30:17 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:17 AI_Player.update()		1110,	11,	110,	1001,	1010,	1100,	1101
2017-01-04 11:30:17 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1010,	1001
2017-01-04 11:30:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:30:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:17 AI_Player.update()	update
2017-01-04 11:30:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:17 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:30:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:17 AI_Player.update()	update
2017-01-04 11:30:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:18 AI_Player.update()	Search took475ms
2017-01-04 11:30:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:18 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-04 11:30:18 AI_Player.update()		1110,	1110,	1100,	110,	101,	11,	1010
2017-01-04 11:30:18 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:18 AI_Player.update()		110,	1010,	1011,	111,	1010,	1001,	101
2017-01-04 11:30:18 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:18 AI_Player.update()		1110,	11,	110,	1001,	1010,	1100,	1101
2017-01-04 11:30:18 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1010,	1001
2017-01-04 11:30:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:30:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:18 AI_Player.update()	update
2017-01-04 11:30:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:30:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:18 AI_Player.update()	update
2017-01-04 11:30:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:18 AI_Player.update()	Search took334ms
2017-01-04 11:30:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:18 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-04 11:30:18 AI_Player.update()		1110,	1100,	110,	101,	11,	1010,	1110
2017-01-04 11:30:18 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:18 AI_Player.update()		110,	1010,	1011,	111,	1010,	1001,	101
2017-01-04 11:30:18 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 11:30:18 AI_Player.update()		1110,	11,	110,	1001,	1010,	1100,	1101
2017-01-04 11:30:18 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1010,	1001
2017-01-04 11:30:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:30:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:18 AI_Player.update()	update
2017-01-04 11:30:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:30:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:18 AI_Player.update()	update
2017-01-04 11:30:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:18 AI_Player.update()	Search took570ms
2017-01-04 11:30:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:18 AI_Player.update()		110,	1101,	111,	111,	111,	1100,	11
2017-01-04 11:30:18 AI_Player.update()		1110,	1100,	110,	101,	11,	1010,	1110
2017-01-04 11:30:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 11:30:18 AI_Player.update()		110,	1010,	1011,	1010,	1010,	1001,	101
2017-01-04 11:30:18 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1100,	1011
2017-01-04 11:30:18 AI_Player.update()		1110,	11,	110,	1001,	1010,	1100,	1101
2017-01-04 11:30:18 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	4 4
2017-01-04 11:30:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:18 AI_Player.update()	update
2017-01-04 11:30:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:30:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:18 AI_Player.update()	update
2017-01-04 11:30:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:19 AI_Player.update()	Search took140ms
2017-01-04 11:30:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:19 AI_Player.update()		110,	1101,	111,	111,	111,	1010,	11
2017-01-04 11:30:19 AI_Player.update()		1110,	1100,	110,	101,	11,	1100,	1110
2017-01-04 11:30:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 11:30:19 AI_Player.update()		110,	1010,	1011,	1010,	1010,	1010,	101
2017-01-04 11:30:19 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-04 11:30:19 AI_Player.update()		1110,	11,	110,	1001,	1010,	1100,	1101
2017-01-04 11:30:19 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:30:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:19 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:30:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:19 AI_Player.update()	update
2017-01-04 11:30:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:19 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:30:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:19 AI_Player.update()	update
2017-01-04 11:30:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:20 AI_Player.update()	Search took1636ms
2017-01-04 11:30:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:20 AI_Player.update()		110,	1101,	111,	111,	111,	1010,	11
2017-01-04 11:30:20 AI_Player.update()		1110,	1110,	1100,	110,	101,	11,	1100
2017-01-04 11:30:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 11:30:20 AI_Player.update()		110,	1010,	1011,	1010,	1010,	1010,	101
2017-01-04 11:30:20 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-04 11:30:20 AI_Player.update()		1110,	11,	110,	1001,	1010,	1100,	1101
2017-01-04 11:30:20 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:30:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:30:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:20 AI_Player.update()	update
2017-01-04 11:30:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:20 AI_Player.update()	update
2017-01-04 11:30:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:20 AI_Player.update()	Search took46ms
2017-01-04 11:30:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:20 AI_Player.update()		110,	1101,	111,	111,	111,	1010,	11
2017-01-04 11:30:20 AI_Player.update()		1110,	1100,	110,	101,	11,	1100,	1110
2017-01-04 11:30:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 11:30:20 AI_Player.update()		110,	1010,	1011,	1010,	1010,	1010,	101
2017-01-04 11:30:20 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-04 11:30:20 AI_Player.update()		1110,	11,	110,	1001,	1010,	1100,	1101
2017-01-04 11:30:20 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:30:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:20 AI_Player.update()	update
2017-01-04 11:30:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:20 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:20 AI_Player.update()	update
2017-01-04 11:30:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:21 AI_Player.update()	Search took1001ms
2017-01-04 11:30:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:21 AI_Player.update()		110,	1101,	111,	111,	111,	1100,	11
2017-01-04 11:30:21 AI_Player.update()		1110,	1100,	110,	101,	11,	1010,	1110
2017-01-04 11:30:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 11:30:21 AI_Player.update()		110,	1010,	1011,	1010,	1010,	1001,	101
2017-01-04 11:30:21 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1100,	1011
2017-01-04 11:30:21 AI_Player.update()		1110,	11,	110,	1001,	1010,	1100,	1101
2017-01-04 11:30:21 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:21 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:21 AI_Player.update()	update
2017-01-04 11:30:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:21 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:21 AI_Player.update()	update
2017-01-04 11:30:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:21 AI_Player.update()	Search took87ms
2017-01-04 11:30:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:21 AI_Player.update()		110,	1101,	111,	111,	111,	1010,	11
2017-01-04 11:30:21 AI_Player.update()		1110,	1100,	110,	101,	11,	1100,	1110
2017-01-04 11:30:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 11:30:21 AI_Player.update()		110,	1010,	1011,	1010,	1010,	1010,	101
2017-01-04 11:30:21 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-04 11:30:21 AI_Player.update()		1110,	11,	110,	1001,	1010,	1100,	1101
2017-01-04 11:30:21 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1100,	1001
2017-01-04 11:30:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:21 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:21 AI_Player.update()	update
2017-01-04 11:30:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:21 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:21 AI_Player.update()	update
2017-01-04 11:30:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:22 AI_Player.update()	Search took796ms
2017-01-04 11:30:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:22 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 11:30:22 AI_Player.update()		1110,	1100,	110,	101,	11,	1100,	1110
2017-01-04 11:30:22 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 11:30:22 AI_Player.update()		110,	1010,	1011,	111,	1010,	1010,	101
2017-01-04 11:30:22 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1001,	1011
2017-01-04 11:30:22 AI_Player.update()		1110,	11,	110,	1001,	1010,	1100,	1101
2017-01-04 11:30:22 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1100,	1001
2017-01-04 11:30:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:22 AI_Player.update()	update
2017-01-04 11:30:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:22 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:30:22 AI_Player.update()	Player a has won!
2017-01-04 11:30:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:30:22 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:30:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:30:22 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:30:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:22 AI_Player.update()	update
2017-01-04 11:30:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:22 AI_Player.update()	Search took117ms
2017-01-04 11:30:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:22 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-04 11:30:22 AI_Player.update()		1100,	111,	11,	1010,	1001,	110,	1011
2017-01-04 11:30:22 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 11:30:22 AI_Player.update()		1110,	1010,	11,	1101,	111,	1010,	1011
2017-01-04 11:30:22 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 11:30:22 AI_Player.update()		110,	1100,	1001,	1001,	1100,	1001,	1001
2017-01-04 11:30:22 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-04 11:30:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:22 AI_Player.update()	update
2017-01-04 11:30:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:22 AI_Player.update()	update
2017-01-04 11:30:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:23 AI_Player.update()	Search took827ms
2017-01-04 11:30:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:23 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-04 11:30:23 AI_Player.update()		1100,	111,	11,	1010,	1001,	110,	1011
2017-01-04 11:30:23 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 11:30:23 AI_Player.update()		1110,	1010,	11,	1101,	111,	101,	1011
2017-01-04 11:30:23 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 11:30:23 AI_Player.update()		110,	1100,	1001,	1001,	1100,	1010,	1001
2017-01-04 11:30:23 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1001,	1001
2017-01-04 11:30:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:23 AI_Player.update()	update
2017-01-04 11:30:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:23 AI_Player.update()	update
2017-01-04 11:30:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:24 AI_Player.update()	Search took549ms
2017-01-04 11:30:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:24 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-04 11:30:24 AI_Player.update()		1100,	111,	11,	101,	1001,	110,	1011
2017-01-04 11:30:24 AI_Player.update()		1110,	1010,	1110,	1101,	111,	110,	1011
2017-01-04 11:30:24 AI_Player.update()		1110,	1010,	11,	110,	111,	101,	1011
2017-01-04 11:30:24 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-04 11:30:24 AI_Player.update()		110,	1100,	1001,	1101,	1100,	1010,	1001
2017-01-04 11:30:24 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:24 AI_Player.update()	update
2017-01-04 11:30:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:24 AI_Player.update()	update
2017-01-04 11:30:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:24 AI_Player.update()	Search took661ms
2017-01-04 11:30:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:24 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-04 11:30:24 AI_Player.update()		1100,	111,	11,	1010,	1001,	110,	1011
2017-01-04 11:30:24 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 11:30:24 AI_Player.update()		1110,	1010,	11,	1101,	111,	101,	1011
2017-01-04 11:30:24 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 11:30:24 AI_Player.update()		110,	1100,	1001,	1001,	1100,	1010,	1001
2017-01-04 11:30:24 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1001,	1001
2017-01-04 11:30:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:24 AI_Player.update()	update
2017-01-04 11:30:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:24 AI_Player.update()	update
2017-01-04 11:30:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:25 AI_Player.update()	Search took82ms
2017-01-04 11:30:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:25 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-04 11:30:25 AI_Player.update()		1100,	111,	11,	101,	1001,	110,	1011
2017-01-04 11:30:25 AI_Player.update()		1110,	1010,	1110,	1101,	111,	110,	1011
2017-01-04 11:30:25 AI_Player.update()		1110,	1010,	11,	110,	111,	101,	1011
2017-01-04 11:30:25 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-04 11:30:25 AI_Player.update()		110,	1100,	1001,	1101,	1100,	1010,	1001
2017-01-04 11:30:25 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:25 AI_Player.update()	update
2017-01-04 11:30:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:25 AI_Player.update()	update
2017-01-04 11:30:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:25 AI_Player.update()	Search took796ms
2017-01-04 11:30:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:25 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-04 11:30:25 AI_Player.update()		1100,	111,	11,	1010,	1001,	110,	1011
2017-01-04 11:30:25 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 11:30:25 AI_Player.update()		1110,	1010,	11,	1101,	111,	101,	1011
2017-01-04 11:30:25 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 11:30:25 AI_Player.update()		110,	1100,	1001,	1001,	1100,	1010,	1001
2017-01-04 11:30:25 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1001,	1001
2017-01-04 11:30:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:25 AI_Player.update()	update
2017-01-04 11:30:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:25 AI_Player.update()	update
2017-01-04 11:30:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:26 AI_Player.update()	Search took915ms
2017-01-04 11:30:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:26 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-04 11:30:26 AI_Player.update()		1100,	111,	11,	1010,	1001,	110,	1011
2017-01-04 11:30:26 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 11:30:26 AI_Player.update()		1110,	1010,	11,	1101,	111,	101,	1011
2017-01-04 11:30:26 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 11:30:26 AI_Player.update()		1100,	1001,	1001,	1100,	1010,	1001,	110
2017-01-04 11:30:26 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1001,	1001
2017-01-04 11:30:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:26 AI_Player.update()	update
2017-01-04 11:30:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:30:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:26 AI_Player.update()	update
2017-01-04 11:30:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:26 AI_Player.update()	Search took90ms
2017-01-04 11:30:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:26 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-04 11:30:26 AI_Player.update()		1100,	111,	11,	1010,	1001,	110,	1011
2017-01-04 11:30:26 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 11:30:26 AI_Player.update()		1110,	1010,	11,	1101,	111,	101,	1011
2017-01-04 11:30:26 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 11:30:26 AI_Player.update()		110,	1100,	1001,	1001,	1100,	1010,	1001
2017-01-04 11:30:26 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1001,	1001
2017-01-04 11:30:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:30:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:26 AI_Player.update()	update
2017-01-04 11:30:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:26 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:30:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:26 AI_Player.update()	update
2017-01-04 11:30:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:27 AI_Player.update()	Search took577ms
2017-01-04 11:30:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:27 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-04 11:30:27 AI_Player.update()		1100,	111,	11,	101,	1001,	110,	1011
2017-01-04 11:30:27 AI_Player.update()		1110,	1010,	1110,	1101,	111,	110,	1011
2017-01-04 11:30:27 AI_Player.update()		1110,	1010,	11,	110,	111,	101,	1011
2017-01-04 11:30:27 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-04 11:30:27 AI_Player.update()		110,	1100,	1001,	1101,	1100,	1010,	1001
2017-01-04 11:30:27 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:27 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:30:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:27 AI_Player.update()	update
2017-01-04 11:30:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:27 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:30:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:27 AI_Player.update()	update
2017-01-04 11:30:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:28 AI_Player.update()	Search took761ms
2017-01-04 11:30:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:28 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-04 11:30:28 AI_Player.update()		1100,	111,	11,	1010,	1001,	110,	1011
2017-01-04 11:30:28 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 11:30:28 AI_Player.update()		1110,	1010,	11,	1101,	111,	101,	1011
2017-01-04 11:30:28 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 11:30:28 AI_Player.update()		110,	1100,	1001,	1001,	1100,	1010,	1001
2017-01-04 11:30:28 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1001,	1001
2017-01-04 11:30:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:30:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:28 AI_Player.update()	update
2017-01-04 11:30:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:30:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:28 AI_Player.update()	update
2017-01-04 11:30:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:28 AI_Player.update()	Search took438ms
2017-01-04 11:30:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:28 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-04 11:30:28 AI_Player.update()		1100,	1010,	11,	1010,	1001,	110,	1011
2017-01-04 11:30:28 AI_Player.update()		1110,	111,	1110,	101,	111,	110,	1011
2017-01-04 11:30:28 AI_Player.update()		1110,	1010,	11,	1101,	111,	101,	1011
2017-01-04 11:30:28 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 11:30:28 AI_Player.update()		110,	11,	1001,	1001,	1100,	1010,	1001
2017-01-04 11:30:28 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1001,	1001
2017-01-04 11:30:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	3 1
2017-01-04 11:30:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:28 AI_Player.update()	update
2017-01-04 11:30:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:30:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:28 AI_Player.update()	update
2017-01-04 11:30:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:29 AI_Player.update()	Search took570ms
2017-01-04 11:30:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:29 AI_Player.update()		110,	1001,	111,	1101,	111,	11,	11
2017-01-04 11:30:29 AI_Player.update()		1100,	1010,	11,	1010,	1001,	110,	1011
2017-01-04 11:30:29 AI_Player.update()		1110,	111,	1110,	1010,	111,	110,	1011
2017-01-04 11:30:29 AI_Player.update()		1110,	1010,	11,	101,	111,	101,	1011
2017-01-04 11:30:29 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1010,	1011
2017-01-04 11:30:29 AI_Player.update()		110,	11,	1001,	110,	1100,	1010,	1001
2017-01-04 11:30:29 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:30:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	4 1
2017-01-04 11:30:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:29 AI_Player.update()	update
2017-01-04 11:30:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:30:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:29 AI_Player.update()	update
2017-01-04 11:30:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:29 AI_Player.update()	Search took385ms
2017-01-04 11:30:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:29 AI_Player.update()		110,	1100,	111,	1101,	111,	11,	11
2017-01-04 11:30:29 AI_Player.update()		1100,	1001,	11,	1010,	1001,	110,	1011
2017-01-04 11:30:29 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 11:30:29 AI_Player.update()		1110,	111,	11,	101,	111,	101,	1011
2017-01-04 11:30:29 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1010,	1011
2017-01-04 11:30:29 AI_Player.update()		110,	1010,	1001,	110,	1100,	1010,	1001
2017-01-04 11:30:29 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:30:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:30:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:29 AI_Player.update()	update
2017-01-04 11:30:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:30:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:29 AI_Player.update()	update
2017-01-04 11:30:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:29 AI_Player.update()	Search took153ms
2017-01-04 11:30:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:29 AI_Player.update()		110,	1100,	111,	1101,	111,	11,	11
2017-01-04 11:30:29 AI_Player.update()		1100,	1001,	11,	1010,	1001,	110,	1011
2017-01-04 11:30:29 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 11:30:29 AI_Player.update()		1110,	111,	11,	101,	111,	101,	1011
2017-01-04 11:30:29 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1010,	1011
2017-01-04 11:30:29 AI_Player.update()		1001,	110,	1010,	1001,	110,	1100,	1010
2017-01-04 11:30:29 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:30:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:30:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:29 AI_Player.update()	update
2017-01-04 11:30:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:29 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:30:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:29 AI_Player.update()	update
2017-01-04 11:30:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:31 AI_Player.update()	Search took1450ms
2017-01-04 11:30:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:31 AI_Player.update()		110,	1100,	111,	1101,	111,	11,	11
2017-01-04 11:30:31 AI_Player.update()		1001,	11,	1010,	1001,	110,	1011,	1100
2017-01-04 11:30:31 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 11:30:31 AI_Player.update()		1110,	111,	11,	101,	111,	101,	1011
2017-01-04 11:30:31 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1010,	1011
2017-01-04 11:30:31 AI_Player.update()		1001,	110,	1010,	1001,	110,	1100,	1010
2017-01-04 11:30:31 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:30:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	4 2
2017-01-04 11:30:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:31 AI_Player.update()	update
2017-01-04 11:30:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:30:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:31 AI_Player.update()	update
2017-01-04 11:30:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:31 AI_Player.update()	Search took158ms
2017-01-04 11:30:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:31 AI_Player.update()		110,	1100,	111,	1101,	111,	11,	11
2017-01-04 11:30:31 AI_Player.update()		1001,	11,	1010,	1001,	110,	1011,	1100
2017-01-04 11:30:31 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 11:30:31 AI_Player.update()		1110,	111,	11,	101,	111,	101,	1011
2017-01-04 11:30:31 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1010,	1011
2017-01-04 11:30:31 AI_Player.update()		110,	1010,	1001,	110,	1100,	1010,	1001
2017-01-04 11:30:31 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:30:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	5 2
2017-01-04 11:30:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:31 AI_Player.update()	update
2017-01-04 11:30:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:30:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:31 AI_Player.update()	update
2017-01-04 11:30:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:31 AI_Player.update()	Search took337ms
2017-01-04 11:30:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:31 AI_Player.update()		110,	1100,	111,	1101,	111,	11,	11
2017-01-04 11:30:31 AI_Player.update()		11,	1010,	1001,	110,	1011,	1100,	1001
2017-01-04 11:30:31 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 11:30:31 AI_Player.update()		1110,	111,	11,	101,	111,	101,	1011
2017-01-04 11:30:31 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1010,	1011
2017-01-04 11:30:31 AI_Player.update()		110,	1010,	1001,	110,	1100,	1010,	1001
2017-01-04 11:30:31 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:30:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:30:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:31 AI_Player.update()	update
2017-01-04 11:30:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:31 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:30:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:31 AI_Player.update()	update
2017-01-04 11:30:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:32 AI_Player.update()	Search took1194ms
2017-01-04 11:30:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:32 AI_Player.update()		110,	1100,	111,	1101,	111,	11,	11
2017-01-04 11:30:32 AI_Player.update()		11,	1010,	1001,	110,	1011,	1100,	1001
2017-01-04 11:30:32 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 11:30:32 AI_Player.update()		1011,	1110,	111,	11,	101,	111,	101
2017-01-04 11:30:32 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1010,	1011
2017-01-04 11:30:32 AI_Player.update()		110,	1010,	1001,	110,	1100,	1010,	1001
2017-01-04 11:30:32 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-04 11:30:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:32 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:30:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:32 AI_Player.update()	update
2017-01-04 11:30:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:32 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:30:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:33 AI_Player.update()	update
2017-01-04 11:30:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:33 AI_Player.update()	Search took401ms
2017-01-04 11:30:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:33 AI_Player.update()		110,	1100,	111,	1101,	111,	1001,	11
2017-01-04 11:30:33 AI_Player.update()		11,	1010,	1001,	110,	1011,	11,	1001
2017-01-04 11:30:33 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 11:30:33 AI_Player.update()		1011,	1110,	111,	11,	101,	110,	101
2017-01-04 11:30:33 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	111,	1011
2017-01-04 11:30:33 AI_Player.update()		110,	1010,	1001,	110,	1100,	1010,	1001
2017-01-04 11:30:33 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:33 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:30:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:33 AI_Player.update()	update
2017-01-04 11:30:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:33 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:30:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:33 AI_Player.update()	update
2017-01-04 11:30:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:34 AI_Player.update()	Search took669ms
2017-01-04 11:30:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:34 AI_Player.update()		110,	1100,	111,	1101,	111,	1001,	11
2017-01-04 11:30:34 AI_Player.update()		11,	1010,	1001,	110,	1011,	11,	1001
2017-01-04 11:30:34 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 11:30:34 AI_Player.update()		1110,	111,	11,	101,	110,	101,	1011
2017-01-04 11:30:34 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	111,	1011
2017-01-04 11:30:34 AI_Player.update()		110,	1010,	1001,	110,	1100,	1010,	1001
2017-01-04 11:30:34 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:34 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:30:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:34 AI_Player.update()	update
2017-01-04 11:30:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:34 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:34 AI_Player.update()	update
2017-01-04 11:30:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:35 AI_Player.update()	Search took1742ms
2017-01-04 11:30:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:35 AI_Player.update()		110,	1100,	111,	1101,	111,	1001,	11
2017-01-04 11:30:35 AI_Player.update()		11,	1010,	1001,	110,	1011,	11,	1001
2017-01-04 11:30:35 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 11:30:35 AI_Player.update()		111,	11,	101,	110,	101,	1011,	1110
2017-01-04 11:30:35 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	111,	1011
2017-01-04 11:30:35 AI_Player.update()		110,	1010,	1001,	110,	1100,	1010,	1001
2017-01-04 11:30:35 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:35 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:30:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:35 AI_Player.update()	update
2017-01-04 11:30:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:35 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:30:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:35 AI_Player.update()	update
2017-01-04 11:30:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:36 AI_Player.update()	Search took569ms
2017-01-04 11:30:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:36 AI_Player.update()		110,	1100,	111,	1101,	111,	1001,	11
2017-01-04 11:30:36 AI_Player.update()		11,	1010,	1001,	110,	1011,	11,	1001
2017-01-04 11:30:36 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 11:30:36 AI_Player.update()		1110,	111,	11,	101,	110,	101,	1011
2017-01-04 11:30:36 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	111,	1011
2017-01-04 11:30:36 AI_Player.update()		110,	1010,	1001,	110,	1100,	1010,	1001
2017-01-04 11:30:36 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:36 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:30:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:36 AI_Player.update()	update
2017-01-04 11:30:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:36 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:30:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:36 AI_Player.update()	update
2017-01-04 11:30:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:38 AI_Player.update()	Search took2040ms
2017-01-04 11:30:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:38 AI_Player.update()		110,	1100,	111,	1101,	111,	1001,	11
2017-01-04 11:30:38 AI_Player.update()		1010,	1001,	110,	1011,	11,	1001,	11
2017-01-04 11:30:38 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 11:30:38 AI_Player.update()		1110,	111,	11,	101,	110,	101,	1011
2017-01-04 11:30:38 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	111,	1011
2017-01-04 11:30:38 AI_Player.update()		110,	1010,	1001,	110,	1100,	1010,	1001
2017-01-04 11:30:38 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:38 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:30:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:38 AI_Player.update()	update
2017-01-04 11:30:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:38 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:30:38 AI_Player.update()	Player a has won!
2017-01-04 11:30:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:30:38 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:30:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:30:38 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:30:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:38 AI_Player.update()	update
2017-01-04 11:30:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:39 AI_Player.update()	Search took600ms
2017-01-04 11:30:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:39 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:30:39 AI_Player.update()		1101,	101,	111,	110,	11,	101,	110
2017-01-04 11:30:39 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:39 AI_Player.update()		101,	1001,	101,	1010,	101,	11,	1010
2017-01-04 11:30:39 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:39 AI_Player.update()		1010,	1010,	1110,	1010,	1010,	101,	101
2017-01-04 11:30:39 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:39 AI_Player.update()	update
2017-01-04 11:30:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:39 AI_Player.update()	update
2017-01-04 11:30:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:39 AI_Player.update()	Search took69ms
2017-01-04 11:30:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:39 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:30:39 AI_Player.update()		101,	111,	110,	11,	101,	110,	1101
2017-01-04 11:30:39 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:39 AI_Player.update()		101,	1001,	101,	1010,	101,	11,	1010
2017-01-04 11:30:39 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:39 AI_Player.update()		1010,	1010,	1110,	1010,	1010,	101,	101
2017-01-04 11:30:39 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:39 AI_Player.update()	update
2017-01-04 11:30:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:39 AI_Player.update()	update
2017-01-04 11:30:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:39 AI_Player.update()	Search took469ms
2017-01-04 11:30:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:39 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:30:39 AI_Player.update()		101,	111,	110,	11,	101,	110,	1101
2017-01-04 11:30:39 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:39 AI_Player.update()		1001,	101,	1010,	101,	11,	1010,	101
2017-01-04 11:30:39 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:39 AI_Player.update()		1010,	1010,	1110,	1010,	1010,	101,	101
2017-01-04 11:30:39 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:39 AI_Player.update()	update
2017-01-04 11:30:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:39 AI_Player.update()	update
2017-01-04 11:30:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:39 AI_Player.update()	Search took272ms
2017-01-04 11:30:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:39 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:30:39 AI_Player.update()		101,	111,	110,	11,	101,	110,	1101
2017-01-04 11:30:39 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:39 AI_Player.update()		1001,	101,	1010,	101,	11,	1010,	101
2017-01-04 11:30:39 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:39 AI_Player.update()		101,	1010,	1010,	1110,	1010,	1010,	101
2017-01-04 11:30:39 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:39 AI_Player.update()	update
2017-01-04 11:30:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:39 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:39 AI_Player.update()	update
2017-01-04 11:30:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:40 AI_Player.update()	Search took219ms
2017-01-04 11:30:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:40 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:30:40 AI_Player.update()		101,	111,	110,	11,	101,	110,	1101
2017-01-04 11:30:40 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:40 AI_Player.update()		101,	1001,	101,	1010,	101,	11,	1010
2017-01-04 11:30:40 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:40 AI_Player.update()		101,	1010,	1010,	1110,	1010,	1010,	101
2017-01-04 11:30:40 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:40 AI_Player.update()	update
2017-01-04 11:30:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:40 AI_Player.update()	update
2017-01-04 11:30:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:40 AI_Player.update()	Search took396ms
2017-01-04 11:30:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:40 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:30:40 AI_Player.update()		101,	111,	110,	11,	101,	110,	1101
2017-01-04 11:30:40 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:40 AI_Player.update()		101,	1001,	101,	1010,	101,	11,	1010
2017-01-04 11:30:40 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:40 AI_Player.update()		1010,	1010,	1110,	1010,	1010,	101,	101
2017-01-04 11:30:40 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:30:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:40 AI_Player.update()	update
2017-01-04 11:30:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:40 AI_Player.update()	update
2017-01-04 11:30:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:40 AI_Player.update()	Search took380ms
2017-01-04 11:30:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:40 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:30:40 AI_Player.update()		101,	111,	110,	11,	101,	110,	1101
2017-01-04 11:30:40 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:40 AI_Player.update()		1010,	101,	1001,	101,	1010,	101,	11
2017-01-04 11:30:40 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:40 AI_Player.update()		1010,	1010,	1110,	1010,	1010,	101,	101
2017-01-04 11:30:40 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:40 AI_Player.update()	update
2017-01-04 11:30:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:40 AI_Player.update()	update
2017-01-04 11:30:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:41 AI_Player.update()	Search took437ms
2017-01-04 11:30:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:41 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:30:41 AI_Player.update()		101,	111,	110,	11,	101,	110,	1101
2017-01-04 11:30:41 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:41 AI_Player.update()		101,	1001,	101,	1010,	101,	11,	1010
2017-01-04 11:30:41 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:41 AI_Player.update()		1010,	1010,	1110,	1010,	1010,	101,	101
2017-01-04 11:30:41 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:41 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:41 AI_Player.update()	update
2017-01-04 11:30:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:41 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:41 AI_Player.update()	update
2017-01-04 11:30:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:41 AI_Player.update()	Search took408ms
2017-01-04 11:30:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:41 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:30:41 AI_Player.update()		101,	101,	110,	11,	101,	110,	1101
2017-01-04 11:30:41 AI_Player.update()		1110,	111,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:41 AI_Player.update()		101,	1100,	101,	1010,	101,	11,	1010
2017-01-04 11:30:41 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:41 AI_Player.update()		1010,	1110,	1110,	1010,	1010,	101,	101
2017-01-04 11:30:41 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:41 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:41 AI_Player.update()	update
2017-01-04 11:30:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:41 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:41 AI_Player.update()	update
2017-01-04 11:30:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:41 AI_Player.update()	Search took123ms
2017-01-04 11:30:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:41 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:30:41 AI_Player.update()		101,	111,	110,	11,	101,	110,	1101
2017-01-04 11:30:41 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:41 AI_Player.update()		101,	1001,	101,	1010,	101,	11,	1010
2017-01-04 11:30:41 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:41 AI_Player.update()		1010,	1010,	1110,	1010,	1010,	101,	101
2017-01-04 11:30:41 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:41 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:41 AI_Player.update()	update
2017-01-04 11:30:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:41 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:41 AI_Player.update()	update
2017-01-04 11:30:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:42 AI_Player.update()	Search took578ms
2017-01-04 11:30:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:42 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:30:42 AI_Player.update()		101,	111,	110,	11,	101,	110,	1101
2017-01-04 11:30:42 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:42 AI_Player.update()		101,	1001,	101,	1010,	101,	11,	1010
2017-01-04 11:30:42 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:42 AI_Player.update()		101,	1010,	1010,	1110,	1010,	1010,	101
2017-01-04 11:30:42 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:42 AI_Player.update()	update
2017-01-04 11:30:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:42 AI_Player.update()	update
2017-01-04 11:30:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:42 AI_Player.update()	Search took385ms
2017-01-04 11:30:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:42 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 11:30:42 AI_Player.update()		101,	111,	110,	11,	101,	110,	1101
2017-01-04 11:30:42 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:42 AI_Player.update()		101,	1001,	101,	1010,	101,	11,	1010
2017-01-04 11:30:42 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:42 AI_Player.update()		101,	101,	1010,	1010,	1110,	1010,	1010
2017-01-04 11:30:42 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:30:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:42 AI_Player.update()	update
2017-01-04 11:30:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:30:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:42 AI_Player.update()	update
2017-01-04 11:30:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:44 AI_Player.update()	Search took1146ms
2017-01-04 11:30:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:44 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-04 11:30:44 AI_Player.update()		101,	111,	110,	11,	101,	1100,	1101
2017-01-04 11:30:44 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-04 11:30:44 AI_Player.update()		101,	1001,	101,	1010,	101,	1100,	1010
2017-01-04 11:30:44 AI_Player.update()		1110,	1110,	1101,	101,	1011,	11,	1011
2017-01-04 11:30:44 AI_Player.update()		101,	101,	1010,	1010,	1110,	1011,	1010
2017-01-04 11:30:44 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:30:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:30:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:44 AI_Player.update()	update
2017-01-04 11:30:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:30:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:44 AI_Player.update()	update
2017-01-04 11:30:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:44 AI_Player.update()	Search took425ms
2017-01-04 11:30:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:44 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-04 11:30:44 AI_Player.update()		101,	1100,	110,	11,	101,	1100,	1101
2017-01-04 11:30:44 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-04 11:30:44 AI_Player.update()		101,	1110,	101,	1010,	101,	1100,	1010
2017-01-04 11:30:44 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-04 11:30:44 AI_Player.update()		101,	101,	1010,	1010,	1110,	1011,	1010
2017-01-04 11:30:44 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:30:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:30:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:44 AI_Player.update()	update
2017-01-04 11:30:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:30:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:44 AI_Player.update()	update
2017-01-04 11:30:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:44 AI_Player.update()	Search took78ms
2017-01-04 11:30:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:44 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-04 11:30:44 AI_Player.update()		101,	111,	110,	11,	101,	1100,	1101
2017-01-04 11:30:44 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-04 11:30:44 AI_Player.update()		101,	1001,	101,	1010,	101,	1100,	1010
2017-01-04 11:30:44 AI_Player.update()		1110,	1110,	1101,	101,	1011,	11,	1011
2017-01-04 11:30:44 AI_Player.update()		101,	101,	1010,	1010,	1110,	1011,	1010
2017-01-04 11:30:44 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:30:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:30:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:44 AI_Player.update()	update
2017-01-04 11:30:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:44 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:30:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:44 AI_Player.update()	update
2017-01-04 11:30:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:45 AI_Player.update()	Search took449ms
2017-01-04 11:30:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:45 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-04 11:30:45 AI_Player.update()		101,	1100,	110,	11,	101,	1100,	1101
2017-01-04 11:30:45 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-04 11:30:45 AI_Player.update()		101,	1110,	101,	1010,	101,	1100,	1010
2017-01-04 11:30:45 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-04 11:30:45 AI_Player.update()		101,	101,	1010,	1010,	1110,	1011,	1010
2017-01-04 11:30:45 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 11:30:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:30:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:45 AI_Player.update()	update
2017-01-04 11:30:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:30:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:45 AI_Player.update()	update
2017-01-04 11:30:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:45 AI_Player.update()	Search took196ms
2017-01-04 11:30:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:45 AI_Player.update()		110,	111,	111,	1010,	111,	1100,	11
2017-01-04 11:30:45 AI_Player.update()		101,	1100,	110,	11,	101,	110,	1101
2017-01-04 11:30:45 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:45 AI_Player.update()		101,	1110,	101,	1010,	101,	11,	1010
2017-01-04 11:30:45 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:45 AI_Player.update()		101,	101,	1010,	1010,	1110,	1010,	1010
2017-01-04 11:30:45 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:30:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:45 AI_Player.update()	update
2017-01-04 11:30:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:30:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:45 AI_Player.update()	update
2017-01-04 11:30:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:46 AI_Player.update()	Search took897ms
2017-01-04 11:30:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:46 AI_Player.update()		110,	111,	111,	1010,	111,	1100,	11
2017-01-04 11:30:46 AI_Player.update()		101,	1100,	110,	11,	101,	110,	1101
2017-01-04 11:30:46 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:46 AI_Player.update()		1110,	101,	1010,	101,	11,	1010,	101
2017-01-04 11:30:46 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:46 AI_Player.update()		101,	101,	1010,	1010,	1110,	1010,	1010
2017-01-04 11:30:46 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:46 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:30:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:46 AI_Player.update()	update
2017-01-04 11:30:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:46 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:30:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:46 AI_Player.update()	update
2017-01-04 11:30:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:47 AI_Player.update()	Search took1156ms
2017-01-04 11:30:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:47 AI_Player.update()		110,	111,	111,	1010,	111,	1100,	11
2017-01-04 11:30:47 AI_Player.update()		101,	1100,	110,	11,	101,	110,	1101
2017-01-04 11:30:47 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:47 AI_Player.update()		101,	1010,	101,	11,	1010,	101,	1110
2017-01-04 11:30:47 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:47 AI_Player.update()		101,	101,	1010,	1010,	1110,	1010,	1010
2017-01-04 11:30:47 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:30:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:47 AI_Player.update()	update
2017-01-04 11:30:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:47 AI_Player.update()	update
2017-01-04 11:30:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:47 AI_Player.update()	Search took356ms
2017-01-04 11:30:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:47 AI_Player.update()		110,	111,	111,	1010,	111,	1100,	11
2017-01-04 11:30:47 AI_Player.update()		101,	1100,	110,	11,	101,	110,	1101
2017-01-04 11:30:47 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:47 AI_Player.update()		1010,	101,	11,	1010,	101,	1110,	101
2017-01-04 11:30:47 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:47 AI_Player.update()		101,	101,	1010,	1010,	1110,	1010,	1010
2017-01-04 11:30:47 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:47 AI_Player.update()	update
2017-01-04 11:30:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:47 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:47 AI_Player.update()	update
2017-01-04 11:30:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:48 AI_Player.update()	Search took404ms
2017-01-04 11:30:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:48 AI_Player.update()		110,	111,	111,	1010,	111,	1100,	11
2017-01-04 11:30:48 AI_Player.update()		101,	1100,	110,	11,	101,	110,	1101
2017-01-04 11:30:48 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-04 11:30:48 AI_Player.update()		101,	11,	1010,	101,	1110,	101,	1010
2017-01-04 11:30:48 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-04 11:30:48 AI_Player.update()		101,	101,	1010,	1010,	1110,	1010,	1010
2017-01-04 11:30:48 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 11:30:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:48 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:48 AI_Player.update()	update
2017-01-04 11:30:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:48 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:48 AI_Player.update()	update
2017-01-04 11:30:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:51 AI_Player.update()	Search took3506ms
2017-01-04 11:30:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:51 AI_Player.update()		110,	111,	111,	1010,	111,	110,	11
2017-01-04 11:30:51 AI_Player.update()		101,	1100,	110,	11,	101,	1100,	1101
2017-01-04 11:30:51 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 11:30:51 AI_Player.update()		101,	11,	1010,	101,	1110,	1011,	1010
2017-01-04 11:30:51 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 11:30:51 AI_Player.update()		101,	101,	1010,	1010,	1110,	1001,	1010
2017-01-04 11:30:51 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-04 11:30:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:51 GameBoard.setupTreasurePanel()	6 4
2017-01-04 11:30:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:51 AI_Player.update()	update
2017-01-04 11:30:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:30:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 11:30:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 11:30:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:51 AI_Player.update()	update
2017-01-04 11:30:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:53 AI_Player.update()	Search took1541ms
2017-01-04 11:30:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:53 AI_Player.update()		110,	111,	111,	11,	111,	110,	11
2017-01-04 11:30:53 AI_Player.update()		101,	1100,	110,	110,	101,	1100,	1101
2017-01-04 11:30:53 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 11:30:53 AI_Player.update()		101,	11,	1010,	101,	1110,	1011,	1010
2017-01-04 11:30:53 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 11:30:53 AI_Player.update()		101,	101,	1010,	1010,	1110,	1001,	1010
2017-01-04 11:30:53 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-04 11:30:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:30:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:53 AI_Player.update()	update
2017-01-04 11:30:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:53 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 11:30:53 AI_Player.update()	Player a has won!
2017-01-04 11:30:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:30:53 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:30:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:30:53 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:30:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:53 AI_Player.update()	update
2017-01-04 11:30:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:53 AI_Player.update()	Search took308ms
2017-01-04 11:30:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:53 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-04 11:30:53 AI_Player.update()		111,	1100,	101,	1101,	1010,	101,	101
2017-01-04 11:30:53 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1100,	1011
2017-01-04 11:30:53 AI_Player.update()		1010,	1011,	110,	1011,	110,	101,	1010
2017-01-04 11:30:53 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-04 11:30:53 AI_Player.update()		110,	101,	101,	101,	1010,	11,	1001
2017-01-04 11:30:53 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1101,	1001
2017-01-04 11:30:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:53 AI_Player.update()	update
2017-01-04 11:30:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:53 AI_Player.update()	update
2017-01-04 11:30:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:53 AI_Player.update()	Search took49ms
2017-01-04 11:30:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:53 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 11:30:53 AI_Player.update()		111,	1100,	101,	1101,	1010,	1100,	101
2017-01-04 11:30:53 AI_Player.update()		1110,	1010,	1110,	1101,	111,	101,	1011
2017-01-04 11:30:53 AI_Player.update()		1010,	1011,	110,	1011,	110,	1101,	1010
2017-01-04 11:30:53 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 11:30:53 AI_Player.update()		110,	101,	101,	101,	1010,	1101,	1001
2017-01-04 11:30:53 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:53 AI_Player.update()	update
2017-01-04 11:30:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:53 AI_Player.update()	update
2017-01-04 11:30:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:54 AI_Player.update()	Search took440ms
2017-01-04 11:30:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:54 AI_Player.update()		110,	1011,	111,	101,	111,	101,	11
2017-01-04 11:30:54 AI_Player.update()		111,	1001,	101,	1101,	1010,	1100,	101
2017-01-04 11:30:54 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-04 11:30:54 AI_Player.update()		1010,	1010,	110,	1011,	110,	1101,	1010
2017-01-04 11:30:54 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	11,	1011
2017-01-04 11:30:54 AI_Player.update()		110,	101,	101,	101,	1010,	1101,	1001
2017-01-04 11:30:54 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:54 AI_Player.update()	update
2017-01-04 11:30:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:54 AI_Player.update()	update
2017-01-04 11:30:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:54 AI_Player.update()	Search took498ms
2017-01-04 11:30:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:54 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:30:54 AI_Player.update()		111,	1011,	101,	1101,	1010,	1100,	101
2017-01-04 11:30:54 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-04 11:30:54 AI_Player.update()		1010,	1100,	110,	1011,	110,	1101,	1010
2017-01-04 11:30:54 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-04 11:30:54 AI_Player.update()		110,	1011,	101,	101,	1010,	1101,	1001
2017-01-04 11:30:54 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:54 AI_Player.update()	update
2017-01-04 11:30:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:54 AI_Player.update()	update
2017-01-04 11:30:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:55 AI_Player.update()	Search took731ms
2017-01-04 11:30:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:55 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:30:55 AI_Player.update()		111,	1011,	101,	1101,	1010,	1100,	101
2017-01-04 11:30:55 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-04 11:30:55 AI_Player.update()		1100,	110,	1011,	110,	1101,	1010,	1010
2017-01-04 11:30:55 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-04 11:30:55 AI_Player.update()		110,	1011,	101,	101,	1010,	1101,	1001
2017-01-04 11:30:55 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:55 AI_Player.update()	update
2017-01-04 11:30:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:55 AI_Player.update()	update
2017-01-04 11:30:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:56 AI_Player.update()	Search took823ms
2017-01-04 11:30:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:56 AI_Player.update()		110,	1011,	111,	101,	111,	101,	11
2017-01-04 11:30:56 AI_Player.update()		111,	1001,	101,	1101,	1010,	1100,	101
2017-01-04 11:30:56 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-04 11:30:56 AI_Player.update()		1100,	1010,	1011,	110,	1101,	1010,	1010
2017-01-04 11:30:56 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	11,	1011
2017-01-04 11:30:56 AI_Player.update()		110,	101,	101,	101,	1010,	1101,	1001
2017-01-04 11:30:56 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:56 AI_Player.update()	update
2017-01-04 11:30:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:56 AI_Player.update()	update
2017-01-04 11:30:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:56 AI_Player.update()	Search took172ms
2017-01-04 11:30:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:56 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:30:56 AI_Player.update()		111,	1011,	101,	1101,	1010,	1100,	101
2017-01-04 11:30:56 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-04 11:30:56 AI_Player.update()		1100,	110,	1011,	110,	1101,	1010,	1010
2017-01-04 11:30:56 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-04 11:30:56 AI_Player.update()		110,	1011,	101,	101,	1010,	1101,	1001
2017-01-04 11:30:56 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:56 AI_Player.update()	update
2017-01-04 11:30:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:56 AI_Player.update()	update
2017-01-04 11:30:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:57 AI_Player.update()	Search took730ms
2017-01-04 11:30:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:57 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:30:57 AI_Player.update()		111,	1011,	101,	1101,	1010,	1100,	101
2017-01-04 11:30:57 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-04 11:30:57 AI_Player.update()		1010,	1100,	110,	1011,	110,	1101,	1010
2017-01-04 11:30:57 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-04 11:30:57 AI_Player.update()		110,	1011,	101,	101,	1010,	1101,	1001
2017-01-04 11:30:57 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:30:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:57 AI_Player.update()	update
2017-01-04 11:30:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:30:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:57 AI_Player.update()	update
2017-01-04 11:30:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:30:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:30:57 AI_Player.update()	Search took155ms
2017-01-04 11:30:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:57 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:30:57 AI_Player.update()		111,	1011,	101,	1101,	1010,	1100,	101
2017-01-04 11:30:57 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-04 11:30:57 AI_Player.update()		1010,	1010,	1100,	110,	1011,	110,	1101
2017-01-04 11:30:57 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-04 11:30:57 AI_Player.update()		110,	1011,	101,	101,	1010,	1101,	1001
2017-01-04 11:30:57 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	1 2
2017-01-04 11:30:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:57 AI_Player.update()	update
2017-01-04 11:30:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:30:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:30:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:30:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:30:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:30:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:30:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:30:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:30:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:57 AI_Player.update()	update
2017-01-04 11:30:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:30:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:30:58 AI_Player.update()	Search took992ms
2017-01-04 11:30:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:30:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:58 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:30:58 AI_Player.update()		111,	1011,	101,	1101,	1010,	1100,	101
2017-01-04 11:30:58 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-04 11:30:58 AI_Player.update()		1010,	1100,	110,	1011,	110,	1101,	1010
2017-01-04 11:30:58 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-04 11:30:58 AI_Player.update()		110,	1011,	101,	101,	1010,	1101,	1001
2017-01-04 11:30:58 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:30:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:30:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:30:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:58 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:58 AI_Player.update()	update
2017-01-04 11:30:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:30:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:30:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:30:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:30:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:30:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:30:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:30:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:30:58 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:30:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:30:58 AI_Player.update()	update
2017-01-04 11:30:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:31:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:31:00 AI_Player.update()	Search took2458ms
2017-01-04 11:31:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:00 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:31:00 AI_Player.update()		111,	1011,	101,	1101,	1010,	1100,	101
2017-01-04 11:31:00 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-04 11:31:00 AI_Player.update()		1010,	1010,	1100,	110,	1011,	110,	1101
2017-01-04 11:31:00 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-04 11:31:00 AI_Player.update()		110,	1011,	101,	101,	1010,	1101,	1001
2017-01-04 11:31:00 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:31:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:00 GameBoard.setupTreasurePanel()	2 2
2017-01-04 11:31:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:00 AI_Player.update()	update
2017-01-04 11:31:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:31:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:31:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:31:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:31:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:00 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:31:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:31:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:31:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:31:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:31:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:31:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:31:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:31:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:31:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:31:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:31:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:31:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:31:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:00 AI_Player.update()	update
2017-01-04 11:31:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:31:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:31:01 AI_Player.update()	Search took939ms
2017-01-04 11:31:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:01 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-04 11:31:01 AI_Player.update()		111,	1011,	101,	1101,	1010,	1100,	101
2017-01-04 11:31:01 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 11:31:01 AI_Player.update()		1010,	1010,	1100,	1010,	1011,	110,	1101
2017-01-04 11:31:01 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 11:31:01 AI_Player.update()		110,	1011,	101,	1001,	1010,	1101,	1001
2017-01-04 11:31:01 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:31:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:31:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:01 GameBoard.setupTreasurePanel()	3 2
2017-01-04 11:31:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:01 AI_Player.update()	update
2017-01-04 11:31:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:31:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:31:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:31:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:31:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:01 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:31:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:31:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:31:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:31:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:31:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:31:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:31:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:31:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:31:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:31:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:31:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:31:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:31:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:01 AI_Player.update()	update
2017-01-04 11:31:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:31:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:31:03 AI_Player.update()	Search took1974ms
2017-01-04 11:31:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:03 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 11:31:03 AI_Player.update()		111,	1011,	101,	1101,	1010,	1100,	101
2017-01-04 11:31:03 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-04 11:31:03 AI_Player.update()		1010,	1010,	1100,	110,	1011,	110,	1101
2017-01-04 11:31:03 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-04 11:31:03 AI_Player.update()		110,	1011,	101,	101,	1010,	1101,	1001
2017-01-04 11:31:03 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 11:31:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	3 3
2017-01-04 11:31:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:03 AI_Player.update()	update
2017-01-04 11:31:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:31:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:31:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:31:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:31:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:31:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:31:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:31:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:03 AI_Player.update()	update
2017-01-04 11:31:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:31:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:31:03 AI_Player.update()	Search took303ms
2017-01-04 11:31:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:03 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-04 11:31:03 AI_Player.update()		111,	1011,	101,	1101,	1010,	1100,	101
2017-01-04 11:31:03 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 11:31:03 AI_Player.update()		1010,	1010,	1100,	1010,	1011,	110,	1101
2017-01-04 11:31:03 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 11:31:03 AI_Player.update()		110,	1011,	101,	1001,	1010,	1101,	1001
2017-01-04 11:31:03 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:31:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:31:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:31:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:03 AI_Player.update()	update
2017-01-04 11:31:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:31:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:31:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:31:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:31:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:03 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:31:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:03 AI_Player.update()	update
2017-01-04 11:31:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:31:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:31:06 AI_Player.update()	Search took2676ms
2017-01-04 11:31:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:06 AI_Player.update()		110,	1011,	111,	1101,	111,	101,	11
2017-01-04 11:31:06 AI_Player.update()		111,	1001,	101,	1101,	1010,	1100,	101
2017-01-04 11:31:06 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 11:31:06 AI_Player.update()		1010,	1010,	1100,	1010,	1011,	110,	1101
2017-01-04 11:31:06 AI_Player.update()		1110,	1011,	1101,	101,	1011,	11,	1011
2017-01-04 11:31:06 AI_Player.update()		110,	101,	101,	1001,	1010,	1101,	1001
2017-01-04 11:31:06 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:31:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:06 GameBoard.setupTreasurePanel()	4 3
2017-01-04 11:31:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:06 AI_Player.update()	update
2017-01-04 11:31:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:31:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:31:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:31:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:31:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:06 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:31:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:31:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:31:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:31:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:31:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:31:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:31:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:31:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:31:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:31:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:31:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:31:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:31:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:06 AI_Player.update()	update
2017-01-04 11:31:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:31:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:31:07 AI_Player.update()	Search took1315ms
2017-01-04 11:31:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:07 AI_Player.update()		110,	1011,	111,	1101,	111,	101,	11
2017-01-04 11:31:07 AI_Player.update()		1001,	101,	1101,	1010,	1100,	101,	111
2017-01-04 11:31:07 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 11:31:07 AI_Player.update()		1010,	1010,	1100,	1010,	1011,	110,	1101
2017-01-04 11:31:07 AI_Player.update()		1110,	1011,	1101,	101,	1011,	11,	1011
2017-01-04 11:31:07 AI_Player.update()		110,	101,	101,	1001,	1010,	1101,	1001
2017-01-04 11:31:07 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 11:31:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:31:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:07 GameBoard.setupTreasurePanel()	5 3
2017-01-04 11:31:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:07 AI_Player.update()	update
2017-01-04 11:31:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:31:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:31:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:31:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:31:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:07 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:31:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:31:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:31:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:31:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:31:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:31:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:31:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:31:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:31:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:31:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:31:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:31:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:31:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:07 AI_Player.update()	update
2017-01-04 11:31:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:31:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:31:09 AI_Player.update()	Search took1904ms
2017-01-04 11:31:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:09 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-04 11:31:09 AI_Player.update()		1001,	1010,	1101,	1010,	1100,	101,	111
2017-01-04 11:31:09 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 11:31:09 AI_Player.update()		1010,	1011,	1100,	1010,	1011,	110,	1101
2017-01-04 11:31:09 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-04 11:31:09 AI_Player.update()		110,	101,	101,	1001,	1010,	1101,	1001
2017-01-04 11:31:09 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 11:31:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:09 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:31:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:09 AI_Player.update()	update
2017-01-04 11:31:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:31:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:31:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:31:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:31:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:09 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:31:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:09 AI_Player.update()	update
2017-01-04 11:31:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:31:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:31:11 AI_Player.update()	Search took2130ms
2017-01-04 11:31:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:11 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-04 11:31:11 AI_Player.update()		1010,	1101,	1010,	1100,	101,	111,	1001
2017-01-04 11:31:11 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 11:31:11 AI_Player.update()		1010,	1011,	1100,	1010,	1011,	110,	1101
2017-01-04 11:31:11 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-04 11:31:11 AI_Player.update()		110,	101,	101,	1001,	1010,	1101,	1001
2017-01-04 11:31:11 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 11:31:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:31:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:12 GameBoard.setupTreasurePanel()	5 4
2017-01-04 11:31:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:12 AI_Player.update()	update
2017-01-04 11:31:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:31:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:31:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:31:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:31:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:12 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:31:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:31:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:31:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:31:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:31:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:31:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:31:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:31:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:31:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:31:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:31:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:31:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:31:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:12 AI_Player.update()	update
2017-01-04 11:31:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:31:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:31:14 AI_Player.update()	Search took2230ms
2017-01-04 11:31:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:14 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-04 11:31:14 AI_Player.update()		1010,	1101,	1010,	1100,	101,	101,	1001
2017-01-04 11:31:14 AI_Player.update()		1110,	1010,	1110,	110,	111,	111,	1011
2017-01-04 11:31:14 AI_Player.update()		1010,	1011,	1100,	1010,	1011,	101,	1101
2017-01-04 11:31:14 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:31:14 AI_Player.update()		110,	101,	101,	1001,	1010,	11,	1001
2017-01-04 11:31:14 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1101,	1001
2017-01-04 11:31:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:14 GameBoard.setupTreasurePanel()	5 5
2017-01-04 11:31:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:14 AI_Player.update()	update
2017-01-04 11:31:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:31:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:31:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:31:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:31:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:14 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:31:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:31:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:31:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:31:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:31:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:31:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:31:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:31:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:31:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:31:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:31:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:31:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:31:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:14 AI_Player.update()	update
2017-01-04 11:31:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:31:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:31:17 AI_Player.update()	Search took3218ms
2017-01-04 11:31:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:17 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-04 11:31:17 AI_Player.update()		1101,	1010,	1100,	101,	101,	1001,	1010
2017-01-04 11:31:17 AI_Player.update()		1110,	1010,	1110,	110,	111,	111,	1011
2017-01-04 11:31:17 AI_Player.update()		1010,	1011,	1100,	1010,	1011,	101,	1101
2017-01-04 11:31:17 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 11:31:17 AI_Player.update()		110,	101,	101,	1001,	1010,	11,	1001
2017-01-04 11:31:17 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1101,	1001
2017-01-04 11:31:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:31:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	6 5
2017-01-04 11:31:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:17 AI_Player.update()	update
2017-01-04 11:31:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:31:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:31:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:31:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:31:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:31:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:31:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:31:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:17 AI_Player.update()	update
2017-01-04 11:31:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:31:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:31:17 AI_Player.update()	Search took249ms
2017-01-04 11:31:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:17 AI_Player.update()		110,	101,	111,	1101,	111,	1101,	11
2017-01-04 11:31:17 AI_Player.update()		1101,	1010,	1100,	101,	101,	1010,	1010
2017-01-04 11:31:17 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-04 11:31:17 AI_Player.update()		1010,	1011,	1100,	1010,	1011,	111,	1101
2017-01-04 11:31:17 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:31:17 AI_Player.update()		110,	101,	101,	1001,	1010,	110,	1001
2017-01-04 11:31:17 AI_Player.update()		1100,	1011,	1101,	101,	1101,	11,	1001
2017-01-04 11:31:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:31:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:17 AI_Player.update()	update
2017-01-04 11:31:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:31:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:31:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:31:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:31:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:17 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:31:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:17 AI_Player.update()	update
2017-01-04 11:31:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:31:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:31:18 AI_Player.update()	Search took996ms
2017-01-04 11:31:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:18 AI_Player.update()		110,	101,	111,	1101,	111,	1101,	11
2017-01-04 11:31:18 AI_Player.update()		1010,	1100,	101,	101,	1010,	1010,	1101
2017-01-04 11:31:18 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-04 11:31:18 AI_Player.update()		1010,	1011,	1100,	1010,	1011,	111,	1101
2017-01-04 11:31:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 11:31:18 AI_Player.update()		110,	101,	101,	1001,	1010,	110,	1001
2017-01-04 11:31:18 AI_Player.update()		1100,	1011,	1101,	101,	1101,	11,	1001
2017-01-04 11:31:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:31:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:18 GameBoard.setupTreasurePanel()	6 6
2017-01-04 11:31:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:18 AI_Player.update()	update
2017-01-04 11:31:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:31:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:31:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:31:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:18 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 11:31:18 AI_Player.update()	Player b has won!
2017-01-04 11:31:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:31:22 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 11:31:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 11:31:22 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 11:31:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:31:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:31:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:31:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:22 AI_Player.update()	update
2017-01-04 11:31:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:31:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:31:22 AI_Player.update()	Search took66ms
2017-01-04 11:31:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:22 AI_Player.update()		110,	1110,	111,	1100,	111,	101,	11
2017-01-04 11:31:22 AI_Player.update()		1100,	11,	11,	11,	1011,	1101,	1001
2017-01-04 11:31:22 AI_Player.update()		1110,	1100,	1110,	110,	111,	11,	1011
2017-01-04 11:31:22 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1110,	1011
2017-01-04 11:31:22 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-04 11:31:22 AI_Player.update()		110,	11,	11,	1010,	110,	1001,	110
2017-01-04 11:31:22 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-04 11:31:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:31:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:22 AI_Player.update()	update
2017-01-04 11:31:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:31:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:31:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:31:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:31:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:22 AI_Player.update()	update
2017-01-04 11:31:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 11:31:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 11:31:22 AI_Player.update()	Search took365ms
2017-01-04 11:31:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:22 AI_Player.update()		110,	1110,	111,	11,	111,	101,	11
2017-01-04 11:31:22 AI_Player.update()		1100,	11,	11,	110,	1011,	1101,	1001
2017-01-04 11:31:22 AI_Player.update()		1110,	1100,	1110,	1100,	111,	11,	1011
2017-01-04 11:31:22 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1110,	1011
2017-01-04 11:31:22 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-04 11:31:22 AI_Player.update()		110,	11,	11,	1010,	110,	1001,	110
2017-01-04 11:31:22 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-04 11:31:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:31:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:22 AI_Player.update()	update
2017-01-04 11:31:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 11:31:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 11:31:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:31:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:22 AI_Player.update()	update
2017-01-04 11:31:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 11:31:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 11:31:22 AI_Player.update()	Search took159ms
2017-01-04 11:31:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 11:31:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:22 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 11:31:22 AI_Player.update()		1100,	1110,	11,	110,	1011,	1101,	1001
2017-01-04 11:31:22 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 11:31:22 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1110,	1011
2017-01-04 11:31:22 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-04 11:31:22 AI_Player.update()		110,	1010,	11,	1010,	110,	1001,	110
2017-01-04 11:31:22 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-04 11:31:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 11:31:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 11:31:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:22 AI_Player.update()	update
2017-01-04 11:31:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 11:31:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 11:31:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 11:31:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 11:31:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 11:31:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 11:31:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 11:31:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 11:31:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 11:31:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 11:31:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 11:31:22 AI_Player.update()	update
2017-01-04 11:31:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
