2017-01-05 12:16:46 GameBoard.<init>()	Hello World!
2017-01-05 12:16:46 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-05 12:16:46 QueryProlog.initialise()	setup(h4/h4). suceeded
2017-01-05 12:16:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:46 GameBoard.setupBoardFromString()	Board created
2017-01-05 12:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:46 GameBoard.initialise()	[chest, crown, gem, helmet, sword]
2017-01-05 12:16:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:46 GameBoard.initialise()	[candle, book, map, keys, ring]
2017-01-05 12:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:46 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-05 12:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:46 GameBoard.setupTreasurePanel()	null
2017-01-05 12:16:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:46 AI_Player.update()	update
2017-01-05 12:16:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:16:47 AI_Player.update()	Search took285ms
2017-01-05 12:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:47 AI_Player.update()		110,	111,	111,	1101,	111,	111,	11
2017-01-05 12:16:47 AI_Player.update()		1101,	1100,	1001,	1100,	101,	1001,	110
2017-01-05 12:16:47 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 12:16:47 AI_Player.update()		110,	1001,	1011,	1010,	1010,	1100,	11
2017-01-05 12:16:47 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:47 AI_Player.update()		101,	1010,	1001,	11,	1001,	111,	1101
2017-01-05 12:16:47 AI_Player.update()		1100,	1001,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:47 AI_Player.update()	update
2017-01-05 12:16:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:47 AI_Player.update()	update
2017-01-05 12:16:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:47 AI_Player.update()	Search took261ms
2017-01-05 12:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:47 AI_Player.update()		110,	111,	111,	1101,	111,	111,	11
2017-01-05 12:16:47 AI_Player.update()		110,	1101,	1100,	1001,	1100,	101,	1001
2017-01-05 12:16:47 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 12:16:47 AI_Player.update()		110,	1001,	1011,	1010,	1010,	1100,	11
2017-01-05 12:16:47 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:47 AI_Player.update()		101,	1010,	1001,	11,	1001,	111,	1101
2017-01-05 12:16:47 AI_Player.update()		1100,	1001,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:47 AI_Player.update()	update
2017-01-05 12:16:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:47 AI_Player.update()	update
2017-01-05 12:16:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:16:48 AI_Player.update()	Search took308ms
2017-01-05 12:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:48 AI_Player.update()		110,	1101,	111,	1101,	111,	111,	11
2017-01-05 12:16:48 AI_Player.update()		110,	101,	1100,	1001,	1100,	101,	1001
2017-01-05 12:16:48 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-05 12:16:48 AI_Player.update()		110,	1100,	1011,	1010,	1010,	1100,	11
2017-01-05 12:16:48 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:48 AI_Player.update()		101,	1001,	1001,	11,	1001,	111,	1101
2017-01-05 12:16:48 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:48 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:48 AI_Player.update()	update
2017-01-05 12:16:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:48 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:48 AI_Player.update()	update
2017-01-05 12:16:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:48 AI_Player.update()	Search took246ms
2017-01-05 12:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:48 AI_Player.update()		110,	1101,	111,	1101,	111,	101,	11
2017-01-05 12:16:48 AI_Player.update()		110,	101,	1100,	1001,	1100,	101,	1001
2017-01-05 12:16:48 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-05 12:16:48 AI_Player.update()		110,	1100,	1011,	1010,	1010,	11,	11
2017-01-05 12:16:48 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	111,	1011
2017-01-05 12:16:48 AI_Player.update()		101,	1001,	1001,	11,	1001,	110,	1101
2017-01-05 12:16:48 AI_Player.update()		1100,	111,	1101,	11,	1101,	111,	1001
2017-01-05 12:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:48 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:48 AI_Player.update()	update
2017-01-05 12:16:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:48 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:48 AI_Player.update()	update
2017-01-05 12:16:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:16:49 AI_Player.update()	Search took212ms
2017-01-05 12:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:49 AI_Player.update()		110,	1101,	111,	1101,	111,	111,	11
2017-01-05 12:16:49 AI_Player.update()		110,	101,	1100,	1001,	1100,	101,	1001
2017-01-05 12:16:49 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-05 12:16:49 AI_Player.update()		110,	1100,	1011,	1010,	1010,	1100,	11
2017-01-05 12:16:49 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:49 AI_Player.update()		101,	1001,	1001,	11,	1001,	111,	1101
2017-01-05 12:16:49 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:49 AI_Player.update()	update
2017-01-05 12:16:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:49 AI_Player.update()	update
2017-01-05 12:16:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:49 AI_Player.update()	Search took237ms
2017-01-05 12:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:49 AI_Player.update()		110,	1101,	111,	1101,	111,	111,	11
2017-01-05 12:16:49 AI_Player.update()		1001,	110,	101,	1100,	1001,	1100,	101
2017-01-05 12:16:49 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-05 12:16:49 AI_Player.update()		110,	1100,	1011,	1010,	1010,	1100,	11
2017-01-05 12:16:49 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:49 AI_Player.update()		101,	1001,	1001,	11,	1001,	111,	1101
2017-01-05 12:16:49 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:49 AI_Player.update()	update
2017-01-05 12:16:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:49 AI_Player.update()	update
2017-01-05 12:16:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:16:49 AI_Player.update()	Search took217ms
2017-01-05 12:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:49 AI_Player.update()		110,	1101,	111,	1100,	111,	111,	11
2017-01-05 12:16:49 AI_Player.update()		1001,	110,	101,	1100,	1001,	1100,	101
2017-01-05 12:16:49 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 12:16:49 AI_Player.update()		110,	1100,	1011,	1010,	1010,	1100,	11
2017-01-05 12:16:49 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 12:16:49 AI_Player.update()		101,	1001,	1001,	11,	1001,	111,	1101
2017-01-05 12:16:49 AI_Player.update()		1100,	111,	1101,	1101,	1101,	110,	1001
2017-01-05 12:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:50 AI_Player.update()	update
2017-01-05 12:16:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:50 AI_Player.update()	update
2017-01-05 12:16:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:50 AI_Player.update()	Search took131ms
2017-01-05 12:16:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:50 AI_Player.update()		110,	1101,	111,	1100,	111,	111,	11
2017-01-05 12:16:50 AI_Player.update()		1001,	110,	101,	1010,	1001,	1100,	101
2017-01-05 12:16:50 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 12:16:50 AI_Player.update()		110,	1100,	1011,	11,	1010,	1100,	11
2017-01-05 12:16:50 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 12:16:50 AI_Player.update()		101,	1001,	1001,	1101,	1001,	111,	1101
2017-01-05 12:16:50 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-05 12:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:50 AI_Player.update()	update
2017-01-05 12:16:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:50 AI_Player.update()	update
2017-01-05 12:16:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:16:50 AI_Player.update()	Search took105ms
2017-01-05 12:16:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:50 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-05 12:16:50 AI_Player.update()		1001,	110,	101,	1010,	1001,	1100,	101
2017-01-05 12:16:50 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 12:16:50 AI_Player.update()		110,	1100,	1011,	11,	1010,	1100,	11
2017-01-05 12:16:50 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 12:16:50 AI_Player.update()		101,	1001,	1001,	1100,	1001,	111,	1101
2017-01-05 12:16:50 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-05 12:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:50 AI_Player.update()	update
2017-01-05 12:16:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:50 AI_Player.update()	update
2017-01-05 12:16:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:50 AI_Player.update()	Search took69ms
2017-01-05 12:16:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:50 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-05 12:16:50 AI_Player.update()		1001,	110,	101,	1010,	1001,	1100,	101
2017-01-05 12:16:50 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 12:16:50 AI_Player.update()		110,	1100,	1011,	11,	1010,	1100,	11
2017-01-05 12:16:50 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 12:16:50 AI_Player.update()		1001,	1001,	1100,	1001,	111,	1101,	101
2017-01-05 12:16:50 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-05 12:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:50 AI_Player.update()	update
2017-01-05 12:16:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:51 AI_Player.update()	update
2017-01-05 12:16:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:16:51 AI_Player.update()	Search took180ms
2017-01-05 12:16:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:51 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-05 12:16:51 AI_Player.update()		1001,	110,	101,	1010,	1001,	1100,	101
2017-01-05 12:16:51 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 12:16:51 AI_Player.update()		110,	1100,	1011,	11,	1010,	1100,	11
2017-01-05 12:16:51 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 12:16:51 AI_Player.update()		1001,	1100,	1001,	111,	1101,	101,	1001
2017-01-05 12:16:51 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-05 12:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:51 AI_Player.update()	update
2017-01-05 12:16:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 12:16:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:51 AI_Player.update()	update
2017-01-05 12:16:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:51 AI_Player.update()	Search took199ms
2017-01-05 12:16:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:51 AI_Player.update()		110,	1101,	111,	1010,	111,	1100,	11
2017-01-05 12:16:51 AI_Player.update()		1001,	110,	101,	1010,	1001,	101,	101
2017-01-05 12:16:51 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-05 12:16:51 AI_Player.update()		110,	1100,	1011,	11,	1010,	11,	11
2017-01-05 12:16:51 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-05 12:16:51 AI_Player.update()		1001,	1100,	1001,	111,	1101,	110,	1001
2017-01-05 12:16:51 AI_Player.update()		1100,	111,	1101,	1100,	1101,	111,	1001
2017-01-05 12:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 12:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:51 AI_Player.update()	update
2017-01-05 12:16:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 12:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:51 AI_Player.update()	update
2017-01-05 12:16:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:16:52 AI_Player.update()	Search took577ms
2017-01-05 12:16:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:52 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-05 12:16:52 AI_Player.update()		1001,	110,	101,	1010,	1001,	1100,	101
2017-01-05 12:16:52 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 12:16:52 AI_Player.update()		110,	1100,	1011,	11,	1010,	1100,	11
2017-01-05 12:16:52 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 12:16:52 AI_Player.update()		1001,	1100,	1001,	111,	1101,	101,	1001
2017-01-05 12:16:52 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-05 12:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	2 1
2017-01-05 12:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:52 AI_Player.update()	update
2017-01-05 12:16:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 12:16:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:52 AI_Player.update()	update
2017-01-05 12:16:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:52 AI_Player.update()	Search took124ms
2017-01-05 12:16:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:52 AI_Player.update()		110,	1101,	111,	1010,	111,	1100,	11
2017-01-05 12:16:52 AI_Player.update()		1001,	110,	101,	1010,	1001,	101,	101
2017-01-05 12:16:52 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-05 12:16:52 AI_Player.update()		110,	1100,	1011,	11,	1010,	11,	11
2017-01-05 12:16:52 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-05 12:16:52 AI_Player.update()		1001,	1100,	1001,	111,	1101,	110,	1001
2017-01-05 12:16:52 AI_Player.update()		1100,	111,	1101,	1100,	1101,	111,	1001
2017-01-05 12:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 12:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:52 AI_Player.update()	update
2017-01-05 12:16:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 12:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:52 AI_Player.update()	update
2017-01-05 12:16:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:16:53 AI_Player.update()	Search took511ms
2017-01-05 12:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:53 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-05 12:16:53 AI_Player.update()		1001,	110,	101,	1010,	1001,	1100,	101
2017-01-05 12:16:53 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 12:16:53 AI_Player.update()		110,	1100,	1011,	11,	1010,	1100,	11
2017-01-05 12:16:53 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 12:16:53 AI_Player.update()		1001,	1100,	1001,	111,	1101,	101,	1001
2017-01-05 12:16:53 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-05 12:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	3 1
2017-01-05 12:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:53 AI_Player.update()	update
2017-01-05 12:16:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	4 1
2017-01-05 12:16:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:53 AI_Player.update()	update
2017-01-05 12:16:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:53 AI_Player.update()	Search took127ms
2017-01-05 12:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:53 AI_Player.update()		110,	1101,	111,	1010,	111,	1100,	11
2017-01-05 12:16:53 AI_Player.update()		1001,	110,	101,	1010,	1001,	101,	101
2017-01-05 12:16:53 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-05 12:16:53 AI_Player.update()		110,	1100,	1011,	11,	1010,	11,	11
2017-01-05 12:16:53 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-05 12:16:53 AI_Player.update()		1001,	1100,	1001,	111,	1101,	110,	1001
2017-01-05 12:16:53 AI_Player.update()		1100,	111,	1101,	1100,	1101,	111,	1001
2017-01-05 12:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	4 1
2017-01-05 12:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:53 AI_Player.update()	update
2017-01-05 12:16:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:53 GameBoard.setupTreasurePanel()	4 1
2017-01-05 12:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:54 AI_Player.update()	update
2017-01-05 12:16:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:16:54 AI_Player.update()	Search took571ms
2017-01-05 12:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:54 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-05 12:16:54 AI_Player.update()		1001,	110,	101,	1010,	1001,	1100,	101
2017-01-05 12:16:54 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 12:16:54 AI_Player.update()		110,	1100,	1011,	11,	1010,	1100,	11
2017-01-05 12:16:54 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 12:16:54 AI_Player.update()		1001,	1100,	1001,	111,	1101,	101,	1001
2017-01-05 12:16:54 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-05 12:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:54 GameBoard.setupTreasurePanel()	4 1
2017-01-05 12:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:54 AI_Player.update()	update
2017-01-05 12:16:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:54 GameBoard.setupTreasurePanel()	5 1
2017-01-05 12:16:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:54 AI_Player.update()	update
2017-01-05 12:16:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:54 AI_Player.update()	Search took123ms
2017-01-05 12:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:54 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-05 12:16:54 AI_Player.update()		1001,	110,	101,	11,	1001,	1100,	101
2017-01-05 12:16:54 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 12:16:54 AI_Player.update()		110,	1100,	1011,	1101,	1010,	1100,	11
2017-01-05 12:16:54 AI_Player.update()		1110,	1010,	1101,	111,	1011,	11,	1011
2017-01-05 12:16:54 AI_Player.update()		1001,	1100,	1001,	1100,	1101,	101,	1001
2017-01-05 12:16:54 AI_Player.update()		1100,	111,	1101,	1010,	1101,	110,	1001
2017-01-05 12:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:54 GameBoard.setupTreasurePanel()	5 1
2017-01-05 12:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:55 AI_Player.update()	update
2017-01-05 12:16:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:55 GameBoard.setupTreasurePanel()	5 1
2017-01-05 12:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:55 AI_Player.update()	update
2017-01-05 12:16:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:16:55 AI_Player.update()	Search took645ms
2017-01-05 12:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:55 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-05 12:16:55 AI_Player.update()		110,	101,	11,	1001,	1100,	101,	1001
2017-01-05 12:16:55 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 12:16:55 AI_Player.update()		110,	1100,	1011,	1101,	1010,	1100,	11
2017-01-05 12:16:55 AI_Player.update()		1110,	1010,	1101,	111,	1011,	11,	1011
2017-01-05 12:16:55 AI_Player.update()		1001,	1100,	1001,	1100,	1101,	101,	1001
2017-01-05 12:16:55 AI_Player.update()		1100,	111,	1101,	1010,	1101,	110,	1001
2017-01-05 12:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:55 GameBoard.setupTreasurePanel()	5 1
2017-01-05 12:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:55 AI_Player.update()	update
2017-01-05 12:16:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:55 GameBoard.setupTreasurePanel()	5 1
2017-01-05 12:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:56 AI_Player.update()	update
2017-01-05 12:16:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:56 AI_Player.update()	Search took252ms
2017-01-05 12:16:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:56 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-05 12:16:56 AI_Player.update()		110,	101,	11,	1001,	1100,	101,	1001
2017-01-05 12:16:56 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-05 12:16:56 AI_Player.update()		110,	1100,	1011,	1101,	1010,	11,	11
2017-01-05 12:16:56 AI_Player.update()		1110,	1010,	1101,	111,	1011,	101,	1011
2017-01-05 12:16:56 AI_Player.update()		1001,	1100,	1001,	1100,	1101,	110,	1001
2017-01-05 12:16:56 AI_Player.update()		1100,	111,	1101,	1010,	1101,	111,	1001
2017-01-05 12:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:56 GameBoard.setupTreasurePanel()	5 1
2017-01-05 12:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:56 AI_Player.update()	update
2017-01-05 12:16:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:56 GameBoard.setupTreasurePanel()	5 1
2017-01-05 12:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:56 AI_Player.update()	update
2017-01-05 12:16:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:16:57 AI_Player.update()	Search took536ms
2017-01-05 12:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:57 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 12:16:57 AI_Player.update()		110,	1001,	11,	1001,	1100,	101,	1001
2017-01-05 12:16:57 AI_Player.update()		1110,	1100,	1110,	11,	111,	1100,	1011
2017-01-05 12:16:57 AI_Player.update()		110,	1010,	1011,	1101,	1010,	11,	11
2017-01-05 12:16:57 AI_Player.update()		1110,	1100,	1101,	111,	1011,	101,	1011
2017-01-05 12:16:57 AI_Player.update()		1001,	111,	1001,	1100,	1101,	110,	1001
2017-01-05 12:16:57 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	111,	1001
2017-01-05 12:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	5 1
2017-01-05 12:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:57 AI_Player.update()	update
2017-01-05 12:16:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 12:16:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:57 AI_Player.update()	update
2017-01-05 12:16:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:57 AI_Player.update()	Search took138ms
2017-01-05 12:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:57 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 12:16:57 AI_Player.update()		110,	1001,	11,	1001,	1100,	101,	1001
2017-01-05 12:16:57 AI_Player.update()		1110,	1100,	1110,	11,	111,	1100,	1011
2017-01-05 12:16:57 AI_Player.update()		11,	110,	1010,	1011,	1101,	1010,	11
2017-01-05 12:16:57 AI_Player.update()		1110,	1100,	1101,	111,	1011,	101,	1011
2017-01-05 12:16:57 AI_Player.update()		1001,	111,	1001,	1100,	1101,	110,	1001
2017-01-05 12:16:57 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	111,	1001
2017-01-05 12:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 12:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:57 AI_Player.update()	update
2017-01-05 12:16:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	6 2
2017-01-05 12:16:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:57 AI_Player.update()	update
2017-01-05 12:16:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:16:57 AI_Player.update()	Search took65ms
2017-01-05 12:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:57 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 12:16:57 AI_Player.update()		110,	1001,	11,	11,	1100,	101,	1001
2017-01-05 12:16:57 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1100,	1011
2017-01-05 12:16:57 AI_Player.update()		11,	110,	1010,	111,	1101,	1010,	11
2017-01-05 12:16:57 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-05 12:16:57 AI_Player.update()		1001,	111,	1001,	1010,	1101,	110,	1001
2017-01-05 12:16:57 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	111,	1001
2017-01-05 12:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:57 GameBoard.setupTreasurePanel()	6 2
2017-01-05 12:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:57 AI_Player.update()	update
2017-01-05 12:16:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:57 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 12:16:57 AI_Player.update()	Player a has won!
2017-01-05 12:16:59 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 12:16:59 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 12:16:59 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 12:16:59 QueryProlog.reset()	setup(h4/h4). suceeded
2017-01-05 12:16:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:59 AI_Player.update()	update
2017-01-05 12:16:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:16:59 AI_Player.update()	Search took21ms
2017-01-05 12:16:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:59 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 12:16:59 AI_Player.update()		1010,	111,	1100,	1001,	110,	1010,	1001
2017-01-05 12:16:59 AI_Player.update()		1110,	110,	1110,	1100,	111,	11,	1011
2017-01-05 12:16:59 AI_Player.update()		110,	1010,	1010,	1110,	1010,	101,	1001
2017-01-05 12:16:59 AI_Player.update()		1110,	1100,	1101,	110,	1011,	111,	1011
2017-01-05 12:16:59 AI_Player.update()		101,	110,	11,	11,	1010,	111,	1100
2017-01-05 12:16:59 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-05 12:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:59 AI_Player.update()	update
2017-01-05 12:16:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:59 AI_Player.update()	update
2017-01-05 12:16:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:59 AI_Player.update()	Search took38ms
2017-01-05 12:16:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:59 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 12:16:59 AI_Player.update()		1001,	1010,	111,	1100,	1001,	110,	1010
2017-01-05 12:16:59 AI_Player.update()		1110,	110,	1110,	1100,	111,	11,	1011
2017-01-05 12:16:59 AI_Player.update()		110,	1010,	1010,	1110,	1010,	101,	1001
2017-01-05 12:16:59 AI_Player.update()		1110,	1100,	1101,	110,	1011,	111,	1011
2017-01-05 12:16:59 AI_Player.update()		101,	110,	11,	11,	1010,	111,	1100
2017-01-05 12:16:59 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-05 12:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:59 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:00 AI_Player.update()	update
2017-01-05 12:17:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:00 AI_Player.update()	update
2017-01-05 12:17:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:00 AI_Player.update()	Search took56ms
2017-01-05 12:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:00 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 12:17:00 AI_Player.update()		1010,	1001,	1010,	111,	1100,	1001,	110
2017-01-05 12:17:00 AI_Player.update()		1110,	110,	1110,	1100,	111,	11,	1011
2017-01-05 12:17:00 AI_Player.update()		110,	1010,	1010,	1110,	1010,	101,	1001
2017-01-05 12:17:00 AI_Player.update()		1110,	1100,	1101,	110,	1011,	111,	1011
2017-01-05 12:17:00 AI_Player.update()		101,	110,	11,	11,	1010,	111,	1100
2017-01-05 12:17:00 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-05 12:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:00 AI_Player.update()	update
2017-01-05 12:17:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:00 AI_Player.update()	update
2017-01-05 12:17:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:00 AI_Player.update()	Search took110ms
2017-01-05 12:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:00 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-05 12:17:00 AI_Player.update()		1010,	1001,	1010,	111,	1100,	1010,	110
2017-01-05 12:17:00 AI_Player.update()		1110,	110,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:00 AI_Player.update()		110,	1010,	1010,	1110,	1010,	11,	1001
2017-01-05 12:17:00 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-05 12:17:00 AI_Player.update()		101,	110,	11,	11,	1010,	111,	1100
2017-01-05 12:17:00 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 12:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:00 AI_Player.update()	update
2017-01-05 12:17:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	1 2
2017-01-05 12:17:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:17:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:00 AI_Player.update()	update
2017-01-05 12:17:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:00 AI_Player.update()	Search took219ms
2017-01-05 12:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:00 AI_Player.update()		110,	1100,	111,	1100,	111,	1100,	11
2017-01-05 12:17:00 AI_Player.update()		1010,	1001,	1010,	11,	1100,	1010,	110
2017-01-05 12:17:00 AI_Player.update()		1110,	110,	1110,	111,	111,	1001,	1011
2017-01-05 12:17:00 AI_Player.update()		110,	1010,	1010,	1100,	1010,	11,	1001
2017-01-05 12:17:00 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	101,	1011
2017-01-05 12:17:00 AI_Player.update()		101,	110,	11,	110,	1010,	111,	1100
2017-01-05 12:17:00 AI_Player.update()		1100,	1100,	1101,	11,	1101,	111,	1001
2017-01-05 12:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:00 GameBoard.setupTreasurePanel()	1 2
2017-01-05 12:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:01 AI_Player.update()	update
2017-01-05 12:17:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:01 GameBoard.setupTreasurePanel()	2 2
2017-01-05 12:17:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:17:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:17:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:01 AI_Player.update()	update
2017-01-05 12:17:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:01 AI_Player.update()	Search took73ms
2017-01-05 12:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:01 AI_Player.update()		110,	1001,	111,	1100,	111,	1100,	11
2017-01-05 12:17:01 AI_Player.update()		1010,	110,	1010,	11,	1100,	1010,	110
2017-01-05 12:17:01 AI_Player.update()		1110,	1010,	1110,	111,	111,	1001,	1011
2017-01-05 12:17:01 AI_Player.update()		110,	1100,	1010,	1100,	1010,	11,	1001
2017-01-05 12:17:01 AI_Player.update()		1110,	110,	1101,	1110,	1011,	101,	1011
2017-01-05 12:17:01 AI_Player.update()		101,	1100,	11,	110,	1010,	111,	1100
2017-01-05 12:17:01 AI_Player.update()		1100,	1100,	1101,	11,	1101,	111,	1001
2017-01-05 12:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:01 GameBoard.setupTreasurePanel()	2 2
2017-01-05 12:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:01 AI_Player.update()	update
2017-01-05 12:17:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:01 GameBoard.setupTreasurePanel()	2 2
2017-01-05 12:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:01 AI_Player.update()	update
2017-01-05 12:17:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:02 AI_Player.update()	Search took663ms
2017-01-05 12:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:02 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-05 12:17:02 AI_Player.update()		1010,	110,	1010,	111,	1100,	1010,	110
2017-01-05 12:17:02 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:02 AI_Player.update()		110,	1100,	1010,	1110,	1010,	11,	1001
2017-01-05 12:17:02 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-05 12:17:02 AI_Player.update()		101,	1100,	11,	11,	1010,	111,	1100
2017-01-05 12:17:02 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 12:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	2 2
2017-01-05 12:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:02 AI_Player.update()	update
2017-01-05 12:17:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	3 2
2017-01-05 12:17:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:17:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:02 AI_Player.update()	update
2017-01-05 12:17:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:02 AI_Player.update()	Search took77ms
2017-01-05 12:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:02 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-05 12:17:02 AI_Player.update()		1010,	110,	1010,	111,	1100,	1010,	110
2017-01-05 12:17:02 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:02 AI_Player.update()		110,	1100,	1010,	1110,	1010,	11,	1001
2017-01-05 12:17:02 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-05 12:17:02 AI_Player.update()		1100,	101,	1100,	11,	11,	1010,	111
2017-01-05 12:17:02 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 12:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	3 2
2017-01-05 12:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:02 AI_Player.update()	update
2017-01-05 12:17:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	3 2
2017-01-05 12:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:02 AI_Player.update()	update
2017-01-05 12:17:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:02 AI_Player.update()	Search took275ms
2017-01-05 12:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:02 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-05 12:17:02 AI_Player.update()		1010,	110,	1010,	111,	1100,	1010,	110
2017-01-05 12:17:02 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:02 AI_Player.update()		110,	1100,	1010,	1110,	1010,	11,	1001
2017-01-05 12:17:02 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-05 12:17:02 AI_Player.update()		101,	1100,	11,	11,	1010,	111,	1100
2017-01-05 12:17:02 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 12:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	3 2
2017-01-05 12:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:02 AI_Player.update()	update
2017-01-05 12:17:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:02 GameBoard.setupTreasurePanel()	3 2
2017-01-05 12:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:03 AI_Player.update()	update
2017-01-05 12:17:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:03 AI_Player.update()	Search took65ms
2017-01-05 12:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:03 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-05 12:17:03 AI_Player.update()		1010,	110,	1010,	111,	1100,	1010,	110
2017-01-05 12:17:03 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:03 AI_Player.update()		110,	1100,	1010,	1110,	1010,	11,	1001
2017-01-05 12:17:03 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-05 12:17:03 AI_Player.update()		1100,	101,	1100,	11,	11,	1010,	111
2017-01-05 12:17:03 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 12:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	3 2
2017-01-05 12:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:03 AI_Player.update()	update
2017-01-05 12:17:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	3 2
2017-01-05 12:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:03 AI_Player.update()	update
2017-01-05 12:17:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:03 AI_Player.update()	Search took251ms
2017-01-05 12:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:03 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-05 12:17:03 AI_Player.update()		110,	1010,	111,	1100,	1010,	110,	1010
2017-01-05 12:17:03 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:03 AI_Player.update()		110,	1100,	1010,	1110,	1010,	11,	1001
2017-01-05 12:17:03 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-05 12:17:03 AI_Player.update()		1100,	101,	1100,	11,	11,	1010,	111
2017-01-05 12:17:03 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 12:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	3 2
2017-01-05 12:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:03 AI_Player.update()	update
2017-01-05 12:17:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	4 2
2017-01-05 12:17:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:17:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:03 AI_Player.update()	update
2017-01-05 12:17:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:03 AI_Player.update()	Search took71ms
2017-01-05 12:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:03 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-05 12:17:03 AI_Player.update()		110,	1001,	111,	1100,	1010,	110,	1010
2017-01-05 12:17:03 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:03 AI_Player.update()		110,	1010,	1010,	1110,	1010,	11,	1001
2017-01-05 12:17:03 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-05 12:17:03 AI_Player.update()		1100,	110,	1100,	11,	11,	1010,	111
2017-01-05 12:17:03 AI_Player.update()		1100,	101,	1101,	1100,	1101,	111,	1001
2017-01-05 12:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	4 2
2017-01-05 12:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:03 AI_Player.update()	update
2017-01-05 12:17:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	4 3
2017-01-05 12:17:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:17:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:17:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:04 AI_Player.update()	update
2017-01-05 12:17:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:04 AI_Player.update()	Search took173ms
2017-01-05 12:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:04 AI_Player.update()		110,	1100,	111,	1100,	111,	1100,	11
2017-01-05 12:17:04 AI_Player.update()		110,	1001,	111,	11,	1010,	110,	1010
2017-01-05 12:17:04 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:04 AI_Player.update()		110,	1010,	1010,	1100,	1010,	11,	1001
2017-01-05 12:17:04 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	101,	1011
2017-01-05 12:17:04 AI_Player.update()		1100,	110,	1100,	110,	11,	1010,	111
2017-01-05 12:17:04 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-05 12:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	4 3
2017-01-05 12:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:04 AI_Player.update()	update
2017-01-05 12:17:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	5 3
2017-01-05 12:17:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:17:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:04 AI_Player.update()	update
2017-01-05 12:17:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:04 AI_Player.update()	Search took76ms
2017-01-05 12:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:04 AI_Player.update()		110,	1100,	111,	1100,	111,	1100,	11
2017-01-05 12:17:04 AI_Player.update()		110,	1001,	111,	11,	1010,	110,	1010
2017-01-05 12:17:04 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:04 AI_Player.update()		1010,	1010,	1100,	1010,	11,	1001,	110
2017-01-05 12:17:04 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	101,	1011
2017-01-05 12:17:04 AI_Player.update()		1100,	110,	1100,	110,	11,	1010,	111
2017-01-05 12:17:04 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-05 12:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	5 3
2017-01-05 12:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:04 AI_Player.update()	update
2017-01-05 12:17:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	5 3
2017-01-05 12:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:04 AI_Player.update()	update
2017-01-05 12:17:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:04 AI_Player.update()	Search took149ms
2017-01-05 12:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:04 AI_Player.update()		110,	1100,	111,	1100,	111,	1100,	11
2017-01-05 12:17:04 AI_Player.update()		110,	1001,	111,	11,	1010,	110,	1010
2017-01-05 12:17:04 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:04 AI_Player.update()		110,	1010,	1010,	1100,	1010,	11,	1001
2017-01-05 12:17:04 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	101,	1011
2017-01-05 12:17:04 AI_Player.update()		1100,	110,	1100,	110,	11,	1010,	111
2017-01-05 12:17:04 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-05 12:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	5 3
2017-01-05 12:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:04 AI_Player.update()	update
2017-01-05 12:17:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:04 GameBoard.setupTreasurePanel()	5 3
2017-01-05 12:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:05 AI_Player.update()	update
2017-01-05 12:17:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:05 AI_Player.update()	Search took97ms
2017-01-05 12:17:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:05 AI_Player.update()		110,	101,	111,	1100,	111,	1100,	11
2017-01-05 12:17:05 AI_Player.update()		110,	1100,	111,	11,	1010,	110,	1010
2017-01-05 12:17:05 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:05 AI_Player.update()		110,	1010,	1010,	1100,	1010,	11,	1001
2017-01-05 12:17:05 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	101,	1011
2017-01-05 12:17:05 AI_Player.update()		1100,	1100,	1100,	110,	11,	1010,	111
2017-01-05 12:17:05 AI_Player.update()		1100,	110,	1101,	11,	1101,	111,	1001
2017-01-05 12:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	5 3
2017-01-05 12:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:05 AI_Player.update()	update
2017-01-05 12:17:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	5 3
2017-01-05 12:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:05 AI_Player.update()	update
2017-01-05 12:17:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:05 AI_Player.update()	Search took283ms
2017-01-05 12:17:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:05 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-05 12:17:05 AI_Player.update()		110,	1100,	111,	1100,	1010,	110,	1010
2017-01-05 12:17:05 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:05 AI_Player.update()		110,	1010,	1010,	1110,	1010,	11,	1001
2017-01-05 12:17:05 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 12:17:05 AI_Player.update()		1100,	1100,	1100,	11,	11,	1010,	111
2017-01-05 12:17:05 AI_Player.update()		1100,	110,	1101,	1100,	1101,	111,	1001
2017-01-05 12:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	5 3
2017-01-05 12:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:05 AI_Player.update()	update
2017-01-05 12:17:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	6 3
2017-01-05 12:17:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:17:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:17:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:05 AI_Player.update()	update
2017-01-05 12:17:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:06 AI_Player.update()	Search took141ms
2017-01-05 12:17:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:06 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 12:17:06 AI_Player.update()		110,	101,	111,	1100,	1010,	110,	1010
2017-01-05 12:17:06 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:06 AI_Player.update()		110,	1001,	1010,	1110,	1010,	11,	1001
2017-01-05 12:17:06 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 12:17:06 AI_Player.update()		1100,	1010,	1100,	11,	11,	1010,	111
2017-01-05 12:17:06 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 12:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:06 GameBoard.setupTreasurePanel()	6 3
2017-01-05 12:17:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:06 AI_Player.update()	update
2017-01-05 12:17:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:06 GameBoard.setupTreasurePanel()	6 4
2017-01-05 12:17:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:17:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:17:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:06 AI_Player.update()	update
2017-01-05 12:17:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:06 AI_Player.update()	Search took71ms
2017-01-05 12:17:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:06 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-05 12:17:06 AI_Player.update()		110,	1100,	111,	1100,	1010,	110,	1010
2017-01-05 12:17:06 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-05 12:17:06 AI_Player.update()		110,	1010,	1010,	1110,	1010,	11,	1001
2017-01-05 12:17:06 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 12:17:06 AI_Player.update()		1100,	1100,	1100,	11,	11,	1010,	111
2017-01-05 12:17:06 AI_Player.update()		1100,	110,	1101,	1100,	1101,	111,	1001
2017-01-05 12:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:06 GameBoard.setupTreasurePanel()	6 4
2017-01-05 12:17:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:06 AI_Player.update()	update
2017-01-05 12:17:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:06 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 12:17:06 AI_Player.update()	Player a has won!
2017-01-05 12:17:07 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 12:17:07 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 12:17:07 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 12:17:07 QueryProlog.reset()	setup(h4/h4). suceeded
2017-01-05 12:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:17:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:07 AI_Player.update()	update
2017-01-05 12:17:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:07 AI_Player.update()	Search took44ms
2017-01-05 12:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:07 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 12:17:07 AI_Player.update()		1010,	101,	1010,	11,	111,	1010,	11
2017-01-05 12:17:07 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-05 12:17:07 AI_Player.update()		1100,	11,	11,	1100,	1010,	1001,	101
2017-01-05 12:17:07 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1101,	1011
2017-01-05 12:17:07 AI_Player.update()		1010,	11,	1100,	11,	1001,	110,	1100
2017-01-05 12:17:07 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1001,	1001
2017-01-05 12:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:07 AI_Player.update()	update
2017-01-05 12:17:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:07 AI_Player.update()	update
2017-01-05 12:17:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:08 AI_Player.update()	Search took71ms
2017-01-05 12:17:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:08 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 12:17:08 AI_Player.update()		11,	1010,	101,	1010,	11,	111,	1010
2017-01-05 12:17:08 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-05 12:17:08 AI_Player.update()		1100,	11,	11,	1100,	1010,	1001,	101
2017-01-05 12:17:08 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1101,	1011
2017-01-05 12:17:08 AI_Player.update()		1010,	11,	1100,	11,	1001,	110,	1100
2017-01-05 12:17:08 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1001,	1001
2017-01-05 12:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:08 AI_Player.update()	update
2017-01-05 12:17:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:08 AI_Player.update()	update
2017-01-05 12:17:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:08 AI_Player.update()	Search took181ms
2017-01-05 12:17:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:08 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 12:17:08 AI_Player.update()		1010,	101,	1010,	11,	111,	1010,	11
2017-01-05 12:17:08 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-05 12:17:08 AI_Player.update()		1100,	11,	11,	1100,	1010,	1001,	101
2017-01-05 12:17:08 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1101,	1011
2017-01-05 12:17:08 AI_Player.update()		1010,	11,	1100,	11,	1001,	110,	1100
2017-01-05 12:17:08 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1001,	1001
2017-01-05 12:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:08 AI_Player.update()	update
2017-01-05 12:17:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:08 AI_Player.update()	update
2017-01-05 12:17:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:08 AI_Player.update()	Search took57ms
2017-01-05 12:17:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:08 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-05 12:17:08 AI_Player.update()		1010,	101,	1010,	11,	111,	110,	11
2017-01-05 12:17:08 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 12:17:08 AI_Player.update()		1100,	11,	11,	1100,	1010,	101,	101
2017-01-05 12:17:08 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 12:17:08 AI_Player.update()		1010,	11,	1100,	11,	1001,	1101,	1100
2017-01-05 12:17:08 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-05 12:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:08 AI_Player.update()	update
2017-01-05 12:17:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:08 AI_Player.update()	update
2017-01-05 12:17:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:09 AI_Player.update()	Search took97ms
2017-01-05 12:17:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:09 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-05 12:17:09 AI_Player.update()		101,	1010,	11,	111,	110,	11,	1010
2017-01-05 12:17:09 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 12:17:09 AI_Player.update()		1100,	11,	11,	1100,	1010,	101,	101
2017-01-05 12:17:09 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 12:17:09 AI_Player.update()		1010,	11,	1100,	11,	1001,	1101,	1100
2017-01-05 12:17:09 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-05 12:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:09 AI_Player.update()	update
2017-01-05 12:17:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:09 AI_Player.update()	update
2017-01-05 12:17:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:09 AI_Player.update()	Search took59ms
2017-01-05 12:17:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:09 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-05 12:17:09 AI_Player.update()		101,	1010,	11,	111,	110,	11,	1010
2017-01-05 12:17:09 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 12:17:09 AI_Player.update()		11,	11,	1100,	1010,	101,	101,	1100
2017-01-05 12:17:09 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 12:17:09 AI_Player.update()		1010,	11,	1100,	11,	1001,	1101,	1100
2017-01-05 12:17:09 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-05 12:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:09 AI_Player.update()	update
2017-01-05 12:17:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:09 AI_Player.update()	update
2017-01-05 12:17:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:09 AI_Player.update()	Search took66ms
2017-01-05 12:17:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:09 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-05 12:17:09 AI_Player.update()		101,	1010,	11,	111,	110,	11,	1010
2017-01-05 12:17:09 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 12:17:09 AI_Player.update()		1100,	11,	11,	1100,	1010,	101,	101
2017-01-05 12:17:09 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 12:17:09 AI_Player.update()		1010,	11,	1100,	11,	1001,	1101,	1100
2017-01-05 12:17:09 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-05 12:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:09 AI_Player.update()	update
2017-01-05 12:17:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:09 AI_Player.update()	update
2017-01-05 12:17:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:09 AI_Player.update()	Search took56ms
2017-01-05 12:17:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:09 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-05 12:17:09 AI_Player.update()		1010,	101,	1010,	11,	111,	110,	11
2017-01-05 12:17:09 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 12:17:09 AI_Player.update()		1100,	11,	11,	1100,	1010,	101,	101
2017-01-05 12:17:09 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 12:17:09 AI_Player.update()		1010,	11,	1100,	11,	1001,	1101,	1100
2017-01-05 12:17:09 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-05 12:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:09 AI_Player.update()	update
2017-01-05 12:17:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:10 AI_Player.update()	update
2017-01-05 12:17:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:10 AI_Player.update()	Search took27ms
2017-01-05 12:17:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:10 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-05 12:17:10 AI_Player.update()		101,	1010,	11,	111,	110,	11,	1010
2017-01-05 12:17:10 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 12:17:10 AI_Player.update()		1100,	11,	11,	1100,	1010,	101,	101
2017-01-05 12:17:10 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-05 12:17:10 AI_Player.update()		1010,	11,	1100,	11,	1001,	1101,	1100
2017-01-05 12:17:10 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-05 12:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:10 AI_Player.update()	update
2017-01-05 12:17:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:10 AI_Player.update()	update
2017-01-05 12:17:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:10 AI_Player.update()	Search took57ms
2017-01-05 12:17:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:10 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 12:17:10 AI_Player.update()		101,	1010,	11,	111,	110,	1001,	1010
2017-01-05 12:17:10 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-05 12:17:10 AI_Player.update()		1100,	11,	11,	1100,	1010,	1010,	101
2017-01-05 12:17:10 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-05 12:17:10 AI_Player.update()		1010,	11,	1100,	11,	1001,	1001,	1100
2017-01-05 12:17:10 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1101,	1001
2017-01-05 12:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:10 AI_Player.update()	update
2017-01-05 12:17:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:10 AI_Player.update()	update
2017-01-05 12:17:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:10 AI_Player.update()	Search took98ms
2017-01-05 12:17:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:10 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 12:17:10 AI_Player.update()		101,	1010,	11,	111,	110,	1001,	1010
2017-01-05 12:17:10 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-05 12:17:10 AI_Player.update()		101,	1100,	11,	11,	1100,	1010,	1010
2017-01-05 12:17:10 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-05 12:17:10 AI_Player.update()		1010,	11,	1100,	11,	1001,	1001,	1100
2017-01-05 12:17:10 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1101,	1001
2017-01-05 12:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:10 AI_Player.update()	update
2017-01-05 12:17:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:10 AI_Player.update()	update
2017-01-05 12:17:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:10 AI_Player.update()	Search took82ms
2017-01-05 12:17:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:10 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 12:17:10 AI_Player.update()		101,	1010,	11,	111,	110,	1001,	1010
2017-01-05 12:17:10 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-05 12:17:10 AI_Player.update()		1010,	101,	1100,	11,	11,	1100,	1010
2017-01-05 12:17:10 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-05 12:17:10 AI_Player.update()		1010,	11,	1100,	11,	1001,	1001,	1100
2017-01-05 12:17:10 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1101,	1001
2017-01-05 12:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:11 AI_Player.update()	update
2017-01-05 12:17:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:11 AI_Player.update()	update
2017-01-05 12:17:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:11 AI_Player.update()	Search took374ms
2017-01-05 12:17:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:11 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 12:17:11 AI_Player.update()		101,	1010,	11,	111,	110,	1001,	1010
2017-01-05 12:17:11 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-05 12:17:11 AI_Player.update()		1010,	101,	1100,	11,	11,	1100,	1010
2017-01-05 12:17:11 AI_Player.update()		1110,	11,	1101,	1011,	1011,	101,	1011
2017-01-05 12:17:11 AI_Player.update()		1010,	1011,	1100,	11,	1001,	1001,	1100
2017-01-05 12:17:11 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1101,	1001
2017-01-05 12:17:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:11 AI_Player.update()	update
2017-01-05 12:17:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:11 AI_Player.update()	update
2017-01-05 12:17:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:11 AI_Player.update()	Search took70ms
2017-01-05 12:17:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:11 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 12:17:11 AI_Player.update()		101,	1010,	11,	111,	110,	1001,	1010
2017-01-05 12:17:11 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-05 12:17:11 AI_Player.update()		1010,	101,	1100,	11,	11,	1100,	1010
2017-01-05 12:17:11 AI_Player.update()		1110,	11,	1101,	1011,	1011,	101,	1011
2017-01-05 12:17:11 AI_Player.update()		1011,	1100,	11,	1001,	1001,	1100,	1010
2017-01-05 12:17:11 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1101,	1001
2017-01-05 12:17:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:11 AI_Player.update()	update
2017-01-05 12:17:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:11 AI_Player.update()	update
2017-01-05 12:17:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:12 AI_Player.update()	Search took520ms
2017-01-05 12:17:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:12 AI_Player.update()		110,	1010,	111,	111,	111,	110,	11
2017-01-05 12:17:12 AI_Player.update()		101,	1010,	11,	1010,	110,	1001,	1010
2017-01-05 12:17:12 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 12:17:12 AI_Player.update()		1010,	101,	1100,	1011,	11,	1100,	1010
2017-01-05 12:17:12 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-05 12:17:12 AI_Player.update()		1011,	1100,	11,	101,	1001,	1100,	1010
2017-01-05 12:17:12 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1101,	1001
2017-01-05 12:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:12 AI_Player.update()	update
2017-01-05 12:17:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 12:17:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:12 AI_Player.update()	update
2017-01-05 12:17:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:12 AI_Player.update()	Search took153ms
2017-01-05 12:17:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:12 AI_Player.update()		110,	1110,	111,	111,	111,	110,	11
2017-01-05 12:17:12 AI_Player.update()		101,	1010,	11,	1010,	110,	1001,	1010
2017-01-05 12:17:12 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-05 12:17:12 AI_Player.update()		1010,	101,	1100,	1011,	11,	1100,	1010
2017-01-05 12:17:12 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-05 12:17:12 AI_Player.update()		1011,	11,	11,	101,	1001,	1100,	1010
2017-01-05 12:17:12 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1101,	1001
2017-01-05 12:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 12:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:12 AI_Player.update()	update
2017-01-05 12:17:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	2 2
2017-01-05 12:17:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:17:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:13 AI_Player.update()	update
2017-01-05 12:17:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:13 AI_Player.update()	Search took106ms
2017-01-05 12:17:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:13 AI_Player.update()		110,	1110,	111,	111,	111,	110,	11
2017-01-05 12:17:13 AI_Player.update()		101,	1010,	11,	1010,	110,	1001,	1010
2017-01-05 12:17:13 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-05 12:17:13 AI_Player.update()		1010,	1010,	101,	1100,	1011,	11,	1100
2017-01-05 12:17:13 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-05 12:17:13 AI_Player.update()		1011,	11,	11,	101,	1001,	1100,	1010
2017-01-05 12:17:13 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1101,	1001
2017-01-05 12:17:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	2 2
2017-01-05 12:17:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:13 AI_Player.update()	update
2017-01-05 12:17:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	3 2
2017-01-05 12:17:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:17:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:13 AI_Player.update()	update
2017-01-05 12:17:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:13 AI_Player.update()	Search took205ms
2017-01-05 12:17:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:13 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 12:17:13 AI_Player.update()		101,	1010,	11,	111,	110,	1001,	1010
2017-01-05 12:17:13 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-05 12:17:13 AI_Player.update()		1010,	1010,	101,	11,	1011,	11,	1100
2017-01-05 12:17:13 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-05 12:17:13 AI_Player.update()		1011,	11,	11,	1001,	1001,	1100,	1010
2017-01-05 12:17:13 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 12:17:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	3 2
2017-01-05 12:17:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:13 AI_Player.update()	update
2017-01-05 12:17:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:17:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:13 AI_Player.update()	update
2017-01-05 12:17:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:13 AI_Player.update()	Search took215ms
2017-01-05 12:17:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:13 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 12:17:13 AI_Player.update()		101,	1010,	11,	111,	110,	1001,	1010
2017-01-05 12:17:13 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-05 12:17:13 AI_Player.update()		1010,	101,	11,	1011,	11,	1100,	1010
2017-01-05 12:17:13 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-05 12:17:13 AI_Player.update()		1011,	11,	11,	1001,	1001,	1100,	1010
2017-01-05 12:17:13 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 12:17:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:14 AI_Player.update()	update
2017-01-05 12:17:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:14 AI_Player.update()	update
2017-01-05 12:17:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:14 AI_Player.update()	Search took265ms
2017-01-05 12:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:14 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 12:17:14 AI_Player.update()		101,	1010,	11,	111,	110,	1001,	1010
2017-01-05 12:17:14 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-05 12:17:14 AI_Player.update()		101,	11,	1011,	11,	1100,	1010,	1010
2017-01-05 12:17:14 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-05 12:17:14 AI_Player.update()		1011,	11,	11,	1001,	1001,	1100,	1010
2017-01-05 12:17:14 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 12:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:14 AI_Player.update()	update
2017-01-05 12:17:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:14 AI_Player.update()	update
2017-01-05 12:17:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:14 AI_Player.update()	Search took129ms
2017-01-05 12:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:14 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 12:17:14 AI_Player.update()		101,	1010,	11,	111,	110,	1001,	1010
2017-01-05 12:17:14 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-05 12:17:14 AI_Player.update()		101,	11,	1011,	11,	1100,	1010,	1010
2017-01-05 12:17:14 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-05 12:17:14 AI_Player.update()		11,	11,	1001,	1001,	1100,	1010,	1011
2017-01-05 12:17:14 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 12:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:14 AI_Player.update()	update
2017-01-05 12:17:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:15 AI_Player.update()	update
2017-01-05 12:17:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:15 AI_Player.update()	Search took56ms
2017-01-05 12:17:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:15 AI_Player.update()		110,	1110,	111,	11,	111,	1101,	11
2017-01-05 12:17:15 AI_Player.update()		101,	1010,	11,	111,	110,	110,	1010
2017-01-05 12:17:15 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-05 12:17:15 AI_Player.update()		101,	11,	1011,	11,	1100,	11,	1010
2017-01-05 12:17:15 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:15 AI_Player.update()		11,	11,	1001,	1001,	1100,	101,	1011
2017-01-05 12:17:15 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 12:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:15 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:15 AI_Player.update()	update
2017-01-05 12:17:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:15 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:15 AI_Player.update()	update
2017-01-05 12:17:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:15 AI_Player.update()	Search took146ms
2017-01-05 12:17:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:15 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 12:17:15 AI_Player.update()		101,	1010,	11,	111,	110,	1001,	1010
2017-01-05 12:17:15 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-05 12:17:15 AI_Player.update()		101,	11,	1011,	11,	1100,	1010,	1010
2017-01-05 12:17:15 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-05 12:17:15 AI_Player.update()		11,	11,	1001,	1001,	1100,	1010,	1011
2017-01-05 12:17:15 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 12:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:15 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:15 AI_Player.update()	update
2017-01-05 12:17:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:15 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:15 AI_Player.update()	update
2017-01-05 12:17:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:15 AI_Player.update()	Search took129ms
2017-01-05 12:17:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:15 AI_Player.update()		110,	1110,	111,	11,	111,	1101,	11
2017-01-05 12:17:15 AI_Player.update()		101,	1010,	11,	111,	110,	110,	1010
2017-01-05 12:17:15 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-05 12:17:15 AI_Player.update()		101,	11,	1011,	11,	1100,	11,	1010
2017-01-05 12:17:15 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:15 AI_Player.update()		11,	11,	1001,	1001,	1100,	101,	1011
2017-01-05 12:17:15 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 12:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:15 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:15 AI_Player.update()	update
2017-01-05 12:17:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:15 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:15 AI_Player.update()	update
2017-01-05 12:17:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:16 AI_Player.update()	Search took142ms
2017-01-05 12:17:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:16 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 12:17:16 AI_Player.update()		101,	1010,	11,	111,	110,	1101,	1010
2017-01-05 12:17:16 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-05 12:17:16 AI_Player.update()		101,	11,	1011,	11,	1100,	1001,	1010
2017-01-05 12:17:16 AI_Player.update()		1110,	101,	1101,	1100,	1011,	11,	1011
2017-01-05 12:17:16 AI_Player.update()		11,	11,	1001,	1001,	1100,	1010,	1011
2017-01-05 12:17:16 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 12:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:16 AI_Player.update()	update
2017-01-05 12:17:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:16 AI_Player.update()	update
2017-01-05 12:17:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:16 AI_Player.update()	Search took104ms
2017-01-05 12:17:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:16 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 12:17:16 AI_Player.update()		101,	1010,	11,	111,	110,	1101,	1010
2017-01-05 12:17:16 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-05 12:17:16 AI_Player.update()		101,	11,	1011,	11,	1100,	1001,	1010
2017-01-05 12:17:16 AI_Player.update()		1110,	101,	1101,	1100,	1011,	11,	1011
2017-01-05 12:17:16 AI_Player.update()		11,	1001,	1001,	1100,	1010,	1011,	11
2017-01-05 12:17:16 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 12:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	3 3
2017-01-05 12:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:16 AI_Player.update()	update
2017-01-05 12:17:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	3 4
2017-01-05 12:17:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:16 AI_Player.update()	update
2017-01-05 12:17:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:16 AI_Player.update()	Search took247ms
2017-01-05 12:17:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:16 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 12:17:16 AI_Player.update()		101,	1010,	11,	111,	110,	1101,	1010
2017-01-05 12:17:16 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-05 12:17:16 AI_Player.update()		101,	11,	1011,	11,	1100,	1001,	1010
2017-01-05 12:17:16 AI_Player.update()		1110,	101,	1101,	1100,	1011,	11,	1011
2017-01-05 12:17:16 AI_Player.update()		11,	11,	1001,	1001,	1100,	1010,	1011
2017-01-05 12:17:16 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 12:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	3 4
2017-01-05 12:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:16 AI_Player.update()	update
2017-01-05 12:17:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:16 GameBoard.setupTreasurePanel()	3 4
2017-01-05 12:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:17 AI_Player.update()	update
2017-01-05 12:17:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:17 AI_Player.update()	Search took300ms
2017-01-05 12:17:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:17 AI_Player.update()		110,	1110,	111,	11,	111,	1101,	11
2017-01-05 12:17:17 AI_Player.update()		101,	1010,	11,	111,	110,	110,	1010
2017-01-05 12:17:17 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-05 12:17:17 AI_Player.update()		101,	11,	1011,	11,	1100,	11,	1010
2017-01-05 12:17:17 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:17 AI_Player.update()		11,	11,	1001,	1001,	1100,	101,	1011
2017-01-05 12:17:17 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 12:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	3 4
2017-01-05 12:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:17 AI_Player.update()	update
2017-01-05 12:17:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:17 AI_Player.update()	update
2017-01-05 12:17:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:17 AI_Player.update()	Search took157ms
2017-01-05 12:17:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:17 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 12:17:17 AI_Player.update()		101,	1010,	11,	111,	110,	1001,	1010
2017-01-05 12:17:17 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-05 12:17:17 AI_Player.update()		101,	11,	1011,	11,	1100,	1010,	1010
2017-01-05 12:17:17 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-05 12:17:17 AI_Player.update()		11,	11,	1001,	1001,	1100,	1010,	1011
2017-01-05 12:17:17 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 12:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:17 AI_Player.update()	update
2017-01-05 12:17:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:17 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:17 AI_Player.update()	update
2017-01-05 12:17:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:18 AI_Player.update()	Search took409ms
2017-01-05 12:17:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:18 AI_Player.update()		110,	1110,	111,	11,	111,	1101,	11
2017-01-05 12:17:18 AI_Player.update()		101,	1010,	11,	111,	110,	110,	1010
2017-01-05 12:17:18 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-05 12:17:18 AI_Player.update()		101,	11,	1011,	11,	1100,	11,	1010
2017-01-05 12:17:18 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:18 AI_Player.update()		11,	11,	1001,	1001,	1100,	101,	1011
2017-01-05 12:17:18 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 12:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:18 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:18 AI_Player.update()	update
2017-01-05 12:17:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:18 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:18 AI_Player.update()	update
2017-01-05 12:17:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:18 AI_Player.update()	Search took160ms
2017-01-05 12:17:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:18 AI_Player.update()		110,	1110,	111,	11,	111,	1101,	11
2017-01-05 12:17:18 AI_Player.update()		101,	1010,	11,	111,	110,	110,	1010
2017-01-05 12:17:18 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-05 12:17:18 AI_Player.update()		101,	11,	1011,	11,	1100,	11,	1010
2017-01-05 12:17:18 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:18 AI_Player.update()		11,	1001,	1001,	1100,	101,	1011,	11
2017-01-05 12:17:18 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 12:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:18 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:18 AI_Player.update()	update
2017-01-05 12:17:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:18 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:18 AI_Player.update()	update
2017-01-05 12:17:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:18 AI_Player.update()	Search took43ms
2017-01-05 12:17:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:18 AI_Player.update()		110,	1110,	111,	11,	111,	1101,	11
2017-01-05 12:17:18 AI_Player.update()		1010,	11,	111,	110,	110,	1010,	101
2017-01-05 12:17:18 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-05 12:17:18 AI_Player.update()		101,	11,	1011,	11,	1100,	11,	1010
2017-01-05 12:17:18 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:18 AI_Player.update()		11,	1001,	1001,	1100,	101,	1011,	11
2017-01-05 12:17:18 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 12:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:18 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:19 AI_Player.update()	update
2017-01-05 12:17:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:19 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:19 AI_Player.update()	update
2017-01-05 12:17:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:19 AI_Player.update()	Search took47ms
2017-01-05 12:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:19 AI_Player.update()		110,	1110,	111,	11,	111,	1101,	11
2017-01-05 12:17:19 AI_Player.update()		101,	1010,	11,	111,	110,	110,	1010
2017-01-05 12:17:19 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-05 12:17:19 AI_Player.update()		101,	11,	1011,	11,	1100,	11,	1010
2017-01-05 12:17:19 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:19 AI_Player.update()		11,	1001,	1001,	1100,	101,	1011,	11
2017-01-05 12:17:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 12:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:19 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:19 AI_Player.update()	update
2017-01-05 12:17:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:19 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:19 AI_Player.update()	update
2017-01-05 12:17:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:19 AI_Player.update()	Search took41ms
2017-01-05 12:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:19 AI_Player.update()		110,	1110,	111,	11,	111,	1101,	11
2017-01-05 12:17:19 AI_Player.update()		1010,	11,	111,	110,	110,	1010,	101
2017-01-05 12:17:19 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-05 12:17:19 AI_Player.update()		101,	11,	1011,	11,	1100,	11,	1010
2017-01-05 12:17:19 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:19 AI_Player.update()		11,	1001,	1001,	1100,	101,	1011,	11
2017-01-05 12:17:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 12:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:19 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:19 AI_Player.update()	update
2017-01-05 12:17:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:19 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:19 AI_Player.update()	update
2017-01-05 12:17:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:19 AI_Player.update()	Search took181ms
2017-01-05 12:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:19 AI_Player.update()		110,	1110,	111,	11,	111,	1101,	11
2017-01-05 12:17:19 AI_Player.update()		11,	111,	110,	110,	1010,	101,	1010
2017-01-05 12:17:19 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-05 12:17:19 AI_Player.update()		101,	11,	1011,	11,	1100,	11,	1010
2017-01-05 12:17:19 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:19 AI_Player.update()		11,	1001,	1001,	1100,	101,	1011,	11
2017-01-05 12:17:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 12:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:19 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:19 AI_Player.update()	update
2017-01-05 12:17:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:19 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:20 AI_Player.update()	update
2017-01-05 12:17:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:20 AI_Player.update()	Search took55ms
2017-01-05 12:17:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:20 AI_Player.update()		110,	1110,	111,	11,	111,	101,	11
2017-01-05 12:17:20 AI_Player.update()		11,	111,	110,	110,	1010,	1001,	1010
2017-01-05 12:17:20 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-05 12:17:20 AI_Player.update()		101,	11,	1011,	11,	1100,	1010,	1010
2017-01-05 12:17:20 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1011,	1011
2017-01-05 12:17:20 AI_Player.update()		11,	1001,	1001,	1100,	101,	1010,	11
2017-01-05 12:17:20 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 12:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:20 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:20 AI_Player.update()	update
2017-01-05 12:17:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:20 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:20 AI_Player.update()	update
2017-01-05 12:17:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:20 AI_Player.update()	Search took272ms
2017-01-05 12:17:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:20 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-05 12:17:20 AI_Player.update()		11,	111,	110,	110,	1010,	11,	1010
2017-01-05 12:17:20 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 12:17:20 AI_Player.update()		101,	11,	1011,	11,	1100,	1011,	1010
2017-01-05 12:17:20 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:20 AI_Player.update()		11,	1001,	1001,	1100,	101,	1101,	11
2017-01-05 12:17:20 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 12:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:20 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:20 AI_Player.update()	update
2017-01-05 12:17:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:20 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:20 AI_Player.update()	update
2017-01-05 12:17:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:20 AI_Player.update()	Search took53ms
2017-01-05 12:17:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:20 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-05 12:17:20 AI_Player.update()		11,	111,	110,	110,	1010,	11,	1010
2017-01-05 12:17:20 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 12:17:20 AI_Player.update()		101,	11,	1011,	11,	1100,	1011,	1010
2017-01-05 12:17:20 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:20 AI_Player.update()		11,	11,	1001,	1001,	1100,	101,	1101
2017-01-05 12:17:20 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 12:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:20 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:20 AI_Player.update()	update
2017-01-05 12:17:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:20 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:21 AI_Player.update()	update
2017-01-05 12:17:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:21 AI_Player.update()	Search took324ms
2017-01-05 12:17:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:21 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-05 12:17:21 AI_Player.update()		11,	1010,	110,	110,	1010,	11,	1010
2017-01-05 12:17:21 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-05 12:17:21 AI_Player.update()		101,	101,	1011,	11,	1100,	1011,	1010
2017-01-05 12:17:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:21 AI_Player.update()		11,	1100,	1001,	1001,	1100,	101,	1101
2017-01-05 12:17:21 AI_Player.update()		1100,	1110,	1101,	101,	1101,	101,	1001
2017-01-05 12:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:21 AI_Player.update()	update
2017-01-05 12:17:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	4 5
2017-01-05 12:17:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:21 AI_Player.update()	update
2017-01-05 12:17:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:21 AI_Player.update()	Search took115ms
2017-01-05 12:17:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:21 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-05 12:17:21 AI_Player.update()		11,	1010,	110,	110,	1010,	11,	1010
2017-01-05 12:17:21 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-05 12:17:21 AI_Player.update()		101,	101,	1011,	11,	1100,	1011,	1010
2017-01-05 12:17:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:21 AI_Player.update()		1101,	11,	1100,	1001,	1001,	1100,	101
2017-01-05 12:17:21 AI_Player.update()		1100,	1110,	1101,	101,	1101,	101,	1001
2017-01-05 12:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	4 5
2017-01-05 12:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:21 AI_Player.update()	update
2017-01-05 12:17:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	4 6
2017-01-05 12:17:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:21 AI_Player.update()	update
2017-01-05 12:17:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:22 AI_Player.update()	Search took154ms
2017-01-05 12:17:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:22 AI_Player.update()		110,	1010,	111,	11,	111,	1001,	11
2017-01-05 12:17:22 AI_Player.update()		11,	11,	110,	110,	1010,	11,	1010
2017-01-05 12:17:22 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 12:17:22 AI_Player.update()		101,	11,	1011,	11,	1100,	1011,	1010
2017-01-05 12:17:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:22 AI_Player.update()		1101,	1110,	1100,	1001,	1001,	1100,	101
2017-01-05 12:17:22 AI_Player.update()		1100,	111,	1101,	101,	1101,	101,	1001
2017-01-05 12:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	4 6
2017-01-05 12:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:22 AI_Player.update()	update
2017-01-05 12:17:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	5 6
2017-01-05 12:17:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:22 AI_Player.update()	update
2017-01-05 12:17:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:22 AI_Player.update()	Search took115ms
2017-01-05 12:17:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:22 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-05 12:17:22 AI_Player.update()		11,	1010,	110,	110,	1010,	11,	1010
2017-01-05 12:17:22 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-05 12:17:22 AI_Player.update()		101,	101,	1011,	11,	1100,	1011,	1010
2017-01-05 12:17:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1010,	1011
2017-01-05 12:17:22 AI_Player.update()		1101,	11,	1100,	1001,	1001,	1100,	101
2017-01-05 12:17:22 AI_Player.update()		1100,	1110,	1101,	101,	1101,	101,	1001
2017-01-05 12:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	5 6
2017-01-05 12:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:22 AI_Player.update()	update
2017-01-05 12:17:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	5 6
2017-01-05 12:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:22 AI_Player.update()	update
2017-01-05 12:17:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:22 AI_Player.update()	Search took157ms
2017-01-05 12:17:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:22 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-05 12:17:22 AI_Player.update()		11,	1010,	110,	110,	1010,	1010,	1010
2017-01-05 12:17:22 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-05 12:17:22 AI_Player.update()		101,	101,	1011,	11,	1100,	1010,	1010
2017-01-05 12:17:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 12:17:22 AI_Player.update()		1101,	11,	1100,	1001,	1001,	101,	101
2017-01-05 12:17:22 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1001,	1001
2017-01-05 12:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	5 6
2017-01-05 12:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:22 AI_Player.update()	update
2017-01-05 12:17:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:17:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:17:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:22 AI_Player.update()	update
2017-01-05 12:17:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:23 AI_Player.update()	Search took125ms
2017-01-05 12:17:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:23 AI_Player.update()		110,	111,	111,	110,	111,	11,	11
2017-01-05 12:17:23 AI_Player.update()		11,	1010,	110,	1010,	1010,	1010,	1010
2017-01-05 12:17:23 AI_Player.update()		1110,	11,	1110,	11,	111,	1011,	1011
2017-01-05 12:17:23 AI_Player.update()		101,	101,	1011,	1100,	1100,	1010,	1010
2017-01-05 12:17:23 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1100,	1011
2017-01-05 12:17:23 AI_Player.update()		1101,	11,	1100,	101,	1001,	101,	101
2017-01-05 12:17:23 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1001,	1001
2017-01-05 12:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:23 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:23 AI_Player.update()	update
2017-01-05 12:17:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:23 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:23 AI_Player.update()	update
2017-01-05 12:17:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:23 AI_Player.update()	Search took443ms
2017-01-05 12:17:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:23 AI_Player.update()		110,	111,	111,	110,	111,	11,	11
2017-01-05 12:17:23 AI_Player.update()		1010,	110,	1010,	1010,	1010,	1010,	11
2017-01-05 12:17:23 AI_Player.update()		1110,	11,	1110,	11,	111,	1011,	1011
2017-01-05 12:17:23 AI_Player.update()		101,	101,	1011,	1100,	1100,	1010,	1010
2017-01-05 12:17:23 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1100,	1011
2017-01-05 12:17:23 AI_Player.update()		1101,	11,	1100,	101,	1001,	101,	101
2017-01-05 12:17:23 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1001,	1001
2017-01-05 12:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:23 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:23 AI_Player.update()	update
2017-01-05 12:17:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:23 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:23 AI_Player.update()	update
2017-01-05 12:17:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:24 AI_Player.update()	Search took97ms
2017-01-05 12:17:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:24 AI_Player.update()		110,	111,	111,	110,	111,	11,	11
2017-01-05 12:17:24 AI_Player.update()		11,	1010,	110,	1010,	1010,	1010,	1010
2017-01-05 12:17:24 AI_Player.update()		1110,	11,	1110,	11,	111,	1011,	1011
2017-01-05 12:17:24 AI_Player.update()		101,	101,	1011,	1100,	1100,	1010,	1010
2017-01-05 12:17:24 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1100,	1011
2017-01-05 12:17:24 AI_Player.update()		1101,	11,	1100,	101,	1001,	101,	101
2017-01-05 12:17:24 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1001,	1001
2017-01-05 12:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:24 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:24 AI_Player.update()	update
2017-01-05 12:17:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:24 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:24 AI_Player.update()	update
2017-01-05 12:17:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:24 AI_Player.update()	Search took433ms
2017-01-05 12:17:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:24 AI_Player.update()		110,	111,	111,	110,	111,	11,	11
2017-01-05 12:17:24 AI_Player.update()		1010,	110,	1010,	1010,	1010,	1010,	11
2017-01-05 12:17:24 AI_Player.update()		1110,	11,	1110,	11,	111,	1011,	1011
2017-01-05 12:17:24 AI_Player.update()		101,	101,	1011,	1100,	1100,	1010,	1010
2017-01-05 12:17:24 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1100,	1011
2017-01-05 12:17:24 AI_Player.update()		1101,	11,	1100,	101,	1001,	101,	101
2017-01-05 12:17:24 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1001,	1001
2017-01-05 12:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:24 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:24 AI_Player.update()	update
2017-01-05 12:17:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:24 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:24 AI_Player.update()	update
2017-01-05 12:17:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:24 AI_Player.update()	Search took101ms
2017-01-05 12:17:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:24 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-05 12:17:24 AI_Player.update()		1010,	110,	1010,	11,	1010,	1010,	11
2017-01-05 12:17:24 AI_Player.update()		1110,	11,	1110,	1100,	111,	1011,	1011
2017-01-05 12:17:24 AI_Player.update()		101,	101,	1011,	1001,	1100,	1010,	1010
2017-01-05 12:17:24 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 12:17:24 AI_Player.update()		1101,	11,	1100,	11,	1001,	101,	101
2017-01-05 12:17:24 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1001,	1001
2017-01-05 12:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:24 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:25 AI_Player.update()	update
2017-01-05 12:17:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:25 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:25 AI_Player.update()	update
2017-01-05 12:17:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:25 AI_Player.update()	Search took114ms
2017-01-05 12:17:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:25 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-05 12:17:25 AI_Player.update()		1010,	110,	1010,	11,	1010,	1010,	11
2017-01-05 12:17:25 AI_Player.update()		1110,	11,	1110,	1100,	111,	1011,	1011
2017-01-05 12:17:25 AI_Player.update()		1010,	101,	101,	1011,	1001,	1100,	1010
2017-01-05 12:17:25 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 12:17:25 AI_Player.update()		1101,	11,	1100,	11,	1001,	101,	101
2017-01-05 12:17:25 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1001,	1001
2017-01-05 12:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:25 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:25 AI_Player.update()	update
2017-01-05 12:17:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:25 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:25 AI_Player.update()	update
2017-01-05 12:17:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:25 AI_Player.update()	Search took63ms
2017-01-05 12:17:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:25 AI_Player.update()		110,	111,	111,	1010,	111,	1010,	11
2017-01-05 12:17:25 AI_Player.update()		1010,	110,	1010,	11,	1010,	1011,	11
2017-01-05 12:17:25 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-05 12:17:25 AI_Player.update()		1010,	101,	101,	1011,	1001,	1100,	1010
2017-01-05 12:17:25 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-05 12:17:25 AI_Player.update()		1101,	11,	1100,	11,	1001,	1001,	101
2017-01-05 12:17:25 AI_Player.update()		1100,	1110,	1101,	110,	1101,	11,	1001
2017-01-05 12:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:25 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:25 AI_Player.update()	update
2017-01-05 12:17:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:25 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:25 AI_Player.update()	update
2017-01-05 12:17:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:25 AI_Player.update()	Search took68ms
2017-01-05 12:17:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:25 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-05 12:17:25 AI_Player.update()		1010,	110,	1010,	11,	1010,	1010,	11
2017-01-05 12:17:25 AI_Player.update()		1110,	11,	1110,	1100,	111,	1011,	1011
2017-01-05 12:17:25 AI_Player.update()		1010,	101,	101,	1011,	1001,	1100,	1010
2017-01-05 12:17:25 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 12:17:25 AI_Player.update()		1101,	11,	1100,	11,	1001,	101,	101
2017-01-05 12:17:25 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1001,	1001
2017-01-05 12:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:25 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:25 AI_Player.update()	update
2017-01-05 12:17:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:25 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:26 AI_Player.update()	update
2017-01-05 12:17:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:26 AI_Player.update()	Search took285ms
2017-01-05 12:17:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:26 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-05 12:17:26 AI_Player.update()		1010,	110,	1010,	11,	1010,	11,	11
2017-01-05 12:17:26 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 12:17:26 AI_Player.update()		1010,	101,	101,	1011,	1001,	1011,	1010
2017-01-05 12:17:26 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 12:17:26 AI_Player.update()		1101,	11,	1100,	11,	1001,	1100,	101
2017-01-05 12:17:26 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-05 12:17:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:26 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:26 AI_Player.update()	update
2017-01-05 12:17:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:26 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:26 AI_Player.update()	update
2017-01-05 12:17:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:26 AI_Player.update()	Search took54ms
2017-01-05 12:17:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:26 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-05 12:17:26 AI_Player.update()		1010,	110,	1010,	11,	1010,	1010,	11
2017-01-05 12:17:26 AI_Player.update()		1110,	11,	1110,	1100,	111,	1011,	1011
2017-01-05 12:17:26 AI_Player.update()		1010,	101,	101,	1011,	1001,	1100,	1010
2017-01-05 12:17:26 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 12:17:26 AI_Player.update()		1101,	11,	1100,	11,	1001,	101,	101
2017-01-05 12:17:26 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1001,	1001
2017-01-05 12:17:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:26 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:26 AI_Player.update()	update
2017-01-05 12:17:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:26 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:26 AI_Player.update()	update
2017-01-05 12:17:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:26 AI_Player.update()	Search took174ms
2017-01-05 12:17:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:26 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-05 12:17:26 AI_Player.update()		1010,	110,	1010,	11,	1010,	11,	11
2017-01-05 12:17:26 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 12:17:26 AI_Player.update()		1010,	101,	101,	1011,	1001,	1011,	1010
2017-01-05 12:17:26 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 12:17:26 AI_Player.update()		1101,	11,	1100,	11,	1001,	1100,	101
2017-01-05 12:17:26 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-05 12:17:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:26 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:27 AI_Player.update()	update
2017-01-05 12:17:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:27 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:27 AI_Player.update()	update
2017-01-05 12:17:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:27 AI_Player.update()	Search took62ms
2017-01-05 12:17:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:27 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-05 12:17:27 AI_Player.update()		1010,	110,	1010,	11,	1010,	11,	11
2017-01-05 12:17:27 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 12:17:27 AI_Player.update()		1010,	1010,	101,	101,	1011,	1001,	1011
2017-01-05 12:17:27 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 12:17:27 AI_Player.update()		1101,	11,	1100,	11,	1001,	1100,	101
2017-01-05 12:17:27 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-05 12:17:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:27 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:27 AI_Player.update()	update
2017-01-05 12:17:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:27 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:27 AI_Player.update()	update
2017-01-05 12:17:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:17:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:17:27 AI_Player.update()	Search took166ms
2017-01-05 12:17:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:27 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-05 12:17:27 AI_Player.update()		1010,	110,	1010,	11,	1010,	11,	11
2017-01-05 12:17:27 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 12:17:27 AI_Player.update()		1010,	101,	101,	1011,	1001,	1011,	1010
2017-01-05 12:17:27 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 12:17:27 AI_Player.update()		1101,	11,	1100,	11,	1001,	1100,	101
2017-01-05 12:17:27 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-05 12:17:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:27 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:27 AI_Player.update()	update
2017-01-05 12:17:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:17:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:17:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:27 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:27 AI_Player.update()	update
2017-01-05 12:17:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:17:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h4). suceeded
2017-01-05 12:17:27 AI_Player.update()	Search took52ms
2017-01-05 12:17:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:17:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:27 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-05 12:17:27 AI_Player.update()		1010,	110,	1010,	11,	1010,	11,	11
2017-01-05 12:17:27 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 12:17:27 AI_Player.update()		1010,	1010,	101,	101,	1011,	1001,	1011
2017-01-05 12:17:27 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 12:17:27 AI_Player.update()		1101,	11,	1100,	11,	1001,	1100,	101
2017-01-05 12:17:27 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-05 12:17:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:17:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:27 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:27 AI_Player.update()	update
2017-01-05 12:17:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:17:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:17:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h4). suceeded
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:17:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:17:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:17:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:17:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:17:27 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:17:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:17:28 AI_Player.update()	update
2017-01-05 12:17:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
