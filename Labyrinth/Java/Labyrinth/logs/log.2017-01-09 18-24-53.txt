2017-01-09 18:24:53 GameBoard.<init>()	Hello World!
2017-01-09 18:24:53 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-09 18:24:53 QueryProlog.initialise()	setup(h1/h3). suceeded
2017-01-09 18:24:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:53 GameBoard.setupBoardFromString()	Board created
2017-01-09 18:24:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:24:53 GameBoard.initialise()	[ring, crown, helmet, book, keys]
2017-01-09 18:24:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:24:53 GameBoard.initialise()	[map, sword, gold, candle, chest]
2017-01-09 18:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:53 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-09 18:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	null
2017-01-09 18:24:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:24:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:24:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:53 AI_Player.update()	update
2017-01-09 18:24:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:24:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-09 18:24:53 AI_Player.update()	Search took3ms
2017-01-09 18:24:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:53 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-09 18:24:53 AI_Player.update()		101,	1001,	11,	101,	110,	1010,	1001
2017-01-09 18:24:53 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-09 18:24:53 AI_Player.update()		1100,	1110,	110,	110,	111,	1001,	1001
2017-01-09 18:24:53 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	101,	1011
2017-01-09 18:24:53 AI_Player.update()		110,	111,	11,	1001,	1011,	1010,	11
2017-01-09 18:24:53 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-09 18:24:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:24:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:24:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:24:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:53 AI_Player.update()	update
2017-01-09 18:24:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:24:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:24:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-09 18:24:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:24:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:24:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:53 AI_Player.update()	update
2017-01-09 18:24:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:24:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 18:24:53 AI_Player.update()	Search took94ms
2017-01-09 18:24:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:53 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-09 18:24:53 AI_Player.update()		1001,	101,	1001,	11,	101,	110,	1010
2017-01-09 18:24:53 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-09 18:24:53 AI_Player.update()		1100,	1110,	110,	110,	111,	1001,	1001
2017-01-09 18:24:53 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	101,	1011
2017-01-09 18:24:53 AI_Player.update()		110,	111,	11,	1001,	1011,	1010,	11
2017-01-09 18:24:53 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-09 18:24:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:24:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:53 AI_Player.update()	update
2017-01-09 18:24:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:24:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:24:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 18:24:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:53 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:54 AI_Player.update()	update
2017-01-09 18:24:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:24:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-09 18:24:54 AI_Player.update()	Search took8ms
2017-01-09 18:24:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:54 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-09 18:24:54 AI_Player.update()		1001,	101,	1001,	1010,	101,	110,	1010
2017-01-09 18:24:54 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-09 18:24:54 AI_Player.update()		1100,	1110,	110,	1101,	111,	1001,	1001
2017-01-09 18:24:54 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-09 18:24:54 AI_Player.update()		110,	111,	11,	110,	1011,	1010,	11
2017-01-09 18:24:54 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1100,	1001
2017-01-09 18:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:54 AI_Player.update()	update
2017-01-09 18:24:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:24:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:24:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-09 18:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:24:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:54 AI_Player.update()	update
2017-01-09 18:24:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:24:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 18:24:54 AI_Player.update()	Search took377ms
2017-01-09 18:24:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:54 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-09 18:24:54 AI_Player.update()		1010,	1001,	101,	1001,	1010,	101,	110
2017-01-09 18:24:54 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-09 18:24:54 AI_Player.update()		1100,	1110,	110,	1101,	111,	1001,	1001
2017-01-09 18:24:54 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-09 18:24:54 AI_Player.update()		110,	111,	11,	110,	1011,	1010,	11
2017-01-09 18:24:54 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1100,	1001
2017-01-09 18:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:54 AI_Player.update()	update
2017-01-09 18:24:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:24:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:24:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 18:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:24:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:24:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:54 AI_Player.update()	update
2017-01-09 18:24:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:24:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-09 18:24:54 AI_Player.update()	Search took1ms
2017-01-09 18:24:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:54 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-09 18:24:54 AI_Player.update()		1010,	110,	101,	1001,	1010,	101,	110
2017-01-09 18:24:54 AI_Player.update()		1110,	1110,	1110,	110,	111,	1010,	1011
2017-01-09 18:24:54 AI_Player.update()		1100,	1100,	110,	1101,	111,	1001,	1001
2017-01-09 18:24:54 AI_Player.update()		1110,	111,	1101,	1001,	1011,	101,	1011
2017-01-09 18:24:54 AI_Player.update()		110,	1100,	11,	110,	1011,	1010,	11
2017-01-09 18:24:54 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1100,	1001
2017-01-09 18:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:54 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:55 AI_Player.update()	update
2017-01-09 18:24:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:24:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:24:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:24:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:55 AI_Player.update()	update
2017-01-09 18:24:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:24:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 18:24:55 AI_Player.update()	Search took134ms
2017-01-09 18:24:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:55 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-09 18:24:55 AI_Player.update()		1010,	1001,	101,	1001,	1010,	101,	110
2017-01-09 18:24:55 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-09 18:24:55 AI_Player.update()		1100,	1110,	110,	1101,	111,	1001,	1001
2017-01-09 18:24:55 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-09 18:24:55 AI_Player.update()		110,	111,	11,	110,	1011,	1010,	11
2017-01-09 18:24:55 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1100,	1001
2017-01-09 18:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:55 AI_Player.update()	update
2017-01-09 18:24:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:24:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:24:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	1 3
2017-01-09 18:24:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:24:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:55 AI_Player.update()	update
2017-01-09 18:24:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:24:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-09 18:24:55 AI_Player.update()	Search took2ms
2017-01-09 18:24:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:55 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-09 18:24:55 AI_Player.update()		1010,	110,	101,	1001,	1010,	101,	110
2017-01-09 18:24:55 AI_Player.update()		1110,	1110,	1110,	110,	111,	1010,	1011
2017-01-09 18:24:55 AI_Player.update()		1100,	1100,	110,	1101,	111,	1001,	1001
2017-01-09 18:24:55 AI_Player.update()		1110,	111,	1101,	1001,	1011,	101,	1011
2017-01-09 18:24:55 AI_Player.update()		110,	1100,	11,	110,	1011,	1010,	11
2017-01-09 18:24:55 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1100,	1001
2017-01-09 18:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	1 3
2017-01-09 18:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:55 AI_Player.update()	update
2017-01-09 18:24:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:24:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:24:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:24:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	1 3
2017-01-09 18:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:55 AI_Player.update()	update
2017-01-09 18:24:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:24:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 18:24:55 AI_Player.update()	Search took117ms
2017-01-09 18:24:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:55 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-09 18:24:55 AI_Player.update()		1010,	1001,	101,	1001,	1010,	101,	110
2017-01-09 18:24:55 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-09 18:24:55 AI_Player.update()		1100,	1110,	110,	1101,	111,	1001,	1001
2017-01-09 18:24:55 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-09 18:24:55 AI_Player.update()		110,	111,	11,	110,	1011,	1010,	11
2017-01-09 18:24:55 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1100,	1001
2017-01-09 18:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	1 3
2017-01-09 18:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:55 AI_Player.update()	update
2017-01-09 18:24:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:24:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:24:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:55 GameBoard.setupTreasurePanel()	1 3
2017-01-09 18:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:56 AI_Player.update()	update
2017-01-09 18:24:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:24:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-09 18:24:56 AI_Player.update()	Search took3ms
2017-01-09 18:24:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:56 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-09 18:24:56 AI_Player.update()		1010,	110,	101,	1001,	1010,	101,	110
2017-01-09 18:24:56 AI_Player.update()		1110,	1110,	1110,	110,	111,	1010,	1011
2017-01-09 18:24:56 AI_Player.update()		1100,	1100,	110,	1101,	111,	1001,	1001
2017-01-09 18:24:56 AI_Player.update()		1110,	111,	1101,	1001,	1011,	101,	1011
2017-01-09 18:24:56 AI_Player.update()		110,	1100,	11,	110,	1011,	1010,	11
2017-01-09 18:24:56 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1100,	1001
2017-01-09 18:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	1 3
2017-01-09 18:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:56 AI_Player.update()	update
2017-01-09 18:24:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:24:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:24:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-09 18:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:24:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	1 3
2017-01-09 18:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:56 AI_Player.update()	update
2017-01-09 18:24:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:24:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 18:24:56 AI_Player.update()	Search took149ms
2017-01-09 18:24:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:56 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-09 18:24:56 AI_Player.update()		110,	101,	1001,	1010,	101,	110,	1010
2017-01-09 18:24:56 AI_Player.update()		1110,	1110,	1110,	110,	111,	1010,	1011
2017-01-09 18:24:56 AI_Player.update()		1100,	1100,	110,	1101,	111,	1001,	1001
2017-01-09 18:24:56 AI_Player.update()		1110,	111,	1101,	1001,	1011,	101,	1011
2017-01-09 18:24:56 AI_Player.update()		110,	1100,	11,	110,	1011,	1010,	11
2017-01-09 18:24:56 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1100,	1001
2017-01-09 18:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	1 3
2017-01-09 18:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:56 AI_Player.update()	update
2017-01-09 18:24:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:24:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:24:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 18:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	1 4
2017-01-09 18:24:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:24:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:56 AI_Player.update()	update
2017-01-09 18:24:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:24:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-09 18:24:56 AI_Player.update()	Search took7ms
2017-01-09 18:24:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:56 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-09 18:24:56 AI_Player.update()		110,	1110,	1001,	1010,	101,	110,	1010
2017-01-09 18:24:56 AI_Player.update()		1110,	1100,	1110,	110,	111,	1010,	1011
2017-01-09 18:24:56 AI_Player.update()		1100,	111,	110,	1101,	111,	1001,	1001
2017-01-09 18:24:56 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-09 18:24:56 AI_Player.update()		110,	101,	11,	110,	1011,	1010,	11
2017-01-09 18:24:56 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1100,	1001
2017-01-09 18:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	1 4
2017-01-09 18:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:56 AI_Player.update()	update
2017-01-09 18:24:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:24:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:24:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-09 18:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:24:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:56 GameBoard.setupTreasurePanel()	1 4
2017-01-09 18:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:56 AI_Player.update()	update
2017-01-09 18:24:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:24:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 18:24:57 AI_Player.update()	Search took275ms
2017-01-09 18:24:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:57 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-09 18:24:57 AI_Player.update()		110,	1110,	1001,	1010,	101,	1010,	1010
2017-01-09 18:24:57 AI_Player.update()		1110,	1100,	1110,	110,	111,	1001,	1011
2017-01-09 18:24:57 AI_Player.update()		1100,	111,	110,	1101,	111,	101,	1001
2017-01-09 18:24:57 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1010,	1011
2017-01-09 18:24:57 AI_Player.update()		110,	101,	11,	110,	1011,	1100,	11
2017-01-09 18:24:57 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	101,	1001
2017-01-09 18:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:57 GameBoard.setupTreasurePanel()	1 4
2017-01-09 18:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:57 AI_Player.update()	update
2017-01-09 18:24:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:24:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:24:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 18:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:57 GameBoard.setupTreasurePanel()	1 4
2017-01-09 18:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:57 AI_Player.update()	update
2017-01-09 18:24:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:24:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-09 18:24:57 AI_Player.update()	Search took5ms
2017-01-09 18:24:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:57 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-09 18:24:57 AI_Player.update()		110,	1100,	1001,	1010,	101,	1010,	1010
2017-01-09 18:24:57 AI_Player.update()		1110,	111,	1110,	110,	111,	1001,	1011
2017-01-09 18:24:57 AI_Player.update()		1100,	1100,	110,	1101,	111,	101,	1001
2017-01-09 18:24:57 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-09 18:24:57 AI_Player.update()		110,	1001,	11,	110,	1011,	1100,	11
2017-01-09 18:24:57 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-09 18:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:57 GameBoard.setupTreasurePanel()	1 4
2017-01-09 18:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:57 AI_Player.update()	update
2017-01-09 18:24:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:24:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:24:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-09 18:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:24:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:57 GameBoard.setupTreasurePanel()	1 4
2017-01-09 18:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:57 AI_Player.update()	update
2017-01-09 18:24:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:24:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 18:24:58 AI_Player.update()	Search took803ms
2017-01-09 18:24:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:58 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-09 18:24:58 AI_Player.update()		110,	1100,	1001,	1010,	101,	1001,	1010
2017-01-09 18:24:58 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-09 18:24:58 AI_Player.update()		1100,	1100,	110,	1101,	111,	1010,	1001
2017-01-09 18:24:58 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1100,	1011
2017-01-09 18:24:58 AI_Player.update()		110,	1001,	11,	110,	1011,	101,	11
2017-01-09 18:24:58 AI_Player.update()		1100,	101,	1101,	1110,	1101,	110,	1001
2017-01-09 18:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	1 4
2017-01-09 18:24:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:58 AI_Player.update()	update
2017-01-09 18:24:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:24:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:24:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 18:24:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	1 5
2017-01-09 18:24:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:24:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:24:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:58 AI_Player.update()	update
2017-01-09 18:24:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:24:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-09 18:24:58 AI_Player.update()	Search took2ms
2017-01-09 18:24:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:58 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-09 18:24:58 AI_Player.update()		110,	111,	1001,	1010,	101,	1001,	1010
2017-01-09 18:24:58 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-09 18:24:58 AI_Player.update()		1100,	101,	110,	1101,	111,	1010,	1001
2017-01-09 18:24:58 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-09 18:24:58 AI_Player.update()		110,	101,	11,	110,	1011,	101,	11
2017-01-09 18:24:58 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	110,	1001
2017-01-09 18:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	1 5
2017-01-09 18:24:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:58 AI_Player.update()	update
2017-01-09 18:24:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:24:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:24:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-09 18:24:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:24:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	1 5
2017-01-09 18:24:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:58 AI_Player.update()	update
2017-01-09 18:24:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:24:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 18:24:58 AI_Player.update()	Search took83ms
2017-01-09 18:24:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:58 AI_Player.update()		110,	1100,	111,	11,	111,	1001,	11
2017-01-09 18:24:58 AI_Player.update()		110,	111,	1001,	1010,	101,	101,	1010
2017-01-09 18:24:58 AI_Player.update()		1110,	1100,	1110,	110,	111,	1010,	1011
2017-01-09 18:24:58 AI_Player.update()		1100,	101,	110,	1101,	111,	1100,	1001
2017-01-09 18:24:58 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-09 18:24:58 AI_Player.update()		110,	101,	11,	110,	1011,	110,	11
2017-01-09 18:24:58 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	1010,	1001
2017-01-09 18:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	1 5
2017-01-09 18:24:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:58 AI_Player.update()	update
2017-01-09 18:24:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:24:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:24:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 18:24:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:58 GameBoard.setupTreasurePanel()	1 5
2017-01-09 18:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:59 AI_Player.update()	update
2017-01-09 18:24:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:24:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-09 18:24:59 AI_Player.update()	Search took4ms
2017-01-09 18:24:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:59 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-09 18:24:59 AI_Player.update()		110,	1100,	1001,	1010,	101,	101,	1010
2017-01-09 18:24:59 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-09 18:24:59 AI_Player.update()		1100,	1001,	110,	1101,	111,	1100,	1001
2017-01-09 18:24:59 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-09 18:24:59 AI_Player.update()		110,	1110,	11,	110,	1011,	110,	11
2017-01-09 18:24:59 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1010,	1001
2017-01-09 18:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	1 5
2017-01-09 18:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:59 AI_Player.update()	update
2017-01-09 18:24:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:24:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:24:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-09 18:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:24:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	1 5
2017-01-09 18:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:59 AI_Player.update()	update
2017-01-09 18:24:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:24:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 18:24:59 AI_Player.update()	Search took144ms
2017-01-09 18:24:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:59 AI_Player.update()		110,	111,	111,	11,	111,	101,	11
2017-01-09 18:24:59 AI_Player.update()		110,	1100,	1001,	1010,	101,	1010,	1010
2017-01-09 18:24:59 AI_Player.update()		1110,	101,	1110,	110,	111,	1100,	1011
2017-01-09 18:24:59 AI_Player.update()		1100,	1001,	110,	1101,	111,	101,	1001
2017-01-09 18:24:59 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-09 18:24:59 AI_Player.update()		110,	1110,	11,	110,	1011,	1010,	11
2017-01-09 18:24:59 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1001,	1001
2017-01-09 18:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	1 5
2017-01-09 18:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:59 AI_Player.update()	update
2017-01-09 18:24:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:24:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:24:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 18:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	1 6
2017-01-09 18:24:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:24:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:59 AI_Player.update()	update
2017-01-09 18:24:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:24:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-09 18:24:59 AI_Player.update()	Search took5ms
2017-01-09 18:24:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:59 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-09 18:24:59 AI_Player.update()		110,	101,	1001,	1010,	101,	1010,	1010
2017-01-09 18:24:59 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-09 18:24:59 AI_Player.update()		1100,	101,	110,	1101,	111,	101,	1001
2017-01-09 18:24:59 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	110,	1011
2017-01-09 18:24:59 AI_Player.update()		110,	1100,	11,	110,	1011,	1010,	11
2017-01-09 18:24:59 AI_Player.update()		1100,	111,	1101,	1110,	1101,	1001,	1001
2017-01-09 18:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	1 6
2017-01-09 18:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:59 AI_Player.update()	update
2017-01-09 18:24:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:24:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:24:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-09 18:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:24:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:59 GameBoard.setupTreasurePanel()	1 6
2017-01-09 18:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:59 AI_Player.update()	update
2017-01-09 18:24:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:25:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 18:25:00 AI_Player.update()	Search took1100ms
2017-01-09 18:25:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:25:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:25:00 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-09 18:25:00 AI_Player.update()		110,	1001,	1001,	1010,	101,	1010,	1010
2017-01-09 18:25:00 AI_Player.update()		1110,	101,	1110,	110,	111,	1100,	1011
2017-01-09 18:25:00 AI_Player.update()		1100,	1110,	110,	1101,	111,	101,	1001
2017-01-09 18:25:00 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-09 18:25:00 AI_Player.update()		110,	111,	11,	110,	1011,	1010,	11
2017-01-09 18:25:00 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1001,	1001
2017-01-09 18:25:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:25:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:25:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:25:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:25:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:25:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:25:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:25:00 GameBoard.setupTreasurePanel()	1 6
2017-01-09 18:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:25:01 AI_Player.update()	update
2017-01-09 18:25:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:25:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:25:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 18:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:25:01 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-09 18:25:01 AI_Player.update()	Player b has won!
2017-01-09 18:25:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:25:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 18:25:02 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-09 18:25:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 18:25:02 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-09 18:25:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:25:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:25:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:25:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:25:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:25:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:25:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:25:02 AI_Player.update()	update
2017-01-09 18:25:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:25:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-09 18:25:02 AI_Player.update()	Search took5ms
2017-01-09 18:25:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:25:02 AI_Player.update()		110,	101,	111,	1100,	111,	1100,	11
2017-01-09 18:25:02 AI_Player.update()		1010,	1010,	110,	101,	101,	111,	1100
2017-01-09 18:25:02 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-09 18:25:02 AI_Player.update()		1001,	1010,	1010,	101,	1010,	1010,	110
2017-01-09 18:25:02 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-09 18:25:02 AI_Player.update()		101,	1100,	11,	1010,	1100,	1010,	1010
2017-01-09 18:25:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	1101,	1001
2017-01-09 18:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:25:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:25:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:25:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:25:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:25:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:25:02 AI_Player.update()	update
2017-01-09 18:25:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:25:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:25:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-09 18:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:25:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:25:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:25:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:25:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	2 1
2017-01-09 18:25:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:25:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:25:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:25:02 AI_Player.update()	update
2017-01-09 18:25:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:25:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 18:25:02 AI_Player.update()	Search took169ms
2017-01-09 18:25:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:25:02 AI_Player.update()		110,	101,	111,	1100,	111,	1100,	11
2017-01-09 18:25:02 AI_Player.update()		1010,	110,	101,	101,	111,	1100,	1010
2017-01-09 18:25:02 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-09 18:25:02 AI_Player.update()		1001,	1010,	1010,	101,	1010,	1010,	110
2017-01-09 18:25:02 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-09 18:25:02 AI_Player.update()		101,	1100,	11,	1010,	1100,	1010,	1010
2017-01-09 18:25:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	1101,	1001
2017-01-09 18:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:25:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:25:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:25:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:25:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	2 1
2017-01-09 18:25:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:25:02 AI_Player.update()	update
2017-01-09 18:25:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:25:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:25:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 18:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:25:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:25:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:25:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:25:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:25:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:25:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:25:02 AI_Player.update()	update
2017-01-09 18:25:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:25:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-09 18:25:02 AI_Player.update()	Search took5ms
2017-01-09 18:25:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:25:02 AI_Player.update()		110,	101,	111,	1100,	111,	1100,	11
2017-01-09 18:25:02 AI_Player.update()		1010,	110,	101,	101,	111,	1100,	1010
2017-01-09 18:25:02 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-09 18:25:02 AI_Player.update()		1001,	1010,	1010,	101,	1010,	1010,	110
2017-01-09 18:25:02 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-09 18:25:02 AI_Player.update()		1010,	101,	1100,	11,	1010,	1100,	1010
2017-01-09 18:25:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	1101,	1001
2017-01-09 18:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:25:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:25:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:25:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:25:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:25:02 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:25:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:25:03 AI_Player.update()	update
2017-01-09 18:25:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:25:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:25:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-09 18:25:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:25:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:25:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:25:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:25:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:25:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:25:03 GameBoard.setupTreasurePanel()	3 2
2017-01-09 18:25:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:25:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:25:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:25:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:25:03 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:25:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:25:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:25:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:25:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:25:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:25:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:25:03 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:25:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:25:03 AI_Player.update()	update
2017-01-09 18:25:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
