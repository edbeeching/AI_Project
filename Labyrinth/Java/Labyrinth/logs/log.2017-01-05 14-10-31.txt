2017-01-05 14:10:31 GameBoard.<init>()	Hello World!
2017-01-05 14:10:31 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-05 14:10:31 QueryProlog.initialise()	setup(h5/h1). suceeded
2017-01-05 14:10:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:31 GameBoard.setupBoardFromString()	Board created
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:31 GameBoard.initialise()	[chest, helmet, candle, gold, ring]
2017-01-05 14:10:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:31 GameBoard.initialise()	[map, gem, book, crown, fairy]
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:31 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	null
2017-01-05 14:10:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:31 AI_Player.update()	update
2017-01-05 14:10:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:31 AI_Player.update()	Search took46ms
2017-01-05 14:10:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:31 AI_Player.update()		110,	1011,	111,	101,	111,	1001,	11
2017-01-05 14:10:31 AI_Player.update()		101,	1100,	110,	1010,	111,	101,	101
2017-01-05 14:10:31 AI_Player.update()		1110,	11,	1110,	111,	111,	1011,	1011
2017-01-05 14:10:31 AI_Player.update()		111,	1010,	11,	1011,	1001,	1010,	110
2017-01-05 14:10:31 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 14:10:31 AI_Player.update()		1010,	101,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:31 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:31 AI_Player.update()	update
2017-01-05 14:10:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:31 AI_Player.update()	update
2017-01-05 14:10:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:31 AI_Player.update()	Search took1ms
2017-01-05 14:10:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:31 AI_Player.update()		110,	1011,	111,	101,	111,	101,	11
2017-01-05 14:10:31 AI_Player.update()		101,	1100,	110,	1010,	111,	1011,	101
2017-01-05 14:10:31 AI_Player.update()		1110,	11,	1110,	111,	111,	1010,	1011
2017-01-05 14:10:31 AI_Player.update()		111,	1010,	11,	1011,	1001,	101,	110
2017-01-05 14:10:31 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:31 AI_Player.update()		1010,	101,	1001,	1001,	111,	1010,	11
2017-01-05 14:10:31 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1001,	1001
2017-01-05 14:10:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:31 AI_Player.update()	update
2017-01-05 14:10:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:31 AI_Player.update()	update
2017-01-05 14:10:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:31 AI_Player.update()	Search took89ms
2017-01-05 14:10:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:31 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 14:10:31 AI_Player.update()		101,	11,	110,	1010,	111,	1011,	101
2017-01-05 14:10:31 AI_Player.update()		1110,	1010,	1110,	111,	111,	1010,	1011
2017-01-05 14:10:31 AI_Player.update()		111,	1010,	11,	1011,	1001,	101,	110
2017-01-05 14:10:31 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:31 AI_Player.update()		1010,	1001,	1001,	1001,	111,	1010,	11
2017-01-05 14:10:31 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1001,	1001
2017-01-05 14:10:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:31 AI_Player.update()	update
2017-01-05 14:10:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:31 AI_Player.update()	update
2017-01-05 14:10:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:31 AI_Player.update()	Search took2ms
2017-01-05 14:10:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:31 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 14:10:31 AI_Player.update()		11,	110,	1010,	111,	1011,	101,	101
2017-01-05 14:10:31 AI_Player.update()		1110,	1010,	1110,	111,	111,	1010,	1011
2017-01-05 14:10:31 AI_Player.update()		111,	1010,	11,	1011,	1001,	101,	110
2017-01-05 14:10:31 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:31 AI_Player.update()		1010,	1001,	1001,	1001,	111,	1010,	11
2017-01-05 14:10:31 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1001,	1001
2017-01-05 14:10:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:31 AI_Player.update()	update
2017-01-05 14:10:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:31 AI_Player.update()	update
2017-01-05 14:10:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:32 AI_Player.update()	Search took504ms
2017-01-05 14:10:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:32 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 14:10:32 AI_Player.update()		11,	110,	1010,	111,	1011,	101,	101
2017-01-05 14:10:32 AI_Player.update()		1110,	1010,	1110,	111,	111,	1010,	1011
2017-01-05 14:10:32 AI_Player.update()		110,	111,	1010,	11,	1011,	1001,	101
2017-01-05 14:10:32 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:32 AI_Player.update()		1010,	1001,	1001,	1001,	111,	1010,	11
2017-01-05 14:10:32 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1001,	1001
2017-01-05 14:10:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:32 AI_Player.update()	update
2017-01-05 14:10:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:32 AI_Player.update()	update
2017-01-05 14:10:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:32 AI_Player.update()	Search took8ms
2017-01-05 14:10:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:32 AI_Player.update()		110,	1011,	111,	101,	111,	101,	11
2017-01-05 14:10:32 AI_Player.update()		11,	1100,	1010,	111,	1011,	101,	101
2017-01-05 14:10:32 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-05 14:10:32 AI_Player.update()		110,	1010,	1010,	11,	1011,	1001,	101
2017-01-05 14:10:32 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:32 AI_Player.update()		1010,	101,	1001,	1001,	111,	1010,	11
2017-01-05 14:10:32 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1001,	1001
2017-01-05 14:10:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:32 AI_Player.update()	update
2017-01-05 14:10:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:32 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:32 AI_Player.update()	update
2017-01-05 14:10:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:33 AI_Player.update()	Search took1226ms
2017-01-05 14:10:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:33 AI_Player.update()		110,	1011,	111,	101,	111,	1001,	11
2017-01-05 14:10:33 AI_Player.update()		11,	1100,	1010,	111,	1011,	101,	101
2017-01-05 14:10:33 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-05 14:10:33 AI_Player.update()		110,	1010,	1010,	11,	1011,	1010,	101
2017-01-05 14:10:33 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:33 AI_Player.update()		1010,	101,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:33 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:33 AI_Player.update()	update
2017-01-05 14:10:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:33 AI_Player.update()	update
2017-01-05 14:10:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:33 AI_Player.update()	Search took6ms
2017-01-05 14:10:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:33 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-05 14:10:33 AI_Player.update()		11,	110,	1010,	111,	1011,	101,	101
2017-01-05 14:10:33 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-05 14:10:33 AI_Player.update()		110,	111,	1010,	11,	1011,	1010,	101
2017-01-05 14:10:33 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:33 AI_Player.update()		1010,	1001,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:33 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:33 AI_Player.update()	update
2017-01-05 14:10:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:33 AI_Player.update()	update
2017-01-05 14:10:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:34 AI_Player.update()	Search took286ms
2017-01-05 14:10:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:34 AI_Player.update()		110,	1011,	111,	101,	111,	1001,	11
2017-01-05 14:10:34 AI_Player.update()		11,	1100,	1010,	111,	1011,	101,	101
2017-01-05 14:10:34 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-05 14:10:34 AI_Player.update()		110,	1010,	1010,	11,	1011,	1010,	101
2017-01-05 14:10:34 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:34 AI_Player.update()		1010,	101,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:34 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:34 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:34 AI_Player.update()	update
2017-01-05 14:10:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:34 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:34 AI_Player.update()	update
2017-01-05 14:10:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:34 AI_Player.update()	Search took6ms
2017-01-05 14:10:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:34 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-05 14:10:34 AI_Player.update()		11,	110,	1010,	111,	1011,	101,	101
2017-01-05 14:10:34 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-05 14:10:34 AI_Player.update()		110,	111,	1010,	11,	1011,	1010,	101
2017-01-05 14:10:34 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:34 AI_Player.update()		1010,	1001,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:34 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:34 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:34 AI_Player.update()	update
2017-01-05 14:10:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:34 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:34 AI_Player.update()	update
2017-01-05 14:10:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:35 AI_Player.update()	Search took954ms
2017-01-05 14:10:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:35 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-05 14:10:35 AI_Player.update()		11,	110,	1010,	111,	1011,	101,	101
2017-01-05 14:10:35 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-05 14:10:35 AI_Player.update()		101,	110,	111,	1010,	11,	1011,	1010
2017-01-05 14:10:35 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:35 AI_Player.update()		1010,	1001,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:35 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:35 AI_Player.update()	update
2017-01-05 14:10:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:35 AI_Player.update()	update
2017-01-05 14:10:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:35 AI_Player.update()	Search took5ms
2017-01-05 14:10:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:35 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-05 14:10:35 AI_Player.update()		11,	110,	1010,	111,	1011,	101,	101
2017-01-05 14:10:35 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-05 14:10:35 AI_Player.update()		1010,	101,	110,	111,	1010,	11,	1011
2017-01-05 14:10:35 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:35 AI_Player.update()		1010,	1001,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:35 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:35 AI_Player.update()	update
2017-01-05 14:10:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:10:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:35 AI_Player.update()	update
2017-01-05 14:10:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:36 AI_Player.update()	Search took1275ms
2017-01-05 14:10:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:36 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 14:10:36 AI_Player.update()		11,	110,	1010,	111,	1011,	101,	101
2017-01-05 14:10:36 AI_Player.update()		1110,	1010,	1110,	111,	111,	11,	1011
2017-01-05 14:10:36 AI_Player.update()		1010,	101,	110,	111,	1010,	1001,	1011
2017-01-05 14:10:36 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:36 AI_Player.update()		1010,	1001,	1001,	1001,	111,	1010,	11
2017-01-05 14:10:36 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1001,	1001
2017-01-05 14:10:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:10:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:36 AI_Player.update()	update
2017-01-05 14:10:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:10:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:36 AI_Player.update()	update
2017-01-05 14:10:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:36 AI_Player.update()	Search took8ms
2017-01-05 14:10:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:36 AI_Player.update()		110,	1011,	111,	101,	111,	101,	11
2017-01-05 14:10:36 AI_Player.update()		11,	1100,	1010,	111,	1011,	101,	101
2017-01-05 14:10:36 AI_Player.update()		1110,	110,	1110,	111,	111,	11,	1011
2017-01-05 14:10:36 AI_Player.update()		1010,	1010,	110,	111,	1010,	1001,	1011
2017-01-05 14:10:36 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:36 AI_Player.update()		1010,	101,	1001,	1001,	111,	1010,	11
2017-01-05 14:10:36 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1001,	1001
2017-01-05 14:10:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:10:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:36 AI_Player.update()	update
2017-01-05 14:10:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:10:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:36 AI_Player.update()	update
2017-01-05 14:10:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:36 AI_Player.update()	Search took305ms
2017-01-05 14:10:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:36 AI_Player.update()		110,	1011,	111,	101,	111,	1001,	11
2017-01-05 14:10:36 AI_Player.update()		11,	1100,	1010,	111,	1011,	101,	101
2017-01-05 14:10:36 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-05 14:10:36 AI_Player.update()		1010,	1010,	110,	111,	1010,	11,	1011
2017-01-05 14:10:36 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:36 AI_Player.update()		1010,	101,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:36 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:10:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:36 AI_Player.update()	update
2017-01-05 14:10:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:36 AI_Player.update()	update
2017-01-05 14:10:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:36 AI_Player.update()	Search took10ms
2017-01-05 14:10:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:36 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-05 14:10:36 AI_Player.update()		11,	110,	1010,	111,	1011,	101,	101
2017-01-05 14:10:36 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-05 14:10:36 AI_Player.update()		1010,	101,	110,	111,	1010,	11,	1011
2017-01-05 14:10:36 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:36 AI_Player.update()		1010,	1001,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:36 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:36 AI_Player.update()	update
2017-01-05 14:10:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:36 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:36 AI_Player.update()	update
2017-01-05 14:10:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:37 AI_Player.update()	Search took1063ms
2017-01-05 14:10:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:37 AI_Player.update()		110,	1011,	111,	101,	111,	1001,	11
2017-01-05 14:10:37 AI_Player.update()		11,	1100,	1010,	111,	1011,	101,	101
2017-01-05 14:10:37 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-05 14:10:37 AI_Player.update()		1010,	1010,	110,	111,	1010,	11,	1011
2017-01-05 14:10:37 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:37 AI_Player.update()		1010,	101,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:37 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:37 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:37 AI_Player.update()	update
2017-01-05 14:10:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:37 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:37 AI_Player.update()	update
2017-01-05 14:10:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:37 AI_Player.update()	Search took2ms
2017-01-05 14:10:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:37 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-05 14:10:37 AI_Player.update()		11,	110,	1010,	111,	1011,	101,	101
2017-01-05 14:10:37 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-05 14:10:37 AI_Player.update()		1010,	101,	110,	111,	1010,	11,	1011
2017-01-05 14:10:37 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:37 AI_Player.update()		1010,	1001,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:37 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:37 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:37 AI_Player.update()	update
2017-01-05 14:10:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:37 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:37 AI_Player.update()	update
2017-01-05 14:10:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:38 AI_Player.update()	Search took309ms
2017-01-05 14:10:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()		110,	1011,	111,	101,	111,	1001,	11
2017-01-05 14:10:38 AI_Player.update()		11,	1100,	1010,	111,	1011,	101,	101
2017-01-05 14:10:38 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-05 14:10:38 AI_Player.update()		1010,	1010,	110,	111,	1010,	11,	1011
2017-01-05 14:10:38 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:38 AI_Player.update()		1010,	101,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:38 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:38 AI_Player.update()	Search took3ms
2017-01-05 14:10:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()		110,	1001,	111,	101,	111,	1001,	11
2017-01-05 14:10:38 AI_Player.update()		11,	1011,	1010,	111,	1011,	101,	101
2017-01-05 14:10:38 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 14:10:38 AI_Player.update()		1010,	110,	110,	111,	1010,	11,	1011
2017-01-05 14:10:38 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:38 AI_Player.update()		1010,	101,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:38 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:38 AI_Player.update()	Search took174ms
2017-01-05 14:10:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()		110,	1001,	111,	101,	111,	1001,	11
2017-01-05 14:10:38 AI_Player.update()		11,	1011,	1010,	111,	1011,	101,	101
2017-01-05 14:10:38 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 14:10:38 AI_Player.update()		110,	110,	111,	1010,	11,	1011,	1010
2017-01-05 14:10:38 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 14:10:38 AI_Player.update()		1010,	101,	1001,	1001,	111,	1001,	11
2017-01-05 14:10:38 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:10:38 AI_Player.update()	Player a has won!
2017-01-05 14:10:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:10:38 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:10:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:10:38 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:10:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:38 AI_Player.update()	Search took50ms
2017-01-05 14:10:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()		110,	1001,	111,	1010,	111,	110,	11
2017-01-05 14:10:38 AI_Player.update()		1010,	11,	1100,	1100,	101,	11,	1010
2017-01-05 14:10:38 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1110,	1011
2017-01-05 14:10:38 AI_Player.update()		1010,	1010,	111,	1100,	110,	101,	101
2017-01-05 14:10:38 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:10:38 AI_Player.update()		1100,	11,	1011,	1010,	1100,	1001,	101
2017-01-05 14:10:38 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:38 AI_Player.update()	Search took2ms
2017-01-05 14:10:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 14:10:38 AI_Player.update()		1010,	1001,	1100,	1100,	101,	11,	1010
2017-01-05 14:10:38 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1110,	1011
2017-01-05 14:10:38 AI_Player.update()		1010,	11,	111,	1100,	110,	101,	101
2017-01-05 14:10:38 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:10:38 AI_Player.update()		1100,	110,	1011,	1010,	1100,	1001,	101
2017-01-05 14:10:38 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:38 AI_Player.update()	Search took240ms
2017-01-05 14:10:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 14:10:38 AI_Player.update()		1010,	1010,	1001,	1100,	1100,	101,	11
2017-01-05 14:10:38 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1110,	1011
2017-01-05 14:10:38 AI_Player.update()		1010,	11,	111,	1100,	110,	101,	101
2017-01-05 14:10:38 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:10:38 AI_Player.update()		1100,	110,	1011,	1010,	1100,	1001,	101
2017-01-05 14:10:38 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:38 AI_Player.update()	Search took1ms
2017-01-05 14:10:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 14:10:38 AI_Player.update()		1010,	1010,	1001,	1100,	1100,	101,	11
2017-01-05 14:10:38 AI_Player.update()		1110,	11,	1110,	1100,	111,	1110,	1011
2017-01-05 14:10:38 AI_Player.update()		1010,	11,	111,	1100,	110,	101,	101
2017-01-05 14:10:38 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 14:10:38 AI_Player.update()		1100,	1001,	1011,	1010,	1100,	1001,	101
2017-01-05 14:10:38 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:38 AI_Player.update()	update
2017-01-05 14:10:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:39 AI_Player.update()	Search took398ms
2017-01-05 14:10:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 14:10:39 AI_Player.update()		1010,	1010,	1001,	1100,	1100,	101,	11
2017-01-05 14:10:39 AI_Player.update()		1110,	11,	1110,	1100,	111,	1110,	1011
2017-01-05 14:10:39 AI_Player.update()		11,	111,	1100,	110,	101,	101,	1010
2017-01-05 14:10:39 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 14:10:39 AI_Player.update()		1100,	1001,	1011,	1010,	1100,	1001,	101
2017-01-05 14:10:39 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:39 AI_Player.update()	Search took2ms
2017-01-05 14:10:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 14:10:39 AI_Player.update()		1010,	11,	1001,	1100,	1100,	101,	11
2017-01-05 14:10:39 AI_Player.update()		1110,	111,	1110,	1100,	111,	1110,	1011
2017-01-05 14:10:39 AI_Player.update()		11,	110,	1100,	110,	101,	101,	1010
2017-01-05 14:10:39 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 14:10:39 AI_Player.update()		1100,	11,	1011,	1010,	1100,	1001,	101
2017-01-05 14:10:39 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:39 AI_Player.update()	Search took233ms
2017-01-05 14:10:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 14:10:39 AI_Player.update()		1010,	111,	1001,	1100,	1100,	101,	11
2017-01-05 14:10:39 AI_Player.update()		1110,	110,	1110,	1100,	111,	1110,	1011
2017-01-05 14:10:39 AI_Player.update()		11,	1001,	1100,	110,	101,	101,	1010
2017-01-05 14:10:39 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:10:39 AI_Player.update()		1100,	1010,	1011,	1010,	1100,	1001,	101
2017-01-05 14:10:39 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:39 AI_Player.update()	Search took2ms
2017-01-05 14:10:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()		110,	111,	111,	1010,	111,	110,	11
2017-01-05 14:10:39 AI_Player.update()		1010,	110,	1001,	1100,	1100,	101,	11
2017-01-05 14:10:39 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1110,	1011
2017-01-05 14:10:39 AI_Player.update()		11,	11,	1100,	110,	101,	101,	1010
2017-01-05 14:10:39 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-05 14:10:39 AI_Player.update()		1100,	1010,	1011,	1010,	1100,	1001,	101
2017-01-05 14:10:39 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:39 AI_Player.update()	Search took238ms
2017-01-05 14:10:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()		110,	111,	111,	1010,	111,	110,	11
2017-01-05 14:10:39 AI_Player.update()		1010,	110,	1001,	1100,	1100,	101,	11
2017-01-05 14:10:39 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1110,	1011
2017-01-05 14:10:39 AI_Player.update()		11,	1100,	110,	101,	101,	1010,	11
2017-01-05 14:10:39 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-05 14:10:39 AI_Player.update()		1100,	1010,	1011,	1010,	1100,	1001,	101
2017-01-05 14:10:39 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:10:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:39 AI_Player.update()	Search took1ms
2017-01-05 14:10:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 14:10:39 AI_Player.update()		1010,	1001,	1001,	1100,	1100,	101,	11
2017-01-05 14:10:39 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1110,	1011
2017-01-05 14:10:39 AI_Player.update()		11,	1010,	110,	101,	101,	1010,	11
2017-01-05 14:10:39 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-05 14:10:39 AI_Player.update()		1100,	11,	1011,	1010,	1100,	1001,	101
2017-01-05 14:10:39 AI_Player.update()		1100,	111,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:39 AI_Player.update()	Search took232ms
2017-01-05 14:10:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 14:10:39 AI_Player.update()		1010,	1001,	1001,	1100,	1100,	101,	11
2017-01-05 14:10:39 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1110,	1011
2017-01-05 14:10:39 AI_Player.update()		1010,	110,	101,	101,	1010,	11,	11
2017-01-05 14:10:39 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-05 14:10:39 AI_Player.update()		1100,	11,	1011,	1010,	1100,	1001,	101
2017-01-05 14:10:39 AI_Player.update()		1100,	111,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:10:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:39 AI_Player.update()	Search took2ms
2017-01-05 14:10:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()		110,	1001,	111,	1010,	111,	110,	11
2017-01-05 14:10:39 AI_Player.update()		1010,	1100,	1001,	1100,	1100,	101,	11
2017-01-05 14:10:39 AI_Player.update()		1110,	110,	1110,	1100,	111,	1110,	1011
2017-01-05 14:10:39 AI_Player.update()		1010,	1010,	101,	101,	1010,	11,	11
2017-01-05 14:10:39 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:10:39 AI_Player.update()		1100,	111,	1011,	1010,	1100,	1001,	101
2017-01-05 14:10:39 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:39 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:10:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:39 AI_Player.update()	update
2017-01-05 14:10:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:40 AI_Player.update()	Search took282ms
2017-01-05 14:10:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:40 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:10:40 AI_Player.update()		1010,	110,	1001,	1100,	1100,	101,	11
2017-01-05 14:10:40 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1110,	1011
2017-01-05 14:10:40 AI_Player.update()		1010,	11,	101,	101,	1010,	11,	11
2017-01-05 14:10:40 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 14:10:40 AI_Player.update()		1100,	110,	1011,	1010,	1100,	1001,	101
2017-01-05 14:10:40 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:40 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:10:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:40 AI_Player.update()	update
2017-01-05 14:10:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:40 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:10:40 AI_Player.update()	Player a has won!
2017-01-05 14:10:40 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:10:40 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:10:40 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:10:40 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:10:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:40 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:40 AI_Player.update()	update
2017-01-05 14:10:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:41 AI_Player.update()	Search took1490ms
2017-01-05 14:10:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:41 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 14:10:41 AI_Player.update()		1100,	101,	1010,	1010,	1011,	1001,	1001
2017-01-05 14:10:41 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-05 14:10:41 AI_Player.update()		1001,	1100,	1010,	1100,	1010,	1110,	110
2017-01-05 14:10:41 AI_Player.update()		1110,	110,	1101,	111,	1011,	1101,	1011
2017-01-05 14:10:41 AI_Player.update()		1110,	111,	1100,	111,	111,	1010,	1010
2017-01-05 14:10:41 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-05 14:10:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:41 AI_Player.update()	update
2017-01-05 14:10:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:41 AI_Player.update()	update
2017-01-05 14:10:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:41 AI_Player.update()	Search took1ms
2017-01-05 14:10:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:41 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 14:10:41 AI_Player.update()		1100,	1010,	1010,	1010,	1011,	1001,	1001
2017-01-05 14:10:41 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-05 14:10:41 AI_Player.update()		1001,	110,	1010,	1100,	1010,	1110,	110
2017-01-05 14:10:41 AI_Player.update()		1110,	111,	1101,	111,	1011,	1101,	1011
2017-01-05 14:10:41 AI_Player.update()		1110,	1010,	1100,	111,	111,	1010,	1010
2017-01-05 14:10:41 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-05 14:10:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:41 AI_Player.update()	update
2017-01-05 14:10:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:41 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:41 AI_Player.update()	update
2017-01-05 14:10:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:43 AI_Player.update()	Search took1557ms
2017-01-05 14:10:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:43 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-05 14:10:43 AI_Player.update()		1100,	1100,	1010,	1010,	1011,	1001,	1001
2017-01-05 14:10:43 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-05 14:10:43 AI_Player.update()		1001,	111,	1010,	1100,	1010,	1110,	110
2017-01-05 14:10:43 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1101,	1011
2017-01-05 14:10:43 AI_Player.update()		1110,	101,	1100,	111,	111,	1010,	1010
2017-01-05 14:10:43 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-05 14:10:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:43 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:43 AI_Player.update()	update
2017-01-05 14:10:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:43 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:43 AI_Player.update()	update
2017-01-05 14:10:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:43 AI_Player.update()	Search took1ms
2017-01-05 14:10:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:43 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-05 14:10:43 AI_Player.update()		1100,	1010,	1010,	1011,	1001,	1001,	1100
2017-01-05 14:10:43 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-05 14:10:43 AI_Player.update()		1001,	111,	1010,	1100,	1010,	1110,	110
2017-01-05 14:10:43 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1101,	1011
2017-01-05 14:10:43 AI_Player.update()		1110,	101,	1100,	111,	111,	1010,	1010
2017-01-05 14:10:43 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-05 14:10:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:43 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:43 AI_Player.update()	update
2017-01-05 14:10:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:43 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:43 AI_Player.update()	update
2017-01-05 14:10:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:44 AI_Player.update()	Search took826ms
2017-01-05 14:10:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-05 14:10:44 AI_Player.update()		1100,	1010,	1010,	1011,	1001,	1001,	1100
2017-01-05 14:10:44 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-05 14:10:44 AI_Player.update()		110,	1001,	111,	1010,	1100,	1010,	1110
2017-01-05 14:10:44 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1101,	1011
2017-01-05 14:10:44 AI_Player.update()		1110,	101,	1100,	111,	111,	1010,	1010
2017-01-05 14:10:44 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:44 AI_Player.update()	Search took3ms
2017-01-05 14:10:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-05 14:10:44 AI_Player.update()		1100,	110,	1010,	1011,	1001,	1001,	1100
2017-01-05 14:10:44 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-05 14:10:44 AI_Player.update()		110,	1010,	111,	1010,	1100,	1010,	1110
2017-01-05 14:10:44 AI_Player.update()		1110,	101,	1101,	111,	1011,	1101,	1011
2017-01-05 14:10:44 AI_Player.update()		1110,	101,	1100,	111,	111,	1010,	1010
2017-01-05 14:10:44 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:10:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:44 AI_Player.update()	Search took169ms
2017-01-05 14:10:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-05 14:10:44 AI_Player.update()		1100,	110,	1010,	1011,	1001,	1001,	1100
2017-01-05 14:10:44 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-05 14:10:44 AI_Player.update()		110,	1010,	111,	1010,	1100,	1101,	1110
2017-01-05 14:10:44 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 14:10:44 AI_Player.update()		1110,	101,	1100,	111,	111,	11,	1010
2017-01-05 14:10:44 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:44 AI_Player.update()	Search took5ms
2017-01-05 14:10:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 14:10:44 AI_Player.update()		1100,	1001,	1010,	1011,	1001,	1001,	1100
2017-01-05 14:10:44 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 14:10:44 AI_Player.update()		110,	101,	111,	1010,	1100,	1101,	1110
2017-01-05 14:10:44 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 14:10:44 AI_Player.update()		1110,	1010,	1100,	111,	111,	11,	1010
2017-01-05 14:10:44 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:10:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:44 AI_Player.update()	Search took217ms
2017-01-05 14:10:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-05 14:10:44 AI_Player.update()		1100,	1001,	1010,	1001,	1001,	1001,	1100
2017-01-05 14:10:44 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:10:44 AI_Player.update()		110,	101,	111,	111,	1100,	1101,	1110
2017-01-05 14:10:44 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 14:10:44 AI_Player.update()		1110,	1010,	1100,	111,	111,	11,	1010
2017-01-05 14:10:44 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:44 AI_Player.update()	Search took2ms
2017-01-05 14:10:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-05 14:10:44 AI_Player.update()		1100,	1001,	1010,	1001,	1001,	1001,	1100
2017-01-05 14:10:44 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:10:44 AI_Player.update()		1110,	110,	101,	111,	111,	1100,	1101
2017-01-05 14:10:44 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 14:10:44 AI_Player.update()		1110,	1010,	1100,	111,	111,	11,	1010
2017-01-05 14:10:44 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:44 AI_Player.update()	Search took167ms
2017-01-05 14:10:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-05 14:10:44 AI_Player.update()		1100,	1001,	1010,	1001,	1001,	1001,	1100
2017-01-05 14:10:44 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:10:44 AI_Player.update()		1110,	110,	101,	111,	111,	1100,	1101
2017-01-05 14:10:44 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 14:10:44 AI_Player.update()		1010,	1110,	1010,	1100,	111,	111,	11
2017-01-05 14:10:44 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:10:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:44 AI_Player.update()	Search took7ms
2017-01-05 14:10:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()		110,	1001,	111,	1011,	111,	1001,	11
2017-01-05 14:10:44 AI_Player.update()		1100,	1010,	1010,	1001,	1001,	1001,	1100
2017-01-05 14:10:44 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-05 14:10:44 AI_Player.update()		1110,	101,	101,	111,	111,	1100,	1101
2017-01-05 14:10:44 AI_Player.update()		1110,	1110,	1101,	111,	1011,	1010,	1011
2017-01-05 14:10:44 AI_Player.update()		1010,	1010,	1010,	1100,	111,	111,	11
2017-01-05 14:10:44 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 14:10:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:44 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:10:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:44 AI_Player.update()	update
2017-01-05 14:10:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:45 AI_Player.update()	Search took787ms
2017-01-05 14:10:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:45 AI_Player.update()		110,	1001,	111,	1011,	111,	1001,	11
2017-01-05 14:10:45 AI_Player.update()		1100,	1010,	1010,	1001,	1001,	1001,	1100
2017-01-05 14:10:45 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-05 14:10:45 AI_Player.update()		1101,	1110,	101,	101,	111,	111,	1100
2017-01-05 14:10:45 AI_Player.update()		1110,	1110,	1101,	111,	1011,	1010,	1011
2017-01-05 14:10:45 AI_Player.update()		1010,	1010,	1010,	1100,	111,	111,	11
2017-01-05 14:10:45 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 14:10:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:10:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:45 AI_Player.update()	update
2017-01-05 14:10:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:10:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:45 AI_Player.update()	update
2017-01-05 14:10:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:45 AI_Player.update()	Search took8ms
2017-01-05 14:10:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:45 AI_Player.update()		110,	1001,	111,	1011,	111,	1001,	11
2017-01-05 14:10:45 AI_Player.update()		1100,	1010,	1010,	1001,	1001,	1001,	1100
2017-01-05 14:10:45 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-05 14:10:45 AI_Player.update()		1100,	1101,	1110,	101,	101,	111,	111
2017-01-05 14:10:45 AI_Player.update()		1110,	1110,	1101,	111,	1011,	1010,	1011
2017-01-05 14:10:45 AI_Player.update()		1010,	1010,	1010,	1100,	111,	111,	11
2017-01-05 14:10:45 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 14:10:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:10:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:45 AI_Player.update()	update
2017-01-05 14:10:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:45 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:10:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:45 AI_Player.update()	update
2017-01-05 14:10:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:46 AI_Player.update()	Search took1049ms
2017-01-05 14:10:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:46 AI_Player.update()		110,	1001,	111,	1011,	111,	1001,	11
2017-01-05 14:10:46 AI_Player.update()		1100,	1100,	1010,	1010,	1001,	1001,	1001
2017-01-05 14:10:46 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-05 14:10:46 AI_Player.update()		1100,	1101,	1110,	101,	101,	111,	111
2017-01-05 14:10:46 AI_Player.update()		1110,	1110,	1101,	111,	1011,	1010,	1011
2017-01-05 14:10:46 AI_Player.update()		1010,	1010,	1010,	1100,	111,	111,	11
2017-01-05 14:10:46 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 14:10:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:10:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:46 AI_Player.update()	update
2017-01-05 14:10:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:46 AI_Player.update()	update
2017-01-05 14:10:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:46 AI_Player.update()	Search took9ms
2017-01-05 14:10:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:46 AI_Player.update()		110,	1100,	111,	1011,	111,	1001,	11
2017-01-05 14:10:46 AI_Player.update()		1100,	110,	1010,	1010,	1001,	1001,	1001
2017-01-05 14:10:46 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:10:46 AI_Player.update()		1100,	1110,	1110,	101,	101,	111,	111
2017-01-05 14:10:46 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1010,	1011
2017-01-05 14:10:46 AI_Player.update()		1010,	110,	1010,	1100,	111,	111,	11
2017-01-05 14:10:46 AI_Player.update()		1100,	1001,	1101,	101,	1101,	11,	1001
2017-01-05 14:10:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:46 AI_Player.update()	update
2017-01-05 14:10:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:46 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:46 AI_Player.update()	update
2017-01-05 14:10:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:47 AI_Player.update()	Search took799ms
2017-01-05 14:10:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-05 14:10:47 AI_Player.update()		1100,	1101,	1010,	1010,	1001,	1001,	1001
2017-01-05 14:10:47 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-05 14:10:47 AI_Player.update()		1100,	1010,	1110,	101,	101,	111,	111
2017-01-05 14:10:47 AI_Player.update()		1110,	110,	1101,	111,	1011,	1010,	1011
2017-01-05 14:10:47 AI_Player.update()		1010,	1001,	1010,	1100,	111,	111,	11
2017-01-05 14:10:47 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-05 14:10:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()	update
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:47 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:10:47 AI_Player.update()	Player a has won!
2017-01-05 14:10:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:10:47 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:10:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:10:47 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:10:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()	update
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:47 AI_Player.update()	Search took49ms
2017-01-05 14:10:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 14:10:47 AI_Player.update()		1011,	11,	101,	101,	1010,	101,	1001
2017-01-05 14:10:47 AI_Player.update()		1110,	1011,	1110,	101,	111,	1010,	1011
2017-01-05 14:10:47 AI_Player.update()		1001,	111,	11,	11,	1010,	1101,	1010
2017-01-05 14:10:47 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1101,	1011
2017-01-05 14:10:47 AI_Player.update()		1010,	1010,	11,	1011,	101,	101,	1001
2017-01-05 14:10:47 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:10:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()	update
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()	update
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:47 AI_Player.update()	Search took1ms
2017-01-05 14:10:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 14:10:47 AI_Player.update()		1011,	11,	101,	101,	1010,	1010,	1001
2017-01-05 14:10:47 AI_Player.update()		1110,	1011,	1110,	101,	111,	1101,	1011
2017-01-05 14:10:47 AI_Player.update()		1001,	111,	11,	11,	1010,	1101,	1010
2017-01-05 14:10:47 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 14:10:47 AI_Player.update()		1010,	1010,	11,	1011,	101,	1100,	1001
2017-01-05 14:10:47 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:10:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()	update
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()	update
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:47 AI_Player.update()	Search took190ms
2017-01-05 14:10:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 14:10:47 AI_Player.update()		1011,	11,	101,	101,	1010,	1010,	1001
2017-01-05 14:10:47 AI_Player.update()		1110,	1011,	1110,	101,	111,	1101,	1011
2017-01-05 14:10:47 AI_Player.update()		1010,	1001,	111,	11,	11,	1010,	1101
2017-01-05 14:10:47 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 14:10:47 AI_Player.update()		1010,	1010,	11,	1011,	101,	1100,	1001
2017-01-05 14:10:47 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:10:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()	update
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()	update
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:47 AI_Player.update()	Search took2ms
2017-01-05 14:10:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 14:10:47 AI_Player.update()		1001,	1011,	11,	101,	101,	1010,	1010
2017-01-05 14:10:47 AI_Player.update()		1110,	1011,	1110,	101,	111,	1101,	1011
2017-01-05 14:10:47 AI_Player.update()		1010,	1001,	111,	11,	11,	1010,	1101
2017-01-05 14:10:47 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 14:10:47 AI_Player.update()		1010,	1010,	11,	1011,	101,	1100,	1001
2017-01-05 14:10:47 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:10:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()	update
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:10:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:47 AI_Player.update()	update
2017-01-05 14:10:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:48 AI_Player.update()	Search took684ms
2017-01-05 14:10:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:48 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 14:10:48 AI_Player.update()		1001,	1011,	11,	101,	101,	1010,	1010
2017-01-05 14:10:48 AI_Player.update()		1110,	1011,	1110,	101,	111,	1101,	1011
2017-01-05 14:10:48 AI_Player.update()		1001,	111,	11,	11,	1010,	1101,	1010
2017-01-05 14:10:48 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 14:10:48 AI_Player.update()		1010,	1010,	11,	1011,	101,	1100,	1001
2017-01-05 14:10:48 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:10:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:10:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:48 AI_Player.update()	update
2017-01-05 14:10:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:10:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:48 AI_Player.update()	update
2017-01-05 14:10:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:48 AI_Player.update()	Search took6ms
2017-01-05 14:10:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:48 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 14:10:48 AI_Player.update()		1001,	1011,	11,	101,	101,	1010,	1010
2017-01-05 14:10:48 AI_Player.update()		1110,	1011,	1110,	11,	111,	1101,	1011
2017-01-05 14:10:48 AI_Player.update()		1001,	111,	11,	1100,	1010,	1101,	1010
2017-01-05 14:10:48 AI_Player.update()		1110,	111,	1101,	1011,	1011,	101,	1011
2017-01-05 14:10:48 AI_Player.update()		1010,	1010,	11,	101,	101,	1100,	1001
2017-01-05 14:10:48 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:10:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:10:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:48 AI_Player.update()	update
2017-01-05 14:10:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:10:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:48 AI_Player.update()	update
2017-01-05 14:10:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:49 AI_Player.update()	Search took681ms
2017-01-05 14:10:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:49 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 14:10:49 AI_Player.update()		1001,	1011,	11,	11,	101,	1010,	1010
2017-01-05 14:10:49 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1101,	1011
2017-01-05 14:10:49 AI_Player.update()		1001,	111,	11,	1011,	1010,	1101,	1010
2017-01-05 14:10:49 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 14:10:49 AI_Player.update()		1010,	1010,	11,	1010,	101,	1100,	1001
2017-01-05 14:10:49 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:10:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:10:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:49 AI_Player.update()	update
2017-01-05 14:10:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:10:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:49 AI_Player.update()	update
2017-01-05 14:10:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:49 AI_Player.update()	Search took7ms
2017-01-05 14:10:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:49 AI_Player.update()		110,	1011,	111,	101,	111,	101,	11
2017-01-05 14:10:49 AI_Player.update()		1001,	1011,	11,	11,	101,	1010,	1010
2017-01-05 14:10:49 AI_Player.update()		1110,	111,	1110,	1100,	111,	1101,	1011
2017-01-05 14:10:49 AI_Player.update()		1001,	111,	11,	1011,	1010,	1101,	1010
2017-01-05 14:10:49 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 14:10:49 AI_Player.update()		1010,	101,	11,	1010,	101,	1100,	1001
2017-01-05 14:10:49 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:10:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:10:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:49 AI_Player.update()	update
2017-01-05 14:10:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:10:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:49 AI_Player.update()	update
2017-01-05 14:10:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:49 AI_Player.update()	Search took390ms
2017-01-05 14:10:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:49 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 14:10:49 AI_Player.update()		1001,	1011,	11,	11,	101,	1010,	1010
2017-01-05 14:10:49 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1101,	1011
2017-01-05 14:10:49 AI_Player.update()		1001,	111,	11,	1011,	1010,	1101,	1010
2017-01-05 14:10:49 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 14:10:49 AI_Player.update()		1010,	1010,	11,	1010,	101,	1100,	1001
2017-01-05 14:10:49 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:10:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:10:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:49 AI_Player.update()	update
2017-01-05 14:10:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:10:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:49 AI_Player.update()	update
2017-01-05 14:10:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:49 AI_Player.update()	Search took8ms
2017-01-05 14:10:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:49 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 14:10:49 AI_Player.update()		1010,	1001,	1011,	11,	11,	101,	1010
2017-01-05 14:10:49 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1101,	1011
2017-01-05 14:10:49 AI_Player.update()		1001,	111,	11,	1011,	1010,	1101,	1010
2017-01-05 14:10:49 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 14:10:49 AI_Player.update()		1010,	1010,	11,	1010,	101,	1100,	1001
2017-01-05 14:10:49 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:10:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:10:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:49 AI_Player.update()	update
2017-01-05 14:10:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:10:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:49 AI_Player.update()	update
2017-01-05 14:10:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:51 AI_Player.update()	Search took1701ms
2017-01-05 14:10:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:10:51 AI_Player.update()		1010,	1010,	1011,	11,	11,	101,	1010
2017-01-05 14:10:51 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-05 14:10:51 AI_Player.update()		1001,	1011,	11,	1011,	1010,	1101,	1010
2017-01-05 14:10:51 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 14:10:51 AI_Player.update()		1010,	111,	11,	1010,	101,	1100,	1001
2017-01-05 14:10:51 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:10:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:10:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()	update
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:51 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:10:51 AI_Player.update()	Player a has won!
2017-01-05 14:10:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:10:51 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:10:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:10:51 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:10:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()	update
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:51 AI_Player.update()	Search took31ms
2017-01-05 14:10:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()		110,	110,	111,	1010,	111,	111,	11
2017-01-05 14:10:51 AI_Player.update()		1100,	11,	11,	111,	11,	1001,	1001
2017-01-05 14:10:51 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-05 14:10:51 AI_Player.update()		110,	1001,	1001,	1001,	101,	1010,	1010
2017-01-05 14:10:51 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1110,	1011
2017-01-05 14:10:51 AI_Player.update()		1100,	11,	1010,	1010,	1110,	110,	1100
2017-01-05 14:10:51 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	101,	1001
2017-01-05 14:10:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()	update
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()	update
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:51 AI_Player.update()	Search took2ms
2017-01-05 14:10:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-05 14:10:51 AI_Player.update()		1100,	11,	11,	1010,	11,	1001,	1001
2017-01-05 14:10:51 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-05 14:10:51 AI_Player.update()		110,	1001,	1001,	111,	101,	1010,	1010
2017-01-05 14:10:51 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:51 AI_Player.update()		1100,	11,	1010,	1011,	1110,	110,	1100
2017-01-05 14:10:51 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()	update
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()	update
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:51 AI_Player.update()	Search took134ms
2017-01-05 14:10:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()		110,	11,	111,	111,	111,	111,	11
2017-01-05 14:10:51 AI_Player.update()		1100,	1100,	11,	1010,	11,	1001,	1001
2017-01-05 14:10:51 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-05 14:10:51 AI_Player.update()		110,	1010,	1001,	111,	101,	1010,	1010
2017-01-05 14:10:51 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:51 AI_Player.update()		1100,	1001,	1010,	1011,	1110,	110,	1100
2017-01-05 14:10:51 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()	update
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()	update
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:51 AI_Player.update()	Search took4ms
2017-01-05 14:10:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()		110,	11,	111,	1010,	111,	111,	11
2017-01-05 14:10:51 AI_Player.update()		1100,	1100,	11,	1001,	11,	1001,	1001
2017-01-05 14:10:51 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 14:10:51 AI_Player.update()		110,	1010,	1001,	1010,	101,	1010,	1010
2017-01-05 14:10:51 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1110,	1011
2017-01-05 14:10:51 AI_Player.update()		1100,	1001,	1010,	1010,	1110,	110,	1100
2017-01-05 14:10:51 AI_Player.update()		1100,	110,	1101,	111,	1101,	101,	1001
2017-01-05 14:10:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()	update
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:51 AI_Player.update()	update
2017-01-05 14:10:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:52 AI_Player.update()	Search took689ms
2017-01-05 14:10:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:52 AI_Player.update()		110,	110,	111,	1010,	111,	111,	11
2017-01-05 14:10:52 AI_Player.update()		1100,	11,	11,	1001,	11,	1001,	1001
2017-01-05 14:10:52 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 14:10:52 AI_Player.update()		110,	1001,	1001,	1010,	101,	1010,	1010
2017-01-05 14:10:52 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1110,	1011
2017-01-05 14:10:52 AI_Player.update()		1100,	11,	1010,	1010,	1110,	110,	1100
2017-01-05 14:10:52 AI_Player.update()		1100,	1001,	1101,	111,	1101,	101,	1001
2017-01-05 14:10:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:52 AI_Player.update()	update
2017-01-05 14:10:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:52 AI_Player.update()	update
2017-01-05 14:10:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:52 AI_Player.update()	Search took4ms
2017-01-05 14:10:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:52 AI_Player.update()		110,	11,	111,	1010,	111,	111,	11
2017-01-05 14:10:52 AI_Player.update()		1100,	1100,	11,	1001,	11,	1001,	1001
2017-01-05 14:10:52 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 14:10:52 AI_Player.update()		110,	1010,	1001,	1010,	101,	1010,	1010
2017-01-05 14:10:52 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1110,	1011
2017-01-05 14:10:52 AI_Player.update()		1100,	1001,	1010,	1010,	1110,	110,	1100
2017-01-05 14:10:52 AI_Player.update()		1100,	110,	1101,	111,	1101,	101,	1001
2017-01-05 14:10:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:52 AI_Player.update()	update
2017-01-05 14:10:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:52 AI_Player.update()	update
2017-01-05 14:10:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:52 AI_Player.update()	Search took602ms
2017-01-05 14:10:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:52 AI_Player.update()		110,	11,	111,	1010,	111,	111,	11
2017-01-05 14:10:52 AI_Player.update()		1100,	1100,	11,	1001,	11,	1001,	1001
2017-01-05 14:10:52 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 14:10:52 AI_Player.update()		1010,	1001,	1010,	101,	1010,	1010,	110
2017-01-05 14:10:52 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1110,	1011
2017-01-05 14:10:52 AI_Player.update()		1100,	1001,	1010,	1010,	1110,	110,	1100
2017-01-05 14:10:52 AI_Player.update()		1100,	110,	1101,	111,	1101,	101,	1001
2017-01-05 14:10:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:52 AI_Player.update()	update
2017-01-05 14:10:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:52 AI_Player.update()	update
2017-01-05 14:10:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:52 AI_Player.update()	Search took4ms
2017-01-05 14:10:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:52 AI_Player.update()		110,	1100,	111,	1010,	111,	111,	11
2017-01-05 14:10:52 AI_Player.update()		1100,	1001,	11,	1001,	11,	1001,	1001
2017-01-05 14:10:52 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 14:10:52 AI_Player.update()		1010,	11,	1010,	101,	1010,	1010,	110
2017-01-05 14:10:52 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1110,	1011
2017-01-05 14:10:52 AI_Player.update()		1100,	110,	1010,	1010,	1110,	110,	1100
2017-01-05 14:10:52 AI_Player.update()		1100,	11,	1101,	111,	1101,	101,	1001
2017-01-05 14:10:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:52 AI_Player.update()	update
2017-01-05 14:10:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:52 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:52 AI_Player.update()	update
2017-01-05 14:10:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:53 AI_Player.update()	Search took851ms
2017-01-05 14:10:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:53 AI_Player.update()		110,	1100,	111,	1001,	111,	111,	11
2017-01-05 14:10:53 AI_Player.update()		1100,	1001,	11,	111,	11,	1001,	1001
2017-01-05 14:10:53 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:10:53 AI_Player.update()		1010,	11,	1010,	1011,	1010,	1010,	110
2017-01-05 14:10:53 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:53 AI_Player.update()		1100,	110,	1010,	111,	1110,	110,	1100
2017-01-05 14:10:53 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:53 AI_Player.update()	update
2017-01-05 14:10:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:10:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:53 AI_Player.update()	update
2017-01-05 14:10:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:53 AI_Player.update()	Search took5ms
2017-01-05 14:10:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:53 AI_Player.update()		110,	1001,	111,	1001,	111,	111,	11
2017-01-05 14:10:53 AI_Player.update()		1100,	1001,	11,	111,	11,	1001,	1001
2017-01-05 14:10:53 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 14:10:53 AI_Player.update()		1010,	1001,	1010,	1011,	1010,	1010,	110
2017-01-05 14:10:53 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:53 AI_Player.update()		1100,	11,	1010,	111,	1110,	110,	1100
2017-01-05 14:10:53 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:10:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:53 AI_Player.update()	update
2017-01-05 14:10:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:53 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:10:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:53 AI_Player.update()	update
2017-01-05 14:10:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:54 AI_Player.update()	Search took782ms
2017-01-05 14:10:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:54 AI_Player.update()		110,	1001,	111,	1001,	111,	111,	11
2017-01-05 14:10:54 AI_Player.update()		1100,	1001,	11,	111,	11,	1001,	1001
2017-01-05 14:10:54 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 14:10:54 AI_Player.update()		1001,	1010,	1011,	1010,	1010,	110,	1010
2017-01-05 14:10:54 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:54 AI_Player.update()		1100,	11,	1010,	111,	1110,	110,	1100
2017-01-05 14:10:54 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-05 14:10:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:10:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:54 AI_Player.update()	update
2017-01-05 14:10:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:10:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:54 AI_Player.update()	update
2017-01-05 14:10:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:54 AI_Player.update()	Search took7ms
2017-01-05 14:10:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:54 AI_Player.update()		110,	1001,	111,	111,	111,	111,	11
2017-01-05 14:10:54 AI_Player.update()		1100,	1001,	11,	101,	11,	1001,	1001
2017-01-05 14:10:54 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 14:10:54 AI_Player.update()		1001,	1010,	1011,	1010,	1010,	110,	1010
2017-01-05 14:10:54 AI_Player.update()		1110,	110,	1101,	111,	1011,	1110,	1011
2017-01-05 14:10:54 AI_Player.update()		1100,	11,	1010,	1010,	1110,	110,	1100
2017-01-05 14:10:54 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-05 14:10:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:10:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:54 AI_Player.update()	update
2017-01-05 14:10:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:10:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:54 AI_Player.update()	update
2017-01-05 14:10:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:55 AI_Player.update()	Search took877ms
2017-01-05 14:10:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:55 AI_Player.update()		110,	1100,	111,	111,	111,	111,	11
2017-01-05 14:10:55 AI_Player.update()		1100,	1001,	11,	101,	11,	1001,	1001
2017-01-05 14:10:55 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 14:10:55 AI_Player.update()		1001,	11,	1011,	1010,	1010,	110,	1010
2017-01-05 14:10:55 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1110,	1011
2017-01-05 14:10:55 AI_Player.update()		1100,	110,	1010,	1010,	1110,	110,	1100
2017-01-05 14:10:55 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-05 14:10:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:10:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:55 AI_Player.update()	update
2017-01-05 14:10:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:10:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:55 AI_Player.update()	update
2017-01-05 14:10:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:55 AI_Player.update()	Search took1ms
2017-01-05 14:10:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:55 AI_Player.update()		110,	1001,	111,	111,	111,	111,	11
2017-01-05 14:10:55 AI_Player.update()		1100,	1001,	11,	101,	11,	1001,	1001
2017-01-05 14:10:55 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 14:10:55 AI_Player.update()		1001,	1010,	1011,	1010,	1010,	110,	1010
2017-01-05 14:10:55 AI_Player.update()		1110,	110,	1101,	111,	1011,	1110,	1011
2017-01-05 14:10:55 AI_Player.update()		1100,	11,	1010,	1010,	1110,	110,	1100
2017-01-05 14:10:55 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-05 14:10:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:10:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:55 AI_Player.update()	update
2017-01-05 14:10:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:55 AI_Player.update()	update
2017-01-05 14:10:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:56 AI_Player.update()	Search took947ms
2017-01-05 14:10:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()		110,	1001,	111,	111,	111,	111,	11
2017-01-05 14:10:56 AI_Player.update()		1001,	11,	101,	11,	1001,	1001,	1100
2017-01-05 14:10:56 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 14:10:56 AI_Player.update()		1001,	1010,	1011,	1010,	1010,	110,	1010
2017-01-05 14:10:56 AI_Player.update()		1110,	110,	1101,	111,	1011,	1110,	1011
2017-01-05 14:10:56 AI_Player.update()		1100,	11,	1010,	1010,	1110,	110,	1100
2017-01-05 14:10:56 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-05 14:10:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()	update
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()	update
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:56 AI_Player.update()	Search took8ms
2017-01-05 14:10:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()		110,	11,	111,	111,	111,	111,	11
2017-01-05 14:10:56 AI_Player.update()		1001,	11,	101,	11,	1001,	1001,	1100
2017-01-05 14:10:56 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-05 14:10:56 AI_Player.update()		1001,	110,	1011,	1010,	1010,	110,	1010
2017-01-05 14:10:56 AI_Player.update()		1110,	11,	1101,	111,	1011,	1110,	1011
2017-01-05 14:10:56 AI_Player.update()		1100,	1100,	1010,	1010,	1110,	110,	1100
2017-01-05 14:10:56 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 14:10:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()	update
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()	update
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:56 AI_Player.update()	Search took69ms
2017-01-05 14:10:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()		110,	11,	111,	111,	111,	111,	11
2017-01-05 14:10:56 AI_Player.update()		11,	101,	11,	1001,	1001,	1100,	1001
2017-01-05 14:10:56 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-05 14:10:56 AI_Player.update()		1001,	110,	1011,	1010,	1010,	110,	1010
2017-01-05 14:10:56 AI_Player.update()		1110,	11,	1101,	111,	1011,	1110,	1011
2017-01-05 14:10:56 AI_Player.update()		1100,	1100,	1010,	1010,	1110,	110,	1100
2017-01-05 14:10:56 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 14:10:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:10:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()	update
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:56 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:10:56 AI_Player.update()	Player a has won!
2017-01-05 14:10:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:10:56 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:10:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:10:56 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:10:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()	update
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:56 AI_Player.update()	Search took59ms
2017-01-05 14:10:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-05 14:10:56 AI_Player.update()		1010,	1100,	101,	1010,	1101,	1010,	110
2017-01-05 14:10:56 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:10:56 AI_Player.update()		110,	101,	101,	1101,	101,	11,	1001
2017-01-05 14:10:56 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:56 AI_Player.update()		1101,	101,	101,	1001,	1001,	1010,	111
2017-01-05 14:10:56 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()	update
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()	update
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:56 AI_Player.update()	Search took2ms
2017-01-05 14:10:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-05 14:10:56 AI_Player.update()		1100,	101,	1010,	1101,	1010,	110,	1010
2017-01-05 14:10:56 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:10:56 AI_Player.update()		110,	101,	101,	1101,	101,	11,	1001
2017-01-05 14:10:56 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:56 AI_Player.update()		1101,	101,	101,	1001,	1001,	1010,	111
2017-01-05 14:10:56 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()	update
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:56 AI_Player.update()	update
2017-01-05 14:10:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:57 AI_Player.update()	Search took662ms
2017-01-05 14:10:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:57 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-05 14:10:57 AI_Player.update()		1100,	101,	1010,	1101,	1010,	110,	1010
2017-01-05 14:10:57 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:10:57 AI_Player.update()		110,	101,	101,	1101,	101,	11,	1001
2017-01-05 14:10:57 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:57 AI_Player.update()		101,	101,	1001,	1001,	1010,	111,	1101
2017-01-05 14:10:57 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:10:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:57 AI_Player.update()	update
2017-01-05 14:10:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:57 AI_Player.update()	update
2017-01-05 14:10:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:57 AI_Player.update()	Search took4ms
2017-01-05 14:10:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:57 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:10:57 AI_Player.update()		1100,	101,	1010,	1101,	1010,	110,	1010
2017-01-05 14:10:57 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:10:57 AI_Player.update()		110,	1001,	101,	1101,	101,	11,	1001
2017-01-05 14:10:57 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:57 AI_Player.update()		101,	1001,	1001,	1001,	1010,	111,	1101
2017-01-05 14:10:57 AI_Player.update()		1100,	110,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:57 AI_Player.update()	update
2017-01-05 14:10:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:57 AI_Player.update()	update
2017-01-05 14:10:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:57 AI_Player.update()	Search took562ms
2017-01-05 14:10:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:57 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:10:57 AI_Player.update()		1100,	101,	1010,	1101,	1010,	110,	1010
2017-01-05 14:10:57 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:10:57 AI_Player.update()		110,	1001,	101,	1101,	101,	11,	1001
2017-01-05 14:10:57 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:57 AI_Player.update()		1001,	1001,	1001,	1010,	111,	1101,	101
2017-01-05 14:10:57 AI_Player.update()		1100,	110,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:10:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:57 AI_Player.update()	update
2017-01-05 14:10:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:57 AI_Player.update()	update
2017-01-05 14:10:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:57 AI_Player.update()	Search took4ms
2017-01-05 14:10:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:57 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:10:57 AI_Player.update()		1100,	101,	1010,	1101,	1010,	110,	1010
2017-01-05 14:10:57 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-05 14:10:57 AI_Player.update()		110,	101,	101,	1101,	101,	11,	1001
2017-01-05 14:10:57 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:57 AI_Player.update()		1001,	110,	1001,	1010,	111,	1101,	101
2017-01-05 14:10:57 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:57 AI_Player.update()	update
2017-01-05 14:10:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:57 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:57 AI_Player.update()	update
2017-01-05 14:10:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:58 AI_Player.update()	Search took943ms
2017-01-05 14:10:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:58 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:10:58 AI_Player.update()		101,	1010,	1101,	1010,	110,	1010,	1100
2017-01-05 14:10:58 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-05 14:10:58 AI_Player.update()		110,	101,	101,	1101,	101,	11,	1001
2017-01-05 14:10:58 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:58 AI_Player.update()		1001,	110,	1001,	1010,	111,	1101,	101
2017-01-05 14:10:58 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:58 AI_Player.update()	update
2017-01-05 14:10:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:58 AI_Player.update()	update
2017-01-05 14:10:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:58 AI_Player.update()	Search took4ms
2017-01-05 14:10:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:58 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-05 14:10:58 AI_Player.update()		101,	1001,	1101,	1010,	110,	1010,	1100
2017-01-05 14:10:58 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:10:58 AI_Player.update()		110,	1001,	101,	1101,	101,	11,	1001
2017-01-05 14:10:58 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:58 AI_Player.update()		1001,	101,	1001,	1010,	111,	1101,	101
2017-01-05 14:10:58 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:58 AI_Player.update()	update
2017-01-05 14:10:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:58 AI_Player.update()	update
2017-01-05 14:10:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:58 AI_Player.update()	Search took150ms
2017-01-05 14:10:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:58 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:10:58 AI_Player.update()		101,	1010,	1101,	1010,	110,	1010,	1100
2017-01-05 14:10:58 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-05 14:10:58 AI_Player.update()		110,	101,	101,	1101,	101,	11,	1001
2017-01-05 14:10:58 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:58 AI_Player.update()		1001,	110,	1001,	1010,	111,	1101,	101
2017-01-05 14:10:58 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:58 AI_Player.update()	update
2017-01-05 14:10:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:58 AI_Player.update()	update
2017-01-05 14:10:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:58 AI_Player.update()	Search took8ms
2017-01-05 14:10:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:58 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-05 14:10:58 AI_Player.update()		101,	1001,	1101,	1010,	110,	1010,	1100
2017-01-05 14:10:58 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:10:58 AI_Player.update()		110,	1001,	101,	1101,	101,	11,	1001
2017-01-05 14:10:58 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:58 AI_Player.update()		1001,	101,	1001,	1010,	111,	1101,	101
2017-01-05 14:10:58 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:58 AI_Player.update()	update
2017-01-05 14:10:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:58 AI_Player.update()	update
2017-01-05 14:10:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:59 AI_Player.update()	Search took771ms
2017-01-05 14:10:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-05 14:10:59 AI_Player.update()		101,	1001,	1101,	1010,	110,	1010,	1100
2017-01-05 14:10:59 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:10:59 AI_Player.update()		1001,	101,	1101,	101,	11,	1001,	110
2017-01-05 14:10:59 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:59 AI_Player.update()		1001,	101,	1001,	1010,	111,	1101,	101
2017-01-05 14:10:59 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:10:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()	update
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()	update
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:59 AI_Player.update()	Search took4ms
2017-01-05 14:10:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-05 14:10:59 AI_Player.update()		101,	1001,	1101,	1010,	110,	1010,	1100
2017-01-05 14:10:59 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:10:59 AI_Player.update()		101,	1101,	101,	11,	1001,	110,	1001
2017-01-05 14:10:59 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:59 AI_Player.update()		1001,	101,	1001,	1010,	111,	1101,	101
2017-01-05 14:10:59 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()	update
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()	update
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:59 AI_Player.update()	Search took117ms
2017-01-05 14:10:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-05 14:10:59 AI_Player.update()		101,	1001,	1101,	1010,	110,	1010,	1100
2017-01-05 14:10:59 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:10:59 AI_Player.update()		1001,	101,	1101,	101,	11,	1001,	110
2017-01-05 14:10:59 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:59 AI_Player.update()		1001,	101,	1001,	1010,	111,	1101,	101
2017-01-05 14:10:59 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()	update
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()	update
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:59 AI_Player.update()	Search took4ms
2017-01-05 14:10:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()		110,	1001,	111,	1100,	111,	101,	11
2017-01-05 14:10:59 AI_Player.update()		101,	101,	1101,	1010,	110,	1010,	1100
2017-01-05 14:10:59 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:10:59 AI_Player.update()		1001,	110,	1101,	101,	11,	1001,	110
2017-01-05 14:10:59 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:59 AI_Player.update()		1001,	101,	1001,	1010,	111,	1101,	101
2017-01-05 14:10:59 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-05 14:10:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:10:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()	update
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:10:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:10:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:10:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()	update
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:10:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:10:59 AI_Player.update()	Search took73ms
2017-01-05 14:10:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-05 14:10:59 AI_Player.update()		101,	101,	1101,	110,	110,	1010,	1100
2017-01-05 14:10:59 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 14:10:59 AI_Player.update()		1001,	110,	1101,	1010,	11,	1001,	110
2017-01-05 14:10:59 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:59 AI_Player.update()		1001,	101,	1001,	1101,	111,	1101,	101
2017-01-05 14:10:59 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-05 14:10:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:10:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()	update
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:10:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:10:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:10:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()	update
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:10:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:10:59 AI_Player.update()	Search took1ms
2017-01-05 14:10:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:10:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 14:10:59 AI_Player.update()		101,	101,	1101,	110,	110,	1010,	1100
2017-01-05 14:10:59 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 14:10:59 AI_Player.update()		1001,	101,	1101,	1010,	11,	1001,	110
2017-01-05 14:10:59 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:10:59 AI_Player.update()		1001,	1010,	1001,	1101,	111,	1101,	101
2017-01-05 14:10:59 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-05 14:10:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:10:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:10:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()	update
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:10:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:10:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:10:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:10:59 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:10:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:10:59 AI_Player.update()	update
2017-01-05 14:10:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:00 AI_Player.update()	Search took155ms
2017-01-05 14:11:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-05 14:11:00 AI_Player.update()		101,	101,	1101,	110,	110,	101,	1100
2017-01-05 14:11:00 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:00 AI_Player.update()		1001,	101,	1101,	1010,	11,	1110,	110
2017-01-05 14:11:00 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:11:00 AI_Player.update()		1001,	1010,	1001,	1101,	111,	11,	101
2017-01-05 14:11:00 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:00 AI_Player.update()	Search took0ms
2017-01-05 14:11:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-05 14:11:00 AI_Player.update()		101,	101,	1101,	110,	110,	101,	1100
2017-01-05 14:11:00 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:00 AI_Player.update()		101,	1101,	1010,	11,	1110,	110,	1001
2017-01-05 14:11:00 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:11:00 AI_Player.update()		1001,	1010,	1001,	1101,	111,	11,	101
2017-01-05 14:11:00 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:00 AI_Player.update()	Search took181ms
2017-01-05 14:11:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 14:11:00 AI_Player.update()		101,	101,	1101,	110,	110,	1001,	1100
2017-01-05 14:11:00 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 14:11:00 AI_Player.update()		101,	1101,	1010,	11,	1110,	1101,	1001
2017-01-05 14:11:00 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:00 AI_Player.update()		1001,	1010,	1001,	1101,	111,	101,	101
2017-01-05 14:11:00 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:00 AI_Player.update()	Search took5ms
2017-01-05 14:11:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 14:11:00 AI_Player.update()		101,	101,	1101,	110,	110,	1001,	1100
2017-01-05 14:11:00 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 14:11:00 AI_Player.update()		1101,	1010,	11,	1110,	1101,	1001,	101
2017-01-05 14:11:00 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:00 AI_Player.update()		1001,	1010,	1001,	1101,	111,	101,	101
2017-01-05 14:11:00 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:11:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:00 AI_Player.update()	Search took182ms
2017-01-05 14:11:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 14:11:00 AI_Player.update()		101,	101,	1101,	110,	110,	1001,	1100
2017-01-05 14:11:00 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 14:11:00 AI_Player.update()		1101,	1010,	11,	1110,	1101,	1001,	101
2017-01-05 14:11:00 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:00 AI_Player.update()		1010,	1001,	1101,	111,	101,	101,	1001
2017-01-05 14:11:00 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:00 AI_Player.update()	Search took3ms
2017-01-05 14:11:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 14:11:00 AI_Player.update()		101,	110,	1101,	110,	110,	1001,	1100
2017-01-05 14:11:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:11:00 AI_Player.update()		1101,	101,	11,	1110,	1101,	1001,	101
2017-01-05 14:11:00 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:00 AI_Player.update()		1010,	1001,	1101,	111,	101,	101,	1001
2017-01-05 14:11:00 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:00 AI_Player.update()	Search took125ms
2017-01-05 14:11:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:11:00 AI_Player.update()		101,	110,	1101,	1010,	110,	1001,	1100
2017-01-05 14:11:00 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-05 14:11:00 AI_Player.update()		1101,	101,	11,	101,	1101,	1001,	101
2017-01-05 14:11:00 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	11,	1011
2017-01-05 14:11:00 AI_Player.update()		1010,	1001,	1101,	1010,	101,	101,	1001
2017-01-05 14:11:00 AI_Player.update()		1100,	101,	1101,	111,	1101,	1010,	1001
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:00 AI_Player.update()	Search took2ms
2017-01-05 14:11:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-05 14:11:00 AI_Player.update()		101,	1010,	1101,	1010,	110,	1001,	1100
2017-01-05 14:11:00 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-05 14:11:00 AI_Player.update()		1101,	1001,	11,	101,	1101,	1001,	101
2017-01-05 14:11:00 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	11,	1011
2017-01-05 14:11:00 AI_Player.update()		1010,	101,	1101,	1010,	101,	101,	1001
2017-01-05 14:11:00 AI_Player.update()		1100,	101,	1101,	111,	1101,	1010,	1001
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:00 AI_Player.update()	Search took74ms
2017-01-05 14:11:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-05 14:11:00 AI_Player.update()		1010,	1101,	1010,	110,	1001,	1100,	101
2017-01-05 14:11:00 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-05 14:11:00 AI_Player.update()		1101,	1001,	11,	101,	1101,	1001,	101
2017-01-05 14:11:00 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	11,	1011
2017-01-05 14:11:00 AI_Player.update()		1010,	101,	1101,	1010,	101,	101,	1001
2017-01-05 14:11:00 AI_Player.update()		1100,	101,	1101,	111,	1101,	1010,	1001
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:00 AI_Player.update()	Player a has won!
2017-01-05 14:11:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:00 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:00 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:00 AI_Player.update()	Search took130ms
2017-01-05 14:11:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()		110,	101,	111,	11,	111,	1011,	11
2017-01-05 14:11:00 AI_Player.update()		1100,	1100,	101,	11,	1001,	1100,	1100
2017-01-05 14:11:00 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 14:11:00 AI_Player.update()		110,	1101,	101,	1010,	1001,	101,	111
2017-01-05 14:11:00 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-05 14:11:00 AI_Player.update()		1100,	101,	101,	1010,	1001,	11,	1011
2017-01-05 14:11:00 AI_Player.update()		1100,	11,	1101,	110,	1101,	1001,	1001
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:00 AI_Player.update()	Search took1ms
2017-01-05 14:11:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()		110,	1100,	111,	11,	111,	1011,	11
2017-01-05 14:11:00 AI_Player.update()		1100,	101,	101,	11,	1001,	1100,	1100
2017-01-05 14:11:00 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 14:11:00 AI_Player.update()		110,	110,	101,	1010,	1001,	101,	111
2017-01-05 14:11:00 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 14:11:00 AI_Player.update()		1100,	11,	101,	1010,	1001,	11,	1011
2017-01-05 14:11:00 AI_Player.update()		1100,	101,	1101,	110,	1101,	1001,	1001
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()	update
2017-01-05 14:11:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:00 AI_Player.update()	Search took67ms
2017-01-05 14:11:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:00 AI_Player.update()		110,	1100,	111,	11,	111,	1011,	11
2017-01-05 14:11:00 AI_Player.update()		1100,	101,	101,	1010,	1001,	1100,	1100
2017-01-05 14:11:00 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 14:11:00 AI_Player.update()		110,	110,	101,	101,	1001,	101,	111
2017-01-05 14:11:00 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:00 AI_Player.update()		1100,	11,	101,	110,	1001,	11,	1011
2017-01-05 14:11:00 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took1ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	1100,	111,	11,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	101,	101,	1010,	1001,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		110,	110,	101,	101,	1001,	101,	111
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	11,	101,	110,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took56ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	1100,	111,	11,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	101,	101,	1010,	1001,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		110,	101,	101,	1001,	101,	111,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	11,	101,	110,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took1ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	1100,	111,	11,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		1100,	1101,	101,	101,	1010,	1001,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		110,	101,	101,	1001,	101,	111,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	11,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	101,	110,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took78ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	1100,	111,	11,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	101,	101,	1010,	1001,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		110,	101,	101,	1001,	101,	111,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	11,	101,	110,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took1ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	1100,	111,	11,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		1100,	1101,	101,	101,	1010,	1001,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		110,	101,	101,	1001,	101,	111,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	11,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	101,	110,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took195ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	1100,	111,	101,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		1100,	1101,	101,	1010,	1010,	1001,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		110,	101,	101,	1010,	101,	111,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	11,	1101,	110,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	101,	11,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took2ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	1101,	111,	101,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	101,	1010,	1010,	1001,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		110,	11,	101,	1010,	101,	111,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	101,	11,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took82ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	1101,	111,	101,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		101,	101,	1010,	1010,	1001,	1100,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		110,	11,	101,	1010,	101,	111,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	101,	11,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took2ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	1101,	111,	101,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	101,	1010,	1010,	1001,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		110,	11,	101,	1010,	101,	111,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	101,	11,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took186ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	1101,	111,	101,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		101,	101,	1010,	1010,	1001,	1100,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		110,	11,	101,	1010,	101,	111,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	101,	11,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took2ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	1101,	111,	101,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	101,	1010,	1010,	1001,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		110,	11,	101,	1010,	101,	111,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	101,	11,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took79ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	1101,	111,	101,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	101,	1010,	1010,	1001,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		11,	101,	1010,	101,	111,	110,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	101,	11,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took3ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	101,	1010,	1010,	1001,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		11,	101,	1010,	101,	111,	110,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	1100,	1101,	110,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	101,	11,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took78ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	101,	1001,	1010,	1001,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		11,	101,	1010,	110,	111,	110,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1100,	101,	11,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:01 AI_Player.update()	Search took3ms
2017-01-05 14:11:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	101,	1001,	1010,	1001,	1100
2017-01-05 14:11:01 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 14:11:01 AI_Player.update()		11,	1100,	1010,	110,	111,	110,	110
2017-01-05 14:11:01 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	1101,	101,	11,	1001,	11,	1011
2017-01-05 14:11:01 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:11:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:01 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:01 AI_Player.update()	update
2017-01-05 14:11:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:02 AI_Player.update()	Search took227ms
2017-01-05 14:11:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 14:11:02 AI_Player.update()		1100,	101,	101,	1001,	1010,	1001,	1100
2017-01-05 14:11:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:11:02 AI_Player.update()		11,	1100,	1010,	110,	111,	110,	110
2017-01-05 14:11:02 AI_Player.update()		1110,	1101,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:02 AI_Player.update()		1100,	101,	101,	11,	1001,	11,	1011
2017-01-05 14:11:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:02 AI_Player.update()	Search took3ms
2017-01-05 14:11:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 14:11:02 AI_Player.update()		1100,	1100,	101,	1001,	1010,	1001,	1100
2017-01-05 14:11:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:11:02 AI_Player.update()		11,	1101,	1010,	110,	111,	110,	110
2017-01-05 14:11:02 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:02 AI_Player.update()		1100,	101,	101,	11,	1001,	11,	1011
2017-01-05 14:11:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:02 AI_Player.update()	Search took281ms
2017-01-05 14:11:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 14:11:02 AI_Player.update()		1100,	1100,	101,	1001,	1010,	1001,	1100
2017-01-05 14:11:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:11:02 AI_Player.update()		11,	1101,	1010,	110,	111,	110,	110
2017-01-05 14:11:02 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:02 AI_Player.update()		1011,	1100,	101,	101,	11,	1001,	11
2017-01-05 14:11:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:02 AI_Player.update()	Search took2ms
2017-01-05 14:11:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-05 14:11:02 AI_Player.update()		1100,	1100,	101,	1001,	1010,	1001,	1100
2017-01-05 14:11:02 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-05 14:11:02 AI_Player.update()		11,	101,	1010,	110,	111,	110,	110
2017-01-05 14:11:02 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:02 AI_Player.update()		1011,	101,	101,	101,	11,	1001,	11
2017-01-05 14:11:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:02 AI_Player.update()	Search took352ms
2017-01-05 14:11:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 14:11:02 AI_Player.update()		1100,	1100,	101,	1001,	1010,	1001,	1100
2017-01-05 14:11:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:11:02 AI_Player.update()		11,	1101,	1010,	110,	111,	110,	110
2017-01-05 14:11:02 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:02 AI_Player.update()		1011,	1100,	101,	101,	11,	1001,	11
2017-01-05 14:11:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:02 AI_Player.update()	Search took1ms
2017-01-05 14:11:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 14:11:02 AI_Player.update()		1100,	101,	101,	1001,	1010,	1001,	1100
2017-01-05 14:11:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:11:02 AI_Player.update()		11,	1100,	1010,	110,	111,	110,	110
2017-01-05 14:11:02 AI_Player.update()		1110,	1101,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:02 AI_Player.update()		1011,	101,	101,	101,	11,	1001,	11
2017-01-05 14:11:02 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:02 AI_Player.update()	Search took127ms
2017-01-05 14:11:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 14:11:02 AI_Player.update()		1100,	1100,	101,	101,	1001,	1010,	1001
2017-01-05 14:11:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:11:02 AI_Player.update()		11,	1100,	1010,	110,	111,	110,	110
2017-01-05 14:11:02 AI_Player.update()		1110,	1101,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:02 AI_Player.update()		1011,	101,	101,	101,	11,	1001,	11
2017-01-05 14:11:02 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 14:11:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:02 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:02 AI_Player.update()	Player a has won!
2017-01-05 14:11:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:02 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:02 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:02 AI_Player.update()	update
2017-01-05 14:11:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:03 AI_Player.update()	Search took458ms
2017-01-05 14:11:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()		110,	111,	111,	1110,	111,	11,	11
2017-01-05 14:11:03 AI_Player.update()		1100,	1010,	1010,	111,	1101,	110,	1100
2017-01-05 14:11:03 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1100,	1011
2017-01-05 14:11:03 AI_Player.update()		101,	1100,	101,	110,	1100,	1010,	1010
2017-01-05 14:11:03 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:03 AI_Player.update()		110,	110,	1101,	101,	111,	111,	1011
2017-01-05 14:11:03 AI_Player.update()		1100,	11,	1101,	1010,	1101,	110,	1001
2017-01-05 14:11:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()	update
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()	update
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:03 AI_Player.update()	Search took1ms
2017-01-05 14:11:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()		110,	111,	111,	1110,	111,	110,	11
2017-01-05 14:11:03 AI_Player.update()		1100,	1010,	1010,	111,	1101,	1100,	1100
2017-01-05 14:11:03 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1010,	1011
2017-01-05 14:11:03 AI_Player.update()		101,	1100,	101,	110,	1100,	11,	1010
2017-01-05 14:11:03 AI_Player.update()		1110,	101,	1101,	1010,	1011,	111,	1011
2017-01-05 14:11:03 AI_Player.update()		110,	110,	1101,	101,	111,	110,	1011
2017-01-05 14:11:03 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()	update
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()	update
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:03 AI_Player.update()	Search took325ms
2017-01-05 14:11:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()		110,	111,	111,	1110,	111,	11,	11
2017-01-05 14:11:03 AI_Player.update()		1100,	1010,	1010,	111,	1101,	110,	1100
2017-01-05 14:11:03 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1100,	1011
2017-01-05 14:11:03 AI_Player.update()		101,	1100,	101,	110,	1100,	1010,	1010
2017-01-05 14:11:03 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:03 AI_Player.update()		110,	110,	1101,	101,	111,	111,	1011
2017-01-05 14:11:03 AI_Player.update()		1100,	11,	1101,	1010,	1101,	110,	1001
2017-01-05 14:11:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()	update
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()	update
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:03 AI_Player.update()	Search took5ms
2017-01-05 14:11:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-05 14:11:03 AI_Player.update()		1100,	111,	1010,	111,	1101,	110,	1100
2017-01-05 14:11:03 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1100,	1011
2017-01-05 14:11:03 AI_Player.update()		101,	1001,	101,	110,	1100,	1010,	1010
2017-01-05 14:11:03 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:03 AI_Player.update()		110,	101,	1101,	101,	111,	111,	1011
2017-01-05 14:11:03 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-05 14:11:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()	update
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()	update
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:03 AI_Player.update()	Search took263ms
2017-01-05 14:11:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()		110,	11,	111,	111,	111,	11,	11
2017-01-05 14:11:03 AI_Player.update()		1100,	111,	1010,	1011,	1101,	110,	1100
2017-01-05 14:11:03 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:03 AI_Player.update()		101,	1001,	101,	1010,	1100,	1010,	1010
2017-01-05 14:11:03 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 14:11:03 AI_Player.update()		110,	101,	1101,	1010,	111,	111,	1011
2017-01-05 14:11:03 AI_Player.update()		1100,	110,	1101,	1110,	1101,	110,	1001
2017-01-05 14:11:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:03 AI_Player.update()	update
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()	update
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:04 AI_Player.update()	Search took2ms
2017-01-05 14:11:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()		110,	111,	111,	111,	111,	11,	11
2017-01-05 14:11:04 AI_Player.update()		1100,	1010,	1010,	1011,	1101,	110,	1100
2017-01-05 14:11:04 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:04 AI_Player.update()		101,	1100,	101,	1010,	1100,	1010,	1010
2017-01-05 14:11:04 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 14:11:04 AI_Player.update()		110,	110,	1101,	1010,	111,	111,	1011
2017-01-05 14:11:04 AI_Player.update()		1100,	11,	1101,	1110,	1101,	110,	1001
2017-01-05 14:11:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()	update
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()	update
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:04 AI_Player.update()	Search took373ms
2017-01-05 14:11:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()		110,	111,	111,	111,	111,	110,	11
2017-01-05 14:11:04 AI_Player.update()		1100,	1010,	1010,	1011,	1101,	11,	1100
2017-01-05 14:11:04 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 14:11:04 AI_Player.update()		101,	1100,	101,	1010,	1100,	1100,	1010
2017-01-05 14:11:04 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:04 AI_Player.update()		110,	110,	1101,	1010,	111,	11,	1011
2017-01-05 14:11:04 AI_Player.update()		1100,	11,	1101,	1110,	1101,	111,	1001
2017-01-05 14:11:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()	update
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()	update
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:04 AI_Player.update()	Search took1ms
2017-01-05 14:11:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()		110,	1010,	111,	111,	111,	110,	11
2017-01-05 14:11:04 AI_Player.update()		1100,	1001,	1010,	1011,	1101,	11,	1100
2017-01-05 14:11:04 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-05 14:11:04 AI_Player.update()		101,	101,	101,	1010,	1100,	1100,	1010
2017-01-05 14:11:04 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:04 AI_Player.update()		110,	11,	1101,	1010,	111,	11,	1011
2017-01-05 14:11:04 AI_Player.update()		1100,	111,	1101,	1110,	1101,	111,	1001
2017-01-05 14:11:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()	update
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()	update
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:04 AI_Player.update()	Search took347ms
2017-01-05 14:11:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()		110,	111,	111,	111,	111,	110,	11
2017-01-05 14:11:04 AI_Player.update()		1100,	1010,	1010,	1011,	1101,	11,	1100
2017-01-05 14:11:04 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 14:11:04 AI_Player.update()		101,	1100,	101,	1010,	1100,	1100,	1010
2017-01-05 14:11:04 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:04 AI_Player.update()		110,	110,	1101,	1010,	111,	11,	1011
2017-01-05 14:11:04 AI_Player.update()		1100,	11,	1101,	1110,	1101,	111,	1001
2017-01-05 14:11:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()	update
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()	update
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:04 AI_Player.update()	Search took3ms
2017-01-05 14:11:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-05 14:11:04 AI_Player.update()		1100,	111,	1010,	1011,	1101,	11,	1100
2017-01-05 14:11:04 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-05 14:11:04 AI_Player.update()		101,	1001,	101,	1010,	1100,	1100,	1010
2017-01-05 14:11:04 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:04 AI_Player.update()		110,	101,	1101,	1010,	111,	11,	1011
2017-01-05 14:11:04 AI_Player.update()		1100,	110,	1101,	1110,	1101,	111,	1001
2017-01-05 14:11:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()	update
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:04 AI_Player.update()	update
2017-01-05 14:11:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:05 AI_Player.update()	Search took329ms
2017-01-05 14:11:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-05 14:11:05 AI_Player.update()		1100,	111,	1010,	1011,	1101,	11,	1100
2017-01-05 14:11:05 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-05 14:11:05 AI_Player.update()		1001,	101,	1010,	1100,	1100,	1010,	101
2017-01-05 14:11:05 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:05 AI_Player.update()		110,	101,	1101,	1010,	111,	11,	1011
2017-01-05 14:11:05 AI_Player.update()		1100,	110,	1101,	1110,	1101,	111,	1001
2017-01-05 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()	update
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()	update
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:05 AI_Player.update()	Search took2ms
2017-01-05 14:11:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()		110,	111,	111,	111,	111,	110,	11
2017-01-05 14:11:05 AI_Player.update()		1100,	1010,	1010,	1011,	1101,	11,	1100
2017-01-05 14:11:05 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-05 14:11:05 AI_Player.update()		1001,	1100,	1010,	1100,	1100,	1010,	101
2017-01-05 14:11:05 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:05 AI_Player.update()		110,	110,	1101,	1010,	111,	11,	1011
2017-01-05 14:11:05 AI_Player.update()		1100,	11,	1101,	1110,	1101,	111,	1001
2017-01-05 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()	update
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()	update
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:05 AI_Player.update()	Search took123ms
2017-01-05 14:11:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()		110,	111,	111,	111,	111,	110,	11
2017-01-05 14:11:05 AI_Player.update()		1100,	1010,	1010,	1011,	1101,	11,	1100
2017-01-05 14:11:05 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-05 14:11:05 AI_Player.update()		1100,	1010,	1100,	1100,	1010,	101,	1001
2017-01-05 14:11:05 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:05 AI_Player.update()		110,	110,	1101,	1010,	111,	11,	1011
2017-01-05 14:11:05 AI_Player.update()		1100,	11,	1101,	1110,	1101,	111,	1001
2017-01-05 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()	update
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()	update
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:05 AI_Player.update()	Search took2ms
2017-01-05 14:11:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()		110,	1010,	111,	111,	111,	110,	11
2017-01-05 14:11:05 AI_Player.update()		1100,	101,	1010,	1011,	1101,	11,	1100
2017-01-05 14:11:05 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-05 14:11:05 AI_Player.update()		1100,	101,	1100,	1100,	1010,	101,	1001
2017-01-05 14:11:05 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:05 AI_Player.update()		110,	11,	1101,	1010,	111,	11,	1011
2017-01-05 14:11:05 AI_Player.update()		1100,	111,	1101,	1110,	1101,	111,	1001
2017-01-05 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()	update
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()	update
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:05 AI_Player.update()	Search took252ms
2017-01-05 14:11:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()		110,	1010,	111,	111,	111,	110,	11
2017-01-05 14:11:05 AI_Player.update()		1100,	101,	1010,	1011,	1101,	11,	1100
2017-01-05 14:11:05 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-05 14:11:05 AI_Player.update()		1100,	101,	1100,	1100,	1010,	101,	1001
2017-01-05 14:11:05 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:05 AI_Player.update()		11,	1101,	1010,	111,	11,	1011,	110
2017-01-05 14:11:05 AI_Player.update()		1100,	111,	1101,	1110,	1101,	111,	1001
2017-01-05 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()	update
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()	update
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:05 AI_Player.update()	Search took4ms
2017-01-05 14:11:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()		110,	1010,	111,	1011,	111,	110,	11
2017-01-05 14:11:05 AI_Player.update()		1100,	101,	1010,	110,	1101,	11,	1100
2017-01-05 14:11:05 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-05 14:11:05 AI_Player.update()		1100,	101,	1100,	101,	1010,	101,	1001
2017-01-05 14:11:05 AI_Player.update()		1110,	110,	1101,	111,	1011,	1010,	1011
2017-01-05 14:11:05 AI_Player.update()		11,	1101,	1010,	1110,	11,	1011,	110
2017-01-05 14:11:05 AI_Player.update()		1100,	111,	1101,	111,	1101,	111,	1001
2017-01-05 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()	update
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:05 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:05 AI_Player.update()	update
2017-01-05 14:11:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:06 AI_Player.update()	Search took754ms
2017-01-05 14:11:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:06 AI_Player.update()		110,	1010,	111,	1011,	111,	110,	11
2017-01-05 14:11:06 AI_Player.update()		1100,	101,	1010,	110,	1101,	11,	1100
2017-01-05 14:11:06 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-05 14:11:06 AI_Player.update()		101,	1100,	101,	1010,	101,	1001,	1100
2017-01-05 14:11:06 AI_Player.update()		1110,	110,	1101,	111,	1011,	1010,	1011
2017-01-05 14:11:06 AI_Player.update()		11,	1101,	1010,	1110,	11,	1011,	110
2017-01-05 14:11:06 AI_Player.update()		1100,	111,	1101,	111,	1101,	111,	1001
2017-01-05 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:06 AI_Player.update()	update
2017-01-05 14:11:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:06 AI_Player.update()	update
2017-01-05 14:11:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:06 AI_Player.update()	Search took5ms
2017-01-05 14:11:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:06 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-05 14:11:06 AI_Player.update()		1100,	1010,	1010,	110,	1101,	11,	1100
2017-01-05 14:11:06 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-05 14:11:06 AI_Player.update()		101,	110,	101,	1010,	101,	1001,	1100
2017-01-05 14:11:06 AI_Player.update()		1110,	1101,	1101,	111,	1011,	1010,	1011
2017-01-05 14:11:06 AI_Player.update()		11,	111,	1010,	1110,	11,	1011,	110
2017-01-05 14:11:06 AI_Player.update()		1100,	1010,	1101,	111,	1101,	111,	1001
2017-01-05 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:06 AI_Player.update()	update
2017-01-05 14:11:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:06 AI_Player.update()	update
2017-01-05 14:11:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:06 AI_Player.update()	Search took672ms
2017-01-05 14:11:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:06 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-05 14:11:06 AI_Player.update()		1100,	1010,	1010,	110,	1101,	11,	1100
2017-01-05 14:11:06 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-05 14:11:06 AI_Player.update()		110,	101,	1010,	101,	1001,	1100,	101
2017-01-05 14:11:06 AI_Player.update()		1110,	1101,	1101,	111,	1011,	1010,	1011
2017-01-05 14:11:06 AI_Player.update()		11,	111,	1010,	1110,	11,	1011,	110
2017-01-05 14:11:06 AI_Player.update()		1100,	1010,	1101,	111,	1101,	111,	1001
2017-01-05 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:06 AI_Player.update()	update
2017-01-05 14:11:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:06 AI_Player.update()	update
2017-01-05 14:11:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:06 AI_Player.update()	Search took2ms
2017-01-05 14:11:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:06 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-05 14:11:06 AI_Player.update()		1100,	1100,	1010,	1010,	110,	1101,	11
2017-01-05 14:11:06 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-05 14:11:06 AI_Player.update()		110,	101,	1010,	101,	1001,	1100,	101
2017-01-05 14:11:06 AI_Player.update()		1110,	1101,	1101,	111,	1011,	1010,	1011
2017-01-05 14:11:06 AI_Player.update()		11,	111,	1010,	1110,	11,	1011,	110
2017-01-05 14:11:06 AI_Player.update()		1100,	1010,	1101,	111,	1101,	111,	1001
2017-01-05 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:06 AI_Player.update()	update
2017-01-05 14:11:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:06 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:06 AI_Player.update()	update
2017-01-05 14:11:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:08 AI_Player.update()	Search took1146ms
2017-01-05 14:11:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 14:11:08 AI_Player.update()		1100,	1100,	1010,	1100,	110,	1101,	11
2017-01-05 14:11:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-05 14:11:08 AI_Player.update()		110,	101,	1010,	111,	1001,	1100,	101
2017-01-05 14:11:08 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1010,	1011
2017-01-05 14:11:08 AI_Player.update()		11,	111,	1010,	111,	11,	1011,	110
2017-01-05 14:11:08 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	111,	1001
2017-01-05 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()	update
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:08 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:08 AI_Player.update()	Player a has won!
2017-01-05 14:11:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:08 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:08 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()	update
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:08 AI_Player.update()	Search took81ms
2017-01-05 14:11:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-05 14:11:08 AI_Player.update()		11,	1010,	1010,	101,	1001,	101,	101
2017-01-05 14:11:08 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-05 14:11:08 AI_Player.update()		1010,	111,	1101,	11,	101,	101,	11
2017-01-05 14:11:08 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:11:08 AI_Player.update()		101,	110,	110,	101,	1001,	111,	1010
2017-01-05 14:11:08 AI_Player.update()		1100,	101,	1101,	110,	1101,	1001,	1001
2017-01-05 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()	update
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()	update
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:08 AI_Player.update()	Search took0ms
2017-01-05 14:11:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-05 14:11:08 AI_Player.update()		11,	1010,	1010,	101,	1001,	1001,	101
2017-01-05 14:11:08 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:08 AI_Player.update()		1010,	111,	1101,	11,	101,	1010,	11
2017-01-05 14:11:08 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	111,	1011
2017-01-05 14:11:08 AI_Player.update()		101,	110,	110,	101,	1001,	1001,	1010
2017-01-05 14:11:08 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-05 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()	update
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()	update
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:08 AI_Player.update()	Search took119ms
2017-01-05 14:11:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:11:08 AI_Player.update()		11,	110,	1010,	101,	1001,	1001,	101
2017-01-05 14:11:08 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:08 AI_Player.update()		1010,	101,	1101,	11,	101,	1010,	11
2017-01-05 14:11:08 AI_Player.update()		1110,	111,	1101,	1101,	1011,	111,	1011
2017-01-05 14:11:08 AI_Player.update()		101,	1100,	110,	101,	1001,	1001,	1010
2017-01-05 14:11:08 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-05 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()	update
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()	update
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:08 AI_Player.update()	Search took1ms
2017-01-05 14:11:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:11:08 AI_Player.update()		11,	110,	1010,	1001,	1001,	1001,	101
2017-01-05 14:11:08 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 14:11:08 AI_Player.update()		1010,	101,	1101,	1101,	101,	1010,	11
2017-01-05 14:11:08 AI_Player.update()		1110,	111,	1101,	101,	1011,	111,	1011
2017-01-05 14:11:08 AI_Player.update()		101,	1100,	110,	110,	1001,	1001,	1010
2017-01-05 14:11:08 AI_Player.update()		1100,	110,	1101,	1100,	1101,	11,	1001
2017-01-05 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()	update
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:08 AI_Player.update()	update
2017-01-05 14:11:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:09 AI_Player.update()	Search took716ms
2017-01-05 14:11:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:11:09 AI_Player.update()		11,	110,	1010,	101,	1001,	1001,	101
2017-01-05 14:11:09 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:09 AI_Player.update()		1010,	101,	1101,	11,	101,	1010,	11
2017-01-05 14:11:09 AI_Player.update()		1110,	111,	1101,	1101,	1011,	111,	1011
2017-01-05 14:11:09 AI_Player.update()		101,	1100,	110,	101,	1001,	1001,	1010
2017-01-05 14:11:09 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-05 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()	update
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()	update
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:09 AI_Player.update()	Search took3ms
2017-01-05 14:11:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-05 14:11:09 AI_Player.update()		11,	1010,	1010,	101,	1001,	1001,	101
2017-01-05 14:11:09 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:09 AI_Player.update()		1010,	111,	1101,	11,	101,	1010,	11
2017-01-05 14:11:09 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	111,	1011
2017-01-05 14:11:09 AI_Player.update()		101,	110,	110,	101,	1001,	1001,	1010
2017-01-05 14:11:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-05 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()	update
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()	update
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:09 AI_Player.update()	Search took284ms
2017-01-05 14:11:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:11:09 AI_Player.update()		11,	1010,	1010,	1001,	1001,	1001,	101
2017-01-05 14:11:09 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-05 14:11:09 AI_Player.update()		1010,	111,	1101,	1101,	101,	1010,	11
2017-01-05 14:11:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	111,	1011
2017-01-05 14:11:09 AI_Player.update()		101,	110,	110,	110,	1001,	1001,	1010
2017-01-05 14:11:09 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-05 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()	update
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()	update
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:09 AI_Player.update()	Search took1ms
2017-01-05 14:11:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 14:11:09 AI_Player.update()		11,	101,	1010,	1001,	1001,	1001,	101
2017-01-05 14:11:09 AI_Player.update()		1110,	111,	1110,	11,	111,	101,	1011
2017-01-05 14:11:09 AI_Player.update()		1010,	1100,	1101,	1101,	101,	1010,	11
2017-01-05 14:11:09 AI_Player.update()		1110,	110,	1101,	101,	1011,	111,	1011
2017-01-05 14:11:09 AI_Player.update()		101,	101,	110,	110,	1001,	1001,	1010
2017-01-05 14:11:09 AI_Player.update()		1100,	110,	1101,	1100,	1101,	11,	1001
2017-01-05 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()	update
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()	update
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:09 AI_Player.update()	Search took632ms
2017-01-05 14:11:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:11:09 AI_Player.update()		11,	111,	1010,	1001,	1001,	1001,	101
2017-01-05 14:11:09 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-05 14:11:09 AI_Player.update()		1010,	110,	1101,	1101,	101,	1010,	11
2017-01-05 14:11:09 AI_Player.update()		1110,	101,	1101,	101,	1011,	111,	1011
2017-01-05 14:11:09 AI_Player.update()		101,	110,	110,	110,	1001,	1001,	1010
2017-01-05 14:11:09 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-05 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()	update
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:09 AI_Player.update()	update
2017-01-05 14:11:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:10 AI_Player.update()	Search took3ms
2017-01-05 14:11:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:10 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:11:10 AI_Player.update()		11,	111,	1010,	1001,	1001,	1001,	101
2017-01-05 14:11:10 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-05 14:11:10 AI_Player.update()		110,	1101,	1101,	101,	1010,	11,	1010
2017-01-05 14:11:10 AI_Player.update()		1110,	101,	1101,	101,	1011,	111,	1011
2017-01-05 14:11:10 AI_Player.update()		101,	110,	110,	110,	1001,	1001,	1010
2017-01-05 14:11:10 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-05 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:10 AI_Player.update()	update
2017-01-05 14:11:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:11:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:10 AI_Player.update()	update
2017-01-05 14:11:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:10 AI_Player.update()	Search took925ms
2017-01-05 14:11:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:10 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-05 14:11:10 AI_Player.update()		11,	111,	1010,	1001,	1001,	101,	101
2017-01-05 14:11:10 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-05 14:11:10 AI_Player.update()		110,	1101,	1101,	101,	1010,	111,	1010
2017-01-05 14:11:10 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:11:10 AI_Player.update()		101,	110,	110,	110,	1001,	11,	1010
2017-01-05 14:11:10 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:10 AI_Player.update()	update
2017-01-05 14:11:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:11:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:10 AI_Player.update()	update
2017-01-05 14:11:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:10 AI_Player.update()	Search took6ms
2017-01-05 14:11:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:10 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-05 14:11:10 AI_Player.update()		11,	1100,	1010,	1001,	1001,	101,	101
2017-01-05 14:11:10 AI_Player.update()		1110,	1101,	1110,	11,	111,	11,	1011
2017-01-05 14:11:10 AI_Player.update()		110,	101,	1101,	101,	1010,	111,	1010
2017-01-05 14:11:10 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-05 14:11:10 AI_Player.update()		101,	1010,	110,	110,	1001,	11,	1010
2017-01-05 14:11:10 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-05 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:10 AI_Player.update()	update
2017-01-05 14:11:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:11:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:10 AI_Player.update()	update
2017-01-05 14:11:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:11 AI_Player.update()	Search took524ms
2017-01-05 14:11:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:11 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-05 14:11:11 AI_Player.update()		11,	1101,	1010,	1001,	1001,	101,	101
2017-01-05 14:11:11 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 14:11:11 AI_Player.update()		110,	110,	1101,	101,	1010,	111,	1010
2017-01-05 14:11:11 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 14:11:11 AI_Player.update()		101,	101,	110,	110,	1001,	11,	1010
2017-01-05 14:11:11 AI_Player.update()		1100,	111,	1101,	1100,	1101,	101,	1001
2017-01-05 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:11 AI_Player.update()	update
2017-01-05 14:11:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:11:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:11 AI_Player.update()	update
2017-01-05 14:11:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:11 AI_Player.update()	Search took4ms
2017-01-05 14:11:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:11 AI_Player.update()		110,	1101,	111,	101,	111,	1001,	11
2017-01-05 14:11:11 AI_Player.update()		11,	101,	1010,	1001,	1001,	101,	101
2017-01-05 14:11:11 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-05 14:11:11 AI_Player.update()		110,	1010,	1101,	101,	1010,	111,	1010
2017-01-05 14:11:11 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:11:11 AI_Player.update()		101,	111,	110,	110,	1001,	11,	1010
2017-01-05 14:11:11 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-05 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:11 AI_Player.update()	update
2017-01-05 14:11:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:11:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:11 AI_Player.update()	update
2017-01-05 14:11:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:12 AI_Player.update()	Search took538ms
2017-01-05 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-05 14:11:12 AI_Player.update()		11,	110,	1010,	1001,	1001,	101,	101
2017-01-05 14:11:12 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-05 14:11:12 AI_Player.update()		110,	101,	1101,	101,	1010,	111,	1010
2017-01-05 14:11:12 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-05 14:11:12 AI_Player.update()		101,	1100,	110,	110,	1001,	11,	1010
2017-01-05 14:11:12 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	101,	1001
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:12 AI_Player.update()	Player a has won!
2017-01-05 14:11:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:12 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:12 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:12 AI_Player.update()	Search took25ms
2017-01-05 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-05 14:11:12 AI_Player.update()		110,	111,	1100,	1010,	101,	110,	101
2017-01-05 14:11:12 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 14:11:12 AI_Player.update()		1001,	1100,	1001,	1110,	1100,	110,	110
2017-01-05 14:11:12 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-05 14:11:12 AI_Player.update()		11,	101,	1100,	1001,	110,	1100,	101
2017-01-05 14:11:12 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:12 AI_Player.update()	Search took1ms
2017-01-05 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 14:11:12 AI_Player.update()		110,	111,	1100,	1010,	101,	1100,	101
2017-01-05 14:11:12 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:12 AI_Player.update()		1001,	1100,	1001,	1110,	1100,	1011,	110
2017-01-05 14:11:12 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 14:11:12 AI_Player.update()		11,	101,	1100,	1001,	110,	110,	101
2017-01-05 14:11:12 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:12 AI_Player.update()	Search took104ms
2017-01-05 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 14:11:12 AI_Player.update()		111,	1100,	1010,	101,	1100,	101,	110
2017-01-05 14:11:12 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:12 AI_Player.update()		1001,	1100,	1001,	1110,	1100,	1011,	110
2017-01-05 14:11:12 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 14:11:12 AI_Player.update()		11,	101,	1100,	1001,	110,	110,	101
2017-01-05 14:11:12 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:12 AI_Player.update()	Search took1ms
2017-01-05 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:11:12 AI_Player.update()		111,	1100,	1010,	101,	1100,	101,	110
2017-01-05 14:11:12 AI_Player.update()		1110,	101,	1110,	1110,	111,	110,	1011
2017-01-05 14:11:12 AI_Player.update()		1001,	1100,	1001,	101,	1100,	1011,	110
2017-01-05 14:11:12 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:12 AI_Player.update()		11,	101,	1100,	1010,	110,	110,	101
2017-01-05 14:11:12 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:12 AI_Player.update()	Search took295ms
2017-01-05 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:11:12 AI_Player.update()		111,	101,	1010,	101,	1100,	101,	110
2017-01-05 14:11:12 AI_Player.update()		1110,	1100,	1110,	1110,	111,	110,	1011
2017-01-05 14:11:12 AI_Player.update()		1001,	101,	1001,	101,	1100,	1011,	110
2017-01-05 14:11:12 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:12 AI_Player.update()		11,	1010,	1100,	1010,	110,	110,	101
2017-01-05 14:11:12 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:12 AI_Player.update()	Search took1ms
2017-01-05 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:11:12 AI_Player.update()		111,	1100,	1010,	101,	1100,	101,	110
2017-01-05 14:11:12 AI_Player.update()		1110,	101,	1110,	1110,	111,	110,	1011
2017-01-05 14:11:12 AI_Player.update()		1001,	1100,	1001,	101,	1100,	1011,	110
2017-01-05 14:11:12 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:12 AI_Player.update()		11,	101,	1100,	1010,	110,	110,	101
2017-01-05 14:11:12 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:12 AI_Player.update()	Search took273ms
2017-01-05 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:11:12 AI_Player.update()		111,	1100,	1010,	1110,	1100,	101,	110
2017-01-05 14:11:12 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:12 AI_Player.update()		1001,	1100,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:12 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:12 AI_Player.update()		11,	101,	1100,	1010,	110,	110,	101
2017-01-05 14:11:12 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:12 AI_Player.update()	Search took2ms
2017-01-05 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:11:12 AI_Player.update()		1100,	1010,	1110,	1100,	101,	110,	111
2017-01-05 14:11:12 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:12 AI_Player.update()		1001,	1100,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:12 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:12 AI_Player.update()		11,	101,	1100,	1010,	110,	110,	101
2017-01-05 14:11:12 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:12 AI_Player.update()	update
2017-01-05 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took410ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	1010,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	1010,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took2ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	1100,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	101,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	101,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took109ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	1010,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	1010,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took1ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	101,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	101,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took34ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	1010,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	1100,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took4ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	101,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	1010,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took39ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	1010,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	1100,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took2ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	101,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	1010,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took61ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	1010,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	1100,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took2ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	101,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	101,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took30ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	1010,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	1010,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took2ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	101,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	101,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took25ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	1010,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	1010,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took3ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	1100,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	101,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	101,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took30ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	1010,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	1010,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took2ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	1100,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	101,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	101,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took31ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	1010,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	1010,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took2ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1110,	1100,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	1100,	1001,	1001,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	101,	1100,	1010,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took27ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1110,	101,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	1100,	1001,	1010,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	101,	1100,	101,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took4ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1110,	101,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1001,	1010,	1001,	1010,	1100,	1011,	110
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	1010,	1100,	101,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took124ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1110,	101,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1010,	1001,	1010,	1100,	1011,	110,	1001
2017-01-05 14:11:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	1010,	1100,	101,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:13 AI_Player.update()	Search took3ms
2017-01-05 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 14:11:13 AI_Player.update()		1100,	1100,	1110,	101,	101,	110,	111
2017-01-05 14:11:13 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 14:11:13 AI_Player.update()		1010,	101,	1010,	1100,	1011,	110,	1001
2017-01-05 14:11:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:13 AI_Player.update()		11,	101,	1100,	101,	110,	110,	101
2017-01-05 14:11:13 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:13 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:13 AI_Player.update()	update
2017-01-05 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:14 AI_Player.update()	Search took278ms
2017-01-05 14:11:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-05 14:11:14 AI_Player.update()		1100,	101,	1110,	101,	101,	110,	111
2017-01-05 14:11:14 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-05 14:11:14 AI_Player.update()		1010,	1001,	1010,	1100,	1011,	110,	1001
2017-01-05 14:11:14 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:14 AI_Player.update()		11,	1010,	1100,	101,	110,	110,	101
2017-01-05 14:11:14 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:14 AI_Player.update()	Search took2ms
2017-01-05 14:11:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 14:11:14 AI_Player.update()		1100,	1100,	1110,	101,	101,	110,	111
2017-01-05 14:11:14 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 14:11:14 AI_Player.update()		1010,	101,	1010,	1100,	1011,	110,	1001
2017-01-05 14:11:14 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:14 AI_Player.update()		11,	101,	1100,	101,	110,	110,	101
2017-01-05 14:11:14 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:14 AI_Player.update()	Search took143ms
2017-01-05 14:11:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()		110,	1100,	111,	1100,	111,	110,	11
2017-01-05 14:11:14 AI_Player.update()		1100,	1001,	1110,	101,	101,	110,	111
2017-01-05 14:11:14 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-05 14:11:14 AI_Player.update()		1010,	1010,	1010,	1100,	1011,	110,	1001
2017-01-05 14:11:14 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:14 AI_Player.update()		11,	1010,	1100,	101,	110,	110,	101
2017-01-05 14:11:14 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:14 AI_Player.update()	Search took4ms
2017-01-05 14:11:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()		110,	1001,	111,	1100,	111,	110,	11
2017-01-05 14:11:14 AI_Player.update()		1100,	101,	1110,	101,	101,	110,	111
2017-01-05 14:11:14 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-05 14:11:14 AI_Player.update()		1010,	101,	1010,	1100,	1011,	110,	1001
2017-01-05 14:11:14 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:14 AI_Player.update()		11,	101,	1100,	101,	110,	110,	101
2017-01-05 14:11:14 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:14 AI_Player.update()	Search took230ms
2017-01-05 14:11:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 14:11:14 AI_Player.update()		1100,	1010,	1110,	101,	101,	110,	111
2017-01-05 14:11:14 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-05 14:11:14 AI_Player.update()		1010,	1010,	1010,	1100,	1011,	110,	1001
2017-01-05 14:11:14 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:11:14 AI_Player.update()		11,	1100,	1100,	101,	110,	110,	101
2017-01-05 14:11:14 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:14 AI_Player.update()	Player a has won!
2017-01-05 14:11:14 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:14 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:14 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:14 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:14 AI_Player.update()	Search took326ms
2017-01-05 14:11:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()		110,	11,	111,	1100,	111,	1100,	11
2017-01-05 14:11:14 AI_Player.update()		1010,	1110,	1101,	101,	1001,	1010,	111
2017-01-05 14:11:14 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-05 14:11:14 AI_Player.update()		1100,	101,	1001,	1010,	101,	11,	101
2017-01-05 14:11:14 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 14:11:14 AI_Player.update()		1001,	1010,	1100,	111,	111,	11,	1100
2017-01-05 14:11:14 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:14 AI_Player.update()	Search took1ms
2017-01-05 14:11:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()		110,	11,	111,	1100,	111,	1100,	11
2017-01-05 14:11:14 AI_Player.update()		1110,	1101,	101,	1001,	1010,	111,	1010
2017-01-05 14:11:14 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-05 14:11:14 AI_Player.update()		1100,	101,	1001,	1010,	101,	11,	101
2017-01-05 14:11:14 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 14:11:14 AI_Player.update()		1001,	1010,	1100,	111,	111,	11,	1100
2017-01-05 14:11:14 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:14 AI_Player.update()	update
2017-01-05 14:11:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:15 AI_Player.update()	Search took271ms
2017-01-05 14:11:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:15 AI_Player.update()		110,	11,	111,	1100,	111,	1100,	11
2017-01-05 14:11:15 AI_Player.update()		1110,	1101,	101,	1001,	1010,	111,	1010
2017-01-05 14:11:15 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-05 14:11:15 AI_Player.update()		101,	1001,	1010,	101,	11,	101,	1100
2017-01-05 14:11:15 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 14:11:15 AI_Player.update()		1001,	1010,	1100,	111,	111,	11,	1100
2017-01-05 14:11:15 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:15 AI_Player.update()	update
2017-01-05 14:11:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:15 AI_Player.update()	update
2017-01-05 14:11:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:15 AI_Player.update()	Search took3ms
2017-01-05 14:11:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:15 AI_Player.update()		110,	11,	111,	1001,	111,	1100,	11
2017-01-05 14:11:15 AI_Player.update()		1110,	1101,	101,	11,	1010,	111,	1010
2017-01-05 14:11:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:11:15 AI_Player.update()		101,	1001,	1010,	111,	11,	101,	1100
2017-01-05 14:11:15 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 14:11:15 AI_Player.update()		1001,	1010,	1100,	1100,	111,	11,	1100
2017-01-05 14:11:15 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:15 AI_Player.update()	update
2017-01-05 14:11:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:15 AI_Player.update()	update
2017-01-05 14:11:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:15 AI_Player.update()	Search took607ms
2017-01-05 14:11:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:15 AI_Player.update()		110,	11,	111,	1001,	111,	1100,	11
2017-01-05 14:11:15 AI_Player.update()		1010,	1110,	1101,	101,	11,	1010,	111
2017-01-05 14:11:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:11:15 AI_Player.update()		101,	1001,	1010,	111,	11,	101,	1100
2017-01-05 14:11:15 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 14:11:15 AI_Player.update()		1001,	1010,	1100,	1100,	111,	11,	1100
2017-01-05 14:11:15 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:15 AI_Player.update()	update
2017-01-05 14:11:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:15 AI_Player.update()	update
2017-01-05 14:11:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:15 AI_Player.update()	Search took4ms
2017-01-05 14:11:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:15 AI_Player.update()		110,	11,	111,	1001,	111,	1100,	11
2017-01-05 14:11:15 AI_Player.update()		1010,	1110,	1101,	101,	11,	1010,	111
2017-01-05 14:11:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:11:15 AI_Player.update()		101,	1001,	1010,	111,	11,	101,	1100
2017-01-05 14:11:15 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 14:11:15 AI_Player.update()		1100,	1001,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:15 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:15 AI_Player.update()	update
2017-01-05 14:11:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:15 AI_Player.update()	update
2017-01-05 14:11:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:16 AI_Player.update()	Search took919ms
2017-01-05 14:11:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:16 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-05 14:11:16 AI_Player.update()		1010,	11,	1101,	101,	11,	1010,	111
2017-01-05 14:11:16 AI_Player.update()		1110,	1110,	1110,	101,	111,	101,	1011
2017-01-05 14:11:16 AI_Player.update()		101,	1100,	1010,	111,	11,	101,	1100
2017-01-05 14:11:16 AI_Player.update()		1110,	1001,	1101,	111,	1011,	11,	1011
2017-01-05 14:11:16 AI_Player.update()		1100,	110,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:16 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:16 AI_Player.update()	update
2017-01-05 14:11:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:16 AI_Player.update()	update
2017-01-05 14:11:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:16 AI_Player.update()	Search took1ms
2017-01-05 14:11:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:16 AI_Player.update()		110,	11,	111,	1001,	111,	1100,	11
2017-01-05 14:11:16 AI_Player.update()		1010,	1110,	1101,	101,	11,	1010,	111
2017-01-05 14:11:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:11:16 AI_Player.update()		101,	1001,	1010,	111,	11,	101,	1100
2017-01-05 14:11:16 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 14:11:16 AI_Player.update()		1100,	1001,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:16 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:16 AI_Player.update()	update
2017-01-05 14:11:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:16 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:16 AI_Player.update()	update
2017-01-05 14:11:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:17 AI_Player.update()	Search took1002ms
2017-01-05 14:11:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:17 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-05 14:11:17 AI_Player.update()		1010,	1110,	1101,	101,	11,	1010,	111
2017-01-05 14:11:17 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 14:11:17 AI_Player.update()		101,	1001,	1010,	111,	11,	101,	1100
2017-01-05 14:11:17 AI_Player.update()		1110,	110,	1101,	1100,	1011,	11,	1011
2017-01-05 14:11:17 AI_Player.update()		1100,	1001,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:17 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:17 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:17 AI_Player.update()	update
2017-01-05 14:11:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:17 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:17 AI_Player.update()	update
2017-01-05 14:11:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:17 AI_Player.update()	Search took3ms
2017-01-05 14:11:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:17 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-05 14:11:17 AI_Player.update()		1010,	1100,	1101,	101,	11,	1010,	111
2017-01-05 14:11:17 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 14:11:17 AI_Player.update()		101,	110,	1010,	111,	11,	101,	1100
2017-01-05 14:11:17 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	11,	1011
2017-01-05 14:11:17 AI_Player.update()		1100,	1100,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:17 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:17 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:17 AI_Player.update()	update
2017-01-05 14:11:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:17 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:17 AI_Player.update()	update
2017-01-05 14:11:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:18 AI_Player.update()	Search took397ms
2017-01-05 14:11:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-05 14:11:18 AI_Player.update()		1010,	1100,	1101,	101,	11,	1010,	111
2017-01-05 14:11:18 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 14:11:18 AI_Player.update()		1100,	101,	110,	1010,	111,	11,	101
2017-01-05 14:11:18 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	11,	1011
2017-01-05 14:11:18 AI_Player.update()		1100,	1100,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:18 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:18 AI_Player.update()	Search took2ms
2017-01-05 14:11:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-05 14:11:18 AI_Player.update()		1010,	1100,	1101,	101,	11,	1010,	111
2017-01-05 14:11:18 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 14:11:18 AI_Player.update()		101,	110,	1010,	111,	11,	101,	1100
2017-01-05 14:11:18 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	11,	1011
2017-01-05 14:11:18 AI_Player.update()		1100,	1100,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:18 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:18 AI_Player.update()	Search took120ms
2017-01-05 14:11:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-05 14:11:18 AI_Player.update()		1010,	1110,	1101,	101,	11,	1010,	111
2017-01-05 14:11:18 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 14:11:18 AI_Player.update()		101,	1001,	1010,	111,	11,	101,	1100
2017-01-05 14:11:18 AI_Player.update()		1110,	110,	1101,	1100,	1011,	11,	1011
2017-01-05 14:11:18 AI_Player.update()		1100,	1001,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:18 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:18 AI_Player.update()	Search took3ms
2017-01-05 14:11:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-05 14:11:18 AI_Player.update()		1010,	1100,	1101,	101,	11,	1010,	111
2017-01-05 14:11:18 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 14:11:18 AI_Player.update()		101,	110,	1010,	111,	11,	101,	1100
2017-01-05 14:11:18 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	11,	1011
2017-01-05 14:11:18 AI_Player.update()		1100,	1100,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:18 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:18 AI_Player.update()	Search took208ms
2017-01-05 14:11:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-05 14:11:18 AI_Player.update()		1010,	1110,	1101,	101,	11,	1010,	111
2017-01-05 14:11:18 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 14:11:18 AI_Player.update()		101,	1001,	1010,	111,	11,	101,	1100
2017-01-05 14:11:18 AI_Player.update()		1110,	110,	1101,	1100,	1011,	11,	1011
2017-01-05 14:11:18 AI_Player.update()		1100,	1001,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:18 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:18 AI_Player.update()	Search took6ms
2017-01-05 14:11:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-05 14:11:18 AI_Player.update()		1010,	11,	1101,	101,	11,	1010,	111
2017-01-05 14:11:18 AI_Player.update()		1110,	1110,	1110,	111,	111,	101,	1011
2017-01-05 14:11:18 AI_Player.update()		101,	1100,	1010,	111,	11,	101,	1100
2017-01-05 14:11:18 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	11,	1011
2017-01-05 14:11:18 AI_Player.update()		1100,	110,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:18 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:18 AI_Player.update()	Search took110ms
2017-01-05 14:11:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 14:11:18 AI_Player.update()		1010,	1100,	1101,	101,	11,	1010,	111
2017-01-05 14:11:18 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-05 14:11:18 AI_Player.update()		101,	1110,	1010,	111,	11,	101,	1100
2017-01-05 14:11:18 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-05 14:11:18 AI_Player.update()		1100,	1001,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:18 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:18 AI_Player.update()	Search took5ms
2017-01-05 14:11:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-05 14:11:18 AI_Player.update()		1010,	11,	1101,	101,	11,	1010,	111
2017-01-05 14:11:18 AI_Player.update()		1110,	1110,	1110,	111,	111,	101,	1011
2017-01-05 14:11:18 AI_Player.update()		101,	1100,	1010,	111,	11,	101,	1100
2017-01-05 14:11:18 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	11,	1011
2017-01-05 14:11:18 AI_Player.update()		1100,	110,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:18 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:18 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:18 AI_Player.update()	update
2017-01-05 14:11:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:19 AI_Player.update()	Search took425ms
2017-01-05 14:11:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-05 14:11:19 AI_Player.update()		1010,	11,	1101,	101,	11,	1010,	111
2017-01-05 14:11:19 AI_Player.update()		1110,	1110,	1110,	101,	111,	101,	1011
2017-01-05 14:11:19 AI_Player.update()		101,	1100,	1010,	111,	11,	101,	1100
2017-01-05 14:11:19 AI_Player.update()		1110,	1001,	1101,	111,	1011,	11,	1011
2017-01-05 14:11:19 AI_Player.update()		1100,	110,	1010,	1100,	1100,	111,	11
2017-01-05 14:11:19 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()	update
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()	update
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:19 AI_Player.update()	Search took5ms
2017-01-05 14:11:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-05 14:11:19 AI_Player.update()		1010,	11,	1101,	101,	11,	101,	111
2017-01-05 14:11:19 AI_Player.update()		1110,	1110,	1110,	101,	111,	101,	1011
2017-01-05 14:11:19 AI_Player.update()		101,	1100,	1010,	111,	11,	11,	1100
2017-01-05 14:11:19 AI_Player.update()		1110,	1001,	1101,	111,	1011,	111,	1011
2017-01-05 14:11:19 AI_Player.update()		1100,	110,	1010,	1100,	1100,	1001,	11
2017-01-05 14:11:19 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:11:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()	update
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()	update
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:19 AI_Player.update()	Search took186ms
2017-01-05 14:11:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-05 14:11:19 AI_Player.update()		1010,	11,	1101,	101,	11,	101,	111
2017-01-05 14:11:19 AI_Player.update()		1110,	1110,	1110,	101,	111,	101,	1011
2017-01-05 14:11:19 AI_Player.update()		101,	1100,	1010,	111,	11,	11,	1100
2017-01-05 14:11:19 AI_Player.update()		1110,	1001,	1101,	111,	1011,	111,	1011
2017-01-05 14:11:19 AI_Player.update()		11,	1100,	110,	1010,	1100,	1100,	1001
2017-01-05 14:11:19 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:11:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()	update
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()	update
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:19 AI_Player.update()	Search took4ms
2017-01-05 14:11:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-05 14:11:19 AI_Player.update()		1010,	11,	1101,	101,	11,	1010,	111
2017-01-05 14:11:19 AI_Player.update()		1110,	1110,	1110,	101,	111,	101,	1011
2017-01-05 14:11:19 AI_Player.update()		101,	1100,	1010,	111,	11,	101,	1100
2017-01-05 14:11:19 AI_Player.update()		1110,	1001,	1101,	111,	1011,	11,	1011
2017-01-05 14:11:19 AI_Player.update()		11,	1100,	110,	1010,	1100,	111,	1001
2017-01-05 14:11:19 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:11:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()	update
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:11:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()	update
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:19 AI_Player.update()	Search took727ms
2017-01-05 14:11:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-05 14:11:19 AI_Player.update()		1010,	1100,	1101,	101,	11,	1010,	111
2017-01-05 14:11:19 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 14:11:19 AI_Player.update()		101,	1110,	1010,	111,	11,	101,	1100
2017-01-05 14:11:19 AI_Player.update()		1110,	1100,	1101,	111,	1011,	11,	1011
2017-01-05 14:11:19 AI_Player.update()		11,	1001,	110,	1010,	1100,	111,	1001
2017-01-05 14:11:19 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:11:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:11:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()	update
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:19 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:19 AI_Player.update()	Player a has won!
2017-01-05 14:11:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:19 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:19 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:19 AI_Player.update()	update
2017-01-05 14:11:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:20 AI_Player.update()	Search took48ms
2017-01-05 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-05 14:11:20 AI_Player.update()		11,	1001,	1001,	101,	1010,	11,	110
2017-01-05 14:11:20 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 14:11:20 AI_Player.update()		11,	1001,	1001,	110,	101,	110,	1010
2017-01-05 14:11:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:20 AI_Player.update()		1001,	101,	1110,	101,	11,	101,	110
2017-01-05 14:11:20 AI_Player.update()		1100,	110,	1101,	1110,	1101,	101,	1001
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:20 AI_Player.update()	Search took0ms
2017-01-05 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 14:11:20 AI_Player.update()		11,	1001,	1001,	101,	1010,	1100,	110
2017-01-05 14:11:20 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 14:11:20 AI_Player.update()		11,	1001,	1001,	110,	101,	1100,	1010
2017-01-05 14:11:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:20 AI_Player.update()		1001,	101,	1110,	101,	11,	110,	110
2017-01-05 14:11:20 AI_Player.update()		1100,	110,	1101,	1110,	1101,	101,	1001
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:20 AI_Player.update()	Search took61ms
2017-01-05 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 14:11:20 AI_Player.update()		11,	101,	1001,	101,	1010,	1100,	110
2017-01-05 14:11:20 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 14:11:20 AI_Player.update()		11,	101,	1001,	110,	101,	1100,	1010
2017-01-05 14:11:20 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:20 AI_Player.update()		1001,	1100,	1110,	101,	11,	110,	110
2017-01-05 14:11:20 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:20 AI_Player.update()	Search took1ms
2017-01-05 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:11:20 AI_Player.update()		11,	101,	1001,	101,	1010,	1100,	110
2017-01-05 14:11:20 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-05 14:11:20 AI_Player.update()		11,	101,	1001,	101,	101,	1100,	1010
2017-01-05 14:11:20 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:20 AI_Player.update()		1001,	1100,	1110,	1110,	11,	110,	110
2017-01-05 14:11:20 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:20 AI_Player.update()	Search took144ms
2017-01-05 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:11:20 AI_Player.update()		101,	1001,	101,	1010,	1100,	110,	11
2017-01-05 14:11:20 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-05 14:11:20 AI_Player.update()		11,	101,	1001,	101,	101,	1100,	1010
2017-01-05 14:11:20 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:20 AI_Player.update()		1001,	1100,	1110,	1110,	11,	110,	110
2017-01-05 14:11:20 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:20 AI_Player.update()	Search took2ms
2017-01-05 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-05 14:11:20 AI_Player.update()		101,	1001,	101,	1010,	1100,	110,	11
2017-01-05 14:11:20 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 14:11:20 AI_Player.update()		11,	1001,	1001,	101,	101,	1100,	1010
2017-01-05 14:11:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:20 AI_Player.update()		1001,	101,	1110,	1110,	11,	110,	110
2017-01-05 14:11:20 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:20 AI_Player.update()	Search took139ms
2017-01-05 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-05 14:11:20 AI_Player.update()		101,	1001,	101,	1010,	1100,	110,	11
2017-01-05 14:11:20 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 14:11:20 AI_Player.update()		11,	1001,	1001,	101,	101,	1100,	1010
2017-01-05 14:11:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:20 AI_Player.update()		110,	1001,	101,	1110,	1110,	11,	110
2017-01-05 14:11:20 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:20 AI_Player.update()	Search took1ms
2017-01-05 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-05 14:11:20 AI_Player.update()		101,	101,	101,	1010,	1100,	110,	11
2017-01-05 14:11:20 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-05 14:11:20 AI_Player.update()		11,	1100,	1001,	101,	101,	1100,	1010
2017-01-05 14:11:20 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:20 AI_Player.update()		110,	110,	101,	1110,	1110,	11,	110
2017-01-05 14:11:20 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:20 AI_Player.update()	Search took167ms
2017-01-05 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 14:11:20 AI_Player.update()		101,	101,	101,	1010,	1100,	11,	11
2017-01-05 14:11:20 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:20 AI_Player.update()		11,	1100,	1001,	101,	101,	110,	1010
2017-01-05 14:11:20 AI_Player.update()		1110,	1001,	1101,	101,	1011,	11,	1011
2017-01-05 14:11:20 AI_Player.update()		110,	110,	101,	1110,	1110,	101,	110
2017-01-05 14:11:20 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:20 AI_Player.update()	Search took1ms
2017-01-05 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:11:20 AI_Player.update()		101,	1001,	101,	1010,	1100,	11,	11
2017-01-05 14:11:20 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:20 AI_Player.update()		11,	1001,	1001,	101,	101,	110,	1010
2017-01-05 14:11:20 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-05 14:11:20 AI_Player.update()		110,	1001,	101,	1110,	1110,	101,	110
2017-01-05 14:11:20 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:20 AI_Player.update()	Search took327ms
2017-01-05 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:11:20 AI_Player.update()		1001,	101,	1010,	1100,	11,	11,	101
2017-01-05 14:11:20 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:20 AI_Player.update()		11,	1001,	1001,	101,	101,	110,	1010
2017-01-05 14:11:20 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-05 14:11:20 AI_Player.update()		110,	1001,	101,	1110,	1110,	101,	110
2017-01-05 14:11:20 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:20 AI_Player.update()	Search took1ms
2017-01-05 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 14:11:20 AI_Player.update()		1001,	101,	1010,	1100,	11,	1100,	101
2017-01-05 14:11:20 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-05 14:11:20 AI_Player.update()		11,	1001,	1001,	101,	101,	11,	1010
2017-01-05 14:11:20 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-05 14:11:20 AI_Player.update()		110,	1001,	101,	1110,	1110,	101,	110
2017-01-05 14:11:20 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	110,	1001
2017-01-05 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:20 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:20 AI_Player.update()	update
2017-01-05 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:21 AI_Player.update()	Search took261ms
2017-01-05 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 14:11:21 AI_Player.update()		1001,	1100,	1010,	1100,	11,	1100,	101
2017-01-05 14:11:21 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 14:11:21 AI_Player.update()		11,	110,	1001,	101,	101,	11,	1010
2017-01-05 14:11:21 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-05 14:11:21 AI_Player.update()		110,	1001,	101,	1110,	1110,	101,	110
2017-01-05 14:11:21 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:21 AI_Player.update()	Search took3ms
2017-01-05 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-05 14:11:21 AI_Player.update()		1001,	1001,	1010,	1100,	11,	1100,	101
2017-01-05 14:11:21 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 14:11:21 AI_Player.update()		11,	1001,	1001,	101,	101,	11,	1010
2017-01-05 14:11:21 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-05 14:11:21 AI_Player.update()		110,	101,	101,	1110,	1110,	101,	110
2017-01-05 14:11:21 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:21 AI_Player.update()	Search took174ms
2017-01-05 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-05 14:11:21 AI_Player.update()		1001,	1001,	1010,	1100,	11,	1100,	101
2017-01-05 14:11:21 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 14:11:21 AI_Player.update()		1001,	1001,	101,	101,	11,	1010,	11
2017-01-05 14:11:21 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-05 14:11:21 AI_Player.update()		110,	101,	101,	1110,	1110,	101,	110
2017-01-05 14:11:21 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:21 AI_Player.update()	Search took1ms
2017-01-05 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-05 14:11:21 AI_Player.update()		1001,	110,	1010,	1100,	11,	1100,	101
2017-01-05 14:11:21 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 14:11:21 AI_Player.update()		1001,	1001,	101,	101,	11,	1010,	11
2017-01-05 14:11:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 14:11:21 AI_Player.update()		110,	101,	101,	1110,	1110,	101,	110
2017-01-05 14:11:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:21 AI_Player.update()	Search took104ms
2017-01-05 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 14:11:21 AI_Player.update()		1001,	110,	1010,	1100,	11,	11,	101
2017-01-05 14:11:21 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:21 AI_Player.update()		1001,	1001,	101,	101,	11,	110,	11
2017-01-05 14:11:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:21 AI_Player.update()		110,	101,	101,	1110,	1110,	101,	110
2017-01-05 14:11:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:21 AI_Player.update()	Search took1ms
2017-01-05 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 14:11:21 AI_Player.update()		1001,	1001,	1010,	1100,	11,	11,	101
2017-01-05 14:11:21 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:21 AI_Player.update()		1001,	101,	101,	101,	11,	110,	11
2017-01-05 14:11:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:21 AI_Player.update()		110,	1100,	101,	1110,	1110,	101,	110
2017-01-05 14:11:21 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:21 AI_Player.update()	Search took129ms
2017-01-05 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 14:11:21 AI_Player.update()		101,	1001,	1001,	1010,	1100,	11,	11
2017-01-05 14:11:21 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:21 AI_Player.update()		1001,	101,	101,	101,	11,	110,	11
2017-01-05 14:11:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:21 AI_Player.update()		110,	1100,	101,	1110,	1110,	101,	110
2017-01-05 14:11:21 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:21 AI_Player.update()	Search took4ms
2017-01-05 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 14:11:21 AI_Player.update()		101,	110,	1001,	1010,	1100,	11,	11
2017-01-05 14:11:21 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:21 AI_Player.update()		1001,	1001,	101,	101,	11,	110,	11
2017-01-05 14:11:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:21 AI_Player.update()		110,	101,	101,	1110,	1110,	101,	110
2017-01-05 14:11:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:21 AI_Player.update()	Search took218ms
2017-01-05 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 14:11:21 AI_Player.update()		101,	1001,	1001,	1010,	1100,	11,	11
2017-01-05 14:11:21 AI_Player.update()		1110,	110,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:21 AI_Player.update()		1001,	1001,	101,	101,	11,	110,	11
2017-01-05 14:11:21 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:21 AI_Player.update()		110,	101,	101,	1110,	1110,	101,	110
2017-01-05 14:11:21 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:21 AI_Player.update()	Search took1ms
2017-01-05 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 14:11:21 AI_Player.update()		101,	110,	1001,	1010,	1100,	11,	11
2017-01-05 14:11:21 AI_Player.update()		1110,	1001,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:21 AI_Player.update()		1001,	1001,	101,	101,	11,	110,	11
2017-01-05 14:11:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:21 AI_Player.update()		110,	101,	101,	1110,	1110,	101,	110
2017-01-05 14:11:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:21 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:21 AI_Player.update()	update
2017-01-05 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:22 AI_Player.update()	Search took114ms
2017-01-05 14:11:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 14:11:22 AI_Player.update()		101,	1001,	1001,	1010,	1100,	11,	11
2017-01-05 14:11:22 AI_Player.update()		1110,	110,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:22 AI_Player.update()		1001,	1001,	101,	101,	11,	110,	11
2017-01-05 14:11:22 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:22 AI_Player.update()		110,	101,	101,	1110,	1110,	101,	110
2017-01-05 14:11:22 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:22 AI_Player.update()	Search took3ms
2017-01-05 14:11:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 14:11:22 AI_Player.update()		101,	1001,	1001,	1010,	1100,	110,	11
2017-01-05 14:11:22 AI_Player.update()		1110,	110,	1110,	110,	111,	11,	1011
2017-01-05 14:11:22 AI_Player.update()		1001,	1001,	101,	101,	11,	1100,	11
2017-01-05 14:11:22 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:22 AI_Player.update()		110,	101,	101,	1110,	1110,	1010,	110
2017-01-05 14:11:22 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:22 AI_Player.update()	Search took96ms
2017-01-05 14:11:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 14:11:22 AI_Player.update()		101,	1001,	1001,	1010,	1100,	11,	11
2017-01-05 14:11:22 AI_Player.update()		1110,	110,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:22 AI_Player.update()		1001,	1001,	101,	101,	11,	110,	11
2017-01-05 14:11:22 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:22 AI_Player.update()		110,	101,	101,	1110,	1110,	101,	110
2017-01-05 14:11:22 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:22 AI_Player.update()	Search took2ms
2017-01-05 14:11:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:11:22 AI_Player.update()		101,	1001,	1001,	110,	1100,	11,	11
2017-01-05 14:11:22 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-05 14:11:22 AI_Player.update()		1001,	1001,	101,	101,	11,	110,	11
2017-01-05 14:11:22 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1010,	1011
2017-01-05 14:11:22 AI_Player.update()		110,	101,	101,	1010,	1110,	101,	110
2017-01-05 14:11:22 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:22 AI_Player.update()	Search took108ms
2017-01-05 14:11:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 14:11:22 AI_Player.update()		101,	1100,	1001,	110,	1100,	11,	11
2017-01-05 14:11:22 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-05 14:11:22 AI_Player.update()		1001,	110,	101,	101,	11,	110,	11
2017-01-05 14:11:22 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1010,	1011
2017-01-05 14:11:22 AI_Player.update()		110,	1001,	101,	1010,	1110,	101,	110
2017-01-05 14:11:22 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:22 AI_Player.update()	Player a has won!
2017-01-05 14:11:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:22 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:22 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:22 AI_Player.update()	Search took349ms
2017-01-05 14:11:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-05 14:11:22 AI_Player.update()		1100,	1011,	110,	110,	11,	110,	1110
2017-01-05 14:11:22 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:22 AI_Player.update()		1101,	1010,	1010,	1100,	1010,	1101,	101
2017-01-05 14:11:22 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:11:22 AI_Player.update()		1010,	1101,	1110,	11,	1110,	1010,	11
2017-01-05 14:11:22 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:22 AI_Player.update()	Search took5ms
2017-01-05 14:11:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()		110,	1011,	111,	101,	111,	101,	11
2017-01-05 14:11:22 AI_Player.update()		1100,	101,	110,	110,	11,	110,	1110
2017-01-05 14:11:22 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:22 AI_Player.update()		1101,	1110,	1010,	1100,	1010,	1101,	101
2017-01-05 14:11:22 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:11:22 AI_Player.update()		1010,	110,	1110,	11,	1110,	1010,	11
2017-01-05 14:11:22 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:22 AI_Player.update()	update
2017-01-05 14:11:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:24 AI_Player.update()	Search took1570ms
2017-01-05 14:11:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:24 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:11:24 AI_Player.update()		1100,	1010,	110,	110,	11,	110,	1110
2017-01-05 14:11:24 AI_Player.update()		1110,	1110,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:24 AI_Player.update()		1101,	1101,	1010,	1100,	1010,	1101,	101
2017-01-05 14:11:24 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:11:24 AI_Player.update()		1010,	1110,	1110,	11,	1110,	1010,	11
2017-01-05 14:11:24 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:24 AI_Player.update()	update
2017-01-05 14:11:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:24 AI_Player.update()	update
2017-01-05 14:11:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:24 AI_Player.update()	Search took6ms
2017-01-05 14:11:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:24 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 14:11:24 AI_Player.update()		1100,	1110,	110,	110,	11,	110,	1110
2017-01-05 14:11:24 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:24 AI_Player.update()		1101,	110,	1010,	1100,	1010,	1101,	101
2017-01-05 14:11:24 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:11:24 AI_Player.update()		1010,	1011,	1110,	11,	1110,	1010,	11
2017-01-05 14:11:24 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:24 AI_Player.update()	update
2017-01-05 14:11:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:24 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:24 AI_Player.update()	update
2017-01-05 14:11:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:25 AI_Player.update()	Search took1355ms
2017-01-05 14:11:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:25 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 14:11:25 AI_Player.update()		1110,	1100,	1110,	110,	110,	11,	110
2017-01-05 14:11:25 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:25 AI_Player.update()		1101,	110,	1010,	1100,	1010,	1101,	101
2017-01-05 14:11:25 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:11:25 AI_Player.update()		1010,	1011,	1110,	11,	1110,	1010,	11
2017-01-05 14:11:25 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:25 AI_Player.update()	update
2017-01-05 14:11:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:25 AI_Player.update()	update
2017-01-05 14:11:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:25 AI_Player.update()	Search took5ms
2017-01-05 14:11:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:25 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 14:11:25 AI_Player.update()		1110,	1101,	1110,	110,	110,	11,	110
2017-01-05 14:11:25 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:25 AI_Player.update()		1101,	1110,	1010,	1100,	1010,	1101,	101
2017-01-05 14:11:25 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:11:25 AI_Player.update()		1010,	101,	1110,	11,	1110,	1010,	11
2017-01-05 14:11:25 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:25 AI_Player.update()	update
2017-01-05 14:11:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:25 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:25 AI_Player.update()	update
2017-01-05 14:11:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:26 AI_Player.update()	Search took1203ms
2017-01-05 14:11:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:26 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 14:11:26 AI_Player.update()		1101,	1110,	110,	110,	11,	110,	1110
2017-01-05 14:11:26 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:26 AI_Player.update()		1101,	1110,	1010,	1100,	1010,	1101,	101
2017-01-05 14:11:26 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:11:26 AI_Player.update()		1010,	101,	1110,	11,	1110,	1010,	11
2017-01-05 14:11:26 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:26 AI_Player.update()	update
2017-01-05 14:11:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:26 AI_Player.update()	update
2017-01-05 14:11:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:26 AI_Player.update()	Search took4ms
2017-01-05 14:11:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:26 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-05 14:11:26 AI_Player.update()		1101,	110,	110,	110,	11,	110,	1110
2017-01-05 14:11:26 AI_Player.update()		1110,	1110,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:26 AI_Player.update()		1101,	1011,	1010,	1100,	1010,	1101,	101
2017-01-05 14:11:26 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:11:26 AI_Player.update()		1010,	1010,	1110,	11,	1110,	1010,	11
2017-01-05 14:11:26 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:26 AI_Player.update()	update
2017-01-05 14:11:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:26 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:26 AI_Player.update()	update
2017-01-05 14:11:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:27 AI_Player.update()	Search took669ms
2017-01-05 14:11:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:27 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:11:27 AI_Player.update()		1101,	1110,	110,	110,	11,	110,	1110
2017-01-05 14:11:27 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:27 AI_Player.update()		1101,	101,	1010,	1100,	1010,	1101,	101
2017-01-05 14:11:27 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:11:27 AI_Player.update()		1010,	1100,	1110,	11,	1110,	1010,	11
2017-01-05 14:11:27 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:27 AI_Player.update()	update
2017-01-05 14:11:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:27 AI_Player.update()	update
2017-01-05 14:11:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:27 AI_Player.update()	Search took4ms
2017-01-05 14:11:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:27 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-05 14:11:27 AI_Player.update()		1101,	1011,	110,	110,	11,	110,	1110
2017-01-05 14:11:27 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:27 AI_Player.update()		1101,	1010,	1010,	1100,	1010,	1101,	101
2017-01-05 14:11:27 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:11:27 AI_Player.update()		1010,	1110,	1110,	11,	1110,	1010,	11
2017-01-05 14:11:27 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:27 AI_Player.update()	update
2017-01-05 14:11:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:27 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:27 AI_Player.update()	update
2017-01-05 14:11:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:28 AI_Player.update()	Search took1249ms
2017-01-05 14:11:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:28 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-05 14:11:28 AI_Player.update()		1101,	1011,	110,	110,	11,	110,	1110
2017-01-05 14:11:28 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:11:28 AI_Player.update()		1010,	1010,	1100,	1010,	1101,	101,	1101
2017-01-05 14:11:28 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:11:28 AI_Player.update()		1010,	1110,	1110,	11,	1110,	1010,	11
2017-01-05 14:11:28 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:11:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:28 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:28 AI_Player.update()	update
2017-01-05 14:11:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:28 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:28 AI_Player.update()	Player a has won!
2017-01-05 14:11:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:28 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:28 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:28 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:28 AI_Player.update()	update
2017-01-05 14:11:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:29 AI_Player.update()	Search took480ms
2017-01-05 14:11:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:29 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-05 14:11:29 AI_Player.update()		11,	101,	1100,	11,	1010,	1011,	1011
2017-01-05 14:11:29 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-05 14:11:29 AI_Player.update()		1010,	11,	1010,	1110,	101,	111,	101
2017-01-05 14:11:29 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 14:11:29 AI_Player.update()		1010,	1101,	1010,	1010,	1010,	1010,	1011
2017-01-05 14:11:29 AI_Player.update()		1100,	110,	1101,	111,	1101,	110,	1001
2017-01-05 14:11:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:29 AI_Player.update()	update
2017-01-05 14:11:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:29 AI_Player.update()	update
2017-01-05 14:11:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:29 AI_Player.update()	Search took2ms
2017-01-05 14:11:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:29 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-05 14:11:29 AI_Player.update()		11,	101,	1100,	11,	1010,	1011,	1011
2017-01-05 14:11:29 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-05 14:11:29 AI_Player.update()		1010,	1010,	1010,	1110,	101,	111,	101
2017-01-05 14:11:29 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	101,	1011
2017-01-05 14:11:29 AI_Player.update()		1010,	110,	1010,	1010,	1010,	1010,	1011
2017-01-05 14:11:29 AI_Player.update()		1100,	101,	1101,	111,	1101,	110,	1001
2017-01-05 14:11:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:29 AI_Player.update()	update
2017-01-05 14:11:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:29 AI_Player.update()	update
2017-01-05 14:11:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:30 AI_Player.update()	Search took1304ms
2017-01-05 14:11:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:30 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-05 14:11:30 AI_Player.update()		11,	11,	1100,	11,	1010,	1011,	1011
2017-01-05 14:11:30 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-05 14:11:30 AI_Player.update()		1010,	1101,	1010,	1110,	101,	111,	101
2017-01-05 14:11:30 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-05 14:11:30 AI_Player.update()		1010,	101,	1010,	1010,	1010,	1010,	1011
2017-01-05 14:11:30 AI_Player.update()		1100,	101,	1101,	111,	1101,	110,	1001
2017-01-05 14:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:30 AI_Player.update()	update
2017-01-05 14:11:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:30 AI_Player.update()	update
2017-01-05 14:11:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:30 AI_Player.update()	Search took3ms
2017-01-05 14:11:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:30 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-05 14:11:30 AI_Player.update()		11,	11,	1100,	1110,	1010,	1011,	1011
2017-01-05 14:11:30 AI_Player.update()		1110,	1010,	1110,	11,	111,	110,	1011
2017-01-05 14:11:30 AI_Player.update()		1010,	1101,	1010,	1010,	101,	111,	101
2017-01-05 14:11:30 AI_Player.update()		1110,	110,	1101,	1110,	1011,	101,	1011
2017-01-05 14:11:30 AI_Player.update()		1010,	101,	1010,	1100,	1010,	1010,	1011
2017-01-05 14:11:30 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 14:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:30 AI_Player.update()	update
2017-01-05 14:11:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:30 AI_Player.update()	update
2017-01-05 14:11:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:30 AI_Player.update()	Search took200ms
2017-01-05 14:11:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:30 AI_Player.update()		110,	101,	111,	111,	111,	1011,	11
2017-01-05 14:11:30 AI_Player.update()		11,	11,	1100,	1110,	1010,	110,	1011
2017-01-05 14:11:30 AI_Player.update()		1110,	1010,	1110,	11,	111,	111,	1011
2017-01-05 14:11:30 AI_Player.update()		1010,	1101,	1010,	1010,	101,	101,	101
2017-01-05 14:11:30 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1010,	1011
2017-01-05 14:11:30 AI_Player.update()		1010,	101,	1010,	1100,	1010,	110,	1011
2017-01-05 14:11:30 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:30 AI_Player.update()	update
2017-01-05 14:11:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:30 AI_Player.update()	update
2017-01-05 14:11:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:30 AI_Player.update()	Search took3ms
2017-01-05 14:11:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:30 AI_Player.update()		110,	11,	111,	111,	111,	1011,	11
2017-01-05 14:11:30 AI_Player.update()		11,	1010,	1100,	1110,	1010,	110,	1011
2017-01-05 14:11:30 AI_Player.update()		1110,	1101,	1110,	11,	111,	111,	1011
2017-01-05 14:11:30 AI_Player.update()		1010,	110,	1010,	1010,	101,	101,	101
2017-01-05 14:11:30 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-05 14:11:30 AI_Player.update()		1010,	101,	1010,	1100,	1010,	110,	1011
2017-01-05 14:11:30 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:30 AI_Player.update()	update
2017-01-05 14:11:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:30 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:30 AI_Player.update()	update
2017-01-05 14:11:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:31 AI_Player.update()	Search took303ms
2017-01-05 14:11:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:31 AI_Player.update()		110,	1010,	111,	111,	111,	1011,	11
2017-01-05 14:11:31 AI_Player.update()		11,	1101,	1100,	1110,	1010,	110,	1011
2017-01-05 14:11:31 AI_Player.update()		1110,	110,	1110,	11,	111,	111,	1011
2017-01-05 14:11:31 AI_Player.update()		1010,	101,	1010,	1010,	101,	101,	101
2017-01-05 14:11:31 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-05 14:11:31 AI_Player.update()		1010,	101,	1010,	1100,	1010,	110,	1011
2017-01-05 14:11:31 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:31 AI_Player.update()	update
2017-01-05 14:11:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:31 AI_Player.update()	update
2017-01-05 14:11:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:31 AI_Player.update()	Search took1ms
2017-01-05 14:11:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:31 AI_Player.update()		110,	1101,	111,	111,	111,	1011,	11
2017-01-05 14:11:31 AI_Player.update()		11,	110,	1100,	1110,	1010,	110,	1011
2017-01-05 14:11:31 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-05 14:11:31 AI_Player.update()		1010,	101,	1010,	1010,	101,	101,	101
2017-01-05 14:11:31 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-05 14:11:31 AI_Player.update()		1010,	11,	1010,	1100,	1010,	110,	1011
2017-01-05 14:11:31 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:31 AI_Player.update()	update
2017-01-05 14:11:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:31 AI_Player.update()	update
2017-01-05 14:11:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:31 AI_Player.update()	Search took317ms
2017-01-05 14:11:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:31 AI_Player.update()		110,	1101,	111,	111,	111,	1011,	11
2017-01-05 14:11:31 AI_Player.update()		11,	110,	1100,	1110,	1010,	110,	1011
2017-01-05 14:11:31 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-05 14:11:31 AI_Player.update()		101,	1010,	101,	1010,	1010,	101,	101
2017-01-05 14:11:31 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-05 14:11:31 AI_Player.update()		1010,	11,	1010,	1100,	1010,	110,	1011
2017-01-05 14:11:31 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:31 AI_Player.update()	update
2017-01-05 14:11:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:31 AI_Player.update()	update
2017-01-05 14:11:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:31 AI_Player.update()	Search took3ms
2017-01-05 14:11:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:31 AI_Player.update()		110,	110,	111,	111,	111,	1011,	11
2017-01-05 14:11:31 AI_Player.update()		11,	101,	1100,	1110,	1010,	110,	1011
2017-01-05 14:11:31 AI_Player.update()		1110,	1010,	1110,	11,	111,	111,	1011
2017-01-05 14:11:31 AI_Player.update()		101,	101,	101,	1010,	1010,	101,	101
2017-01-05 14:11:31 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1010,	1011
2017-01-05 14:11:31 AI_Player.update()		1010,	1010,	1010,	1100,	1010,	110,	1011
2017-01-05 14:11:31 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:31 AI_Player.update()	update
2017-01-05 14:11:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:31 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:31 AI_Player.update()	update
2017-01-05 14:11:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:32 AI_Player.update()	Search took896ms
2017-01-05 14:11:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()		110,	110,	111,	1110,	111,	1011,	11
2017-01-05 14:11:32 AI_Player.update()		11,	101,	1100,	11,	1010,	110,	1011
2017-01-05 14:11:32 AI_Player.update()		1110,	1010,	1110,	1010,	111,	111,	1011
2017-01-05 14:11:32 AI_Player.update()		101,	101,	101,	1110,	1010,	101,	101
2017-01-05 14:11:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:11:32 AI_Player.update()		1010,	1010,	1010,	1010,	1010,	110,	1011
2017-01-05 14:11:32 AI_Player.update()		1100,	1101,	1101,	111,	1101,	101,	1001
2017-01-05 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()	update
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()	update
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:32 AI_Player.update()	Search took4ms
2017-01-05 14:11:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()		110,	110,	111,	1110,	111,	1011,	11
2017-01-05 14:11:32 AI_Player.update()		101,	1100,	11,	1010,	110,	1011,	11
2017-01-05 14:11:32 AI_Player.update()		1110,	1010,	1110,	1010,	111,	111,	1011
2017-01-05 14:11:32 AI_Player.update()		101,	101,	101,	1110,	1010,	101,	101
2017-01-05 14:11:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:11:32 AI_Player.update()		1010,	1010,	1010,	1010,	1010,	110,	1011
2017-01-05 14:11:32 AI_Player.update()		1100,	1101,	1101,	111,	1101,	101,	1001
2017-01-05 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()	update
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()	update
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:32 AI_Player.update()	Search took436ms
2017-01-05 14:11:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()		110,	1101,	111,	1110,	111,	1011,	11
2017-01-05 14:11:32 AI_Player.update()		101,	110,	11,	1010,	110,	1011,	11
2017-01-05 14:11:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	111,	1011
2017-01-05 14:11:32 AI_Player.update()		101,	1010,	101,	1110,	1010,	101,	101
2017-01-05 14:11:32 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:11:32 AI_Player.update()		1010,	11,	1010,	1010,	1010,	110,	1011
2017-01-05 14:11:32 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-05 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()	update
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:32 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:32 AI_Player.update()	Player a has won!
2017-01-05 14:11:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:32 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:32 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()	update
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:32 AI_Player.update()	Search took121ms
2017-01-05 14:11:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()		110,	111,	111,	1001,	111,	111,	11
2017-01-05 14:11:32 AI_Player.update()		1100,	110,	1010,	111,	1010,	1010,	1100
2017-01-05 14:11:32 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-05 14:11:32 AI_Player.update()		1001,	1001,	111,	110,	1001,	1010,	1101
2017-01-05 14:11:32 AI_Player.update()		1110,	1101,	1101,	11,	1011,	110,	1011
2017-01-05 14:11:32 AI_Player.update()		1010,	11,	101,	11,	11,	1100,	1010
2017-01-05 14:11:32 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1110,	1001
2017-01-05 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()	update
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()	update
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:32 AI_Player.update()	Search took2ms
2017-01-05 14:11:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()		110,	111,	111,	111,	111,	111,	11
2017-01-05 14:11:32 AI_Player.update()		1100,	110,	1010,	1101,	1010,	1010,	1100
2017-01-05 14:11:32 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:11:32 AI_Player.update()		1001,	1001,	111,	11,	1001,	1010,	1101
2017-01-05 14:11:32 AI_Player.update()		1110,	1101,	1101,	11,	1011,	110,	1011
2017-01-05 14:11:32 AI_Player.update()		1010,	11,	101,	1011,	11,	1100,	1010
2017-01-05 14:11:32 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1110,	1001
2017-01-05 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()	update
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:32 AI_Player.update()	update
2017-01-05 14:11:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:33 AI_Player.update()	Search took251ms
2017-01-05 14:11:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()		110,	111,	111,	111,	111,	1010,	11
2017-01-05 14:11:33 AI_Player.update()		1100,	110,	1010,	1101,	1010,	101,	1100
2017-01-05 14:11:33 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-05 14:11:33 AI_Player.update()		1001,	1001,	111,	11,	1001,	110,	1101
2017-01-05 14:11:33 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1100,	1011
2017-01-05 14:11:33 AI_Player.update()		1010,	11,	101,	1011,	11,	1110,	1010
2017-01-05 14:11:33 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	111,	1001
2017-01-05 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()	update
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()	update
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:33 AI_Player.update()	Search took2ms
2017-01-05 14:11:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-05 14:11:33 AI_Player.update()		1100,	101,	1010,	1101,	1010,	101,	1100
2017-01-05 14:11:33 AI_Player.update()		1110,	1001,	1110,	110,	111,	1010,	1011
2017-01-05 14:11:33 AI_Player.update()		1001,	1101,	111,	11,	1001,	110,	1101
2017-01-05 14:11:33 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-05 14:11:33 AI_Player.update()		1010,	1001,	101,	1011,	11,	1110,	1010
2017-01-05 14:11:33 AI_Player.update()		1100,	111,	1101,	1001,	1101,	111,	1001
2017-01-05 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()	update
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()	update
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:33 AI_Player.update()	Search took297ms
2017-01-05 14:11:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()		110,	110,	111,	1101,	111,	1010,	11
2017-01-05 14:11:33 AI_Player.update()		1100,	101,	1010,	110,	1010,	101,	1100
2017-01-05 14:11:33 AI_Player.update()		1110,	1001,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:33 AI_Player.update()		1001,	1101,	111,	11,	1001,	110,	1101
2017-01-05 14:11:33 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1100,	1011
2017-01-05 14:11:33 AI_Player.update()		1010,	1001,	101,	1001,	11,	1110,	1010
2017-01-05 14:11:33 AI_Player.update()		1100,	111,	1101,	111,	1101,	111,	1001
2017-01-05 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()	update
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()	update
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:33 AI_Player.update()	Search took1ms
2017-01-05 14:11:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-05 14:11:33 AI_Player.update()		1100,	1001,	1010,	110,	1010,	101,	1100
2017-01-05 14:11:33 AI_Player.update()		1110,	1101,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:33 AI_Player.update()		1001,	11,	111,	11,	1001,	110,	1101
2017-01-05 14:11:33 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1100,	1011
2017-01-05 14:11:33 AI_Player.update()		1010,	111,	101,	1001,	11,	1110,	1010
2017-01-05 14:11:33 AI_Player.update()		1100,	110,	1101,	111,	1101,	111,	1001
2017-01-05 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()	update
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()	update
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:33 AI_Player.update()	Search took495ms
2017-01-05 14:11:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 14:11:33 AI_Player.update()		1100,	1001,	1010,	11,	1010,	101,	1100
2017-01-05 14:11:33 AI_Player.update()		1110,	1101,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:33 AI_Player.update()		1001,	11,	111,	1011,	1001,	110,	1101
2017-01-05 14:11:33 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:33 AI_Player.update()		1010,	111,	101,	111,	11,	1110,	1010
2017-01-05 14:11:33 AI_Player.update()		1100,	110,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()	update
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()	update
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:33 AI_Player.update()	Search took2ms
2017-01-05 14:11:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-05 14:11:33 AI_Player.update()		1100,	1101,	1010,	11,	1010,	101,	1100
2017-01-05 14:11:33 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:33 AI_Player.update()		1001,	1001,	111,	1011,	1001,	110,	1101
2017-01-05 14:11:33 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:33 AI_Player.update()		1010,	110,	101,	111,	11,	1110,	1010
2017-01-05 14:11:33 AI_Player.update()		1100,	101,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()	update
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:33 AI_Player.update()	update
2017-01-05 14:11:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:34 AI_Player.update()	Search took832ms
2017-01-05 14:11:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:34 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-05 14:11:34 AI_Player.update()		1100,	1100,	1101,	1010,	11,	1010,	101
2017-01-05 14:11:34 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:34 AI_Player.update()		1001,	1001,	111,	1011,	1001,	110,	1101
2017-01-05 14:11:34 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:34 AI_Player.update()		1010,	110,	101,	111,	11,	1110,	1010
2017-01-05 14:11:34 AI_Player.update()		1100,	101,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:34 AI_Player.update()	update
2017-01-05 14:11:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:34 AI_Player.update()	update
2017-01-05 14:11:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:34 AI_Player.update()	Search took1ms
2017-01-05 14:11:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:34 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 14:11:34 AI_Player.update()		1100,	1001,	1101,	1010,	11,	1010,	101
2017-01-05 14:11:34 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:34 AI_Player.update()		1001,	11,	111,	1011,	1001,	110,	1101
2017-01-05 14:11:34 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:34 AI_Player.update()		1010,	111,	101,	111,	11,	1110,	1010
2017-01-05 14:11:34 AI_Player.update()		1100,	110,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:34 AI_Player.update()	update
2017-01-05 14:11:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:34 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:34 AI_Player.update()	update
2017-01-05 14:11:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:35 AI_Player.update()	Search took367ms
2017-01-05 14:11:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:35 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 14:11:35 AI_Player.update()		1100,	1001,	1101,	1010,	11,	1010,	101
2017-01-05 14:11:35 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:35 AI_Player.update()		11,	111,	1011,	1001,	110,	1101,	1001
2017-01-05 14:11:35 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:35 AI_Player.update()		1010,	111,	101,	111,	11,	1110,	1010
2017-01-05 14:11:35 AI_Player.update()		1100,	110,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:35 AI_Player.update()	update
2017-01-05 14:11:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:35 AI_Player.update()	update
2017-01-05 14:11:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:35 AI_Player.update()	Search took2ms
2017-01-05 14:11:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:35 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 14:11:35 AI_Player.update()		1100,	101,	1101,	1010,	11,	1010,	101
2017-01-05 14:11:35 AI_Player.update()		1110,	1001,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:35 AI_Player.update()		11,	1100,	1011,	1001,	110,	1101,	1001
2017-01-05 14:11:35 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:35 AI_Player.update()		1010,	1001,	101,	111,	11,	1110,	1010
2017-01-05 14:11:35 AI_Player.update()		1100,	111,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:35 AI_Player.update()	update
2017-01-05 14:11:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:35 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:35 AI_Player.update()	update
2017-01-05 14:11:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:36 AI_Player.update()	Search took1176ms
2017-01-05 14:11:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:36 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 14:11:36 AI_Player.update()		1100,	1001,	1101,	1010,	11,	1010,	101
2017-01-05 14:11:36 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:36 AI_Player.update()		11,	111,	1011,	1001,	110,	1101,	1001
2017-01-05 14:11:36 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:36 AI_Player.update()		1010,	111,	101,	111,	11,	1110,	1010
2017-01-05 14:11:36 AI_Player.update()		1100,	110,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:36 AI_Player.update()	update
2017-01-05 14:11:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:36 AI_Player.update()	update
2017-01-05 14:11:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:36 AI_Player.update()	Search took4ms
2017-01-05 14:11:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:36 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-05 14:11:36 AI_Player.update()		1100,	1100,	1101,	1010,	11,	1010,	101
2017-01-05 14:11:36 AI_Player.update()		1110,	111,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:36 AI_Player.update()		11,	1001,	1011,	1001,	110,	1101,	1001
2017-01-05 14:11:36 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:36 AI_Player.update()		1010,	110,	101,	111,	11,	1110,	1010
2017-01-05 14:11:36 AI_Player.update()		1100,	101,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:36 AI_Player.update()	update
2017-01-05 14:11:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:36 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:36 AI_Player.update()	update
2017-01-05 14:11:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:37 AI_Player.update()	Search took1040ms
2017-01-05 14:11:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:37 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 14:11:37 AI_Player.update()		1100,	1001,	1101,	1010,	11,	1010,	101
2017-01-05 14:11:37 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:37 AI_Player.update()		11,	111,	1011,	1001,	110,	1101,	1001
2017-01-05 14:11:37 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:37 AI_Player.update()		1010,	111,	101,	111,	11,	1110,	1010
2017-01-05 14:11:37 AI_Player.update()		1100,	110,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:37 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:37 AI_Player.update()	update
2017-01-05 14:11:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:37 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:37 AI_Player.update()	update
2017-01-05 14:11:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:37 AI_Player.update()	Search took4ms
2017-01-05 14:11:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:37 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-05 14:11:37 AI_Player.update()		1100,	1100,	1101,	1010,	11,	1010,	101
2017-01-05 14:11:37 AI_Player.update()		1110,	111,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:37 AI_Player.update()		11,	1001,	1011,	1001,	110,	1101,	1001
2017-01-05 14:11:37 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:37 AI_Player.update()		1010,	110,	101,	111,	11,	1110,	1010
2017-01-05 14:11:37 AI_Player.update()		1100,	101,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:37 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:37 AI_Player.update()	update
2017-01-05 14:11:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:37 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:37 AI_Player.update()	update
2017-01-05 14:11:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:38 AI_Player.update()	Search took1091ms
2017-01-05 14:11:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:38 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-05 14:11:38 AI_Player.update()		1100,	111,	1101,	1010,	11,	1010,	101
2017-01-05 14:11:38 AI_Player.update()		1110,	1001,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:38 AI_Player.update()		11,	111,	1011,	1001,	110,	1101,	1001
2017-01-05 14:11:38 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:38 AI_Player.update()		1010,	101,	101,	111,	11,	1110,	1010
2017-01-05 14:11:38 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:38 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:38 AI_Player.update()	update
2017-01-05 14:11:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:38 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:38 AI_Player.update()	update
2017-01-05 14:11:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:38 AI_Player.update()	Search took2ms
2017-01-05 14:11:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:38 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-05 14:11:38 AI_Player.update()		1100,	1001,	1101,	1010,	11,	1010,	101
2017-01-05 14:11:38 AI_Player.update()		1110,	111,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:38 AI_Player.update()		11,	110,	1011,	1001,	110,	1101,	1001
2017-01-05 14:11:38 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:38 AI_Player.update()		1010,	1001,	101,	111,	11,	1110,	1010
2017-01-05 14:11:38 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:38 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:38 AI_Player.update()	update
2017-01-05 14:11:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:38 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:38 AI_Player.update()	update
2017-01-05 14:11:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:38 AI_Player.update()	Search took139ms
2017-01-05 14:11:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:38 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-05 14:11:38 AI_Player.update()		1100,	111,	1101,	1010,	11,	1010,	101
2017-01-05 14:11:38 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:38 AI_Player.update()		11,	101,	1011,	1001,	110,	1101,	1001
2017-01-05 14:11:38 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:38 AI_Player.update()		1010,	1100,	101,	111,	11,	1110,	1010
2017-01-05 14:11:38 AI_Player.update()		1100,	111,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:38 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:38 AI_Player.update()	update
2017-01-05 14:11:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:38 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:38 AI_Player.update()	update
2017-01-05 14:11:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:38 AI_Player.update()	Search took4ms
2017-01-05 14:11:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:38 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-05 14:11:38 AI_Player.update()		1100,	110,	1101,	1010,	11,	1010,	101
2017-01-05 14:11:38 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:38 AI_Player.update()		11,	1001,	1011,	1001,	110,	1101,	1001
2017-01-05 14:11:38 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:11:38 AI_Player.update()		1010,	111,	101,	111,	11,	1110,	1010
2017-01-05 14:11:38 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	111,	1001
2017-01-05 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:38 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:38 AI_Player.update()	update
2017-01-05 14:11:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:38 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:38 AI_Player.update()	update
2017-01-05 14:11:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:39 AI_Player.update()	Search took851ms
2017-01-05 14:11:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()		110,	111,	111,	1010,	111,	1010,	11
2017-01-05 14:11:39 AI_Player.update()		1100,	110,	1101,	11,	11,	1010,	101
2017-01-05 14:11:39 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:39 AI_Player.update()		11,	1001,	1011,	1001,	110,	1101,	1001
2017-01-05 14:11:39 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1100,	1011
2017-01-05 14:11:39 AI_Player.update()		1010,	111,	101,	1101,	11,	1110,	1010
2017-01-05 14:11:39 AI_Player.update()		1100,	1001,	1101,	110,	1101,	111,	1001
2017-01-05 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()	update
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:39 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:39 AI_Player.update()	Player a has won!
2017-01-05 14:11:39 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:39 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:39 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:39 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()	update
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:39 AI_Player.update()	Search took40ms
2017-01-05 14:11:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 14:11:39 AI_Player.update()		1010,	11,	1010,	1010,	1001,	1010,	1001
2017-01-05 14:11:39 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 14:11:39 AI_Player.update()		1101,	1010,	111,	1001,	1010,	101,	101
2017-01-05 14:11:39 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:39 AI_Player.update()		11,	1001,	1101,	1100,	101,	1010,	1100
2017-01-05 14:11:39 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()	update
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()	update
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:39 AI_Player.update()	Search took1ms
2017-01-05 14:11:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 14:11:39 AI_Player.update()		11,	1010,	1010,	1001,	1010,	1001,	1010
2017-01-05 14:11:39 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 14:11:39 AI_Player.update()		1101,	1010,	111,	1001,	1010,	101,	101
2017-01-05 14:11:39 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:39 AI_Player.update()		11,	1001,	1101,	1100,	101,	1010,	1100
2017-01-05 14:11:39 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()	update
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:11:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()	update
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:39 AI_Player.update()	Search took118ms
2017-01-05 14:11:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 14:11:39 AI_Player.update()		11,	1010,	1010,	1001,	1010,	1001,	1010
2017-01-05 14:11:39 AI_Player.update()		1110,	1010,	1110,	110,	111,	11,	1011
2017-01-05 14:11:39 AI_Player.update()		1101,	101,	111,	1001,	1010,	101,	101
2017-01-05 14:11:39 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:39 AI_Player.update()		11,	1001,	1101,	1100,	101,	1010,	1100
2017-01-05 14:11:39 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()	update
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()	update
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:39 AI_Player.update()	Search took1ms
2017-01-05 14:11:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-05 14:11:39 AI_Player.update()		11,	1010,	1010,	1001,	1010,	11,	1010
2017-01-05 14:11:39 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-05 14:11:39 AI_Player.update()		1101,	101,	111,	1001,	1010,	11,	101
2017-01-05 14:11:39 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-05 14:11:39 AI_Player.update()		11,	1001,	1101,	1100,	101,	11,	1100
2017-01-05 14:11:39 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()	update
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:39 AI_Player.update()	update
2017-01-05 14:11:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:40 AI_Player.update()	Search took501ms
2017-01-05 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:11:40 AI_Player.update()		11,	1010,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:40 AI_Player.update()		1110,	1010,	1110,	110,	111,	11,	1011
2017-01-05 14:11:40 AI_Player.update()		1101,	101,	111,	1001,	1010,	1010,	101
2017-01-05 14:11:40 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:40 AI_Player.update()		11,	1001,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:40 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:40 AI_Player.update()	Search took2ms
2017-01-05 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:11:40 AI_Player.update()		11,	1010,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:40 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 14:11:40 AI_Player.update()		1101,	1010,	111,	1001,	1010,	1010,	101
2017-01-05 14:11:40 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:40 AI_Player.update()		11,	1001,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:40 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:40 AI_Player.update()	Search took233ms
2017-01-05 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:11:40 AI_Player.update()		11,	1010,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:40 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 14:11:40 AI_Player.update()		1010,	111,	1001,	1010,	1010,	101,	1101
2017-01-05 14:11:40 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:40 AI_Player.update()		11,	1001,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:40 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:40 AI_Player.update()	Search took2ms
2017-01-05 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:11:40 AI_Player.update()		11,	101,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:40 AI_Player.update()		1110,	111,	1110,	110,	111,	11,	1011
2017-01-05 14:11:40 AI_Player.update()		1010,	1001,	1001,	1010,	1010,	101,	1101
2017-01-05 14:11:40 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:40 AI_Player.update()		11,	1010,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:40 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:40 AI_Player.update()	Search took84ms
2017-01-05 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:11:40 AI_Player.update()		11,	1010,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:40 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 14:11:40 AI_Player.update()		1010,	111,	1001,	1010,	1010,	101,	1101
2017-01-05 14:11:40 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:40 AI_Player.update()		11,	1001,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:40 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:40 AI_Player.update()	Search took2ms
2017-01-05 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:11:40 AI_Player.update()		11,	101,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:40 AI_Player.update()		1110,	111,	1110,	110,	111,	11,	1011
2017-01-05 14:11:40 AI_Player.update()		1010,	1001,	1001,	1010,	1010,	101,	1101
2017-01-05 14:11:40 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:40 AI_Player.update()		11,	1010,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:40 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:40 AI_Player.update()	Search took89ms
2017-01-05 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 14:11:40 AI_Player.update()		11,	101,	1010,	1001,	1010,	11,	1010
2017-01-05 14:11:40 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-05 14:11:40 AI_Player.update()		1010,	1001,	1001,	1010,	1010,	11,	1101
2017-01-05 14:11:40 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-05 14:11:40 AI_Player.update()		11,	1010,	1101,	1100,	101,	1001,	1100
2017-01-05 14:11:40 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:40 AI_Player.update()	Search took2ms
2017-01-05 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 14:11:40 AI_Player.update()		11,	111,	1010,	1001,	1010,	11,	1010
2017-01-05 14:11:40 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-05 14:11:40 AI_Player.update()		1010,	1001,	1001,	1010,	1010,	11,	1101
2017-01-05 14:11:40 AI_Player.update()		1110,	1010,	1101,	11,	1011,	101,	1011
2017-01-05 14:11:40 AI_Player.update()		11,	1010,	1101,	1100,	101,	1001,	1100
2017-01-05 14:11:40 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:40 AI_Player.update()	Search took114ms
2017-01-05 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 14:11:40 AI_Player.update()		11,	101,	1010,	1001,	1010,	11,	1010
2017-01-05 14:11:40 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-05 14:11:40 AI_Player.update()		1010,	1001,	1001,	1010,	1010,	11,	1101
2017-01-05 14:11:40 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-05 14:11:40 AI_Player.update()		11,	1010,	1101,	1100,	101,	1001,	1100
2017-01-05 14:11:40 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:40 AI_Player.update()	Search took3ms
2017-01-05 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 14:11:40 AI_Player.update()		11,	1010,	1010,	1001,	1010,	11,	1010
2017-01-05 14:11:40 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:11:40 AI_Player.update()		1010,	111,	1001,	1010,	1010,	11,	1101
2017-01-05 14:11:40 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-05 14:11:40 AI_Player.update()		11,	1001,	1101,	1100,	101,	1001,	1100
2017-01-05 14:11:40 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:40 AI_Player.update()	Search took121ms
2017-01-05 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 14:11:40 AI_Player.update()		11,	1010,	1010,	1001,	1010,	11,	1010
2017-01-05 14:11:40 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-05 14:11:40 AI_Player.update()		1010,	101,	1001,	1010,	1010,	11,	1101
2017-01-05 14:11:40 AI_Player.update()		1110,	111,	1101,	11,	1011,	101,	1011
2017-01-05 14:11:40 AI_Player.update()		11,	1001,	1101,	1100,	101,	1001,	1100
2017-01-05 14:11:40 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:40 AI_Player.update()	Search took2ms
2017-01-05 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 14:11:40 AI_Player.update()		11,	1010,	1010,	1001,	1010,	11,	1010
2017-01-05 14:11:40 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:11:40 AI_Player.update()		1010,	111,	1001,	1010,	1010,	11,	1101
2017-01-05 14:11:40 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-05 14:11:40 AI_Player.update()		11,	1001,	1101,	1100,	101,	1001,	1100
2017-01-05 14:11:40 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:40 AI_Player.update()	update
2017-01-05 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:41 AI_Player.update()	Search took153ms
2017-01-05 14:11:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 14:11:41 AI_Player.update()		11,	1010,	1010,	1001,	1010,	11,	1010
2017-01-05 14:11:41 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-05 14:11:41 AI_Player.update()		1010,	101,	1001,	1010,	1010,	11,	1101
2017-01-05 14:11:41 AI_Player.update()		1110,	111,	1101,	11,	1011,	101,	1011
2017-01-05 14:11:41 AI_Player.update()		11,	1001,	1101,	1100,	101,	1001,	1100
2017-01-05 14:11:41 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:41 AI_Player.update()	Search took3ms
2017-01-05 14:11:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-05 14:11:41 AI_Player.update()		11,	1010,	1010,	1001,	1010,	11,	1010
2017-01-05 14:11:41 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-05 14:11:41 AI_Player.update()		1010,	1010,	1001,	1010,	1010,	11,	1101
2017-01-05 14:11:41 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 14:11:41 AI_Player.update()		11,	111,	1101,	1100,	101,	1001,	1100
2017-01-05 14:11:41 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:41 AI_Player.update()	Search took164ms
2017-01-05 14:11:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 14:11:41 AI_Player.update()		11,	1010,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:41 AI_Player.update()		1110,	1010,	1110,	110,	111,	11,	1011
2017-01-05 14:11:41 AI_Player.update()		1010,	1010,	1001,	1010,	1010,	101,	1101
2017-01-05 14:11:41 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:41 AI_Player.update()		11,	111,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:41 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:41 AI_Player.update()	Search took3ms
2017-01-05 14:11:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:11:41 AI_Player.update()		11,	1010,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:41 AI_Player.update()		1110,	1010,	1110,	110,	111,	11,	1011
2017-01-05 14:11:41 AI_Player.update()		1010,	101,	1001,	1010,	1010,	101,	1101
2017-01-05 14:11:41 AI_Player.update()		1110,	111,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:41 AI_Player.update()		11,	1001,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:41 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:41 AI_Player.update()	Search took246ms
2017-01-05 14:11:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 14:11:41 AI_Player.update()		11,	1010,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:41 AI_Player.update()		1110,	1010,	1110,	110,	111,	11,	1011
2017-01-05 14:11:41 AI_Player.update()		1010,	1010,	1001,	1010,	1010,	101,	1101
2017-01-05 14:11:41 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:41 AI_Player.update()		11,	111,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:41 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:41 AI_Player.update()	Search took2ms
2017-01-05 14:11:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:11:41 AI_Player.update()		11,	1010,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:41 AI_Player.update()		1110,	1010,	1110,	110,	111,	11,	1011
2017-01-05 14:11:41 AI_Player.update()		1010,	101,	1001,	1010,	1010,	101,	1101
2017-01-05 14:11:41 AI_Player.update()		1110,	111,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:41 AI_Player.update()		11,	1001,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:41 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:41 AI_Player.update()	Search took232ms
2017-01-05 14:11:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 14:11:41 AI_Player.update()		11,	1010,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:41 AI_Player.update()		1110,	1010,	1110,	110,	111,	11,	1011
2017-01-05 14:11:41 AI_Player.update()		1010,	1010,	1001,	1010,	1010,	101,	1101
2017-01-05 14:11:41 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:41 AI_Player.update()		11,	111,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:41 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:41 AI_Player.update()	Search took3ms
2017-01-05 14:11:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:11:41 AI_Player.update()		11,	1010,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:41 AI_Player.update()		1110,	1010,	1110,	110,	111,	11,	1011
2017-01-05 14:11:41 AI_Player.update()		1010,	101,	1001,	1010,	1010,	101,	1101
2017-01-05 14:11:41 AI_Player.update()		1110,	111,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:41 AI_Player.update()		11,	1001,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:41 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:41 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:41 AI_Player.update()	update
2017-01-05 14:11:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:42 AI_Player.update()	Search took222ms
2017-01-05 14:11:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:11:42 AI_Player.update()		11,	1010,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:42 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		1010,	111,	1001,	1010,	1010,	101,	1101
2017-01-05 14:11:42 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		11,	1001,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:42 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:42 AI_Player.update()	Search took2ms
2017-01-05 14:11:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:11:42 AI_Player.update()		11,	101,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:42 AI_Player.update()		1110,	111,	1110,	110,	111,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		1010,	1001,	1001,	1010,	1010,	101,	1101
2017-01-05 14:11:42 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		11,	1010,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:42 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:42 AI_Player.update()	Search took159ms
2017-01-05 14:11:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:11:42 AI_Player.update()		11,	101,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:42 AI_Player.update()		1110,	111,	1110,	110,	111,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		1001,	1001,	1010,	1010,	101,	1101,	1010
2017-01-05 14:11:42 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		11,	1010,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:42 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:42 AI_Player.update()	Search took4ms
2017-01-05 14:11:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 14:11:42 AI_Player.update()		11,	111,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:42 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		1001,	1001,	1010,	1010,	101,	1101,	1010
2017-01-05 14:11:42 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		11,	1010,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:42 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:42 AI_Player.update()	Search took155ms
2017-01-05 14:11:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-05 14:11:42 AI_Player.update()		11,	1001,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:42 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		1001,	1010,	1010,	1010,	101,	1101,	1010
2017-01-05 14:11:42 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		11,	1010,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:42 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:42 AI_Player.update()	Search took3ms
2017-01-05 14:11:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 14:11:42 AI_Player.update()		11,	1001,	1010,	1001,	1010,	101,	1010
2017-01-05 14:11:42 AI_Player.update()		1110,	1010,	1110,	110,	111,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		1001,	1010,	1010,	1010,	101,	1101,	1010
2017-01-05 14:11:42 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		11,	101,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:42 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:42 AI_Player.update()	Search took156ms
2017-01-05 14:11:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 14:11:42 AI_Player.update()		1010,	11,	1001,	1010,	1001,	1010,	101
2017-01-05 14:11:42 AI_Player.update()		1110,	1010,	1110,	110,	111,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		1001,	1010,	1010,	1010,	101,	1101,	1010
2017-01-05 14:11:42 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:42 AI_Player.update()		11,	101,	1101,	1100,	101,	101,	1100
2017-01-05 14:11:42 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:42 AI_Player.update()	Player a has won!
2017-01-05 14:11:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:42 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:42 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:42 AI_Player.update()	Search took117ms
2017-01-05 14:11:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()		110,	111,	111,	101,	111,	1010,	11
2017-01-05 14:11:42 AI_Player.update()		1001,	1010,	1101,	11,	110,	1100,	1001
2017-01-05 14:11:42 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-05 14:11:42 AI_Player.update()		11,	1010,	1010,	101,	1010,	1010,	11
2017-01-05 14:11:42 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1010,	1011
2017-01-05 14:11:42 AI_Player.update()		111,	101,	101,	1010,	1110,	111,	101
2017-01-05 14:11:42 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:42 AI_Player.update()	Search took1ms
2017-01-05 14:11:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 14:11:42 AI_Player.update()		1001,	1100,	1101,	11,	110,	1100,	1001
2017-01-05 14:11:42 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-05 14:11:42 AI_Player.update()		11,	1011,	1010,	101,	1010,	1010,	11
2017-01-05 14:11:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 14:11:42 AI_Player.update()		111,	101,	101,	1010,	1110,	111,	101
2017-01-05 14:11:42 AI_Player.update()		1100,	111,	1101,	11,	1101,	1100,	1001
2017-01-05 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:42 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:42 AI_Player.update()	update
2017-01-05 14:11:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:43 AI_Player.update()	Search took489ms
2017-01-05 14:11:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-05 14:11:43 AI_Player.update()		1001,	1010,	1101,	11,	110,	1100,	1001
2017-01-05 14:11:43 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1010,	1011
2017-01-05 14:11:43 AI_Player.update()		11,	101,	1010,	101,	1010,	1010,	11
2017-01-05 14:11:43 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 14:11:43 AI_Player.update()		111,	111,	101,	1010,	1110,	111,	101
2017-01-05 14:11:43 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1100,	1001
2017-01-05 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()	update
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()	update
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:43 AI_Player.update()	Search took2ms
2017-01-05 14:11:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-05 14:11:43 AI_Player.update()		1010,	1101,	11,	110,	1100,	1001,	1001
2017-01-05 14:11:43 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1010,	1011
2017-01-05 14:11:43 AI_Player.update()		11,	101,	1010,	101,	1010,	1010,	11
2017-01-05 14:11:43 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 14:11:43 AI_Player.update()		111,	111,	101,	1010,	1110,	111,	101
2017-01-05 14:11:43 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1100,	1001
2017-01-05 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()	update
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()	update
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:43 AI_Player.update()	Search took159ms
2017-01-05 14:11:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-05 14:11:43 AI_Player.update()		1010,	1011,	11,	110,	1100,	1001,	1001
2017-01-05 14:11:43 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 14:11:43 AI_Player.update()		11,	101,	1010,	101,	1010,	1010,	11
2017-01-05 14:11:43 AI_Player.update()		1110,	111,	1101,	11,	1011,	1010,	1011
2017-01-05 14:11:43 AI_Player.update()		111,	1010,	101,	1010,	1110,	111,	101
2017-01-05 14:11:43 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()	update
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()	update
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:43 AI_Player.update()	Search took2ms
2017-01-05 14:11:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-05 14:11:43 AI_Player.update()		1010,	1011,	11,	1100,	1100,	1001,	1001
2017-01-05 14:11:43 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 14:11:43 AI_Player.update()		11,	101,	1010,	11,	1010,	1010,	11
2017-01-05 14:11:43 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:11:43 AI_Player.update()		111,	1010,	101,	11,	1110,	111,	101
2017-01-05 14:11:43 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()	update
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()	update
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:43 AI_Player.update()	Search took611ms
2017-01-05 14:11:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()		110,	1011,	111,	110,	111,	1010,	11
2017-01-05 14:11:43 AI_Player.update()		1010,	101,	11,	1100,	1100,	1001,	1001
2017-01-05 14:11:43 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 14:11:43 AI_Player.update()		11,	111,	1010,	11,	1010,	1010,	11
2017-01-05 14:11:43 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:11:43 AI_Player.update()		111,	1100,	101,	11,	1110,	111,	101
2017-01-05 14:11:43 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()	update
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()	update
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:43 AI_Player.update()	Search took1ms
2017-01-05 14:11:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 14:11:43 AI_Player.update()		1010,	101,	11,	1100,	1100,	1001,	1001
2017-01-05 14:11:43 AI_Player.update()		1110,	111,	1110,	101,	111,	1010,	1011
2017-01-05 14:11:43 AI_Player.update()		11,	1010,	1010,	11,	1010,	1010,	11
2017-01-05 14:11:43 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:11:43 AI_Player.update()		111,	1101,	101,	11,	1110,	111,	101
2017-01-05 14:11:43 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()	update
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:43 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:43 AI_Player.update()	update
2017-01-05 14:11:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:44 AI_Player.update()	Search took573ms
2017-01-05 14:11:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:44 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 14:11:44 AI_Player.update()		1010,	111,	11,	1100,	1100,	1001,	1001
2017-01-05 14:11:44 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-05 14:11:44 AI_Player.update()		11,	1100,	1010,	11,	1010,	1010,	11
2017-01-05 14:11:44 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:11:44 AI_Player.update()		111,	1011,	101,	11,	1110,	111,	101
2017-01-05 14:11:44 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:44 AI_Player.update()	update
2017-01-05 14:11:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:44 AI_Player.update()	update
2017-01-05 14:11:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:44 AI_Player.update()	Search took3ms
2017-01-05 14:11:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:44 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-05 14:11:44 AI_Player.update()		1010,	1010,	11,	1100,	1100,	1001,	1001
2017-01-05 14:11:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-05 14:11:44 AI_Player.update()		11,	1101,	1010,	11,	1010,	1010,	11
2017-01-05 14:11:44 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:11:44 AI_Player.update()		111,	101,	101,	11,	1110,	111,	101
2017-01-05 14:11:44 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:44 AI_Player.update()	update
2017-01-05 14:11:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:44 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:44 AI_Player.update()	update
2017-01-05 14:11:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:45 AI_Player.update()	Search took717ms
2017-01-05 14:11:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-05 14:11:45 AI_Player.update()		1010,	1010,	11,	1100,	1100,	1001,	1001
2017-01-05 14:11:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-05 14:11:45 AI_Player.update()		11,	1101,	1010,	11,	1010,	1010,	11
2017-01-05 14:11:45 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:11:45 AI_Player.update()		101,	101,	11,	1110,	111,	101,	111
2017-01-05 14:11:45 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:45 AI_Player.update()	Search took1ms
2017-01-05 14:11:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-05 14:11:45 AI_Player.update()		1010,	1100,	11,	1100,	1100,	1001,	1001
2017-01-05 14:11:45 AI_Player.update()		1110,	1101,	1110,	101,	111,	1010,	1011
2017-01-05 14:11:45 AI_Player.update()		11,	1011,	1010,	11,	1010,	1010,	11
2017-01-05 14:11:45 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:11:45 AI_Player.update()		101,	101,	11,	1110,	111,	101,	111
2017-01-05 14:11:45 AI_Player.update()		1100,	111,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:45 AI_Player.update()	Search took430ms
2017-01-05 14:11:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-05 14:11:45 AI_Player.update()		1010,	1100,	11,	1100,	1100,	1001,	1001
2017-01-05 14:11:45 AI_Player.update()		1110,	1101,	1110,	101,	111,	1010,	1011
2017-01-05 14:11:45 AI_Player.update()		1011,	1010,	11,	1010,	1010,	11,	11
2017-01-05 14:11:45 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:11:45 AI_Player.update()		101,	101,	11,	1110,	111,	101,	111
2017-01-05 14:11:45 AI_Player.update()		1100,	111,	1101,	101,	1101,	1100,	1001
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:45 AI_Player.update()	Player a has won!
2017-01-05 14:11:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:45 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:45 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:45 AI_Player.update()	Search took58ms
2017-01-05 14:11:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-05 14:11:45 AI_Player.update()		1100,	1100,	1011,	101,	1010,	101,	110
2017-01-05 14:11:45 AI_Player.update()		1110,	11,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:45 AI_Player.update()		101,	111,	11,	11,	101,	1001,	1001
2017-01-05 14:11:45 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:45 AI_Player.update()		1110,	111,	101,	1010,	110,	1011,	101
2017-01-05 14:11:45 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	110,	1001
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:45 AI_Player.update()	Search took0ms
2017-01-05 14:11:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-05 14:11:45 AI_Player.update()		1100,	1011,	101,	1010,	101,	110,	1100
2017-01-05 14:11:45 AI_Player.update()		1110,	11,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:45 AI_Player.update()		101,	111,	11,	11,	101,	1001,	1001
2017-01-05 14:11:45 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:45 AI_Player.update()		1110,	111,	101,	1010,	110,	1011,	101
2017-01-05 14:11:45 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	110,	1001
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:45 AI_Player.update()	Search took81ms
2017-01-05 14:11:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-05 14:11:45 AI_Player.update()		1100,	1011,	101,	1010,	101,	110,	1100
2017-01-05 14:11:45 AI_Player.update()		1110,	11,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:45 AI_Player.update()		101,	111,	11,	11,	101,	1001,	1001
2017-01-05 14:11:45 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:45 AI_Player.update()		101,	1110,	111,	101,	1010,	110,	1011
2017-01-05 14:11:45 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	110,	1001
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:45 AI_Player.update()	Search took1ms
2017-01-05 14:11:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()		110,	1011,	111,	101,	111,	1001,	11
2017-01-05 14:11:45 AI_Player.update()		1100,	11,	101,	1010,	101,	110,	1100
2017-01-05 14:11:45 AI_Player.update()		1110,	111,	1110,	110,	111,	1100,	1011
2017-01-05 14:11:45 AI_Player.update()		101,	1100,	11,	11,	101,	1001,	1001
2017-01-05 14:11:45 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:11:45 AI_Player.update()		101,	1101,	111,	101,	1010,	110,	1011
2017-01-05 14:11:45 AI_Player.update()		1100,	11,	1101,	1001,	1101,	110,	1001
2017-01-05 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:45 AI_Player.update()	update
2017-01-05 14:11:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:46 AI_Player.update()	Search took139ms
2017-01-05 14:11:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()		110,	1011,	111,	101,	111,	110,	11
2017-01-05 14:11:46 AI_Player.update()		1100,	11,	101,	1010,	101,	1100,	1100
2017-01-05 14:11:46 AI_Player.update()		1110,	111,	1110,	110,	111,	1001,	1011
2017-01-05 14:11:46 AI_Player.update()		101,	1100,	11,	11,	101,	1010,	1001
2017-01-05 14:11:46 AI_Player.update()		1110,	1110,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:46 AI_Player.update()		101,	1101,	111,	101,	1010,	110,	1011
2017-01-05 14:11:46 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()	update
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()	update
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:46 AI_Player.update()	Search took1ms
2017-01-05 14:11:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-05 14:11:46 AI_Player.update()		1100,	111,	101,	1010,	101,	1100,	1100
2017-01-05 14:11:46 AI_Player.update()		1110,	1100,	1110,	110,	111,	1001,	1011
2017-01-05 14:11:46 AI_Player.update()		101,	1110,	11,	11,	101,	1010,	1001
2017-01-05 14:11:46 AI_Player.update()		1110,	1101,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:46 AI_Player.update()		101,	11,	111,	101,	1010,	110,	1011
2017-01-05 14:11:46 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()	update
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()	update
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:46 AI_Player.update()	Search took532ms
2017-01-05 14:11:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-05 14:11:46 AI_Player.update()		1100,	111,	101,	1010,	101,	1100,	1100
2017-01-05 14:11:46 AI_Player.update()		1110,	1100,	1110,	110,	111,	1001,	1011
2017-01-05 14:11:46 AI_Player.update()		101,	1110,	11,	11,	101,	1010,	1001
2017-01-05 14:11:46 AI_Player.update()		1110,	1101,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:46 AI_Player.update()		11,	111,	101,	1010,	110,	1011,	101
2017-01-05 14:11:46 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()	update
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()	update
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:46 AI_Player.update()	Search took2ms
2017-01-05 14:11:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()		110,	111,	111,	101,	111,	110,	11
2017-01-05 14:11:46 AI_Player.update()		1100,	1100,	101,	1010,	101,	1100,	1100
2017-01-05 14:11:46 AI_Player.update()		1110,	1110,	1110,	110,	111,	1001,	1011
2017-01-05 14:11:46 AI_Player.update()		101,	1101,	11,	11,	101,	1010,	1001
2017-01-05 14:11:46 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:46 AI_Player.update()		11,	1011,	101,	1010,	110,	1011,	101
2017-01-05 14:11:46 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()	update
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()	update
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:46 AI_Player.update()	Search took167ms
2017-01-05 14:11:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()		110,	111,	111,	1010,	111,	110,	11
2017-01-05 14:11:46 AI_Player.update()		1100,	1100,	101,	110,	101,	1100,	1100
2017-01-05 14:11:46 AI_Player.update()		1110,	1110,	1110,	11,	111,	1001,	1011
2017-01-05 14:11:46 AI_Player.update()		101,	1101,	11,	101,	101,	1010,	1001
2017-01-05 14:11:46 AI_Player.update()		1110,	111,	1101,	1010,	1011,	110,	1011
2017-01-05 14:11:46 AI_Player.update()		11,	1011,	101,	1001,	110,	1011,	101
2017-01-05 14:11:46 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()	update
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()	update
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:46 AI_Player.update()	Search took1ms
2017-01-05 14:11:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:11:46 AI_Player.update()		1100,	1110,	101,	110,	101,	1100,	1100
2017-01-05 14:11:46 AI_Player.update()		1110,	1101,	1110,	11,	111,	1001,	1011
2017-01-05 14:11:46 AI_Player.update()		101,	111,	11,	101,	101,	1010,	1001
2017-01-05 14:11:46 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-05 14:11:46 AI_Player.update()		11,	11,	101,	1001,	110,	1011,	101
2017-01-05 14:11:46 AI_Player.update()		1100,	111,	1101,	101,	1101,	1001,	1001
2017-01-05 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()	update
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:46 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:46 AI_Player.update()	update
2017-01-05 14:11:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:47 AI_Player.update()	Search took275ms
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 14:11:47 AI_Player.update()		1100,	1110,	101,	1010,	101,	1100,	1100
2017-01-05 14:11:47 AI_Player.update()		1110,	1101,	1110,	110,	111,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		101,	111,	11,	11,	101,	1010,	1001
2017-01-05 14:11:47 AI_Player.update()		1110,	1011,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:47 AI_Player.update()		11,	11,	101,	1010,	110,	1011,	101
2017-01-05 14:11:47 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:47 AI_Player.update()	Search took1ms
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()		110,	1110,	111,	101,	111,	110,	11
2017-01-05 14:11:47 AI_Player.update()		1100,	1101,	101,	1010,	101,	1100,	1100
2017-01-05 14:11:47 AI_Player.update()		1110,	111,	1110,	110,	111,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		101,	1011,	11,	11,	101,	1010,	1001
2017-01-05 14:11:47 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:47 AI_Player.update()		11,	111,	101,	1010,	110,	1011,	101
2017-01-05 14:11:47 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:47 AI_Player.update()	Search took120ms
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()		110,	1101,	111,	101,	111,	110,	11
2017-01-05 14:11:47 AI_Player.update()		1100,	111,	101,	1010,	101,	1100,	1100
2017-01-05 14:11:47 AI_Player.update()		1110,	1011,	1110,	110,	111,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		101,	11,	11,	11,	101,	1010,	1001
2017-01-05 14:11:47 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:47 AI_Player.update()		11,	1100,	101,	1010,	110,	1011,	101
2017-01-05 14:11:47 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:47 AI_Player.update()	Search took1ms
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()		110,	111,	111,	101,	111,	110,	11
2017-01-05 14:11:47 AI_Player.update()		1100,	1011,	101,	1010,	101,	1100,	1100
2017-01-05 14:11:47 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		101,	111,	11,	11,	101,	1010,	1001
2017-01-05 14:11:47 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:47 AI_Player.update()		11,	1110,	101,	1010,	110,	1011,	101
2017-01-05 14:11:47 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:47 AI_Player.update()	Search took85ms
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()		110,	1101,	111,	101,	111,	110,	11
2017-01-05 14:11:47 AI_Player.update()		1100,	111,	101,	1010,	101,	1100,	1100
2017-01-05 14:11:47 AI_Player.update()		1110,	1011,	1110,	110,	111,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		101,	11,	11,	11,	101,	1010,	1001
2017-01-05 14:11:47 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:47 AI_Player.update()		11,	1100,	101,	1010,	110,	1011,	101
2017-01-05 14:11:47 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:47 AI_Player.update()	Player a has won!
2017-01-05 14:11:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:47 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:47 AI_Player.update()	Search took26ms
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()		110,	1101,	111,	1110,	111,	110,	11
2017-01-05 14:11:47 AI_Player.update()		101,	110,	101,	1101,	101,	1010,	101
2017-01-05 14:11:47 AI_Player.update()		1110,	110,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		1010,	110,	101,	1101,	1001,	1011,	1100
2017-01-05 14:11:47 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	1010,	101,	1100,	11,	110,	101
2017-01-05 14:11:47 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:47 AI_Player.update()	Search took2ms
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()		110,	1101,	111,	1110,	111,	110,	11
2017-01-05 14:11:47 AI_Player.update()		101,	110,	101,	1101,	101,	1010,	101
2017-01-05 14:11:47 AI_Player.update()		1110,	110,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	1010,	110,	101,	1101,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	1010,	101,	1100,	11,	110,	101
2017-01-05 14:11:47 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:47 AI_Player.update()	Search took80ms
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()		110,	1101,	111,	1110,	111,	110,	11
2017-01-05 14:11:47 AI_Player.update()		110,	101,	1101,	101,	1010,	101,	101
2017-01-05 14:11:47 AI_Player.update()		1110,	110,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	1010,	110,	101,	1101,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	1010,	101,	1100,	11,	110,	101
2017-01-05 14:11:47 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:47 AI_Player.update()	Search took2ms
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()		110,	101,	111,	1110,	111,	110,	11
2017-01-05 14:11:47 AI_Player.update()		110,	110,	1101,	101,	1010,	101,	101
2017-01-05 14:11:47 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	110,	110,	101,	1101,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	111,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	1100,	101,	1100,	11,	110,	101
2017-01-05 14:11:47 AI_Player.update()		1100,	1101,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:47 AI_Player.update()	Search took69ms
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-05 14:11:47 AI_Player.update()		110,	110,	1101,	101,	1010,	1001,	101
2017-01-05 14:11:47 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	110,	110,	101,	1101,	111,	1011
2017-01-05 14:11:47 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	1100,	101,	1100,	11,	101,	101
2017-01-05 14:11:47 AI_Player.update()		1100,	1101,	1101,	101,	1101,	110,	1001
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:47 AI_Player.update()	Search took2ms
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()		110,	110,	111,	1110,	111,	101,	11
2017-01-05 14:11:47 AI_Player.update()		110,	1010,	1101,	101,	1010,	1001,	101
2017-01-05 14:11:47 AI_Player.update()		1110,	110,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	1010,	110,	101,	1101,	111,	1011
2017-01-05 14:11:47 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	1101,	101,	1100,	11,	101,	101
2017-01-05 14:11:47 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:47 AI_Player.update()	Search took134ms
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()		110,	110,	111,	1110,	111,	101,	11
2017-01-05 14:11:47 AI_Player.update()		1010,	1101,	101,	1010,	1001,	101,	110
2017-01-05 14:11:47 AI_Player.update()		1110,	110,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	1010,	110,	101,	1101,	111,	1011
2017-01-05 14:11:47 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	1101,	101,	1100,	11,	101,	101
2017-01-05 14:11:47 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:47 AI_Player.update()	Search took3ms
2017-01-05 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()		110,	110,	111,	1110,	111,	101,	11
2017-01-05 14:11:47 AI_Player.update()		1010,	1101,	101,	1010,	1001,	101,	110
2017-01-05 14:11:47 AI_Player.update()		1110,	110,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:47 AI_Player.update()		1100,	1010,	110,	101,	1101,	111,	1011
2017-01-05 14:11:47 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-05 14:11:47 AI_Player.update()		101,	1100,	1101,	101,	1100,	11,	101
2017-01-05 14:11:47 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:47 AI_Player.update()	update
2017-01-05 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:48 AI_Player.update()	Search took716ms
2017-01-05 14:11:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:48 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-05 14:11:48 AI_Player.update()		1010,	1101,	101,	1010,	1001,	101,	110
2017-01-05 14:11:48 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-05 14:11:48 AI_Player.update()		1100,	1010,	110,	101,	1101,	1001,	1011
2017-01-05 14:11:48 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	111,	1011
2017-01-05 14:11:48 AI_Player.update()		101,	1100,	1101,	101,	1100,	110,	101
2017-01-05 14:11:48 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-05 14:11:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:11:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:48 AI_Player.update()	update
2017-01-05 14:11:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:11:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:48 AI_Player.update()	update
2017-01-05 14:11:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:48 AI_Player.update()	Search took2ms
2017-01-05 14:11:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:48 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-05 14:11:48 AI_Player.update()		1010,	1101,	101,	1010,	1001,	110,	110
2017-01-05 14:11:48 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-05 14:11:48 AI_Player.update()		1100,	1010,	110,	101,	1101,	101,	1011
2017-01-05 14:11:48 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:11:48 AI_Player.update()		101,	1100,	1101,	101,	1100,	111,	101
2017-01-05 14:11:48 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 14:11:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:11:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:48 AI_Player.update()	update
2017-01-05 14:11:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:11:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:48 AI_Player.update()	update
2017-01-05 14:11:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:48 AI_Player.update()	Search took508ms
2017-01-05 14:11:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:48 AI_Player.update()		110,	1101,	111,	1110,	111,	11,	11
2017-01-05 14:11:48 AI_Player.update()		1010,	110,	101,	1010,	1001,	110,	110
2017-01-05 14:11:48 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 14:11:48 AI_Player.update()		1100,	1100,	110,	101,	1101,	101,	1011
2017-01-05 14:11:48 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:11:48 AI_Player.update()		101,	101,	1101,	101,	1100,	111,	101
2017-01-05 14:11:48 AI_Player.update()		1100,	110,	1101,	101,	1101,	110,	1001
2017-01-05 14:11:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:11:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:48 AI_Player.update()	update
2017-01-05 14:11:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:11:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:48 AI_Player.update()	update
2017-01-05 14:11:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:48 AI_Player.update()	Search took2ms
2017-01-05 14:11:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:48 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-05 14:11:48 AI_Player.update()		1010,	1010,	101,	1010,	1001,	110,	110
2017-01-05 14:11:48 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-05 14:11:48 AI_Player.update()		1100,	1100,	110,	101,	1101,	101,	1011
2017-01-05 14:11:48 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:11:48 AI_Player.update()		101,	110,	1101,	101,	1100,	111,	101
2017-01-05 14:11:48 AI_Player.update()		1100,	1101,	1101,	101,	1101,	110,	1001
2017-01-05 14:11:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:11:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:48 AI_Player.update()	update
2017-01-05 14:11:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:48 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:11:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:48 AI_Player.update()	update
2017-01-05 14:11:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:49 AI_Player.update()	Search took484ms
2017-01-05 14:11:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:49 AI_Player.update()		110,	1010,	111,	1110,	111,	11,	11
2017-01-05 14:11:49 AI_Player.update()		1010,	1100,	101,	1010,	1001,	110,	110
2017-01-05 14:11:49 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-05 14:11:49 AI_Player.update()		1100,	101,	110,	101,	1101,	101,	1011
2017-01-05 14:11:49 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:11:49 AI_Player.update()		101,	1101,	1101,	101,	1100,	111,	101
2017-01-05 14:11:49 AI_Player.update()		1100,	110,	1101,	101,	1101,	110,	1001
2017-01-05 14:11:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:49 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:11:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:49 AI_Player.update()	update
2017-01-05 14:11:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:49 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:11:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:49 AI_Player.update()	update
2017-01-05 14:11:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:49 AI_Player.update()	Search took2ms
2017-01-05 14:11:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:49 AI_Player.update()		110,	1100,	111,	1110,	111,	11,	11
2017-01-05 14:11:49 AI_Player.update()		1010,	1100,	101,	1010,	1001,	110,	110
2017-01-05 14:11:49 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 14:11:49 AI_Player.update()		1100,	110,	110,	101,	1101,	101,	1011
2017-01-05 14:11:49 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:11:49 AI_Player.update()		101,	110,	1101,	101,	1100,	111,	101
2017-01-05 14:11:49 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-05 14:11:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:49 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:11:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:49 AI_Player.update()	update
2017-01-05 14:11:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:49 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:11:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:49 AI_Player.update()	update
2017-01-05 14:11:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:49 AI_Player.update()	Search took618ms
2017-01-05 14:11:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:49 AI_Player.update()		110,	1100,	111,	1110,	111,	11,	11
2017-01-05 14:11:49 AI_Player.update()		1010,	1100,	101,	1010,	1001,	110,	110
2017-01-05 14:11:49 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 14:11:49 AI_Player.update()		1011,	1100,	110,	110,	101,	1101,	101
2017-01-05 14:11:49 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:11:49 AI_Player.update()		101,	110,	1101,	101,	1100,	111,	101
2017-01-05 14:11:49 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-05 14:11:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:50 AI_Player.update()	Player a has won!
2017-01-05 14:11:50 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:50 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:50 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took42ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	110,	1110,	1001,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		110,	11,	1010,	1010,	1001,	101,	101
2017-01-05 14:11:50 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	1100,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took1ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	111,	111,	1110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	110,	110,	1001,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		110,	11,	1010,	1001,	1001,	101,	101
2017-01-05 14:11:50 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	1100,	110,	11,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took65ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	111,	111,	1110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		110,	1100,	1100,	110,	110,	1001,	1010
2017-01-05 14:11:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		110,	11,	1010,	1001,	1001,	101,	101
2017-01-05 14:11:50 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	1100,	110,	11,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took2ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	111,	111,	110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		110,	1100,	1100,	1010,	110,	1001,	1010
2017-01-05 14:11:50 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		110,	11,	1010,	1010,	1001,	101,	101
2017-01-05 14:11:50 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	1100,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took194ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		110,	111,	1100,	1010,	110,	1001,	1010
2017-01-05 14:11:50 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		110,	11,	1010,	1010,	1001,	101,	101
2017-01-05 14:11:50 AI_Player.update()		1110,	11,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	101,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took3ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	111,	111,	110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		110,	1100,	1100,	1010,	110,	1001,	1010
2017-01-05 14:11:50 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		110,	11,	1010,	1010,	1001,	101,	101
2017-01-05 14:11:50 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	1100,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took63ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	111,	111,	110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	1010,	110,	1001,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		110,	11,	1010,	1010,	1001,	101,	101
2017-01-05 14:11:50 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	1100,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took7ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		1100,	11,	1010,	110,	1001,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		110,	101,	1010,	1010,	1001,	101,	101
2017-01-05 14:11:50 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	1100,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	111,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took123ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		1100,	11,	1010,	110,	1001,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		101,	1010,	1010,	1001,	101,	101,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	1100,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	111,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took6ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		1100,	11,	1010,	110,	1001,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		101,	1100,	1010,	1001,	101,	101,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	111,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took54ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		110,	1100,	11,	1010,	110,	1001,	1010
2017-01-05 14:11:50 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		101,	1100,	1010,	1001,	101,	101,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	111,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took3ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		110,	1010,	11,	1010,	110,	1001,	1010
2017-01-05 14:11:50 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		101,	1100,	1010,	1001,	101,	101,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	111,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	1100,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took46ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		1010,	11,	1010,	110,	1001,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		101,	1100,	1010,	1001,	101,	101,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	111,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	1100,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took4ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		1010,	1100,	1010,	110,	1001,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		101,	111,	1010,	1001,	101,	101,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	11,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took158ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		1100,	1010,	110,	1001,	1010,	110,	1010
2017-01-05 14:11:50 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		101,	111,	1010,	1001,	101,	101,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	11,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:50 AI_Player.update()	Search took6ms
2017-01-05 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-05 14:11:50 AI_Player.update()		1100,	1100,	110,	1001,	1010,	110,	1010
2017-01-05 14:11:50 AI_Player.update()		1110,	111,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:50 AI_Player.update()		101,	1100,	1010,	1001,	101,	101,	110
2017-01-05 14:11:50 AI_Player.update()		1110,	11,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:50 AI_Player.update()		1101,	1100,	110,	1010,	110,	1010,	110
2017-01-05 14:11:50 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:50 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:50 AI_Player.update()	update
2017-01-05 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:51 AI_Player.update()	Search took549ms
2017-01-05 14:11:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-05 14:11:51 AI_Player.update()		1100,	1100,	110,	1001,	1010,	110,	1010
2017-01-05 14:11:51 AI_Player.update()		1110,	111,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:51 AI_Player.update()		101,	1100,	1010,	1001,	101,	101,	110
2017-01-05 14:11:51 AI_Player.update()		1110,	11,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:51 AI_Player.update()		1100,	110,	1010,	110,	1010,	110,	1101
2017-01-05 14:11:51 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()	update
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()	update
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:51 AI_Player.update()	Search took2ms
2017-01-05 14:11:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-05 14:11:51 AI_Player.update()		1100,	111,	110,	1001,	1010,	110,	1010
2017-01-05 14:11:51 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:51 AI_Player.update()		101,	11,	1010,	1001,	101,	101,	110
2017-01-05 14:11:51 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:51 AI_Player.update()		1100,	11,	1010,	110,	1010,	110,	1101
2017-01-05 14:11:51 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()	update
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()	update
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:51 AI_Player.update()	Search took215ms
2017-01-05 14:11:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()		110,	111,	111,	110,	111,	101,	11
2017-01-05 14:11:51 AI_Player.update()		1100,	1100,	110,	1001,	1010,	110,	1010
2017-01-05 14:11:51 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:51 AI_Player.update()		101,	110,	1010,	1001,	101,	101,	110
2017-01-05 14:11:51 AI_Player.update()		1110,	11,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:51 AI_Player.update()		1100,	1010,	1010,	110,	1010,	110,	1101
2017-01-05 14:11:51 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()	update
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()	update
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:51 AI_Player.update()	Search took3ms
2017-01-05 14:11:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-05 14:11:51 AI_Player.update()		1100,	11,	110,	1001,	1010,	110,	1010
2017-01-05 14:11:51 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:51 AI_Player.update()		101,	11,	1010,	1001,	101,	101,	110
2017-01-05 14:11:51 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 14:11:51 AI_Player.update()		1100,	1100,	1010,	110,	1010,	110,	1101
2017-01-05 14:11:51 AI_Player.update()		1100,	111,	1101,	1110,	1101,	1011,	1001
2017-01-05 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()	update
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()	update
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:51 AI_Player.update()	Search took334ms
2017-01-05 14:11:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()		110,	1100,	111,	1110,	111,	101,	11
2017-01-05 14:11:51 AI_Player.update()		1100,	11,	110,	110,	1010,	110,	1010
2017-01-05 14:11:51 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:51 AI_Player.update()		101,	11,	1010,	1001,	101,	101,	110
2017-01-05 14:11:51 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 14:11:51 AI_Player.update()		1100,	1100,	1010,	11,	1010,	110,	1101
2017-01-05 14:11:51 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-05 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()	update
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()	update
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:51 AI_Player.update()	Search took1ms
2017-01-05 14:11:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()		110,	11,	111,	1110,	111,	101,	11
2017-01-05 14:11:51 AI_Player.update()		1100,	110,	110,	110,	1010,	110,	1010
2017-01-05 14:11:51 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:51 AI_Player.update()		101,	1010,	1010,	1001,	101,	101,	110
2017-01-05 14:11:51 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	11,	1011
2017-01-05 14:11:51 AI_Player.update()		1100,	111,	1010,	11,	1010,	110,	1101
2017-01-05 14:11:51 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1011,	1001
2017-01-05 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()	update
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:51 AI_Player.update()	update
2017-01-05 14:11:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:52 AI_Player.update()	Search took198ms
2017-01-05 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()		110,	11,	111,	1110,	111,	101,	11
2017-01-05 14:11:52 AI_Player.update()		1010,	1100,	110,	110,	110,	1010,	110
2017-01-05 14:11:52 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 14:11:52 AI_Player.update()		101,	1010,	1010,	1001,	101,	101,	110
2017-01-05 14:11:52 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	11,	1011
2017-01-05 14:11:52 AI_Player.update()		1100,	111,	1010,	11,	1010,	110,	1101
2017-01-05 14:11:52 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1011,	1001
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:52 AI_Player.update()	Player a has won!
2017-01-05 14:11:52 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:52 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:52 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:52 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:52 AI_Player.update()	Search took34ms
2017-01-05 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-05 14:11:52 AI_Player.update()		1010,	101,	1100,	1010,	1101,	1100,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	110,	1110,	1100,	111,	1011,	1011
2017-01-05 14:11:52 AI_Player.update()		1100,	101,	110,	11,	1100,	110,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	11,	1011
2017-01-05 14:11:52 AI_Player.update()		1010,	110,	11,	111,	110,	1101,	110
2017-01-05 14:11:52 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:52 AI_Player.update()	Search took3ms
2017-01-05 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-05 14:11:52 AI_Player.update()		1010,	101,	1100,	1010,	1101,	1011,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-05 14:11:52 AI_Player.update()		1100,	101,	110,	11,	1100,	11,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1101,	1011
2017-01-05 14:11:52 AI_Player.update()		1010,	110,	11,	111,	110,	1001,	110
2017-01-05 14:11:52 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:52 AI_Player.update()	Search took98ms
2017-01-05 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 14:11:52 AI_Player.update()		1010,	110,	1100,	1010,	1101,	1011,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-05 14:11:52 AI_Player.update()		1100,	1100,	110,	11,	1100,	11,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1101,	1011
2017-01-05 14:11:52 AI_Player.update()		1010,	1010,	11,	111,	110,	1001,	110
2017-01-05 14:11:52 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:52 AI_Player.update()	Search took4ms
2017-01-05 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-05 14:11:52 AI_Player.update()		1010,	110,	1100,	101,	1101,	1011,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-05 14:11:52 AI_Player.update()		1100,	1100,	110,	1100,	1100,	11,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	110,	1101,	11,	1011,	1101,	1011
2017-01-05 14:11:52 AI_Player.update()		1010,	1010,	11,	1110,	110,	1001,	110
2017-01-05 14:11:52 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:52 AI_Player.update()	Search took234ms
2017-01-05 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()		110,	101,	111,	111,	111,	1100,	11
2017-01-05 14:11:52 AI_Player.update()		1010,	110,	1100,	1010,	1101,	1011,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:52 AI_Player.update()		1100,	1100,	110,	1010,	1100,	11,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-05 14:11:52 AI_Player.update()		1010,	1010,	11,	11,	110,	1001,	110
2017-01-05 14:11:52 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	11,	1001
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:52 AI_Player.update()	Search took2ms
2017-01-05 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()		110,	110,	111,	111,	111,	1100,	11
2017-01-05 14:11:52 AI_Player.update()		1010,	101,	1100,	1010,	1101,	1011,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-05 14:11:52 AI_Player.update()		1100,	110,	110,	1010,	1100,	11,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-05 14:11:52 AI_Player.update()		1010,	1010,	11,	11,	110,	1001,	110
2017-01-05 14:11:52 AI_Player.update()		1100,	101,	1101,	1110,	1101,	11,	1001
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:52 AI_Player.update()	Search took116ms
2017-01-05 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()		110,	101,	111,	111,	111,	1100,	11
2017-01-05 14:11:52 AI_Player.update()		1010,	110,	1100,	1010,	1101,	1011,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:52 AI_Player.update()		1100,	1100,	110,	1010,	1100,	11,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-05 14:11:52 AI_Player.update()		1010,	1010,	11,	11,	110,	1001,	110
2017-01-05 14:11:52 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	11,	1001
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:52 AI_Player.update()	Search took2ms
2017-01-05 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()		110,	110,	111,	111,	111,	1100,	11
2017-01-05 14:11:52 AI_Player.update()		1010,	101,	1100,	1010,	1101,	1011,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-05 14:11:52 AI_Player.update()		1100,	110,	110,	1010,	1100,	11,	1110
2017-01-05 14:11:52 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-05 14:11:52 AI_Player.update()		1010,	1010,	11,	11,	110,	1001,	110
2017-01-05 14:11:52 AI_Player.update()		1100,	101,	1101,	1110,	1101,	11,	1001
2017-01-05 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:52 AI_Player.update()	update
2017-01-05 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:53 AI_Player.update()	Search took280ms
2017-01-05 14:11:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()		110,	101,	111,	111,	111,	1100,	11
2017-01-05 14:11:53 AI_Player.update()		1010,	110,	1100,	1010,	1101,	1011,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:53 AI_Player.update()		1100,	1100,	110,	1010,	1100,	11,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-05 14:11:53 AI_Player.update()		1010,	1010,	11,	11,	110,	1001,	110
2017-01-05 14:11:53 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	11,	1001
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:53 AI_Player.update()	Search took2ms
2017-01-05 14:11:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()		110,	1010,	111,	111,	111,	1100,	11
2017-01-05 14:11:53 AI_Player.update()		1010,	101,	1100,	1010,	1101,	1011,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 14:11:53 AI_Player.update()		1100,	101,	110,	1010,	1100,	11,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-05 14:11:53 AI_Player.update()		1010,	110,	11,	11,	110,	1001,	110
2017-01-05 14:11:53 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	11,	1001
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:53 AI_Player.update()	Search took187ms
2017-01-05 14:11:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()		110,	1010,	111,	111,	111,	1100,	11
2017-01-05 14:11:53 AI_Player.update()		1010,	1010,	1100,	1010,	1101,	1011,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:53 AI_Player.update()		1100,	110,	110,	1010,	1100,	11,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-05 14:11:53 AI_Player.update()		1010,	1100,	11,	11,	110,	1001,	110
2017-01-05 14:11:53 AI_Player.update()		1100,	110,	1101,	1110,	1101,	11,	1001
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:53 AI_Player.update()	Search took2ms
2017-01-05 14:11:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()		110,	110,	111,	111,	111,	1100,	11
2017-01-05 14:11:53 AI_Player.update()		1010,	1010,	1100,	1010,	1101,	1011,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:11:53 AI_Player.update()		1100,	101,	110,	1010,	1100,	11,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-05 14:11:53 AI_Player.update()		1010,	101,	11,	11,	110,	1001,	110
2017-01-05 14:11:53 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	11,	1001
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:53 AI_Player.update()	Search took330ms
2017-01-05 14:11:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()		110,	110,	111,	1010,	111,	1100,	11
2017-01-05 14:11:53 AI_Player.update()		1010,	1010,	1100,	101,	1101,	1011,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-05 14:11:53 AI_Player.update()		1100,	101,	110,	1100,	1100,	11,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	110,	1101,	11,	1011,	1101,	1011
2017-01-05 14:11:53 AI_Player.update()		1010,	101,	11,	1110,	110,	1001,	110
2017-01-05 14:11:53 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:53 AI_Player.update()	Search took2ms
2017-01-05 14:11:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()		110,	110,	111,	111,	111,	1100,	11
2017-01-05 14:11:53 AI_Player.update()		1010,	1010,	1100,	1010,	1101,	1011,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:11:53 AI_Player.update()		1100,	101,	110,	1010,	1100,	11,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-05 14:11:53 AI_Player.update()		1010,	101,	11,	11,	110,	1001,	110
2017-01-05 14:11:53 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	11,	1001
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:53 AI_Player.update()	Search took173ms
2017-01-05 14:11:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()		110,	110,	111,	111,	111,	1100,	11
2017-01-05 14:11:53 AI_Player.update()		1010,	1100,	1010,	1101,	1011,	1110,	1010
2017-01-05 14:11:53 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:11:53 AI_Player.update()		1100,	101,	110,	1010,	1100,	11,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-05 14:11:53 AI_Player.update()		1010,	101,	11,	11,	110,	1001,	110
2017-01-05 14:11:53 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	11,	1001
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:53 AI_Player.update()	Search took1ms
2017-01-05 14:11:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()		110,	1100,	111,	111,	111,	1100,	11
2017-01-05 14:11:53 AI_Player.update()		1010,	1010,	1010,	1101,	1011,	1110,	1010
2017-01-05 14:11:53 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:11:53 AI_Player.update()		1100,	110,	110,	1010,	1100,	11,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-05 14:11:53 AI_Player.update()		1010,	1100,	11,	11,	110,	1001,	110
2017-01-05 14:11:53 AI_Player.update()		1100,	110,	1101,	1110,	1101,	11,	1001
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:53 AI_Player.update()	Search took213ms
2017-01-05 14:11:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()		110,	1100,	111,	1110,	111,	1100,	11
2017-01-05 14:11:53 AI_Player.update()		1010,	1010,	1010,	111,	1011,	1110,	1010
2017-01-05 14:11:53 AI_Player.update()		1110,	101,	1110,	1101,	111,	110,	1011
2017-01-05 14:11:53 AI_Player.update()		1100,	110,	110,	101,	1100,	11,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:11:53 AI_Player.update()		1010,	1100,	11,	1100,	110,	1001,	110
2017-01-05 14:11:53 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:53 AI_Player.update()	Search took1ms
2017-01-05 14:11:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()		110,	1010,	111,	1110,	111,	1100,	11
2017-01-05 14:11:53 AI_Player.update()		1010,	101,	1010,	111,	1011,	1110,	1010
2017-01-05 14:11:53 AI_Player.update()		1110,	110,	1110,	1101,	111,	110,	1011
2017-01-05 14:11:53 AI_Player.update()		1100,	101,	110,	101,	1100,	11,	1110
2017-01-05 14:11:53 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:11:53 AI_Player.update()		1010,	110,	11,	1100,	110,	1001,	110
2017-01-05 14:11:53 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-05 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:53 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:53 AI_Player.update()	update
2017-01-05 14:11:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:54 AI_Player.update()	Search took652ms
2017-01-05 14:11:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:54 AI_Player.update()		110,	1010,	111,	1110,	111,	1100,	11
2017-01-05 14:11:54 AI_Player.update()		1010,	101,	1010,	111,	1011,	1110,	1010
2017-01-05 14:11:54 AI_Player.update()		1110,	110,	1110,	1101,	111,	110,	1011
2017-01-05 14:11:54 AI_Player.update()		101,	110,	101,	1100,	11,	1110,	1100
2017-01-05 14:11:54 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:11:54 AI_Player.update()		1010,	110,	11,	1100,	110,	1001,	110
2017-01-05 14:11:54 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-05 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:54 AI_Player.update()	update
2017-01-05 14:11:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:54 AI_Player.update()	update
2017-01-05 14:11:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:54 AI_Player.update()	Search took2ms
2017-01-05 14:11:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:54 AI_Player.update()		110,	101,	111,	1110,	111,	1100,	11
2017-01-05 14:11:54 AI_Player.update()		1010,	110,	1010,	111,	1011,	1110,	1010
2017-01-05 14:11:54 AI_Player.update()		1110,	110,	1110,	1101,	111,	110,	1011
2017-01-05 14:11:54 AI_Player.update()		101,	1100,	101,	1100,	11,	1110,	1100
2017-01-05 14:11:54 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:11:54 AI_Player.update()		1010,	1100,	11,	1100,	110,	1001,	110
2017-01-05 14:11:54 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-05 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:54 AI_Player.update()	update
2017-01-05 14:11:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:54 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:54 AI_Player.update()	update
2017-01-05 14:11:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:55 AI_Player.update()	Search took454ms
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()		110,	101,	111,	1110,	111,	1100,	11
2017-01-05 14:11:55 AI_Player.update()		1010,	110,	1010,	111,	1011,	1110,	1010
2017-01-05 14:11:55 AI_Player.update()		1110,	110,	1110,	1101,	111,	110,	1011
2017-01-05 14:11:55 AI_Player.update()		1100,	101,	1100,	101,	1100,	11,	1110
2017-01-05 14:11:55 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:11:55 AI_Player.update()		1010,	1100,	11,	1100,	110,	1001,	110
2017-01-05 14:11:55 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:55 AI_Player.update()	Player a has won!
2017-01-05 14:11:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:55 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:55 AI_Player.update()	Search took24ms
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()		110,	111,	111,	1100,	111,	101,	11
2017-01-05 14:11:55 AI_Player.update()		11,	1100,	101,	1001,	101,	11,	11
2017-01-05 14:11:55 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:55 AI_Player.update()		1011,	110,	101,	101,	101,	110,	1001
2017-01-05 14:11:55 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:11:55 AI_Player.update()		11,	101,	1010,	101,	1001,	101,	110
2017-01-05 14:11:55 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:55 AI_Player.update()	Search took1ms
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()		110,	111,	111,	1100,	111,	101,	11
2017-01-05 14:11:55 AI_Player.update()		11,	11,	1100,	101,	1001,	101,	11
2017-01-05 14:11:55 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:55 AI_Player.update()		1011,	110,	101,	101,	101,	110,	1001
2017-01-05 14:11:55 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:11:55 AI_Player.update()		11,	101,	1010,	101,	1001,	101,	110
2017-01-05 14:11:55 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:55 AI_Player.update()	Search took157ms
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-05 14:11:55 AI_Player.update()		11,	111,	1100,	101,	1001,	101,	11
2017-01-05 14:11:55 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:55 AI_Player.update()		1011,	1010,	101,	101,	101,	110,	1001
2017-01-05 14:11:55 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:11:55 AI_Player.update()		11,	1010,	1010,	101,	1001,	101,	110
2017-01-05 14:11:55 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:55 AI_Player.update()	Search took1ms
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()		110,	111,	111,	1100,	111,	101,	11
2017-01-05 14:11:55 AI_Player.update()		11,	11,	1100,	101,	1001,	101,	11
2017-01-05 14:11:55 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:55 AI_Player.update()		1011,	110,	101,	101,	101,	110,	1001
2017-01-05 14:11:55 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:11:55 AI_Player.update()		11,	101,	1010,	101,	1001,	101,	110
2017-01-05 14:11:55 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:55 AI_Player.update()	Search took153ms
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-05 14:11:55 AI_Player.update()		11,	111,	1100,	101,	1001,	101,	11
2017-01-05 14:11:55 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:55 AI_Player.update()		1011,	1010,	101,	101,	101,	110,	1001
2017-01-05 14:11:55 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:11:55 AI_Player.update()		11,	1010,	1010,	101,	1001,	101,	110
2017-01-05 14:11:55 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:55 AI_Player.update()	Search took1ms
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()		110,	111,	111,	1100,	111,	101,	11
2017-01-05 14:11:55 AI_Player.update()		11,	11,	1100,	101,	1001,	101,	11
2017-01-05 14:11:55 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:55 AI_Player.update()		1011,	110,	101,	101,	101,	110,	1001
2017-01-05 14:11:55 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:11:55 AI_Player.update()		11,	101,	1010,	101,	1001,	101,	110
2017-01-05 14:11:55 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:55 AI_Player.update()	Search took148ms
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 14:11:55 AI_Player.update()		11,	11,	1100,	101,	1001,	101,	11
2017-01-05 14:11:55 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:55 AI_Player.update()		1011,	110,	101,	1100,	101,	110,	1001
2017-01-05 14:11:55 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 14:11:55 AI_Player.update()		11,	101,	1010,	1010,	1001,	101,	110
2017-01-05 14:11:55 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1011,	1001
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:55 AI_Player.update()	Search took2ms
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 14:11:55 AI_Player.update()		11,	1010,	1100,	101,	1001,	101,	11
2017-01-05 14:11:55 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:55 AI_Player.update()		1011,	1010,	101,	1100,	101,	110,	1001
2017-01-05 14:11:55 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 14:11:55 AI_Player.update()		11,	1100,	1010,	1010,	1001,	101,	110
2017-01-05 14:11:55 AI_Player.update()		1100,	111,	1101,	1100,	1101,	1011,	1001
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:55 AI_Player.update()	Search took122ms
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 14:11:55 AI_Player.update()		11,	11,	1010,	1100,	101,	1001,	101
2017-01-05 14:11:55 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:55 AI_Player.update()		1011,	1010,	101,	1100,	101,	110,	1001
2017-01-05 14:11:55 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 14:11:55 AI_Player.update()		11,	1100,	1010,	1010,	1001,	101,	110
2017-01-05 14:11:55 AI_Player.update()		1100,	111,	1101,	1100,	1101,	1011,	1001
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:55 AI_Player.update()	Search took2ms
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 14:11:55 AI_Player.update()		11,	110,	1010,	1100,	101,	1001,	101
2017-01-05 14:11:55 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:55 AI_Player.update()		1011,	101,	101,	1100,	101,	110,	1001
2017-01-05 14:11:55 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-05 14:11:55 AI_Player.update()		11,	111,	1010,	1010,	1001,	101,	110
2017-01-05 14:11:55 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1011,	1001
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:55 AI_Player.update()	Search took109ms
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()		110,	11,	111,	101,	111,	1011,	11
2017-01-05 14:11:55 AI_Player.update()		11,	110,	1010,	1100,	101,	101,	101
2017-01-05 14:11:55 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:55 AI_Player.update()		1011,	101,	101,	1100,	101,	1001,	1001
2017-01-05 14:11:55 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:55 AI_Player.update()		11,	111,	1010,	1010,	1001,	1100,	110
2017-01-05 14:11:55 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:55 AI_Player.update()	Search took2ms
2017-01-05 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()		110,	110,	111,	101,	111,	1011,	11
2017-01-05 14:11:55 AI_Player.update()		11,	1010,	1010,	1100,	101,	101,	101
2017-01-05 14:11:55 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:55 AI_Player.update()		1011,	1100,	101,	1100,	101,	1001,	1001
2017-01-05 14:11:55 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:55 AI_Player.update()		11,	11,	1010,	1010,	1001,	1100,	110
2017-01-05 14:11:55 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-05 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:55 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:55 AI_Player.update()	update
2017-01-05 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:56 AI_Player.update()	Search took279ms
2017-01-05 14:11:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 14:11:56 AI_Player.update()		11,	101,	1010,	1100,	101,	101,	101
2017-01-05 14:11:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:56 AI_Player.update()		1011,	111,	101,	1100,	101,	1001,	1001
2017-01-05 14:11:56 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:56 AI_Player.update()		11,	11,	1010,	1010,	1001,	1100,	110
2017-01-05 14:11:56 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:56 AI_Player.update()	Search took1ms
2017-01-05 14:11:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 14:11:56 AI_Player.update()		101,	1010,	1100,	101,	101,	101,	11
2017-01-05 14:11:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:56 AI_Player.update()		1011,	111,	101,	1100,	101,	1001,	1001
2017-01-05 14:11:56 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:56 AI_Player.update()		11,	11,	1010,	1010,	1001,	1100,	110
2017-01-05 14:11:56 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:56 AI_Player.update()	Search took275ms
2017-01-05 14:11:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 14:11:56 AI_Player.update()		101,	1010,	1100,	101,	101,	101,	11
2017-01-05 14:11:56 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:56 AI_Player.update()		1011,	111,	101,	101,	101,	1001,	1001
2017-01-05 14:11:56 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-05 14:11:56 AI_Player.update()		11,	11,	1010,	1100,	1001,	1100,	110
2017-01-05 14:11:56 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:56 AI_Player.update()	Search took1ms
2017-01-05 14:11:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()		110,	110,	111,	101,	111,	1011,	11
2017-01-05 14:11:56 AI_Player.update()		101,	1010,	1100,	101,	101,	101,	11
2017-01-05 14:11:56 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:56 AI_Player.update()		1011,	1100,	101,	101,	101,	1001,	1001
2017-01-05 14:11:56 AI_Player.update()		1110,	111,	1101,	1010,	1011,	110,	1011
2017-01-05 14:11:56 AI_Player.update()		11,	11,	1010,	1100,	1001,	1100,	110
2017-01-05 14:11:56 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:56 AI_Player.update()	Search took148ms
2017-01-05 14:11:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()		110,	110,	111,	101,	111,	1011,	11
2017-01-05 14:11:56 AI_Player.update()		1010,	1100,	101,	101,	101,	11,	101
2017-01-05 14:11:56 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:56 AI_Player.update()		1011,	1100,	101,	101,	101,	1001,	1001
2017-01-05 14:11:56 AI_Player.update()		1110,	111,	1101,	1010,	1011,	110,	1011
2017-01-05 14:11:56 AI_Player.update()		11,	11,	1010,	1100,	1001,	1100,	110
2017-01-05 14:11:56 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:56 AI_Player.update()	Search took2ms
2017-01-05 14:11:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()		110,	1100,	111,	101,	111,	1011,	11
2017-01-05 14:11:56 AI_Player.update()		1010,	1010,	101,	101,	101,	11,	101
2017-01-05 14:11:56 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:56 AI_Player.update()		1011,	111,	101,	101,	101,	1001,	1001
2017-01-05 14:11:56 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-05 14:11:56 AI_Player.update()		11,	11,	1010,	1100,	1001,	1100,	110
2017-01-05 14:11:56 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:56 AI_Player.update()	Search took157ms
2017-01-05 14:11:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()		110,	1100,	111,	101,	111,	1011,	11
2017-01-05 14:11:56 AI_Player.update()		101,	1010,	1010,	101,	101,	101,	11
2017-01-05 14:11:56 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:56 AI_Player.update()		1011,	111,	101,	101,	101,	1001,	1001
2017-01-05 14:11:56 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-05 14:11:56 AI_Player.update()		11,	11,	1010,	1100,	1001,	1100,	110
2017-01-05 14:11:56 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:56 AI_Player.update()	Search took2ms
2017-01-05 14:11:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()		110,	110,	111,	101,	111,	1011,	11
2017-01-05 14:11:56 AI_Player.update()		101,	1100,	1010,	101,	101,	101,	11
2017-01-05 14:11:56 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 14:11:56 AI_Player.update()		1011,	1100,	101,	101,	101,	1001,	1001
2017-01-05 14:11:56 AI_Player.update()		1110,	111,	1101,	1010,	1011,	110,	1011
2017-01-05 14:11:56 AI_Player.update()		11,	11,	1010,	1100,	1001,	1100,	110
2017-01-05 14:11:56 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:56 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:56 AI_Player.update()	update
2017-01-05 14:11:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:57 AI_Player.update()	Search took220ms
2017-01-05 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()		110,	110,	111,	101,	111,	1011,	11
2017-01-05 14:11:57 AI_Player.update()		101,	1100,	1010,	1100,	101,	101,	11
2017-01-05 14:11:57 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:57 AI_Player.update()		1011,	1100,	101,	1010,	101,	1001,	1001
2017-01-05 14:11:57 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-05 14:11:57 AI_Player.update()		11,	11,	1010,	101,	1001,	1100,	110
2017-01-05 14:11:57 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:11:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:57 AI_Player.update()	Search took3ms
2017-01-05 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()		110,	1100,	111,	101,	111,	1011,	11
2017-01-05 14:11:57 AI_Player.update()		101,	1010,	1010,	1100,	101,	101,	11
2017-01-05 14:11:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:57 AI_Player.update()		1011,	111,	101,	1010,	101,	1001,	1001
2017-01-05 14:11:57 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-05 14:11:57 AI_Player.update()		11,	11,	1010,	101,	1001,	1100,	110
2017-01-05 14:11:57 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:57 AI_Player.update()	Search took284ms
2017-01-05 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()		110,	1100,	111,	101,	111,	1011,	11
2017-01-05 14:11:57 AI_Player.update()		11,	101,	1010,	1010,	1100,	101,	101
2017-01-05 14:11:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 14:11:57 AI_Player.update()		1011,	111,	101,	1010,	101,	1001,	1001
2017-01-05 14:11:57 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-05 14:11:57 AI_Player.update()		11,	11,	1010,	101,	1001,	1100,	110
2017-01-05 14:11:57 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:57 AI_Player.update()	Search took1ms
2017-01-05 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-05 14:11:57 AI_Player.update()		11,	101,	1010,	101,	1100,	101,	101
2017-01-05 14:11:57 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-05 14:11:57 AI_Player.update()		1011,	111,	101,	1100,	101,	1001,	1001
2017-01-05 14:11:57 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:57 AI_Player.update()		11,	11,	1010,	101,	1001,	1100,	110
2017-01-05 14:11:57 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:57 AI_Player.update()	Search took109ms
2017-01-05 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 14:11:57 AI_Player.update()		11,	1100,	1010,	101,	1100,	101,	101
2017-01-05 14:11:57 AI_Player.update()		1110,	111,	1110,	1010,	111,	1001,	1011
2017-01-05 14:11:57 AI_Player.update()		1011,	11,	101,	1100,	101,	1001,	1001
2017-01-05 14:11:57 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:57 AI_Player.update()		11,	110,	1010,	101,	1001,	1100,	110
2017-01-05 14:11:57 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:57 AI_Player.update()	Search took1ms
2017-01-05 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-05 14:11:57 AI_Player.update()		11,	101,	1010,	101,	1100,	101,	101
2017-01-05 14:11:57 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-05 14:11:57 AI_Player.update()		1011,	111,	101,	1100,	101,	1001,	1001
2017-01-05 14:11:57 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:57 AI_Player.update()		11,	11,	1010,	101,	1001,	1100,	110
2017-01-05 14:11:57 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:57 AI_Player.update()	Search took116ms
2017-01-05 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 14:11:57 AI_Player.update()		11,	1100,	1010,	101,	1100,	101,	101
2017-01-05 14:11:57 AI_Player.update()		1110,	111,	1110,	1010,	111,	1001,	1011
2017-01-05 14:11:57 AI_Player.update()		1011,	11,	101,	1100,	101,	1001,	1001
2017-01-05 14:11:57 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:57 AI_Player.update()		11,	110,	1010,	101,	1001,	1100,	110
2017-01-05 14:11:57 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:57 AI_Player.update()	Search took1ms
2017-01-05 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 14:11:57 AI_Player.update()		1100,	1010,	101,	1100,	101,	101,	11
2017-01-05 14:11:57 AI_Player.update()		1110,	111,	1110,	1010,	111,	1001,	1011
2017-01-05 14:11:57 AI_Player.update()		1011,	11,	101,	1100,	101,	1001,	1001
2017-01-05 14:11:57 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:57 AI_Player.update()		11,	110,	1010,	101,	1001,	1100,	110
2017-01-05 14:11:57 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:57 AI_Player.update()	Search took148ms
2017-01-05 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 14:11:57 AI_Player.update()		1010,	101,	1100,	101,	101,	11,	1100
2017-01-05 14:11:57 AI_Player.update()		1110,	111,	1110,	1010,	111,	1001,	1011
2017-01-05 14:11:57 AI_Player.update()		1011,	11,	101,	1100,	101,	1001,	1001
2017-01-05 14:11:57 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:11:57 AI_Player.update()		11,	110,	1010,	101,	1001,	1100,	110
2017-01-05 14:11:57 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:11:57 AI_Player.update()	Player a has won!
2017-01-05 14:11:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:57 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:11:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:11:57 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:57 AI_Player.update()	Search took54ms
2017-01-05 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()		110,	1001,	111,	1001,	111,	11,	11
2017-01-05 14:11:57 AI_Player.update()		1010,	1100,	1100,	101,	1010,	11,	11
2017-01-05 14:11:57 AI_Player.update()		1110,	1101,	1110,	11,	111,	110,	1011
2017-01-05 14:11:57 AI_Player.update()		101,	101,	1010,	110,	101,	1010,	101
2017-01-05 14:11:57 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:11:57 AI_Player.update()		1010,	1011,	11,	1010,	1101,	1010,	1010
2017-01-05 14:11:57 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:57 AI_Player.update()	Search took1ms
2017-01-05 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()		110,	1001,	111,	1001,	111,	11,	11
2017-01-05 14:11:57 AI_Player.update()		1100,	1100,	101,	1010,	11,	11,	1010
2017-01-05 14:11:57 AI_Player.update()		1110,	1101,	1110,	11,	111,	110,	1011
2017-01-05 14:11:57 AI_Player.update()		101,	101,	1010,	110,	101,	1010,	101
2017-01-05 14:11:57 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:11:57 AI_Player.update()		1010,	1011,	11,	1010,	1101,	1010,	1010
2017-01-05 14:11:57 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-05 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:57 AI_Player.update()	update
2017-01-05 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:58 AI_Player.update()	Search took360ms
2017-01-05 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()		110,	1001,	111,	1001,	111,	11,	11
2017-01-05 14:11:58 AI_Player.update()		1100,	1100,	101,	1010,	11,	110,	1010
2017-01-05 14:11:58 AI_Player.update()		1110,	1101,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:58 AI_Player.update()		101,	101,	1010,	110,	101,	1110,	101
2017-01-05 14:11:58 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:11:58 AI_Player.update()		1010,	1011,	11,	1010,	1101,	111,	1010
2017-01-05 14:11:58 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:58 AI_Player.update()	Search took2ms
2017-01-05 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-05 14:11:58 AI_Player.update()		1100,	1101,	101,	1010,	11,	110,	1010
2017-01-05 14:11:58 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 14:11:58 AI_Player.update()		101,	1100,	1010,	110,	101,	1110,	101
2017-01-05 14:11:58 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:11:58 AI_Player.update()		1010,	1010,	11,	1010,	1101,	111,	1010
2017-01-05 14:11:58 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:58 AI_Player.update()	Search took119ms
2017-01-05 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-05 14:11:58 AI_Player.update()		1100,	1101,	101,	1010,	11,	11,	1010
2017-01-05 14:11:58 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-05 14:11:58 AI_Player.update()		101,	1100,	1010,	110,	101,	1010,	101
2017-01-05 14:11:58 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:11:58 AI_Player.update()		1010,	1010,	11,	1010,	1101,	1010,	1010
2017-01-05 14:11:58 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	111,	1001
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:58 AI_Player.update()	Search took3ms
2017-01-05 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()		110,	1101,	111,	1001,	111,	11,	11
2017-01-05 14:11:58 AI_Player.update()		1100,	101,	101,	1010,	11,	11,	1010
2017-01-05 14:11:58 AI_Player.update()		1110,	1100,	1110,	11,	111,	110,	1011
2017-01-05 14:11:58 AI_Player.update()		101,	1011,	1010,	110,	101,	1010,	101
2017-01-05 14:11:58 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:11:58 AI_Player.update()		1010,	1001,	11,	1010,	1101,	1010,	1010
2017-01-05 14:11:58 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:58 AI_Player.update()	Search took470ms
2017-01-05 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()		110,	1101,	111,	1001,	111,	11,	11
2017-01-05 14:11:58 AI_Player.update()		1100,	101,	101,	1010,	11,	11,	1010
2017-01-05 14:11:58 AI_Player.update()		1110,	1100,	1110,	11,	111,	110,	1011
2017-01-05 14:11:58 AI_Player.update()		101,	1011,	1010,	110,	101,	1010,	101
2017-01-05 14:11:58 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:11:58 AI_Player.update()		1010,	1010,	1001,	11,	1010,	1101,	1010
2017-01-05 14:11:58 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:58 AI_Player.update()	Search took3ms
2017-01-05 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-05 14:11:58 AI_Player.update()		1100,	1100,	101,	1010,	11,	11,	1010
2017-01-05 14:11:58 AI_Player.update()		1110,	1011,	1110,	11,	111,	110,	1011
2017-01-05 14:11:58 AI_Player.update()		101,	1010,	1010,	110,	101,	1010,	101
2017-01-05 14:11:58 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:11:58 AI_Player.update()		1010,	1100,	1001,	11,	1010,	1101,	1010
2017-01-05 14:11:58 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:58 AI_Player.update()	Search took145ms
2017-01-05 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-05 14:11:58 AI_Player.update()		1100,	1100,	101,	1001,	11,	11,	1010
2017-01-05 14:11:58 AI_Player.update()		1110,	1011,	1110,	1010,	111,	110,	1011
2017-01-05 14:11:58 AI_Player.update()		101,	1010,	1010,	11,	101,	1010,	101
2017-01-05 14:11:58 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1110,	1011
2017-01-05 14:11:58 AI_Player.update()		1010,	1100,	1001,	1010,	1010,	1101,	1010
2017-01-05 14:11:58 AI_Player.update()		1100,	1101,	1101,	11,	1101,	111,	1001
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:58 AI_Player.update()	Search took2ms
2017-01-05 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-05 14:11:58 AI_Player.update()		1100,	1100,	101,	1010,	11,	11,	1010
2017-01-05 14:11:58 AI_Player.update()		1110,	1011,	1110,	11,	111,	110,	1011
2017-01-05 14:11:58 AI_Player.update()		101,	1010,	1010,	110,	101,	1010,	101
2017-01-05 14:11:58 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:11:58 AI_Player.update()		1010,	1100,	1001,	11,	1010,	1101,	1010
2017-01-05 14:11:58 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-05 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:58 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:58 AI_Player.update()	update
2017-01-05 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:59 AI_Player.update()	Search took390ms
2017-01-05 14:11:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:59 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-05 14:11:59 AI_Player.update()		1100,	1100,	101,	1010,	11,	11,	1010
2017-01-05 14:11:59 AI_Player.update()		1110,	1011,	1110,	11,	111,	110,	1011
2017-01-05 14:11:59 AI_Player.update()		101,	101,	1010,	1010,	110,	101,	1010
2017-01-05 14:11:59 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:11:59 AI_Player.update()		1010,	1100,	1001,	11,	1010,	1101,	1010
2017-01-05 14:11:59 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-05 14:11:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:59 AI_Player.update()	update
2017-01-05 14:11:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:59 AI_Player.update()	update
2017-01-05 14:11:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:59 AI_Player.update()	Search took4ms
2017-01-05 14:11:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:59 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-05 14:11:59 AI_Player.update()		1100,	1011,	101,	1010,	11,	11,	1010
2017-01-05 14:11:59 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-05 14:11:59 AI_Player.update()		101,	1010,	1010,	1010,	110,	101,	1010
2017-01-05 14:11:59 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:11:59 AI_Player.update()		1010,	1101,	1001,	11,	1010,	1101,	1010
2017-01-05 14:11:59 AI_Player.update()		1100,	101,	1101,	1100,	1101,	111,	1001
2017-01-05 14:11:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:59 AI_Player.update()	update
2017-01-05 14:11:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:59 AI_Player.update()	update
2017-01-05 14:11:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:11:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:11:59 AI_Player.update()	Search took498ms
2017-01-05 14:11:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:59 AI_Player.update()		110,	1100,	111,	1001,	111,	111,	11
2017-01-05 14:11:59 AI_Player.update()		1100,	1011,	101,	1010,	11,	11,	1010
2017-01-05 14:11:59 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 14:11:59 AI_Player.update()		101,	1010,	1010,	1010,	110,	110,	1010
2017-01-05 14:11:59 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 14:11:59 AI_Player.update()		1010,	1101,	1001,	11,	1010,	1110,	1010
2017-01-05 14:11:59 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1101,	1001
2017-01-05 14:11:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:11:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:59 AI_Player.update()	update
2017-01-05 14:11:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:11:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:11:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:11:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:11:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:11:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:59 AI_Player.update()	update
2017-01-05 14:11:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:11:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:11:59 AI_Player.update()	Search took5ms
2017-01-05 14:11:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:11:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:59 AI_Player.update()		110,	1011,	111,	1001,	111,	111,	11
2017-01-05 14:11:59 AI_Player.update()		1100,	101,	101,	1010,	11,	11,	1010
2017-01-05 14:11:59 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-05 14:11:59 AI_Player.update()		101,	1100,	1010,	1010,	110,	110,	1010
2017-01-05 14:11:59 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-05 14:11:59 AI_Player.update()		1010,	101,	1001,	11,	1010,	1110,	1010
2017-01-05 14:11:59 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-05 14:11:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:11:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:59 AI_Player.update()	update
2017-01-05 14:11:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:11:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:11:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:11:59 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:11:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:11:59 AI_Player.update()	update
2017-01-05 14:11:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:00 AI_Player.update()	Search took451ms
2017-01-05 14:12:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:00 AI_Player.update()		110,	1011,	111,	1010,	111,	111,	11
2017-01-05 14:12:00 AI_Player.update()		1100,	101,	101,	11,	11,	11,	1010
2017-01-05 14:12:00 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-05 14:12:00 AI_Player.update()		101,	1100,	1010,	1010,	110,	110,	1010
2017-01-05 14:12:00 AI_Player.update()		1110,	1101,	1101,	11,	1011,	101,	1011
2017-01-05 14:12:00 AI_Player.update()		1010,	101,	1001,	1100,	1010,	1110,	1010
2017-01-05 14:12:00 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1101,	1001
2017-01-05 14:12:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:12:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:00 AI_Player.update()	update
2017-01-05 14:12:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:12:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:00 AI_Player.update()	update
2017-01-05 14:12:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:00 AI_Player.update()	Search took4ms
2017-01-05 14:12:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:00 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-05 14:12:00 AI_Player.update()		1100,	1010,	101,	11,	11,	11,	1010
2017-01-05 14:12:00 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-05 14:12:00 AI_Player.update()		101,	1101,	1010,	1010,	110,	110,	1010
2017-01-05 14:12:00 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 14:12:00 AI_Player.update()		1010,	1100,	1001,	1100,	1010,	1110,	1010
2017-01-05 14:12:00 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1101,	1001
2017-01-05 14:12:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:12:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:00 AI_Player.update()	update
2017-01-05 14:12:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:12:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:00 AI_Player.update()	update
2017-01-05 14:12:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:00 AI_Player.update()	Search took496ms
2017-01-05 14:12:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:00 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-05 14:12:00 AI_Player.update()		1100,	1010,	101,	11,	11,	11,	1010
2017-01-05 14:12:00 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-05 14:12:00 AI_Player.update()		1010,	101,	1101,	1010,	1010,	110,	110
2017-01-05 14:12:00 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 14:12:00 AI_Player.update()		1010,	1100,	1001,	1100,	1010,	1110,	1010
2017-01-05 14:12:00 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1101,	1001
2017-01-05 14:12:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:12:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:00 AI_Player.update()	update
2017-01-05 14:12:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:00 AI_Player.update()	update
2017-01-05 14:12:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:00 AI_Player.update()	Search took3ms
2017-01-05 14:12:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:00 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-05 14:12:00 AI_Player.update()		1100,	1010,	101,	1010,	11,	11,	1010
2017-01-05 14:12:00 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-05 14:12:00 AI_Player.update()		1010,	101,	1101,	11,	1010,	110,	110
2017-01-05 14:12:00 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-05 14:12:00 AI_Player.update()		1010,	1100,	1001,	1001,	1010,	1110,	1010
2017-01-05 14:12:00 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:12:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:00 AI_Player.update()	update
2017-01-05 14:12:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:00 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:00 AI_Player.update()	update
2017-01-05 14:12:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:01 AI_Player.update()	Search took656ms
2017-01-05 14:12:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-05 14:12:01 AI_Player.update()		1010,	101,	1010,	11,	11,	1010,	1100
2017-01-05 14:12:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-05 14:12:01 AI_Player.update()		1010,	101,	1101,	11,	1010,	110,	110
2017-01-05 14:12:01 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-05 14:12:01 AI_Player.update()		1010,	1100,	1001,	1001,	1010,	1110,	1010
2017-01-05 14:12:01 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:12:01 AI_Player.update()	Player a has won!
2017-01-05 14:12:01 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:12:01 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:12:01 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:12:01 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:12:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:01 AI_Player.update()	Search took27ms
2017-01-05 14:12:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:12:01 AI_Player.update()		1001,	1100,	11,	1001,	1001,	1100,	101
2017-01-05 14:12:01 AI_Player.update()		1110,	1001,	1110,	11,	111,	11,	1011
2017-01-05 14:12:01 AI_Player.update()		110,	1001,	1010,	101,	1001,	1110,	1010
2017-01-05 14:12:01 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-05 14:12:01 AI_Player.update()		1010,	1010,	11,	11,	101,	1010,	101
2017-01-05 14:12:01 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:01 AI_Player.update()	Search took1ms
2017-01-05 14:12:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 14:12:01 AI_Player.update()		1001,	1001,	11,	1001,	1001,	1100,	101
2017-01-05 14:12:01 AI_Player.update()		1110,	1001,	1110,	11,	111,	11,	1011
2017-01-05 14:12:01 AI_Player.update()		110,	110,	1010,	101,	1001,	1110,	1010
2017-01-05 14:12:01 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-05 14:12:01 AI_Player.update()		1010,	1100,	11,	11,	101,	1010,	101
2017-01-05 14:12:01 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:12:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:01 AI_Player.update()	Search took46ms
2017-01-05 14:12:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 14:12:01 AI_Player.update()		1001,	11,	1001,	1001,	1100,	101,	1001
2017-01-05 14:12:01 AI_Player.update()		1110,	1001,	1110,	11,	111,	11,	1011
2017-01-05 14:12:01 AI_Player.update()		110,	110,	1010,	101,	1001,	1110,	1010
2017-01-05 14:12:01 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-05 14:12:01 AI_Player.update()		1010,	1100,	11,	11,	101,	1010,	101
2017-01-05 14:12:01 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:01 AI_Player.update()	Search took1ms
2017-01-05 14:12:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 14:12:01 AI_Player.update()		1001,	1001,	1001,	1001,	1100,	101,	1001
2017-01-05 14:12:01 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-05 14:12:01 AI_Player.update()		110,	1010,	1010,	101,	1001,	1110,	1010
2017-01-05 14:12:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 14:12:01 AI_Player.update()		1010,	110,	11,	11,	101,	1010,	101
2017-01-05 14:12:01 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	1 3
2017-01-05 14:12:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:01 AI_Player.update()	Search took193ms
2017-01-05 14:12:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-05 14:12:01 AI_Player.update()		1001,	1001,	1001,	1001,	1100,	101,	1001
2017-01-05 14:12:01 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-05 14:12:01 AI_Player.update()		110,	1010,	1010,	101,	1001,	11,	1010
2017-01-05 14:12:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:01 AI_Player.update()		1010,	110,	11,	11,	101,	11,	101
2017-01-05 14:12:01 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	1 3
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	1 3
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:01 AI_Player.update()	Search took1ms
2017-01-05 14:12:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-05 14:12:01 AI_Player.update()		1001,	110,	1001,	1001,	1100,	101,	1001
2017-01-05 14:12:01 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 14:12:01 AI_Player.update()		110,	1100,	1010,	101,	1001,	11,	1010
2017-01-05 14:12:01 AI_Player.update()		1110,	110,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:01 AI_Player.update()		1010,	1100,	11,	11,	101,	11,	101
2017-01-05 14:12:01 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	1 3
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:01 GameBoard.setupTreasurePanel()	1 3
2017-01-05 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:01 AI_Player.update()	update
2017-01-05 14:12:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:02 AI_Player.update()	Search took242ms
2017-01-05 14:12:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 14:12:02 AI_Player.update()		1001,	110,	1001,	101,	1100,	101,	1001
2017-01-05 14:12:02 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	1100,	1010,	11,	1001,	11,	1010
2017-01-05 14:12:02 AI_Player.update()		1110,	110,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:02 AI_Player.update()		1010,	1100,	11,	101,	101,	11,	101
2017-01-05 14:12:02 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	1 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:12:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:02 AI_Player.update()	Search took1ms
2017-01-05 14:12:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 14:12:02 AI_Player.update()		1001,	1001,	1001,	101,	1100,	101,	1001
2017-01-05 14:12:02 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	1010,	1010,	11,	1001,	11,	1010
2017-01-05 14:12:02 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:02 AI_Player.update()		1010,	110,	11,	101,	101,	11,	101
2017-01-05 14:12:02 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1010,	1001
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:02 AI_Player.update()	Search took198ms
2017-01-05 14:12:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 14:12:02 AI_Player.update()		1001,	1001,	1001,	101,	1100,	101,	1001
2017-01-05 14:12:02 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	1010,	1010,	11,	1001,	11,	1010
2017-01-05 14:12:02 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	11,	101,	101,	11,	101,	1010
2017-01-05 14:12:02 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1010,	1001
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:12:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:02 AI_Player.update()	Search took4ms
2017-01-05 14:12:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 14:12:02 AI_Player.update()		1001,	110,	1001,	101,	1100,	101,	1001
2017-01-05 14:12:02 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	1100,	1010,	11,	1001,	11,	1010
2017-01-05 14:12:02 AI_Player.update()		1110,	11,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	1100,	101,	101,	11,	101,	1010
2017-01-05 14:12:02 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:02 AI_Player.update()	Search took173ms
2017-01-05 14:12:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 14:12:02 AI_Player.update()		1001,	110,	1001,	101,	1100,	101,	1001
2017-01-05 14:12:02 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 14:12:02 AI_Player.update()		1010,	110,	1100,	1010,	11,	1001,	11
2017-01-05 14:12:02 AI_Player.update()		1110,	11,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	1100,	101,	101,	11,	101,	1010
2017-01-05 14:12:02 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:02 AI_Player.update()	Search took3ms
2017-01-05 14:12:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()		110,	110,	111,	1010,	111,	11,	11
2017-01-05 14:12:02 AI_Player.update()		1001,	1010,	1001,	101,	1100,	101,	1001
2017-01-05 14:12:02 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-05 14:12:02 AI_Player.update()		1010,	11,	1100,	1010,	11,	1001,	11
2017-01-05 14:12:02 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	11,	101,	101,	11,	101,	1010
2017-01-05 14:12:02 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:02 AI_Player.update()	Search took77ms
2017-01-05 14:12:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 14:12:02 AI_Player.update()		1001,	1010,	1001,	1010,	1100,	101,	1001
2017-01-05 14:12:02 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 14:12:02 AI_Player.update()		1010,	11,	1100,	1001,	11,	1001,	11
2017-01-05 14:12:02 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	11,	101,	101,	11,	101,	1010
2017-01-05 14:12:02 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:12:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:02 AI_Player.update()	Search took2ms
2017-01-05 14:12:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()		110,	1010,	111,	11,	111,	11,	11
2017-01-05 14:12:02 AI_Player.update()		1001,	110,	1001,	1010,	1100,	101,	1001
2017-01-05 14:12:02 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 14:12:02 AI_Player.update()		1010,	1100,	1100,	1001,	11,	1001,	11
2017-01-05 14:12:02 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	1001,	101,	101,	11,	101,	1010
2017-01-05 14:12:02 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:02 AI_Player.update()	Search took227ms
2017-01-05 14:12:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:12:02 AI_Player.update()		1001,	110,	1001,	101,	1100,	101,	1001
2017-01-05 14:12:02 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-05 14:12:02 AI_Player.update()		1010,	1100,	1100,	1010,	11,	1001,	11
2017-01-05 14:12:02 AI_Player.update()		1110,	11,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	1001,	101,	101,	11,	101,	1010
2017-01-05 14:12:02 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:12:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:02 AI_Player.update()	Search took2ms
2017-01-05 14:12:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()		110,	110,	111,	1010,	111,	11,	11
2017-01-05 14:12:02 AI_Player.update()		1001,	11,	1001,	101,	1100,	101,	1001
2017-01-05 14:12:02 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-05 14:12:02 AI_Player.update()		1010,	11,	1100,	1010,	11,	1001,	11
2017-01-05 14:12:02 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	110,	101,	101,	11,	101,	1010
2017-01-05 14:12:02 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:02 AI_Player.update()	Search took105ms
2017-01-05 14:12:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()		110,	110,	111,	1010,	111,	11,	11
2017-01-05 14:12:02 AI_Player.update()		1001,	11,	1001,	101,	1100,	101,	1001
2017-01-05 14:12:02 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-05 14:12:02 AI_Player.update()		11,	1100,	1010,	11,	1001,	11,	1010
2017-01-05 14:12:02 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	110,	101,	101,	11,	101,	1010
2017-01-05 14:12:02 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:12:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:02 AI_Player.update()	Search took2ms
2017-01-05 14:12:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 14:12:02 AI_Player.update()		1001,	1100,	1001,	101,	1100,	101,	1001
2017-01-05 14:12:02 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-05 14:12:02 AI_Player.update()		11,	1001,	1010,	11,	1001,	11,	1010
2017-01-05 14:12:02 AI_Player.update()		1110,	110,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:02 AI_Player.update()		110,	1010,	101,	101,	11,	101,	1010
2017-01-05 14:12:02 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-05 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:02 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:02 AI_Player.update()	update
2017-01-05 14:12:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:03 AI_Player.update()	Search took288ms
2017-01-05 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-05 14:12:03 AI_Player.update()		1001,	1100,	1001,	1001,	1100,	101,	1001
2017-01-05 14:12:03 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-05 14:12:03 AI_Player.update()		11,	1001,	1010,	101,	1001,	11,	1010
2017-01-05 14:12:03 AI_Player.update()		1110,	110,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:03 AI_Player.update()		110,	1010,	101,	11,	11,	101,	1010
2017-01-05 14:12:03 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:03 AI_Player.update()	Search took2ms
2017-01-05 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-05 14:12:03 AI_Player.update()		1001,	1100,	1001,	1001,	1100,	101,	1001
2017-01-05 14:12:03 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-05 14:12:03 AI_Player.update()		11,	1001,	1010,	101,	1001,	11,	1010
2017-01-05 14:12:03 AI_Player.update()		1110,	110,	1101,	101,	1011,	1110,	1011
2017-01-05 14:12:03 AI_Player.update()		1010,	110,	1010,	101,	11,	11,	101
2017-01-05 14:12:03 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:12:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:03 AI_Player.update()	Search took263ms
2017-01-05 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 14:12:03 AI_Player.update()		1001,	1100,	1001,	1001,	1100,	101,	1001
2017-01-05 14:12:03 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-05 14:12:03 AI_Player.update()		11,	1001,	1010,	101,	1001,	1110,	1010
2017-01-05 14:12:03 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-05 14:12:03 AI_Player.update()		1010,	110,	1010,	101,	11,	1010,	101
2017-01-05 14:12:03 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:12:03 AI_Player.update()	Player a has won!
2017-01-05 14:12:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:12:03 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:12:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:12:03 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:03 AI_Player.update()	Search took141ms
2017-01-05 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-05 14:12:03 AI_Player.update()		101,	110,	1001,	1100,	110,	1010,	110
2017-01-05 14:12:03 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-05 14:12:03 AI_Player.update()		1001,	110,	1001,	11,	1010,	1010,	1101
2017-01-05 14:12:03 AI_Player.update()		1110,	11,	1101,	11,	1011,	11,	1011
2017-01-05 14:12:03 AI_Player.update()		101,	1001,	1001,	1100,	101,	11,	110
2017-01-05 14:12:03 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1110,	1001
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:03 AI_Player.update()	Search took1ms
2017-01-05 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()		110,	101,	111,	11,	111,	1110,	11
2017-01-05 14:12:03 AI_Player.update()		101,	110,	1001,	1100,	110,	1010,	110
2017-01-05 14:12:03 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-05 14:12:03 AI_Player.update()		1001,	110,	1001,	11,	1010,	1001,	1101
2017-01-05 14:12:03 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-05 14:12:03 AI_Player.update()		101,	1001,	1001,	1100,	101,	11,	110
2017-01-05 14:12:03 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:03 AI_Player.update()	Search took163ms
2017-01-05 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()		110,	101,	111,	11,	111,	1110,	11
2017-01-05 14:12:03 AI_Player.update()		101,	110,	1001,	1100,	110,	1010,	110
2017-01-05 14:12:03 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-05 14:12:03 AI_Player.update()		1101,	1001,	110,	1001,	11,	1010,	1001
2017-01-05 14:12:03 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-05 14:12:03 AI_Player.update()		101,	1001,	1001,	1100,	101,	11,	110
2017-01-05 14:12:03 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:03 AI_Player.update()	Search took3ms
2017-01-05 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()		110,	110,	111,	11,	111,	1110,	11
2017-01-05 14:12:03 AI_Player.update()		101,	1100,	1001,	1100,	110,	1010,	110
2017-01-05 14:12:03 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 14:12:03 AI_Player.update()		1101,	11,	110,	1001,	11,	1010,	1001
2017-01-05 14:12:03 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 14:12:03 AI_Player.update()		101,	1010,	1001,	1100,	101,	11,	110
2017-01-05 14:12:03 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:03 AI_Player.update()	Search took130ms
2017-01-05 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()		110,	110,	111,	1100,	111,	1110,	11
2017-01-05 14:12:03 AI_Player.update()		101,	1100,	1001,	1010,	110,	1010,	110
2017-01-05 14:12:03 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-05 14:12:03 AI_Player.update()		1101,	11,	110,	11,	11,	1010,	1001
2017-01-05 14:12:03 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:12:03 AI_Player.update()		101,	1010,	1001,	11,	101,	11,	110
2017-01-05 14:12:03 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:03 AI_Player.update()	Search took3ms
2017-01-05 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()		110,	1100,	111,	1100,	111,	1110,	11
2017-01-05 14:12:03 AI_Player.update()		101,	1001,	1001,	1010,	110,	1010,	110
2017-01-05 14:12:03 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 14:12:03 AI_Player.update()		1101,	1001,	110,	11,	11,	1010,	1001
2017-01-05 14:12:03 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:12:03 AI_Player.update()		101,	101,	1001,	11,	101,	11,	110
2017-01-05 14:12:03 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:03 AI_Player.update()	update
2017-01-05 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took149ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	1100,	111,	1010,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	1001,	1001,	1001,	110,	1010,	110
2017-01-05 14:12:04 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1101,	1001,	110,	1100,	11,	1010,	1001
2017-01-05 14:12:04 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	101,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	110,	1101,	1100,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took3ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	1001,	111,	1010,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	11,	1001,	1001,	110,	1010,	110
2017-01-05 14:12:04 AI_Player.update()		1110,	1001,	1110,	11,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1101,	1010,	110,	1100,	11,	1010,	1001
2017-01-05 14:12:04 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	110,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took93ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	11,	111,	1010,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	1001,	1001,	1001,	110,	1010,	110
2017-01-05 14:12:04 AI_Player.update()		1110,	1010,	1110,	11,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1101,	101,	110,	1100,	11,	1010,	1001
2017-01-05 14:12:04 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	1100,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took2ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	1001,	111,	1010,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	1010,	1001,	1001,	110,	1010,	110
2017-01-05 14:12:04 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1101,	110,	110,	1100,	11,	1010,	1001
2017-01-05 14:12:04 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	1001,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took81ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	1001,	111,	1100,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	1010,	1001,	1010,	110,	1010,	110
2017-01-05 14:12:04 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1101,	110,	110,	11,	11,	1010,	1001
2017-01-05 14:12:04 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	1001,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took2ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	1010,	111,	1100,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	101,	1001,	1010,	110,	1010,	110
2017-01-05 14:12:04 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1101,	1100,	110,	11,	11,	1010,	1001
2017-01-05 14:12:04 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	11,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took45ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	1010,	111,	1100,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	1001,	1010,	110,	1010,	110,	101
2017-01-05 14:12:04 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1101,	1100,	110,	11,	11,	1010,	1001
2017-01-05 14:12:04 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	11,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took2ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	1001,	111,	1100,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	110,	1010,	110,	1010,	110,	101
2017-01-05 14:12:04 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1101,	1001,	110,	11,	11,	1010,	1001
2017-01-05 14:12:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	1001,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took58ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	1001,	111,	11,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	110,	1010,	1100,	1010,	110,	101
2017-01-05 14:12:04 AI_Player.update()		1110,	1100,	1110,	110,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1101,	1001,	110,	1001,	11,	1010,	1001
2017-01-05 14:12:04 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	1001,	1001,	1100,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took3ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	110,	111,	11,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	1100,	1010,	1100,	1010,	110,	101
2017-01-05 14:12:04 AI_Player.update()		1110,	1001,	1110,	110,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1101,	11,	110,	1001,	11,	1010,	1001
2017-01-05 14:12:04 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	1010,	1001,	1100,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took108ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	110,	111,	1100,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	1100,	1010,	110,	1010,	110,	101
2017-01-05 14:12:04 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1101,	11,	110,	11,	11,	1010,	1001
2017-01-05 14:12:04 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	1010,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took2ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	1100,	111,	1100,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	1001,	1010,	110,	1010,	110,	101
2017-01-05 14:12:04 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1101,	1001,	110,	11,	11,	1010,	1001
2017-01-05 14:12:04 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	1001,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took106ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	1100,	111,	1100,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	1001,	1010,	110,	1010,	110,	101
2017-01-05 14:12:04 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1001,	1101,	1001,	110,	11,	11,	1010
2017-01-05 14:12:04 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	1001,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took1ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	1001,	111,	1100,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	11,	1010,	110,	1010,	110,	101
2017-01-05 14:12:04 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1001,	1010,	1001,	110,	11,	11,	1010
2017-01-05 14:12:04 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	110,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took83ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	1001,	111,	110,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	11,	1010,	1001,	1010,	110,	101
2017-01-05 14:12:04 AI_Player.update()		1110,	1101,	1110,	110,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1001,	1010,	1001,	1100,	11,	11,	1010
2017-01-05 14:12:04 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	110,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took2ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	11,	111,	110,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	1101,	1010,	1001,	1010,	110,	101
2017-01-05 14:12:04 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1001,	1001,	1001,	1100,	11,	11,	1010
2017-01-05 14:12:04 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	1100,	1001,	11,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took63ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	11,	111,	1001,	111,	1110,	11
2017-01-05 14:12:04 AI_Player.update()		101,	1101,	1010,	110,	1010,	110,	101
2017-01-05 14:12:04 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		1001,	1001,	1001,	11,	11,	11,	1010
2017-01-05 14:12:04 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		101,	1100,	1001,	1100,	101,	11,	110
2017-01-05 14:12:04 AI_Player.update()		1100,	1001,	1101,	110,	1101,	11,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:12:04 AI_Player.update()	Player a has won!
2017-01-05 14:12:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:12:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:12:04 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took30ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	1011,	111,	1011,	111,	1010,	11
2017-01-05 14:12:04 AI_Player.update()		11,	110,	101,	1001,	1010,	11,	1100
2017-01-05 14:12:04 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		110,	1010,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:04 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:12:04 AI_Player.update()		1011,	101,	11,	110,	110,	110,	101
2017-01-05 14:12:04 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:04 AI_Player.update()	Search took0ms
2017-01-05 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()		110,	110,	111,	1011,	111,	1010,	11
2017-01-05 14:12:04 AI_Player.update()		11,	11,	101,	1001,	1010,	11,	1100
2017-01-05 14:12:04 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-05 14:12:04 AI_Player.update()		110,	1001,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:04 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:12:04 AI_Player.update()		1011,	1010,	11,	110,	110,	110,	101
2017-01-05 14:12:04 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	101,	1001
2017-01-05 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:04 AI_Player.update()	update
2017-01-05 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:05 AI_Player.update()	Search took317ms
2017-01-05 14:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()		110,	110,	111,	1011,	111,	11,	11
2017-01-05 14:12:05 AI_Player.update()		11,	11,	101,	1001,	1010,	1010,	1100
2017-01-05 14:12:05 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-05 14:12:05 AI_Player.update()		110,	1001,	11,	1010,	1100,	1100,	1100
2017-01-05 14:12:05 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-05 14:12:05 AI_Player.update()		1011,	1010,	11,	110,	110,	101,	101
2017-01-05 14:12:05 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:05 AI_Player.update()	Search took1ms
2017-01-05 14:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()		110,	110,	111,	1011,	111,	11,	11
2017-01-05 14:12:05 AI_Player.update()		11,	101,	1001,	1010,	1010,	1100,	11
2017-01-05 14:12:05 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-05 14:12:05 AI_Player.update()		110,	1001,	11,	1010,	1100,	1100,	1100
2017-01-05 14:12:05 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-05 14:12:05 AI_Player.update()		1011,	1010,	11,	110,	110,	101,	101
2017-01-05 14:12:05 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:05 AI_Player.update()	Search took310ms
2017-01-05 14:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()		110,	110,	111,	1011,	111,	1100,	11
2017-01-05 14:12:05 AI_Player.update()		11,	101,	1001,	1010,	1010,	110,	11
2017-01-05 14:12:05 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 14:12:05 AI_Player.update()		110,	1001,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:05 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-05 14:12:05 AI_Player.update()		1011,	1010,	11,	110,	110,	1010,	101
2017-01-05 14:12:05 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:05 AI_Player.update()	Search took1ms
2017-01-05 14:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()		110,	101,	111,	1011,	111,	1100,	11
2017-01-05 14:12:05 AI_Player.update()		11,	1010,	1001,	1010,	1010,	110,	11
2017-01-05 14:12:05 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-05 14:12:05 AI_Player.update()		110,	101,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:05 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-05 14:12:05 AI_Player.update()		1011,	1011,	11,	110,	110,	1010,	101
2017-01-05 14:12:05 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:05 AI_Player.update()	Search took134ms
2017-01-05 14:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()		110,	110,	111,	1011,	111,	1100,	11
2017-01-05 14:12:05 AI_Player.update()		11,	101,	1001,	1010,	1010,	110,	11
2017-01-05 14:12:05 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 14:12:05 AI_Player.update()		110,	1001,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:05 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-05 14:12:05 AI_Player.update()		1011,	1010,	11,	110,	110,	1010,	101
2017-01-05 14:12:05 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:05 AI_Player.update()	Search took3ms
2017-01-05 14:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()		110,	101,	111,	1011,	111,	1100,	11
2017-01-05 14:12:05 AI_Player.update()		11,	1010,	1001,	1010,	1010,	110,	11
2017-01-05 14:12:05 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-05 14:12:05 AI_Player.update()		110,	101,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:05 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-05 14:12:05 AI_Player.update()		1011,	1011,	11,	110,	110,	1010,	101
2017-01-05 14:12:05 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:05 AI_Player.update()	Search took209ms
2017-01-05 14:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()		110,	101,	111,	1011,	111,	1100,	11
2017-01-05 14:12:05 AI_Player.update()		11,	1010,	1001,	1010,	1010,	110,	11
2017-01-05 14:12:05 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-05 14:12:05 AI_Player.update()		110,	101,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:05 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-05 14:12:05 AI_Player.update()		1011,	11,	110,	110,	1010,	101,	1011
2017-01-05 14:12:05 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:05 AI_Player.update()	Search took1ms
2017-01-05 14:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()		110,	1010,	111,	1011,	111,	1100,	11
2017-01-05 14:12:05 AI_Player.update()		11,	1001,	1001,	1010,	1010,	110,	11
2017-01-05 14:12:05 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-05 14:12:05 AI_Player.update()		110,	1010,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:05 AI_Player.update()		1110,	11,	1101,	1101,	1011,	101,	1011
2017-01-05 14:12:05 AI_Player.update()		1011,	110,	110,	110,	1010,	101,	1011
2017-01-05 14:12:05 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:05 AI_Player.update()	update
2017-01-05 14:12:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:06 AI_Player.update()	Search took261ms
2017-01-05 14:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()		110,	1010,	111,	1011,	111,	1100,	11
2017-01-05 14:12:06 AI_Player.update()		1001,	1001,	1010,	1010,	110,	11,	11
2017-01-05 14:12:06 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-05 14:12:06 AI_Player.update()		110,	1010,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:06 AI_Player.update()		1110,	11,	1101,	1101,	1011,	101,	1011
2017-01-05 14:12:06 AI_Player.update()		1011,	110,	110,	110,	1010,	101,	1011
2017-01-05 14:12:06 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()	update
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:12:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()	update
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:06 AI_Player.update()	Search took1ms
2017-01-05 14:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()		110,	1001,	111,	1011,	111,	1100,	11
2017-01-05 14:12:06 AI_Player.update()		1001,	101,	1010,	1010,	110,	11,	11
2017-01-05 14:12:06 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 14:12:06 AI_Player.update()		110,	11,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:06 AI_Player.update()		1110,	110,	1101,	1101,	1011,	101,	1011
2017-01-05 14:12:06 AI_Player.update()		1011,	101,	110,	110,	1010,	101,	1011
2017-01-05 14:12:06 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()	update
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()	update
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:06 AI_Player.update()	Search took305ms
2017-01-05 14:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()		110,	1001,	111,	1011,	111,	1100,	11
2017-01-05 14:12:06 AI_Player.update()		1001,	101,	1010,	1010,	110,	11,	11
2017-01-05 14:12:06 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 14:12:06 AI_Player.update()		1100,	110,	11,	11,	1010,	1100,	110
2017-01-05 14:12:06 AI_Player.update()		1110,	110,	1101,	1101,	1011,	101,	1011
2017-01-05 14:12:06 AI_Player.update()		1011,	101,	110,	110,	1010,	101,	1011
2017-01-05 14:12:06 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()	update
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:12:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()	update
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:06 AI_Player.update()	Search took2ms
2017-01-05 14:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()		110,	1001,	111,	1011,	111,	1100,	11
2017-01-05 14:12:06 AI_Player.update()		1001,	101,	1010,	1010,	110,	11,	11
2017-01-05 14:12:06 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 14:12:06 AI_Player.update()		110,	11,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:06 AI_Player.update()		1110,	110,	1101,	1101,	1011,	101,	1011
2017-01-05 14:12:06 AI_Player.update()		1011,	101,	110,	110,	1010,	101,	1011
2017-01-05 14:12:06 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()	update
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()	update
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:06 AI_Player.update()	Search took362ms
2017-01-05 14:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()		110,	1010,	111,	1011,	111,	1100,	11
2017-01-05 14:12:06 AI_Player.update()		1001,	1001,	1010,	1010,	110,	11,	11
2017-01-05 14:12:06 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-05 14:12:06 AI_Player.update()		110,	1010,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:06 AI_Player.update()		1110,	11,	1101,	1101,	1011,	101,	1011
2017-01-05 14:12:06 AI_Player.update()		1011,	110,	110,	110,	1010,	101,	1011
2017-01-05 14:12:06 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()	update
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()	update
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:06 AI_Player.update()	Search took2ms
2017-01-05 14:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()		110,	1001,	111,	1011,	111,	1100,	11
2017-01-05 14:12:06 AI_Player.update()		1001,	101,	1010,	1010,	110,	11,	11
2017-01-05 14:12:06 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 14:12:06 AI_Player.update()		110,	11,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:06 AI_Player.update()		1110,	110,	1101,	1101,	1011,	101,	1011
2017-01-05 14:12:06 AI_Player.update()		1011,	101,	110,	110,	1010,	101,	1011
2017-01-05 14:12:06 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()	update
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:06 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:06 AI_Player.update()	update
2017-01-05 14:12:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:07 AI_Player.update()	Search took258ms
2017-01-05 14:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()		110,	101,	111,	1011,	111,	1100,	11
2017-01-05 14:12:07 AI_Player.update()		1001,	1010,	1010,	1010,	110,	11,	11
2017-01-05 14:12:07 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-05 14:12:07 AI_Player.update()		110,	110,	11,	1010,	1100,	110,	1100
2017-01-05 14:12:07 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-05 14:12:07 AI_Player.update()		1011,	1010,	110,	110,	1010,	101,	1011
2017-01-05 14:12:07 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:12:07 AI_Player.update()	Player a has won!
2017-01-05 14:12:07 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:12:07 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:12:07 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:12:07 QueryProlog.reset()	setup(h5/h1). suceeded
2017-01-05 14:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:07 AI_Player.update()	Search took98ms
2017-01-05 14:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()		110,	111,	111,	101,	111,	1011,	11
2017-01-05 14:12:07 AI_Player.update()		1001,	1001,	1001,	1010,	1100,	1100,	101
2017-01-05 14:12:07 AI_Player.update()		1110,	1010,	1110,	11,	111,	1010,	1011
2017-01-05 14:12:07 AI_Player.update()		111,	1001,	101,	1001,	11,	1100,	11
2017-01-05 14:12:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:12:07 AI_Player.update()		1100,	110,	1001,	1001,	1001,	11,	11
2017-01-05 14:12:07 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:07 AI_Player.update()	Search took1ms
2017-01-05 14:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()		110,	111,	111,	101,	111,	1011,	11
2017-01-05 14:12:07 AI_Player.update()		1001,	1001,	1010,	1100,	1100,	101,	1001
2017-01-05 14:12:07 AI_Player.update()		1110,	1010,	1110,	11,	111,	1010,	1011
2017-01-05 14:12:07 AI_Player.update()		111,	1001,	101,	1001,	11,	1100,	11
2017-01-05 14:12:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:12:07 AI_Player.update()		1100,	110,	1001,	1001,	1001,	11,	11
2017-01-05 14:12:07 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:07 AI_Player.update()	Search took380ms
2017-01-05 14:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 14:12:07 AI_Player.update()		1001,	1001,	1010,	1100,	1100,	1010,	1001
2017-01-05 14:12:07 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-05 14:12:07 AI_Player.update()		111,	1001,	101,	1001,	11,	1100,	11
2017-01-05 14:12:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-05 14:12:07 AI_Player.update()		1100,	110,	1001,	1001,	1001,	1010,	11
2017-01-05 14:12:07 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1011,	1001
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:07 AI_Player.update()	Search took4ms
2017-01-05 14:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 14:12:07 AI_Player.update()		1001,	1001,	1001,	1010,	1100,	1100,	1010
2017-01-05 14:12:07 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-05 14:12:07 AI_Player.update()		111,	1001,	101,	1001,	11,	1100,	11
2017-01-05 14:12:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-05 14:12:07 AI_Player.update()		1100,	110,	1001,	1001,	1001,	1010,	11
2017-01-05 14:12:07 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1011,	1001
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:07 AI_Player.update()	Search took111ms
2017-01-05 14:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 14:12:07 AI_Player.update()		1001,	1001,	1001,	1010,	1100,	1100,	1010
2017-01-05 14:12:07 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-05 14:12:07 AI_Player.update()		111,	1001,	101,	1001,	11,	1100,	11
2017-01-05 14:12:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-05 14:12:07 AI_Player.update()		110,	1001,	1001,	1001,	1010,	11,	1100
2017-01-05 14:12:07 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1011,	1001
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:07 AI_Player.update()	Search took2ms
2017-01-05 14:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 14:12:07 AI_Player.update()		1001,	1001,	1001,	1010,	1100,	1100,	1010
2017-01-05 14:12:07 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-05 14:12:07 AI_Player.update()		11,	111,	1001,	101,	1001,	11,	1100
2017-01-05 14:12:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-05 14:12:07 AI_Player.update()		110,	1001,	1001,	1001,	1010,	11,	1100
2017-01-05 14:12:07 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1011,	1001
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:07 AI_Player.update()	Search took164ms
2017-01-05 14:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 14:12:07 AI_Player.update()		1001,	1001,	1001,	1010,	1100,	1100,	1010
2017-01-05 14:12:07 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-05 14:12:07 AI_Player.update()		1100,	11,	111,	1001,	101,	1001,	11
2017-01-05 14:12:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-05 14:12:07 AI_Player.update()		110,	1001,	1001,	1001,	1010,	11,	1100
2017-01-05 14:12:07 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1011,	1001
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:07 AI_Player.update()	Search took4ms
2017-01-05 14:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 14:12:07 AI_Player.update()		1001,	1001,	1001,	1010,	1100,	1100,	1010
2017-01-05 14:12:07 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-05 14:12:07 AI_Player.update()		11,	111,	1001,	101,	1001,	11,	1100
2017-01-05 14:12:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-05 14:12:07 AI_Player.update()		110,	1001,	1001,	1001,	1010,	11,	1100
2017-01-05 14:12:07 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1011,	1001
2017-01-05 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:07 AI_Player.update()	update
2017-01-05 14:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-05 14:12:08 AI_Player.update()	Search took183ms
2017-01-05 14:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:08 AI_Player.update()		110,	111,	111,	1100,	111,	101,	11
2017-01-05 14:12:08 AI_Player.update()		1001,	1001,	1001,	101,	1100,	1100,	1010
2017-01-05 14:12:08 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-05 14:12:08 AI_Player.update()		11,	111,	1001,	11,	1001,	11,	1100
2017-01-05 14:12:08 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 14:12:08 AI_Player.update()		110,	1001,	1001,	1100,	1010,	11,	1100
2017-01-05 14:12:08 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1011,	1001
2017-01-05 14:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:08 AI_Player.update()	update
2017-01-05 14:12:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:12:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:12:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-05 14:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:12:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:12:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:08 AI_Player.update()	update
2017-01-05 14:12:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:12:08 AI_Player.update()	Search took3ms
2017-01-05 14:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:08 AI_Player.update()		110,	111,	111,	1100,	111,	101,	11
2017-01-05 14:12:08 AI_Player.update()		1001,	1001,	1001,	101,	1100,	1100,	1010
2017-01-05 14:12:08 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-05 14:12:08 AI_Player.update()		111,	1001,	11,	1001,	11,	1100,	11
2017-01-05 14:12:08 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 14:12:08 AI_Player.update()		110,	1001,	1001,	1100,	1010,	11,	1100
2017-01-05 14:12:08 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1011,	1001
2017-01-05 14:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:08 AI_Player.update()	update
2017-01-05 14:12:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:12:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:12:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:12:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:12:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:12:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:12:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:12:08 AI_Player.update()	update
2017-01-05 14:12:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
