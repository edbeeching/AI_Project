2017-01-08 13:32:48 GameBoard.<init>()	Hello World!
2017-01-08 13:32:48 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-08 13:32:48 QueryProlog.initialise()	setup(h2/h1). suceeded
2017-01-08 13:32:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:48 GameBoard.setupBoardFromString()	Board created
2017-01-08 13:32:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:32:48 GameBoard.initialise()	[gold, fairy, gem, chest, candle]
2017-01-08 13:32:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:32:48 GameBoard.initialise()	[book, crown, sword, ring, map]
2017-01-08 13:32:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:48 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-08 13:32:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:48 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:32:48 GameBoard.setupTreasurePanel()	null
2017-01-08 13:32:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:32:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:32:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:32:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:32:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:32:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:32:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:32:48 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:32:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:32:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:32:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:32:48 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:32:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:48 AI_Player.update()	update
2017-01-08 13:32:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:32:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:32:49 AI_Player.update()	Search took486ms
2017-01-08 13:32:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:49 AI_Player.update()		110,	1010,	111,	1001,	111,	1001,	11
2017-01-08 13:32:49 AI_Player.update()		1101,	101,	11,	11,	11,	111,	1010
2017-01-08 13:32:49 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-08 13:32:49 AI_Player.update()		1010,	1010,	111,	110,	1100,	1001,	1001
2017-01-08 13:32:49 AI_Player.update()		1110,	111,	1101,	1011,	1011,	111,	1011
2017-01-08 13:32:49 AI_Player.update()		1001,	1001,	1011,	1011,	1001,	111,	1010
2017-01-08 13:32:49 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	101,	1001
2017-01-08 13:32:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:32:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:32:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:32:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:49 AI_Player.update()	update
2017-01-08 13:32:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:32:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:32:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:32:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:32:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:32:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:49 AI_Player.update()	update
2017-01-08 13:32:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:32:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:32:49 AI_Player.update()	Search took3ms
2017-01-08 13:32:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:49 AI_Player.update()		110,	1010,	111,	1001,	111,	1001,	11
2017-01-08 13:32:49 AI_Player.update()		1101,	101,	11,	11,	11,	111,	1010
2017-01-08 13:32:49 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-08 13:32:49 AI_Player.update()		1010,	111,	110,	1100,	1001,	1001,	1010
2017-01-08 13:32:49 AI_Player.update()		1110,	111,	1101,	1011,	1011,	111,	1011
2017-01-08 13:32:49 AI_Player.update()		1001,	1001,	1011,	1011,	1001,	111,	1010
2017-01-08 13:32:49 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	101,	1001
2017-01-08 13:32:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:32:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:49 AI_Player.update()	update
2017-01-08 13:32:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:32:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:32:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:32:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:49 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:32:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:49 AI_Player.update()	update
2017-01-08 13:32:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:32:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:32:50 AI_Player.update()	Search took546ms
2017-01-08 13:32:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:50 AI_Player.update()		110,	1010,	111,	1110,	111,	1001,	11
2017-01-08 13:32:50 AI_Player.update()		1101,	101,	11,	1001,	11,	111,	1010
2017-01-08 13:32:50 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-08 13:32:50 AI_Player.update()		1010,	111,	110,	1101,	1001,	1001,	1010
2017-01-08 13:32:50 AI_Player.update()		1110,	111,	1101,	1100,	1011,	111,	1011
2017-01-08 13:32:50 AI_Player.update()		1001,	1001,	1011,	1011,	1001,	111,	1010
2017-01-08 13:32:50 AI_Player.update()		1100,	1101,	1101,	1011,	1101,	101,	1001
2017-01-08 13:32:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:50 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:32:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:50 AI_Player.update()	update
2017-01-08 13:32:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:32:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:32:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:32:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:32:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:50 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:32:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:50 AI_Player.update()	update
2017-01-08 13:32:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:32:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:32:50 AI_Player.update()	Search took6ms
2017-01-08 13:32:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:50 AI_Player.update()		110,	1010,	111,	1001,	111,	1001,	11
2017-01-08 13:32:50 AI_Player.update()		1101,	101,	11,	11,	11,	111,	1010
2017-01-08 13:32:50 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-08 13:32:50 AI_Player.update()		1010,	111,	110,	1100,	1001,	1001,	1010
2017-01-08 13:32:50 AI_Player.update()		1110,	111,	1101,	1011,	1011,	111,	1011
2017-01-08 13:32:50 AI_Player.update()		1001,	1001,	1011,	1011,	1001,	111,	1010
2017-01-08 13:32:50 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	101,	1001
2017-01-08 13:32:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:50 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:32:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:50 AI_Player.update()	update
2017-01-08 13:32:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:32:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:32:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:32:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:50 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:32:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:50 AI_Player.update()	update
2017-01-08 13:32:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:32:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:32:51 AI_Player.update()	Search took692ms
2017-01-08 13:32:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:51 AI_Player.update()		110,	1010,	111,	1001,	111,	1001,	11
2017-01-08 13:32:51 AI_Player.update()		101,	11,	11,	11,	111,	1010,	1101
2017-01-08 13:32:51 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-08 13:32:51 AI_Player.update()		1010,	111,	110,	1100,	1001,	1001,	1010
2017-01-08 13:32:51 AI_Player.update()		1110,	111,	1101,	1011,	1011,	111,	1011
2017-01-08 13:32:51 AI_Player.update()		1001,	1001,	1011,	1011,	1001,	111,	1010
2017-01-08 13:32:51 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	101,	1001
2017-01-08 13:32:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:32:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:51 AI_Player.update()	update
2017-01-08 13:32:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:32:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:32:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:32:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:32:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:32:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:32:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:32:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:51 AI_Player.update()	update
2017-01-08 13:32:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:32:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:32:51 AI_Player.update()	Search took11ms
2017-01-08 13:32:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:51 AI_Player.update()		110,	1010,	111,	11,	111,	1001,	11
2017-01-08 13:32:51 AI_Player.update()		101,	11,	11,	1101,	111,	1010,	1101
2017-01-08 13:32:51 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-08 13:32:51 AI_Player.update()		1010,	111,	110,	1011,	1001,	1001,	1010
2017-01-08 13:32:51 AI_Player.update()		1110,	111,	1101,	1011,	1011,	111,	1011
2017-01-08 13:32:51 AI_Player.update()		1001,	1001,	1011,	1110,	1001,	111,	1010
2017-01-08 13:32:51 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	101,	1001
2017-01-08 13:32:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:32:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:51 AI_Player.update()	update
2017-01-08 13:32:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:32:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:32:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:32:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	2 2
2017-01-08 13:32:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:32:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:32:51 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:32:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:51 AI_Player.update()	update
2017-01-08 13:32:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:32:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:32:52 AI_Player.update()	Search took288ms
2017-01-08 13:32:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:52 AI_Player.update()		110,	11,	111,	11,	111,	1001,	11
2017-01-08 13:32:52 AI_Player.update()		101,	1001,	11,	1101,	111,	1010,	1101
2017-01-08 13:32:52 AI_Player.update()		1110,	111,	1110,	1100,	111,	1001,	1011
2017-01-08 13:32:52 AI_Player.update()		1010,	111,	110,	1011,	1001,	1001,	1010
2017-01-08 13:32:52 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	111,	1011
2017-01-08 13:32:52 AI_Player.update()		1001,	1101,	1011,	1110,	1001,	111,	1010
2017-01-08 13:32:52 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-08 13:32:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	2 2
2017-01-08 13:32:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:52 AI_Player.update()	update
2017-01-08 13:32:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:32:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:32:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:32:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:32:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	2 2
2017-01-08 13:32:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:52 AI_Player.update()	update
2017-01-08 13:32:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:32:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:32:52 AI_Player.update()	Search took4ms
2017-01-08 13:32:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:52 AI_Player.update()		110,	1001,	111,	11,	111,	1001,	11
2017-01-08 13:32:52 AI_Player.update()		101,	111,	11,	1101,	111,	1010,	1101
2017-01-08 13:32:52 AI_Player.update()		1110,	111,	1110,	1100,	111,	1001,	1011
2017-01-08 13:32:52 AI_Player.update()		1010,	1001,	110,	1011,	1001,	1001,	1010
2017-01-08 13:32:52 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	111,	1011
2017-01-08 13:32:52 AI_Player.update()		1001,	1010,	1011,	1110,	1001,	111,	1010
2017-01-08 13:32:52 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-08 13:32:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	2 2
2017-01-08 13:32:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:52 AI_Player.update()	update
2017-01-08 13:32:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:32:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:32:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:32:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	2 2
2017-01-08 13:32:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:52 AI_Player.update()	update
2017-01-08 13:32:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:32:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:32:52 AI_Player.update()	Search took322ms
2017-01-08 13:32:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:52 AI_Player.update()		110,	1001,	111,	1001,	111,	1001,	11
2017-01-08 13:32:52 AI_Player.update()		101,	111,	11,	11,	111,	1010,	1101
2017-01-08 13:32:52 AI_Player.update()		1110,	111,	1110,	1101,	111,	1001,	1011
2017-01-08 13:32:52 AI_Player.update()		1010,	1001,	110,	1100,	1001,	1001,	1010
2017-01-08 13:32:52 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	111,	1011
2017-01-08 13:32:52 AI_Player.update()		1001,	1010,	1011,	1011,	1001,	111,	1010
2017-01-08 13:32:52 AI_Player.update()		1100,	11,	1101,	1110,	1101,	101,	1001
2017-01-08 13:32:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	2 2
2017-01-08 13:32:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:52 AI_Player.update()	update
2017-01-08 13:32:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:32:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:32:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:32:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:32:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:32:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:32:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:32:52 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:32:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:53 AI_Player.update()	update
2017-01-08 13:32:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:32:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:32:53 AI_Player.update()	Search took2ms
2017-01-08 13:32:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:53 AI_Player.update()		110,	111,	111,	1001,	111,	1001,	11
2017-01-08 13:32:53 AI_Player.update()		101,	111,	11,	11,	111,	1010,	1101
2017-01-08 13:32:53 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-08 13:32:53 AI_Player.update()		1010,	1101,	110,	1100,	1001,	1001,	1010
2017-01-08 13:32:53 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	111,	1011
2017-01-08 13:32:53 AI_Player.update()		1001,	11,	1011,	1011,	1001,	111,	1010
2017-01-08 13:32:53 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	101,	1001
2017-01-08 13:32:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:32:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:53 AI_Player.update()	update
2017-01-08 13:32:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:32:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:32:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:32:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:32:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:53 AI_Player.update()	update
2017-01-08 13:32:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:32:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:32:53 AI_Player.update()	Search took347ms
2017-01-08 13:32:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:53 AI_Player.update()		110,	1001,	111,	1001,	111,	1001,	11
2017-01-08 13:32:53 AI_Player.update()		101,	111,	11,	11,	111,	1010,	1101
2017-01-08 13:32:53 AI_Player.update()		1110,	111,	1110,	1101,	111,	1001,	1011
2017-01-08 13:32:53 AI_Player.update()		1010,	1001,	110,	1100,	1001,	1001,	1010
2017-01-08 13:32:53 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	111,	1011
2017-01-08 13:32:53 AI_Player.update()		1001,	1010,	1011,	1011,	1001,	111,	1010
2017-01-08 13:32:53 AI_Player.update()		1100,	11,	1101,	1110,	1101,	101,	1001
2017-01-08 13:32:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:32:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:53 AI_Player.update()	update
2017-01-08 13:32:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:32:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:32:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:32:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:32:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	4 2
2017-01-08 13:32:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:32:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:32:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:53 AI_Player.update()	update
2017-01-08 13:32:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:32:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:32:53 AI_Player.update()	Search took5ms
2017-01-08 13:32:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:53 AI_Player.update()		110,	111,	111,	1001,	111,	1001,	11
2017-01-08 13:32:53 AI_Player.update()		101,	111,	11,	11,	111,	1010,	1101
2017-01-08 13:32:53 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-08 13:32:53 AI_Player.update()		1010,	1101,	110,	1100,	1001,	1001,	1010
2017-01-08 13:32:53 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	111,	1011
2017-01-08 13:32:53 AI_Player.update()		1001,	11,	1011,	1011,	1001,	111,	1010
2017-01-08 13:32:53 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	101,	1001
2017-01-08 13:32:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	4 2
2017-01-08 13:32:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:53 AI_Player.update()	update
2017-01-08 13:32:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:32:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:32:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:32:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:53 GameBoard.setupTreasurePanel()	4 2
2017-01-08 13:32:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:54 AI_Player.update()	update
2017-01-08 13:32:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:32:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:32:54 AI_Player.update()	Search took384ms
2017-01-08 13:32:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:54 AI_Player.update()		110,	111,	111,	1001,	111,	1001,	11
2017-01-08 13:32:54 AI_Player.update()		101,	111,	11,	11,	111,	1010,	1101
2017-01-08 13:32:54 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-08 13:32:54 AI_Player.update()		1010,	1101,	110,	1100,	1001,	1001,	1010
2017-01-08 13:32:54 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	111,	1011
2017-01-08 13:32:54 AI_Player.update()		11,	1011,	1011,	1001,	111,	1010,	1001
2017-01-08 13:32:54 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	101,	1001
2017-01-08 13:32:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:54 GameBoard.setupTreasurePanel()	4 2
2017-01-08 13:32:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:54 AI_Player.update()	update
2017-01-08 13:32:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:32:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:32:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:32:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:32:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:54 GameBoard.setupTreasurePanel()	4 2
2017-01-08 13:32:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:54 AI_Player.update()	update
2017-01-08 13:32:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:32:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:32:54 AI_Player.update()	Search took2ms
2017-01-08 13:32:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:54 AI_Player.update()		110,	111,	111,	1110,	111,	1001,	11
2017-01-08 13:32:54 AI_Player.update()		101,	111,	11,	1001,	111,	1010,	1101
2017-01-08 13:32:54 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-08 13:32:54 AI_Player.update()		1010,	1101,	110,	1101,	1001,	1001,	1010
2017-01-08 13:32:54 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	111,	1011
2017-01-08 13:32:54 AI_Player.update()		11,	1011,	1011,	1011,	111,	1010,	1001
2017-01-08 13:32:54 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-08 13:32:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:54 GameBoard.setupTreasurePanel()	4 2
2017-01-08 13:32:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:54 AI_Player.update()	update
2017-01-08 13:32:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:32:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:32:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:32:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:54 GameBoard.setupTreasurePanel()	4 2
2017-01-08 13:32:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:54 AI_Player.update()	update
2017-01-08 13:32:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:32:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:32:54 AI_Player.update()	Search took74ms
2017-01-08 13:32:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:54 AI_Player.update()		110,	1001,	111,	1110,	111,	1001,	11
2017-01-08 13:32:54 AI_Player.update()		101,	111,	11,	1001,	111,	1010,	1101
2017-01-08 13:32:54 AI_Player.update()		1110,	111,	1110,	11,	111,	1001,	1011
2017-01-08 13:32:54 AI_Player.update()		1010,	1001,	110,	1101,	1001,	1001,	1010
2017-01-08 13:32:54 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	111,	1011
2017-01-08 13:32:54 AI_Player.update()		11,	1010,	1011,	1011,	111,	1010,	1001
2017-01-08 13:32:54 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	101,	1001
2017-01-08 13:32:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:54 GameBoard.setupTreasurePanel()	4 2
2017-01-08 13:32:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:55 AI_Player.update()	update
2017-01-08 13:32:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:32:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:32:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:32:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	4 2
2017-01-08 13:32:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:55 AI_Player.update()	update
2017-01-08 13:32:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:32:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:32:55 AI_Player.update()	Search took5ms
2017-01-08 13:32:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:55 AI_Player.update()		110,	111,	111,	1110,	111,	1001,	11
2017-01-08 13:32:55 AI_Player.update()		101,	111,	11,	1001,	111,	1010,	1101
2017-01-08 13:32:55 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-08 13:32:55 AI_Player.update()		1010,	1101,	110,	1101,	1001,	1001,	1010
2017-01-08 13:32:55 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	111,	1011
2017-01-08 13:32:55 AI_Player.update()		11,	1011,	1011,	1011,	111,	1010,	1001
2017-01-08 13:32:55 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-08 13:32:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	4 2
2017-01-08 13:32:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:55 AI_Player.update()	update
2017-01-08 13:32:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:32:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:32:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	4 2
2017-01-08 13:32:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:55 AI_Player.update()	update
2017-01-08 13:32:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:32:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:32:55 AI_Player.update()	Search took110ms
2017-01-08 13:32:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:55 AI_Player.update()		110,	111,	111,	1110,	111,	1001,	11
2017-01-08 13:32:55 AI_Player.update()		101,	111,	11,	1001,	111,	1010,	1101
2017-01-08 13:32:55 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-08 13:32:55 AI_Player.update()		1010,	1101,	110,	1101,	1001,	1001,	1010
2017-01-08 13:32:55 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	111,	1011
2017-01-08 13:32:55 AI_Player.update()		1001,	11,	1011,	1011,	1011,	111,	1010
2017-01-08 13:32:55 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-08 13:32:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	4 2
2017-01-08 13:32:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:55 AI_Player.update()	update
2017-01-08 13:32:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:32:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:32:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:32:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	5 2
2017-01-08 13:32:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:32:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:32:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:55 AI_Player.update()	update
2017-01-08 13:32:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:32:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:32:55 AI_Player.update()	Search took1ms
2017-01-08 13:32:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:55 AI_Player.update()		110,	111,	111,	1110,	111,	1001,	11
2017-01-08 13:32:55 AI_Player.update()		101,	1001,	11,	1001,	111,	1010,	1101
2017-01-08 13:32:55 AI_Player.update()		1110,	1101,	1110,	11,	111,	1001,	1011
2017-01-08 13:32:55 AI_Player.update()		1010,	1010,	110,	1101,	1001,	1001,	1010
2017-01-08 13:32:55 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-08 13:32:55 AI_Player.update()		1001,	1001,	1011,	1011,	1011,	111,	1010
2017-01-08 13:32:55 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-08 13:32:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	5 2
2017-01-08 13:32:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:55 AI_Player.update()	update
2017-01-08 13:32:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:32:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:32:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:55 GameBoard.setupTreasurePanel()	5 2
2017-01-08 13:32:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:55 AI_Player.update()	update
2017-01-08 13:32:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:32:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:32:56 AI_Player.update()	Search took322ms
2017-01-08 13:32:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:56 AI_Player.update()		110,	111,	111,	1110,	111,	1001,	11
2017-01-08 13:32:56 AI_Player.update()		101,	1001,	11,	1001,	111,	1010,	1101
2017-01-08 13:32:56 AI_Player.update()		1110,	1101,	1110,	11,	111,	1001,	1011
2017-01-08 13:32:56 AI_Player.update()		1010,	1010,	1010,	110,	1101,	1001,	1001
2017-01-08 13:32:56 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-08 13:32:56 AI_Player.update()		1001,	1001,	1011,	1011,	1011,	111,	1010
2017-01-08 13:32:56 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-08 13:32:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	5 2
2017-01-08 13:32:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:56 AI_Player.update()	update
2017-01-08 13:32:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:32:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:32:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:32:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:32:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	6 2
2017-01-08 13:32:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:32:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:32:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:56 AI_Player.update()	update
2017-01-08 13:32:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:32:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:32:56 AI_Player.update()	Search took7ms
2017-01-08 13:32:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:56 AI_Player.update()		110,	1001,	111,	1110,	111,	1001,	11
2017-01-08 13:32:56 AI_Player.update()		101,	1101,	11,	1001,	111,	1010,	1101
2017-01-08 13:32:56 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-08 13:32:56 AI_Player.update()		1010,	11,	1010,	110,	1101,	1001,	1001
2017-01-08 13:32:56 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	111,	1011
2017-01-08 13:32:56 AI_Player.update()		1001,	111,	1011,	1011,	1011,	111,	1010
2017-01-08 13:32:56 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-08 13:32:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	6 2
2017-01-08 13:32:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:56 AI_Player.update()	update
2017-01-08 13:32:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:32:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:32:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:32:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	6 2
2017-01-08 13:32:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:56 AI_Player.update()	update
2017-01-08 13:32:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:32:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:32:56 AI_Player.update()	Search took360ms
2017-01-08 13:32:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:56 AI_Player.update()		110,	1001,	111,	1110,	111,	1001,	11
2017-01-08 13:32:56 AI_Player.update()		101,	1101,	11,	1001,	111,	1010,	1101
2017-01-08 13:32:56 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-08 13:32:56 AI_Player.update()		1001,	1010,	11,	1010,	110,	1101,	1001
2017-01-08 13:32:56 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	111,	1011
2017-01-08 13:32:56 AI_Player.update()		1001,	111,	1011,	1011,	1011,	111,	1010
2017-01-08 13:32:56 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-08 13:32:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:56 GameBoard.setupTreasurePanel()	6 2
2017-01-08 13:32:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:57 AI_Player.update()	update
2017-01-08 13:32:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:32:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:32:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:32:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:32:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:57 GameBoard.setupTreasurePanel()	6 2
2017-01-08 13:32:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:57 AI_Player.update()	update
2017-01-08 13:32:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:32:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:32:57 AI_Player.update()	Search took3ms
2017-01-08 13:32:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:57 AI_Player.update()		110,	1101,	111,	1110,	111,	1001,	11
2017-01-08 13:32:57 AI_Player.update()		101,	1010,	11,	1001,	111,	1010,	1101
2017-01-08 13:32:57 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-08 13:32:57 AI_Player.update()		1001,	1001,	11,	1010,	110,	1101,	1001
2017-01-08 13:32:57 AI_Player.update()		1110,	111,	1101,	1100,	1011,	111,	1011
2017-01-08 13:32:57 AI_Player.update()		1001,	111,	1011,	1011,	1011,	111,	1010
2017-01-08 13:32:57 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-08 13:32:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:57 GameBoard.setupTreasurePanel()	6 2
2017-01-08 13:32:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:57 AI_Player.update()	update
2017-01-08 13:32:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:32:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:32:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:32:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:32:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:57 GameBoard.setupTreasurePanel()	6 2
2017-01-08 13:32:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:57 AI_Player.update()	update
2017-01-08 13:32:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:32:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:32:57 AI_Player.update()	Search took200ms
2017-01-08 13:32:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:32:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:57 AI_Player.update()		110,	1101,	111,	1001,	111,	1001,	11
2017-01-08 13:32:57 AI_Player.update()		101,	1010,	11,	11,	111,	1010,	1101
2017-01-08 13:32:57 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-08 13:32:57 AI_Player.update()		1001,	1001,	11,	1100,	110,	1101,	1001
2017-01-08 13:32:57 AI_Player.update()		1110,	111,	1101,	1011,	1011,	111,	1011
2017-01-08 13:32:57 AI_Player.update()		1001,	111,	1011,	1001,	1011,	111,	1010
2017-01-08 13:32:57 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	101,	1001
2017-01-08 13:32:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:32:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:32:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:32:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:32:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:32:57 GameBoard.setupTreasurePanel()	6 2
2017-01-08 13:32:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:32:57 AI_Player.update()	update
2017-01-08 13:32:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:32:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:32:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:32:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:32:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:32:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:32:57 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-08 13:32:57 AI_Player.update()	Player a has won!
2017-01-08 13:33:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-08 13:33:00 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-08 13:33:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-08 13:33:00 QueryProlog.reset()	setup(h2/h1). suceeded
2017-01-08 13:33:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:00 AI_Player.update()	update
2017-01-08 13:33:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:00 AI_Player.update()	Search took24ms
2017-01-08 13:33:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:00 AI_Player.update()		110,	11,	111,	1100,	111,	1011,	11
2017-01-08 13:33:00 AI_Player.update()		101,	1001,	1100,	101,	1001,	1100,	111
2017-01-08 13:33:00 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-08 13:33:00 AI_Player.update()		11,	1011,	110,	110,	1011,	11,	101
2017-01-08 13:33:00 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-08 13:33:00 AI_Player.update()		101,	1011,	101,	1001,	101,	11,	110
2017-01-08 13:33:00 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1001,	1001
2017-01-08 13:33:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:00 AI_Player.update()	update
2017-01-08 13:33:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:00 AI_Player.update()	update
2017-01-08 13:33:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:00 AI_Player.update()	Search took0ms
2017-01-08 13:33:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:00 AI_Player.update()		110,	11,	111,	1100,	111,	1100,	11
2017-01-08 13:33:00 AI_Player.update()		101,	1001,	1100,	101,	1001,	1010,	111
2017-01-08 13:33:00 AI_Player.update()		1110,	1001,	1110,	1010,	111,	11,	1011
2017-01-08 13:33:00 AI_Player.update()		11,	1011,	110,	110,	1011,	110,	101
2017-01-08 13:33:00 AI_Player.update()		1110,	101,	1101,	1011,	1011,	11,	1011
2017-01-08 13:33:00 AI_Player.update()		101,	1011,	101,	1001,	101,	1001,	110
2017-01-08 13:33:00 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1011,	1001
2017-01-08 13:33:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:00 AI_Player.update()	update
2017-01-08 13:33:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:00 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:01 AI_Player.update()	update
2017-01-08 13:33:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:01 AI_Player.update()	Search took67ms
2017-01-08 13:33:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:01 AI_Player.update()		110,	1001,	111,	1100,	111,	1100,	11
2017-01-08 13:33:01 AI_Player.update()		101,	11,	1100,	101,	1001,	1010,	111
2017-01-08 13:33:01 AI_Player.update()		1110,	1001,	1110,	1010,	111,	11,	1011
2017-01-08 13:33:01 AI_Player.update()		11,	1001,	110,	110,	1011,	110,	101
2017-01-08 13:33:01 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	11,	1011
2017-01-08 13:33:01 AI_Player.update()		101,	101,	101,	1001,	101,	1001,	110
2017-01-08 13:33:01 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1011,	1001
2017-01-08 13:33:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:01 AI_Player.update()	update
2017-01-08 13:33:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:01 AI_Player.update()	update
2017-01-08 13:33:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:01 AI_Player.update()	Search took3ms
2017-01-08 13:33:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:01 AI_Player.update()		110,	1001,	111,	1100,	111,	1011,	11
2017-01-08 13:33:01 AI_Player.update()		101,	11,	1100,	101,	1001,	1100,	111
2017-01-08 13:33:01 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-08 13:33:01 AI_Player.update()		11,	1001,	110,	110,	1011,	11,	101
2017-01-08 13:33:01 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	110,	1011
2017-01-08 13:33:01 AI_Player.update()		101,	101,	101,	1001,	101,	11,	110
2017-01-08 13:33:01 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1001,	1001
2017-01-08 13:33:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:01 AI_Player.update()	update
2017-01-08 13:33:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:01 AI_Player.update()	update
2017-01-08 13:33:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:01 AI_Player.update()	Search took78ms
2017-01-08 13:33:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:01 AI_Player.update()		110,	1001,	111,	1100,	111,	1011,	11
2017-01-08 13:33:01 AI_Player.update()		101,	11,	1100,	101,	1001,	1100,	111
2017-01-08 13:33:01 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-08 13:33:01 AI_Player.update()		101,	11,	1001,	110,	110,	1011,	11
2017-01-08 13:33:01 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	110,	1011
2017-01-08 13:33:01 AI_Player.update()		101,	101,	101,	1001,	101,	11,	110
2017-01-08 13:33:01 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1001,	1001
2017-01-08 13:33:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:01 AI_Player.update()	update
2017-01-08 13:33:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:01 AI_Player.update()	update
2017-01-08 13:33:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:01 AI_Player.update()	Search took2ms
2017-01-08 13:33:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:01 AI_Player.update()		110,	11,	111,	1100,	111,	1011,	11
2017-01-08 13:33:01 AI_Player.update()		101,	1001,	1100,	101,	1001,	1100,	111
2017-01-08 13:33:01 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-08 13:33:01 AI_Player.update()		101,	1011,	1001,	110,	110,	1011,	11
2017-01-08 13:33:01 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-08 13:33:01 AI_Player.update()		101,	1011,	101,	1001,	101,	11,	110
2017-01-08 13:33:01 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1001,	1001
2017-01-08 13:33:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:01 AI_Player.update()	update
2017-01-08 13:33:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:01 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:02 AI_Player.update()	update
2017-01-08 13:33:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:02 AI_Player.update()	Search took95ms
2017-01-08 13:33:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:02 AI_Player.update()		110,	11,	111,	1100,	111,	1011,	11
2017-01-08 13:33:02 AI_Player.update()		1001,	1100,	101,	1001,	1100,	111,	101
2017-01-08 13:33:02 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-08 13:33:02 AI_Player.update()		101,	1011,	1001,	110,	110,	1011,	11
2017-01-08 13:33:02 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-08 13:33:02 AI_Player.update()		101,	1011,	101,	1001,	101,	11,	110
2017-01-08 13:33:02 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1001,	1001
2017-01-08 13:33:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:02 AI_Player.update()	update
2017-01-08 13:33:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	3 1
2017-01-08 13:33:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:02 AI_Player.update()	update
2017-01-08 13:33:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:02 AI_Player.update()	Search took3ms
2017-01-08 13:33:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:02 AI_Player.update()		110,	11,	111,	111,	111,	1011,	11
2017-01-08 13:33:02 AI_Player.update()		1001,	1100,	101,	1100,	1100,	111,	101
2017-01-08 13:33:02 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-08 13:33:02 AI_Player.update()		101,	1011,	1001,	1010,	110,	1011,	11
2017-01-08 13:33:02 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:02 AI_Player.update()		101,	1011,	101,	1011,	101,	11,	110
2017-01-08 13:33:02 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1001,	1001
2017-01-08 13:33:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	3 1
2017-01-08 13:33:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:02 AI_Player.update()	update
2017-01-08 13:33:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	3 1
2017-01-08 13:33:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:02 AI_Player.update()	update
2017-01-08 13:33:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:02 AI_Player.update()	Search took295ms
2017-01-08 13:33:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:02 AI_Player.update()		110,	1100,	111,	111,	111,	1011,	11
2017-01-08 13:33:02 AI_Player.update()		1001,	11,	101,	1100,	1100,	111,	101
2017-01-08 13:33:02 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1010,	1011
2017-01-08 13:33:02 AI_Player.update()		101,	101,	1001,	1010,	110,	1011,	11
2017-01-08 13:33:02 AI_Player.update()		1110,	1011,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:02 AI_Player.update()		101,	1001,	101,	1011,	101,	11,	110
2017-01-08 13:33:02 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-08 13:33:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:02 GameBoard.setupTreasurePanel()	3 1
2017-01-08 13:33:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:03 AI_Player.update()	update
2017-01-08 13:33:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	3 1
2017-01-08 13:33:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:03 AI_Player.update()	update
2017-01-08 13:33:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:03 AI_Player.update()	Search took3ms
2017-01-08 13:33:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:03 AI_Player.update()		110,	11,	111,	111,	111,	1011,	11
2017-01-08 13:33:03 AI_Player.update()		1001,	1011,	101,	1100,	1100,	111,	101
2017-01-08 13:33:03 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-08 13:33:03 AI_Player.update()		101,	1011,	1001,	1010,	110,	1011,	11
2017-01-08 13:33:03 AI_Player.update()		1110,	1001,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:03 AI_Player.update()		101,	11,	101,	1011,	101,	11,	110
2017-01-08 13:33:03 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-08 13:33:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	3 1
2017-01-08 13:33:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:03 AI_Player.update()	update
2017-01-08 13:33:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	3 1
2017-01-08 13:33:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:03 AI_Player.update()	update
2017-01-08 13:33:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:03 AI_Player.update()	Search took324ms
2017-01-08 13:33:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:03 AI_Player.update()		110,	11,	111,	111,	111,	1011,	11
2017-01-08 13:33:03 AI_Player.update()		1001,	1011,	101,	1100,	1100,	111,	101
2017-01-08 13:33:03 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-08 13:33:03 AI_Player.update()		11,	101,	1011,	1001,	1010,	110,	1011
2017-01-08 13:33:03 AI_Player.update()		1110,	1001,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:03 AI_Player.update()		101,	11,	101,	1011,	101,	11,	110
2017-01-08 13:33:03 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-08 13:33:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	3 1
2017-01-08 13:33:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:03 AI_Player.update()	update
2017-01-08 13:33:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	4 1
2017-01-08 13:33:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:03 AI_Player.update()	update
2017-01-08 13:33:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:03 AI_Player.update()	Search took3ms
2017-01-08 13:33:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:03 AI_Player.update()		110,	1011,	111,	111,	111,	1011,	11
2017-01-08 13:33:03 AI_Player.update()		1001,	101,	101,	1100,	1100,	111,	101
2017-01-08 13:33:03 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-08 13:33:03 AI_Player.update()		11,	1001,	1011,	1001,	1010,	110,	1011
2017-01-08 13:33:03 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:03 AI_Player.update()		101,	1100,	101,	1011,	101,	11,	110
2017-01-08 13:33:03 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-08 13:33:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	4 1
2017-01-08 13:33:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:03 AI_Player.update()	update
2017-01-08 13:33:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:03 GameBoard.setupTreasurePanel()	4 1
2017-01-08 13:33:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:04 AI_Player.update()	update
2017-01-08 13:33:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:04 AI_Player.update()	Search took162ms
2017-01-08 13:33:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:04 AI_Player.update()		110,	1011,	111,	111,	111,	1001,	11
2017-01-08 13:33:04 AI_Player.update()		1001,	101,	101,	1100,	1100,	1011,	101
2017-01-08 13:33:04 AI_Player.update()		1110,	101,	1110,	1001,	111,	111,	1011
2017-01-08 13:33:04 AI_Player.update()		11,	1001,	1011,	1001,	1010,	1010,	1011
2017-01-08 13:33:04 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:04 AI_Player.update()		101,	1100,	101,	1011,	101,	110,	110
2017-01-08 13:33:04 AI_Player.update()		1100,	11,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	4 1
2017-01-08 13:33:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:04 AI_Player.update()	update
2017-01-08 13:33:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:04 AI_Player.update()	update
2017-01-08 13:33:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:04 AI_Player.update()	Search took1ms
2017-01-08 13:33:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:04 AI_Player.update()		110,	101,	111,	111,	111,	1001,	11
2017-01-08 13:33:04 AI_Player.update()		1001,	101,	101,	1100,	1100,	1011,	101
2017-01-08 13:33:04 AI_Player.update()		1110,	1001,	1110,	1001,	111,	111,	1011
2017-01-08 13:33:04 AI_Player.update()		11,	11,	1011,	1001,	1010,	1010,	1011
2017-01-08 13:33:04 AI_Player.update()		1110,	1100,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:04 AI_Player.update()		101,	11,	101,	1011,	101,	110,	110
2017-01-08 13:33:04 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:04 AI_Player.update()	update
2017-01-08 13:33:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:04 AI_Player.update()	update
2017-01-08 13:33:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:04 AI_Player.update()	Search took284ms
2017-01-08 13:33:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:04 AI_Player.update()		110,	101,	111,	111,	111,	1001,	11
2017-01-08 13:33:04 AI_Player.update()		1001,	1001,	101,	1100,	1100,	1011,	101
2017-01-08 13:33:04 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-08 13:33:04 AI_Player.update()		11,	1100,	1011,	1001,	1010,	1010,	1011
2017-01-08 13:33:04 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:04 AI_Player.update()		101,	1011,	101,	1011,	101,	110,	110
2017-01-08 13:33:04 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:04 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:05 AI_Player.update()	update
2017-01-08 13:33:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:05 AI_Player.update()	update
2017-01-08 13:33:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:05 AI_Player.update()	Search took3ms
2017-01-08 13:33:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:05 AI_Player.update()		110,	1001,	111,	111,	111,	1001,	11
2017-01-08 13:33:05 AI_Player.update()		1001,	11,	101,	1100,	1100,	1011,	101
2017-01-08 13:33:05 AI_Player.update()		1110,	1100,	1110,	1001,	111,	111,	1011
2017-01-08 13:33:05 AI_Player.update()		11,	11,	1011,	1001,	1010,	1010,	1011
2017-01-08 13:33:05 AI_Player.update()		1110,	1011,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:05 AI_Player.update()		101,	101,	101,	1011,	101,	110,	110
2017-01-08 13:33:05 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:05 AI_Player.update()	update
2017-01-08 13:33:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:05 AI_Player.update()	update
2017-01-08 13:33:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:05 AI_Player.update()	Search took450ms
2017-01-08 13:33:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:05 AI_Player.update()		110,	1001,	111,	1100,	111,	1001,	11
2017-01-08 13:33:05 AI_Player.update()		1001,	11,	101,	1001,	1100,	1011,	101
2017-01-08 13:33:05 AI_Player.update()		1110,	1100,	1110,	1001,	111,	111,	1011
2017-01-08 13:33:05 AI_Player.update()		11,	11,	1011,	110,	1010,	1010,	1011
2017-01-08 13:33:05 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	110,	1011
2017-01-08 13:33:05 AI_Player.update()		101,	101,	101,	1001,	101,	110,	110
2017-01-08 13:33:05 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-08 13:33:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:05 AI_Player.update()	update
2017-01-08 13:33:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:06 AI_Player.update()	update
2017-01-08 13:33:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:06 AI_Player.update()	Search took1ms
2017-01-08 13:33:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:06 AI_Player.update()		110,	1001,	111,	111,	111,	1001,	11
2017-01-08 13:33:06 AI_Player.update()		1001,	11,	101,	1100,	1100,	1011,	101
2017-01-08 13:33:06 AI_Player.update()		1110,	1100,	1110,	1001,	111,	111,	1011
2017-01-08 13:33:06 AI_Player.update()		11,	11,	1011,	1001,	1010,	1010,	1011
2017-01-08 13:33:06 AI_Player.update()		1110,	1011,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:06 AI_Player.update()		101,	101,	101,	1011,	101,	110,	110
2017-01-08 13:33:06 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:06 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:06 AI_Player.update()	update
2017-01-08 13:33:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:06 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:06 AI_Player.update()	update
2017-01-08 13:33:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:06 AI_Player.update()	Search took101ms
2017-01-08 13:33:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:06 AI_Player.update()		110,	11,	111,	111,	111,	1001,	11
2017-01-08 13:33:06 AI_Player.update()		1001,	1100,	101,	1100,	1100,	1011,	101
2017-01-08 13:33:06 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-08 13:33:06 AI_Player.update()		11,	1011,	1011,	1001,	1010,	1010,	1011
2017-01-08 13:33:06 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:06 AI_Player.update()		101,	101,	101,	1011,	101,	110,	110
2017-01-08 13:33:06 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:06 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:06 AI_Player.update()	update
2017-01-08 13:33:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:06 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:06 AI_Player.update()	update
2017-01-08 13:33:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:06 AI_Player.update()	Search took3ms
2017-01-08 13:33:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:06 AI_Player.update()		110,	1100,	111,	111,	111,	1001,	11
2017-01-08 13:33:06 AI_Player.update()		1001,	11,	101,	1100,	1100,	1011,	101
2017-01-08 13:33:06 AI_Player.update()		1110,	1011,	1110,	1001,	111,	111,	1011
2017-01-08 13:33:06 AI_Player.update()		11,	101,	1011,	1001,	1010,	1010,	1011
2017-01-08 13:33:06 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:06 AI_Player.update()		101,	1001,	101,	1011,	101,	110,	110
2017-01-08 13:33:06 AI_Player.update()		1100,	11,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:06 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:06 AI_Player.update()	update
2017-01-08 13:33:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:06 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:06 AI_Player.update()	update
2017-01-08 13:33:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:06 AI_Player.update()	Search took129ms
2017-01-08 13:33:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:06 AI_Player.update()		110,	1100,	111,	1100,	111,	1001,	11
2017-01-08 13:33:06 AI_Player.update()		1001,	11,	101,	1001,	1100,	1011,	101
2017-01-08 13:33:06 AI_Player.update()		1110,	1011,	1110,	1001,	111,	111,	1011
2017-01-08 13:33:06 AI_Player.update()		11,	101,	1011,	110,	1010,	1010,	1011
2017-01-08 13:33:06 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-08 13:33:06 AI_Player.update()		101,	1001,	101,	1001,	101,	110,	110
2017-01-08 13:33:06 AI_Player.update()		1100,	11,	1101,	111,	1101,	11,	1001
2017-01-08 13:33:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:06 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:06 AI_Player.update()	update
2017-01-08 13:33:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:06 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:07 AI_Player.update()	update
2017-01-08 13:33:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:07 AI_Player.update()	Search took5ms
2017-01-08 13:33:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:07 AI_Player.update()		110,	1100,	111,	111,	111,	1001,	11
2017-01-08 13:33:07 AI_Player.update()		1001,	11,	101,	1100,	1100,	1011,	101
2017-01-08 13:33:07 AI_Player.update()		1110,	1011,	1110,	1001,	111,	111,	1011
2017-01-08 13:33:07 AI_Player.update()		11,	101,	1011,	1001,	1010,	1010,	1011
2017-01-08 13:33:07 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:07 AI_Player.update()		101,	1001,	101,	1011,	101,	110,	110
2017-01-08 13:33:07 AI_Player.update()		1100,	11,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:07 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:07 AI_Player.update()	update
2017-01-08 13:33:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:07 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:07 AI_Player.update()	update
2017-01-08 13:33:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:07 AI_Player.update()	Search took73ms
2017-01-08 13:33:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:07 AI_Player.update()		110,	11,	111,	111,	111,	1001,	11
2017-01-08 13:33:07 AI_Player.update()		1001,	1100,	101,	1100,	1100,	1011,	101
2017-01-08 13:33:07 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-08 13:33:07 AI_Player.update()		11,	1011,	1011,	1001,	1010,	1010,	1011
2017-01-08 13:33:07 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-08 13:33:07 AI_Player.update()		101,	101,	101,	1011,	101,	110,	110
2017-01-08 13:33:07 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:07 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:07 AI_Player.update()	update
2017-01-08 13:33:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:07 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-08 13:33:07 AI_Player.update()	Player a has won!
2017-01-08 13:33:15 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-08 13:33:15 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-08 13:33:15 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-08 13:33:15 QueryProlog.reset()	setup(h2/h1). suceeded
2017-01-08 13:33:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:15 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:15 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:15 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:15 AI_Player.update()	update
2017-01-08 13:33:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:16 AI_Player.update()	Search took413ms
2017-01-08 13:33:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:16 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-08 13:33:16 AI_Player.update()		1010,	111,	101,	1100,	1101,	1110,	1010
2017-01-08 13:33:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-08 13:33:16 AI_Player.update()		1110,	1101,	101,	1001,	1010,	11,	1110
2017-01-08 13:33:16 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1001,	1011
2017-01-08 13:33:16 AI_Player.update()		1101,	101,	110,	1110,	11,	101,	1110
2017-01-08 13:33:16 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1010,	1001
2017-01-08 13:33:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:16 AI_Player.update()	update
2017-01-08 13:33:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:16 AI_Player.update()	update
2017-01-08 13:33:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:16 AI_Player.update()	Search took2ms
2017-01-08 13:33:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:16 AI_Player.update()		110,	101,	111,	1001,	111,	1110,	11
2017-01-08 13:33:16 AI_Player.update()		1010,	111,	101,	1100,	1101,	1010,	1010
2017-01-08 13:33:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-08 13:33:16 AI_Player.update()		1110,	1101,	101,	1001,	1010,	1001,	1110
2017-01-08 13:33:16 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-08 13:33:16 AI_Player.update()		1101,	101,	110,	1110,	11,	1010,	1110
2017-01-08 13:33:16 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1010,	1001
2017-01-08 13:33:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:16 AI_Player.update()	update
2017-01-08 13:33:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:16 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:16 AI_Player.update()	update
2017-01-08 13:33:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:17 AI_Player.update()	Search took411ms
2017-01-08 13:33:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:17 AI_Player.update()		110,	101,	111,	11,	111,	1110,	11
2017-01-08 13:33:17 AI_Player.update()		1010,	111,	101,	1001,	1101,	1010,	1010
2017-01-08 13:33:17 AI_Player.update()		1110,	1100,	1110,	1100,	111,	11,	1011
2017-01-08 13:33:17 AI_Player.update()		1110,	1101,	101,	101,	1010,	1001,	1110
2017-01-08 13:33:17 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-08 13:33:17 AI_Player.update()		1101,	101,	110,	1101,	11,	1010,	1110
2017-01-08 13:33:17 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1010,	1001
2017-01-08 13:33:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:17 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:17 AI_Player.update()	update
2017-01-08 13:33:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:17 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:17 AI_Player.update()	update
2017-01-08 13:33:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:17 AI_Player.update()	Search took2ms
2017-01-08 13:33:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:17 AI_Player.update()		110,	111,	111,	11,	111,	1110,	11
2017-01-08 13:33:17 AI_Player.update()		1010,	1100,	101,	1001,	1101,	1010,	1010
2017-01-08 13:33:17 AI_Player.update()		1110,	1101,	1110,	1100,	111,	11,	1011
2017-01-08 13:33:17 AI_Player.update()		1110,	1010,	101,	101,	1010,	1001,	1110
2017-01-08 13:33:17 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-08 13:33:17 AI_Player.update()		1101,	1100,	110,	1101,	11,	1010,	1110
2017-01-08 13:33:17 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-08 13:33:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:17 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:17 AI_Player.update()	update
2017-01-08 13:33:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:17 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:17 AI_Player.update()	update
2017-01-08 13:33:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:17 AI_Player.update()	Search took546ms
2017-01-08 13:33:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:17 AI_Player.update()		110,	1100,	111,	11,	111,	1110,	11
2017-01-08 13:33:17 AI_Player.update()		1010,	1101,	101,	1001,	1101,	1010,	1010
2017-01-08 13:33:17 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-08 13:33:17 AI_Player.update()		1110,	101,	101,	101,	1010,	1001,	1110
2017-01-08 13:33:17 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-08 13:33:17 AI_Player.update()		1101,	101,	110,	1101,	11,	1010,	1110
2017-01-08 13:33:17 AI_Player.update()		1100,	111,	1101,	1110,	1101,	1010,	1001
2017-01-08 13:33:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:18 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:18 AI_Player.update()	update
2017-01-08 13:33:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:18 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:18 AI_Player.update()	update
2017-01-08 13:33:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:18 AI_Player.update()	Search took5ms
2017-01-08 13:33:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:18 AI_Player.update()		110,	1101,	111,	11,	111,	1110,	11
2017-01-08 13:33:18 AI_Player.update()		1010,	1010,	101,	1001,	1101,	1010,	1010
2017-01-08 13:33:18 AI_Player.update()		1110,	101,	1110,	1100,	111,	11,	1011
2017-01-08 13:33:18 AI_Player.update()		1110,	1100,	101,	101,	1010,	1001,	1110
2017-01-08 13:33:18 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-08 13:33:18 AI_Player.update()		1101,	111,	110,	1101,	11,	1010,	1110
2017-01-08 13:33:18 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1010,	1001
2017-01-08 13:33:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:18 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:18 AI_Player.update()	update
2017-01-08 13:33:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:18 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:18 AI_Player.update()	update
2017-01-08 13:33:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:18 AI_Player.update()	Search took537ms
2017-01-08 13:33:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:18 AI_Player.update()		110,	1101,	111,	1110,	111,	1110,	11
2017-01-08 13:33:18 AI_Player.update()		1010,	1010,	101,	11,	1101,	1010,	1010
2017-01-08 13:33:18 AI_Player.update()		1110,	101,	1110,	1001,	111,	11,	1011
2017-01-08 13:33:18 AI_Player.update()		1110,	1100,	101,	1100,	1010,	1001,	1110
2017-01-08 13:33:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-08 13:33:18 AI_Player.update()		1101,	111,	110,	1001,	11,	1010,	1110
2017-01-08 13:33:18 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-08 13:33:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:18 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:19 AI_Player.update()	update
2017-01-08 13:33:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	3 1
2017-01-08 13:33:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:19 AI_Player.update()	update
2017-01-08 13:33:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:19 AI_Player.update()	Search took9ms
2017-01-08 13:33:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:19 AI_Player.update()		110,	1010,	111,	1110,	111,	1110,	11
2017-01-08 13:33:19 AI_Player.update()		1010,	101,	101,	11,	1101,	1010,	1010
2017-01-08 13:33:19 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-08 13:33:19 AI_Player.update()		1110,	101,	101,	1100,	1010,	1001,	1110
2017-01-08 13:33:19 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-08 13:33:19 AI_Player.update()		1101,	1100,	110,	1001,	11,	1010,	1110
2017-01-08 13:33:19 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	1010,	1001
2017-01-08 13:33:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	3 1
2017-01-08 13:33:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:19 AI_Player.update()	update
2017-01-08 13:33:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	3 1
2017-01-08 13:33:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:19 AI_Player.update()	update
2017-01-08 13:33:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:19 AI_Player.update()	Search took123ms
2017-01-08 13:33:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:19 AI_Player.update()		110,	1010,	111,	1110,	111,	1010,	11
2017-01-08 13:33:19 AI_Player.update()		1010,	101,	101,	11,	1101,	11,	1010
2017-01-08 13:33:19 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-08 13:33:19 AI_Player.update()		1110,	101,	101,	1100,	1010,	101,	1110
2017-01-08 13:33:19 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-08 13:33:19 AI_Player.update()		1101,	1100,	110,	1001,	11,	1010,	1110
2017-01-08 13:33:19 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	1110,	1001
2017-01-08 13:33:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	3 1
2017-01-08 13:33:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:19 AI_Player.update()	update
2017-01-08 13:33:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	4 1
2017-01-08 13:33:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:19 AI_Player.update()	update
2017-01-08 13:33:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:19 AI_Player.update()	Search took6ms
2017-01-08 13:33:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:19 AI_Player.update()		110,	1010,	111,	1110,	111,	1110,	11
2017-01-08 13:33:19 AI_Player.update()		1010,	101,	101,	11,	1101,	1010,	1010
2017-01-08 13:33:19 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-08 13:33:19 AI_Player.update()		1110,	101,	101,	1100,	1010,	1001,	1110
2017-01-08 13:33:19 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-08 13:33:19 AI_Player.update()		1101,	1100,	110,	1001,	11,	1010,	1110
2017-01-08 13:33:19 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	1010,	1001
2017-01-08 13:33:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	4 1
2017-01-08 13:33:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:19 AI_Player.update()	update
2017-01-08 13:33:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:19 GameBoard.setupTreasurePanel()	4 1
2017-01-08 13:33:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:19 AI_Player.update()	update
2017-01-08 13:33:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:20 AI_Player.update()	Search took655ms
2017-01-08 13:33:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:20 AI_Player.update()		110,	1010,	111,	1110,	111,	1110,	11
2017-01-08 13:33:20 AI_Player.update()		101,	101,	11,	1101,	1010,	1010,	1010
2017-01-08 13:33:20 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-08 13:33:20 AI_Player.update()		1110,	101,	101,	1100,	1010,	1001,	1110
2017-01-08 13:33:20 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-08 13:33:20 AI_Player.update()		1101,	1100,	110,	1001,	11,	1010,	1110
2017-01-08 13:33:20 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	1010,	1001
2017-01-08 13:33:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:20 GameBoard.setupTreasurePanel()	4 1
2017-01-08 13:33:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:20 AI_Player.update()	update
2017-01-08 13:33:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:20 GameBoard.setupTreasurePanel()	4 1
2017-01-08 13:33:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:20 AI_Player.update()	update
2017-01-08 13:33:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:20 AI_Player.update()	Search took5ms
2017-01-08 13:33:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:20 AI_Player.update()		110,	101,	111,	1110,	111,	1110,	11
2017-01-08 13:33:20 AI_Player.update()		101,	1100,	11,	1101,	1010,	1010,	1010
2017-01-08 13:33:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	11,	1011
2017-01-08 13:33:20 AI_Player.update()		1110,	111,	101,	1100,	1010,	1001,	1110
2017-01-08 13:33:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-08 13:33:20 AI_Player.update()		1101,	1101,	110,	1001,	11,	1010,	1110
2017-01-08 13:33:20 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1010,	1001
2017-01-08 13:33:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:20 GameBoard.setupTreasurePanel()	4 1
2017-01-08 13:33:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:20 AI_Player.update()	update
2017-01-08 13:33:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:20 GameBoard.setupTreasurePanel()	4 1
2017-01-08 13:33:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:21 AI_Player.update()	update
2017-01-08 13:33:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:21 AI_Player.update()	Search took543ms
2017-01-08 13:33:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:21 AI_Player.update()		110,	101,	111,	1110,	111,	1110,	11
2017-01-08 13:33:21 AI_Player.update()		101,	1100,	11,	1101,	1010,	1010,	1010
2017-01-08 13:33:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	11,	1011
2017-01-08 13:33:21 AI_Player.update()		111,	101,	1100,	1010,	1001,	1110,	1110
2017-01-08 13:33:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-08 13:33:21 AI_Player.update()		1101,	1101,	110,	1001,	11,	1010,	1110
2017-01-08 13:33:21 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1010,	1001
2017-01-08 13:33:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	4 1
2017-01-08 13:33:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:21 AI_Player.update()	update
2017-01-08 13:33:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:21 AI_Player.update()	update
2017-01-08 13:33:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:21 AI_Player.update()	Search took8ms
2017-01-08 13:33:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:21 AI_Player.update()		110,	1100,	111,	1110,	111,	1110,	11
2017-01-08 13:33:21 AI_Player.update()		101,	101,	11,	1101,	1010,	1010,	1010
2017-01-08 13:33:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	11,	1011
2017-01-08 13:33:21 AI_Player.update()		111,	1100,	1100,	1010,	1001,	1110,	1110
2017-01-08 13:33:21 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-08 13:33:21 AI_Player.update()		1101,	1010,	110,	1001,	11,	1010,	1110
2017-01-08 13:33:21 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1010,	1001
2017-01-08 13:33:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:21 AI_Player.update()	update
2017-01-08 13:33:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:21 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:21 AI_Player.update()	update
2017-01-08 13:33:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:22 AI_Player.update()	Search took342ms
2017-01-08 13:33:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:22 AI_Player.update()		110,	1100,	111,	1101,	111,	1110,	11
2017-01-08 13:33:22 AI_Player.update()		101,	101,	11,	1110,	1010,	1010,	1010
2017-01-08 13:33:22 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-08 13:33:22 AI_Player.update()		111,	1100,	1100,	1001,	1001,	1110,	1110
2017-01-08 13:33:22 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-08 13:33:22 AI_Player.update()		1101,	1010,	110,	101,	11,	1010,	1110
2017-01-08 13:33:22 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:22 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:22 AI_Player.update()	update
2017-01-08 13:33:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:22 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:22 AI_Player.update()	update
2017-01-08 13:33:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:22 AI_Player.update()	Search took6ms
2017-01-08 13:33:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:22 AI_Player.update()		110,	101,	111,	1101,	111,	1110,	11
2017-01-08 13:33:22 AI_Player.update()		101,	101,	11,	1110,	1010,	1010,	1010
2017-01-08 13:33:22 AI_Player.update()		1110,	1100,	1110,	1101,	111,	11,	1011
2017-01-08 13:33:22 AI_Player.update()		111,	1101,	1100,	1001,	1001,	1110,	1110
2017-01-08 13:33:22 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-08 13:33:22 AI_Player.update()		1101,	101,	110,	101,	11,	1010,	1110
2017-01-08 13:33:22 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:22 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:22 AI_Player.update()	update
2017-01-08 13:33:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:22 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:22 AI_Player.update()	update
2017-01-08 13:33:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:23 AI_Player.update()	Search took264ms
2017-01-08 13:33:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:23 AI_Player.update()		110,	101,	111,	1101,	111,	1110,	11
2017-01-08 13:33:23 AI_Player.update()		101,	11,	1110,	1010,	1010,	1010,	101
2017-01-08 13:33:23 AI_Player.update()		1110,	1100,	1110,	1101,	111,	11,	1011
2017-01-08 13:33:23 AI_Player.update()		111,	1101,	1100,	1001,	1001,	1110,	1110
2017-01-08 13:33:23 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-08 13:33:23 AI_Player.update()		1101,	101,	110,	101,	11,	1010,	1110
2017-01-08 13:33:23 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	5 1
2017-01-08 13:33:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:23 AI_Player.update()	update
2017-01-08 13:33:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:23 AI_Player.update()	update
2017-01-08 13:33:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:23 AI_Player.update()	Search took4ms
2017-01-08 13:33:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:23 AI_Player.update()		110,	11,	111,	1101,	111,	1110,	11
2017-01-08 13:33:23 AI_Player.update()		101,	1100,	1110,	1010,	1010,	1010,	101
2017-01-08 13:33:23 AI_Player.update()		1110,	1101,	1110,	1101,	111,	11,	1011
2017-01-08 13:33:23 AI_Player.update()		111,	1010,	1100,	1001,	1001,	1110,	1110
2017-01-08 13:33:23 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-08 13:33:23 AI_Player.update()		1101,	1100,	110,	101,	11,	1010,	1110
2017-01-08 13:33:23 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:23 AI_Player.update()	update
2017-01-08 13:33:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:23 AI_Player.update()	update
2017-01-08 13:33:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:23 AI_Player.update()	Search took458ms
2017-01-08 13:33:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:23 AI_Player.update()		110,	101,	111,	1101,	111,	1110,	11
2017-01-08 13:33:23 AI_Player.update()		101,	11,	1110,	1010,	1010,	1010,	101
2017-01-08 13:33:23 AI_Player.update()		1110,	1100,	1110,	1101,	111,	11,	1011
2017-01-08 13:33:23 AI_Player.update()		111,	1101,	1100,	1001,	1001,	1110,	1110
2017-01-08 13:33:23 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-08 13:33:23 AI_Player.update()		1101,	101,	110,	101,	11,	1010,	1110
2017-01-08 13:33:23 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:23 GameBoard.setupTreasurePanel()	6 1
2017-01-08 13:33:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:23 AI_Player.update()	update
2017-01-08 13:33:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:24 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-08 13:33:24 AI_Player.update()	Player a has won!
2017-01-08 13:33:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-08 13:33:27 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-08 13:33:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-08 13:33:27 QueryProlog.reset()	setup(h2/h1). suceeded
2017-01-08 13:33:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:33:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:27 AI_Player.update()	update
2017-01-08 13:33:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:27 AI_Player.update()	Search took29ms
2017-01-08 13:33:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:27 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-08 13:33:27 AI_Player.update()		110,	1101,	1001,	1001,	1100,	1010,	1100
2017-01-08 13:33:27 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-08 13:33:27 AI_Player.update()		110,	11,	11,	1110,	1010,	101,	101
2017-01-08 13:33:27 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-08 13:33:27 AI_Player.update()		1010,	101,	101,	11,	111,	1011,	1010
2017-01-08 13:33:27 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1010,	1001
2017-01-08 13:33:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:27 AI_Player.update()	update
2017-01-08 13:33:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-08 13:33:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:27 AI_Player.update()	update
2017-01-08 13:33:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-08 13:33:27 AI_Player.update()	Search took3ms
2017-01-08 13:33:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:27 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-08 13:33:27 AI_Player.update()		110,	1010,	1001,	1001,	1100,	1010,	1100
2017-01-08 13:33:27 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-08 13:33:27 AI_Player.update()		110,	101,	11,	1110,	1010,	101,	101
2017-01-08 13:33:27 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-08 13:33:27 AI_Player.update()		1010,	1011,	101,	11,	111,	1011,	1010
2017-01-08 13:33:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-08 13:33:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:27 AI_Player.update()	update
2017-01-08 13:33:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-08 13:33:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:27 AI_Player.update()	update
2017-01-08 13:33:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-08 13:33:27 AI_Player.update()	Search took65ms
2017-01-08 13:33:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:27 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-08 13:33:27 AI_Player.update()		1010,	1001,	1001,	1100,	1010,	1100,	110
2017-01-08 13:33:27 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-08 13:33:27 AI_Player.update()		110,	101,	11,	1110,	1010,	101,	101
2017-01-08 13:33:27 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-08 13:33:27 AI_Player.update()		1010,	1011,	101,	11,	111,	1011,	1010
2017-01-08 13:33:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-08 13:33:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:27 GameBoard.setupTreasurePanel()	1 1
