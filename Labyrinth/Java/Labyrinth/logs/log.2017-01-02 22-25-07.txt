2017-01-02 22:25:07 GameBoard.<init>()	Hello World!
2017-01-02 22:25:07 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-02 22:25:07 QueryProlog.initialise()	setup(h3/h3). suceeded
2017-01-02 22:25:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:07 GameBoard.setupBoardFromString()	Board created
2017-01-02 22:25:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:25:07 GameBoard.initialise()	[sword, map, crown, ring, keys]
2017-01-02 22:25:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:25:07 GameBoard.initialise()	[fairy, gold, chest, gem, candle]
2017-01-02 22:25:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:07 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-02 22:25:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:07 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:07 GameBoard.setupTreasurePanel()	null
2017-01-02 22:25:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:25:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:25:07 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:25:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:25:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:25:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:25:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:25:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:25:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:25:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:25:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:25:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:25:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:07 AI_Player.update()	update
2017-01-02 22:25:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:08 AI_Player.update()	Search took179ms
2017-01-02 22:25:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:08 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-02 22:25:08 AI_Player.update()		1100,	1100,	1010,	1010,	110,	1001,	1101
2017-01-02 22:25:08 AI_Player.update()		1110,	110,	1110,	110,	111,	1011,	1011
2017-01-02 22:25:08 AI_Player.update()		1010,	1110,	101,	1010,	1010,	101,	1101
2017-01-02 22:25:08 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-02 22:25:08 AI_Player.update()		110,	1001,	110,	101,	1100,	1010,	110
2017-01-02 22:25:08 AI_Player.update()		1100,	111,	1101,	101,	1101,	1010,	1001
2017-01-02 22:25:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:25:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:25:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:08 AI_Player.update()	update
2017-01-02 22:25:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:08 AI_Player.update()	update
2017-01-02 22:25:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:08 AI_Player.update()	Search took49ms
2017-01-02 22:25:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:08 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-02 22:25:08 AI_Player.update()		1101,	1100,	1100,	1010,	1010,	110,	1001
2017-01-02 22:25:08 AI_Player.update()		1110,	110,	1110,	110,	111,	1011,	1011
2017-01-02 22:25:08 AI_Player.update()		1010,	1110,	101,	1010,	1010,	101,	1101
2017-01-02 22:25:08 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-02 22:25:08 AI_Player.update()		110,	1001,	110,	101,	1100,	1010,	110
2017-01-02 22:25:08 AI_Player.update()		1100,	111,	1101,	101,	1101,	1010,	1001
2017-01-02 22:25:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:08 AI_Player.update()	update
2017-01-02 22:25:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:08 AI_Player.update()	update
2017-01-02 22:25:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:08 AI_Player.update()	Search took34ms
2017-01-02 22:25:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:08 AI_Player.update()		110,	111,	111,	1001,	111,	1010,	11
2017-01-02 22:25:08 AI_Player.update()		1101,	1001,	1100,	1010,	1010,	110,	1001
2017-01-02 22:25:08 AI_Player.update()		1110,	1100,	1110,	110,	111,	1011,	1011
2017-01-02 22:25:08 AI_Player.update()		1010,	110,	101,	1010,	1010,	101,	1101
2017-01-02 22:25:08 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	101,	1011
2017-01-02 22:25:08 AI_Player.update()		110,	11,	110,	101,	1100,	1010,	110
2017-01-02 22:25:08 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-02 22:25:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:08 AI_Player.update()	update
2017-01-02 22:25:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	2 1
2017-01-02 22:25:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:25:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:25:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:25:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:08 AI_Player.update()	update
2017-01-02 22:25:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:09 AI_Player.update()	Search took371ms
2017-01-02 22:25:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:09 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-02 22:25:09 AI_Player.update()		1101,	111,	1100,	1010,	1010,	110,	1001
2017-01-02 22:25:09 AI_Player.update()		1110,	1001,	1110,	110,	111,	1011,	1011
2017-01-02 22:25:09 AI_Player.update()		1010,	1100,	101,	1010,	1010,	101,	1101
2017-01-02 22:25:09 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-02 22:25:09 AI_Player.update()		110,	1110,	110,	101,	1100,	1010,	110
2017-01-02 22:25:09 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-02 22:25:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:09 GameBoard.setupTreasurePanel()	2 1
2017-01-02 22:25:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:09 AI_Player.update()	update
2017-01-02 22:25:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:09 GameBoard.setupTreasurePanel()	2 1
2017-01-02 22:25:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:09 AI_Player.update()	update
2017-01-02 22:25:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:09 AI_Player.update()	Search took73ms
2017-01-02 22:25:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:09 AI_Player.update()		110,	111,	111,	1001,	111,	1010,	11
2017-01-02 22:25:09 AI_Player.update()		1101,	1001,	1100,	1010,	1010,	110,	1001
2017-01-02 22:25:09 AI_Player.update()		1110,	1100,	1110,	110,	111,	1011,	1011
2017-01-02 22:25:09 AI_Player.update()		1010,	110,	101,	1010,	1010,	101,	1101
2017-01-02 22:25:09 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	101,	1011
2017-01-02 22:25:09 AI_Player.update()		110,	11,	110,	101,	1100,	1010,	110
2017-01-02 22:25:09 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-02 22:25:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:09 GameBoard.setupTreasurePanel()	2 1
2017-01-02 22:25:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:09 AI_Player.update()	update
2017-01-02 22:25:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:09 GameBoard.setupTreasurePanel()	2 1
2017-01-02 22:25:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:09 AI_Player.update()	update
2017-01-02 22:25:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:10 AI_Player.update()	Search took338ms
2017-01-02 22:25:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:10 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-02 22:25:10 AI_Player.update()		1101,	111,	1100,	1010,	1010,	110,	1001
2017-01-02 22:25:10 AI_Player.update()		1110,	1001,	1110,	110,	111,	1011,	1011
2017-01-02 22:25:10 AI_Player.update()		1010,	1100,	101,	1010,	1010,	101,	1101
2017-01-02 22:25:10 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-02 22:25:10 AI_Player.update()		110,	1110,	110,	101,	1100,	1010,	110
2017-01-02 22:25:10 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-02 22:25:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	2 1
2017-01-02 22:25:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:10 AI_Player.update()	update
2017-01-02 22:25:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	2 1
2017-01-02 22:25:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:10 AI_Player.update()	update
2017-01-02 22:25:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:10 AI_Player.update()	Search took89ms
2017-01-02 22:25:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:10 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-02 22:25:10 AI_Player.update()		1101,	111,	1100,	1010,	1010,	110,	1001
2017-01-02 22:25:10 AI_Player.update()		1110,	1001,	1110,	110,	111,	1011,	1011
2017-01-02 22:25:10 AI_Player.update()		1101,	1010,	1100,	101,	1010,	1010,	101
2017-01-02 22:25:10 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-02 22:25:10 AI_Player.update()		110,	1110,	110,	101,	1100,	1010,	110
2017-01-02 22:25:10 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-02 22:25:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	2 1
2017-01-02 22:25:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:10 AI_Player.update()	update
2017-01-02 22:25:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	3 1
2017-01-02 22:25:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:25:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:25:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:10 AI_Player.update()	update
2017-01-02 22:25:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:10 AI_Player.update()	Search took172ms
2017-01-02 22:25:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:10 AI_Player.update()		110,	111,	111,	1001,	111,	1010,	11
2017-01-02 22:25:10 AI_Player.update()		1101,	1001,	1100,	1010,	1010,	110,	1001
2017-01-02 22:25:10 AI_Player.update()		1110,	1010,	1110,	110,	111,	1011,	1011
2017-01-02 22:25:10 AI_Player.update()		1101,	110,	1100,	101,	1010,	1010,	101
2017-01-02 22:25:10 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	101,	1011
2017-01-02 22:25:10 AI_Player.update()		110,	11,	110,	101,	1100,	1010,	110
2017-01-02 22:25:10 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-02 22:25:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	3 1
2017-01-02 22:25:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:10 AI_Player.update()	update
2017-01-02 22:25:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	3 1
2017-01-02 22:25:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:10 AI_Player.update()	update
2017-01-02 22:25:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:10 AI_Player.update()	Search took18ms
2017-01-02 22:25:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:10 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-02 22:25:10 AI_Player.update()		1101,	1010,	1100,	1010,	1010,	110,	1001
2017-01-02 22:25:10 AI_Player.update()		1110,	110,	1110,	110,	111,	1011,	1011
2017-01-02 22:25:10 AI_Player.update()		1101,	1110,	1100,	101,	1010,	1010,	101
2017-01-02 22:25:10 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-02 22:25:10 AI_Player.update()		110,	1001,	110,	101,	1100,	1010,	110
2017-01-02 22:25:10 AI_Player.update()		1100,	111,	1101,	101,	1101,	1010,	1001
2017-01-02 22:25:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:10 GameBoard.setupTreasurePanel()	3 1
2017-01-02 22:25:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:11 AI_Player.update()	update
2017-01-02 22:25:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	3 1
2017-01-02 22:25:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:11 AI_Player.update()	update
2017-01-02 22:25:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:11 AI_Player.update()	Search took22ms
2017-01-02 22:25:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:11 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-02 22:25:11 AI_Player.update()		1101,	1010,	1100,	1010,	1010,	110,	1001
2017-01-02 22:25:11 AI_Player.update()		1110,	110,	1110,	110,	111,	1011,	1011
2017-01-02 22:25:11 AI_Player.update()		101,	1101,	1110,	1100,	101,	1010,	1010
2017-01-02 22:25:11 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-02 22:25:11 AI_Player.update()		110,	1001,	110,	101,	1100,	1010,	110
2017-01-02 22:25:11 AI_Player.update()		1100,	111,	1101,	101,	1101,	1010,	1001
2017-01-02 22:25:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	3 1
2017-01-02 22:25:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:11 AI_Player.update()	update
2017-01-02 22:25:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	3 1
2017-01-02 22:25:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:11 AI_Player.update()	update
2017-01-02 22:25:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:11 AI_Player.update()	Search took48ms
2017-01-02 22:25:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:11 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-02 22:25:11 AI_Player.update()		1101,	1010,	1100,	1010,	1010,	110,	1001
2017-01-02 22:25:11 AI_Player.update()		1110,	110,	1110,	110,	111,	1011,	1011
2017-01-02 22:25:11 AI_Player.update()		1010,	101,	1101,	1110,	1100,	101,	1010
2017-01-02 22:25:11 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-02 22:25:11 AI_Player.update()		110,	1001,	110,	101,	1100,	1010,	110
2017-01-02 22:25:11 AI_Player.update()		1100,	111,	1101,	101,	1101,	1010,	1001
2017-01-02 22:25:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	3 1
2017-01-02 22:25:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:11 AI_Player.update()	update
2017-01-02 22:25:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	4 1
2017-01-02 22:25:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:25:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:25:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:11 AI_Player.update()	update
2017-01-02 22:25:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:11 AI_Player.update()	Search took135ms
2017-01-02 22:25:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:11 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-02 22:25:11 AI_Player.update()		1101,	1010,	1100,	1010,	1010,	110,	1001
2017-01-02 22:25:11 AI_Player.update()		1110,	110,	1110,	110,	111,	1011,	1011
2017-01-02 22:25:11 AI_Player.update()		101,	1101,	1110,	1100,	101,	1010,	1010
2017-01-02 22:25:11 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-02 22:25:11 AI_Player.update()		110,	1001,	110,	101,	1100,	1010,	110
2017-01-02 22:25:11 AI_Player.update()		1100,	111,	1101,	101,	1101,	1010,	1001
2017-01-02 22:25:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	4 1
2017-01-02 22:25:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:11 AI_Player.update()	update
2017-01-02 22:25:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:11 GameBoard.setupTreasurePanel()	4 1
2017-01-02 22:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:12 AI_Player.update()	update
2017-01-02 22:25:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:12 AI_Player.update()	Search took180ms
2017-01-02 22:25:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:12 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-02 22:25:12 AI_Player.update()		1101,	110,	1100,	1010,	1010,	110,	1001
2017-01-02 22:25:12 AI_Player.update()		1110,	1101,	1110,	110,	111,	1011,	1011
2017-01-02 22:25:12 AI_Player.update()		101,	11,	1110,	1100,	101,	1010,	1010
2017-01-02 22:25:12 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-02 22:25:12 AI_Player.update()		110,	111,	110,	101,	1100,	1010,	110
2017-01-02 22:25:12 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-02 22:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	4 1
2017-01-02 22:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:12 AI_Player.update()	update
2017-01-02 22:25:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	4 1
2017-01-02 22:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:12 AI_Player.update()	update
2017-01-02 22:25:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:12 AI_Player.update()	Search took69ms
2017-01-02 22:25:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:12 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-02 22:25:12 AI_Player.update()		1101,	110,	1100,	110,	1010,	110,	1001
2017-01-02 22:25:12 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1011,	1011
2017-01-02 22:25:12 AI_Player.update()		101,	11,	1110,	1001,	101,	1010,	1010
2017-01-02 22:25:12 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-02 22:25:12 AI_Player.update()		110,	111,	110,	101,	1100,	1010,	110
2017-01-02 22:25:12 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	4 1
2017-01-02 22:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:12 AI_Player.update()	update
2017-01-02 22:25:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	4 2
2017-01-02 22:25:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:25:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:12 AI_Player.update()	update
2017-01-02 22:25:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:12 AI_Player.update()	Search took97ms
2017-01-02 22:25:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:12 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-02 22:25:12 AI_Player.update()		1101,	110,	1100,	1100,	1010,	110,	1001
2017-01-02 22:25:12 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1011,	1011
2017-01-02 22:25:12 AI_Player.update()		101,	11,	1110,	101,	101,	1010,	1010
2017-01-02 22:25:12 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-02 22:25:12 AI_Player.update()		110,	111,	110,	1001,	1100,	1010,	110
2017-01-02 22:25:12 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	4 2
2017-01-02 22:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:12 AI_Player.update()	update
2017-01-02 22:25:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:12 GameBoard.setupTreasurePanel()	4 2
2017-01-02 22:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:12 AI_Player.update()	update
2017-01-02 22:25:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:13 AI_Player.update()	Search took103ms
2017-01-02 22:25:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:13 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-02 22:25:13 AI_Player.update()		1101,	1101,	1100,	1100,	1010,	110,	1001
2017-01-02 22:25:13 AI_Player.update()		1110,	11,	1110,	1001,	111,	1011,	1011
2017-01-02 22:25:13 AI_Player.update()		101,	1001,	1110,	101,	101,	1010,	1010
2017-01-02 22:25:13 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-02 22:25:13 AI_Player.update()		110,	1001,	110,	1001,	1100,	1010,	110
2017-01-02 22:25:13 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:25:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	4 2
2017-01-02 22:25:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:13 AI_Player.update()	update
2017-01-02 22:25:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	4 2
2017-01-02 22:25:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:13 AI_Player.update()	update
2017-01-02 22:25:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:13 AI_Player.update()	Search took320ms
2017-01-02 22:25:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:13 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-02 22:25:13 AI_Player.update()		1101,	1100,	1100,	1010,	110,	1001,	1101
2017-01-02 22:25:13 AI_Player.update()		1110,	11,	1110,	1001,	111,	1011,	1011
2017-01-02 22:25:13 AI_Player.update()		101,	1001,	1110,	101,	101,	1010,	1010
2017-01-02 22:25:13 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-02 22:25:13 AI_Player.update()		110,	1001,	110,	1001,	1100,	1010,	110
2017-01-02 22:25:13 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:25:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	4 2
2017-01-02 22:25:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:13 AI_Player.update()	update
2017-01-02 22:25:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	5 2
2017-01-02 22:25:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:25:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:25:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:25:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:13 AI_Player.update()	update
2017-01-02 22:25:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:14 AI_Player.update()	Search took335ms
2017-01-02 22:25:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:14 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-02 22:25:14 AI_Player.update()		1101,	1100,	1100,	1010,	110,	1011,	1101
2017-01-02 22:25:14 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-02 22:25:14 AI_Player.update()		101,	1001,	1110,	101,	101,	101,	1010
2017-01-02 22:25:14 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-02 22:25:14 AI_Player.update()		110,	1001,	110,	1001,	1100,	1010,	110
2017-01-02 22:25:14 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:25:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	5 2
2017-01-02 22:25:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:14 AI_Player.update()	update
2017-01-02 22:25:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	5 2
2017-01-02 22:25:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:14 AI_Player.update()	update
2017-01-02 22:25:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:14 AI_Player.update()	Search took355ms
2017-01-02 22:25:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:14 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-02 22:25:14 AI_Player.update()		1101,	1100,	1100,	1010,	110,	1011,	1101
2017-01-02 22:25:14 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-02 22:25:14 AI_Player.update()		1001,	1110,	101,	101,	101,	1010,	101
2017-01-02 22:25:14 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-02 22:25:14 AI_Player.update()		110,	1001,	110,	1001,	1100,	1010,	110
2017-01-02 22:25:14 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:25:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	5 2
2017-01-02 22:25:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:14 AI_Player.update()	update
2017-01-02 22:25:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	6 2
2017-01-02 22:25:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:25:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:25:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:25:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:14 AI_Player.update()	update
2017-01-02 22:25:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:15 AI_Player.update()	Search took166ms
2017-01-02 22:25:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:15 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-02 22:25:15 AI_Player.update()		1101,	1100,	1100,	1010,	110,	1011,	1101
2017-01-02 22:25:15 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-02 22:25:15 AI_Player.update()		1110,	101,	101,	101,	1010,	101,	1001
2017-01-02 22:25:15 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-02 22:25:15 AI_Player.update()		110,	1001,	110,	1001,	1100,	1010,	110
2017-01-02 22:25:15 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:25:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:15 GameBoard.setupTreasurePanel()	6 2
2017-01-02 22:25:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:15 AI_Player.update()	update
2017-01-02 22:25:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:15 GameBoard.setupTreasurePanel()	6 2
2017-01-02 22:25:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:15 AI_Player.update()	update
2017-01-02 22:25:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:15 AI_Player.update()	Search took92ms
2017-01-02 22:25:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:15 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-02 22:25:15 AI_Player.update()		1100,	1100,	1010,	110,	1011,	1101,	1101
2017-01-02 22:25:15 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-02 22:25:15 AI_Player.update()		1110,	101,	101,	101,	1010,	101,	1001
2017-01-02 22:25:15 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-02 22:25:15 AI_Player.update()		110,	1001,	110,	1001,	1100,	1010,	110
2017-01-02 22:25:15 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:25:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:15 GameBoard.setupTreasurePanel()	6 2
2017-01-02 22:25:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:15 AI_Player.update()	update
2017-01-02 22:25:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:15 GameBoard.setupTreasurePanel()	6 2
2017-01-02 22:25:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:15 AI_Player.update()	update
2017-01-02 22:25:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:15 AI_Player.update()	Search took381ms
2017-01-02 22:25:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:15 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-02 22:25:15 AI_Player.update()		1100,	1100,	1010,	110,	1011,	1101,	1101
2017-01-02 22:25:15 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-02 22:25:15 AI_Player.update()		101,	101,	101,	1010,	101,	1001,	1110
2017-01-02 22:25:15 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-02 22:25:15 AI_Player.update()		110,	1001,	110,	1001,	1100,	1010,	110
2017-01-02 22:25:15 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:25:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:16 GameBoard.setupTreasurePanel()	6 2
2017-01-02 22:25:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:16 AI_Player.update()	update
2017-01-02 22:25:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:16 GameBoard.setupTreasurePanel()	6 2
2017-01-02 22:25:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:16 AI_Player.update()	update
2017-01-02 22:25:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:16 AI_Player.update()	Search took185ms
2017-01-02 22:25:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:16 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-02 22:25:16 AI_Player.update()		1100,	1010,	110,	1011,	1101,	1101,	1100
2017-01-02 22:25:16 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-02 22:25:16 AI_Player.update()		101,	101,	101,	1010,	101,	1001,	1110
2017-01-02 22:25:16 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-02 22:25:16 AI_Player.update()		110,	1001,	110,	1001,	1100,	1010,	110
2017-01-02 22:25:16 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:25:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:16 GameBoard.setupTreasurePanel()	6 2
2017-01-02 22:25:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:16 AI_Player.update()	update
2017-01-02 22:25:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:16 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-02 22:25:16 AI_Player.update()	Player a has won!
2017-01-02 22:25:17 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-02 22:25:17 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-02 22:25:17 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-02 22:25:17 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-02 22:25:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:17 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:25:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:25:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:25:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:25:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:25:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:25:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:25:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:25:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:25:17 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:25:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:25:17 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:25:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:17 AI_Player.update()	update
2017-01-02 22:25:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:18 AI_Player.update()	Search took342ms
2017-01-02 22:25:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:18 AI_Player.update()		110,	111,	111,	110,	111,	101,	11
2017-01-02 22:25:18 AI_Player.update()		1110,	1010,	101,	1100,	1001,	110,	1100
2017-01-02 22:25:18 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-02 22:25:18 AI_Player.update()		1001,	101,	1110,	101,	1001,	1101,	1101
2017-01-02 22:25:18 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:25:18 AI_Player.update()		1010,	1001,	101,	101,	1011,	1010,	1110
2017-01-02 22:25:18 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-02 22:25:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:18 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:18 AI_Player.update()	update
2017-01-02 22:25:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:18 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:18 AI_Player.update()	update
2017-01-02 22:25:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:18 AI_Player.update()	Search took165ms
2017-01-02 22:25:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:18 AI_Player.update()		110,	111,	111,	110,	111,	101,	11
2017-01-02 22:25:18 AI_Player.update()		1010,	101,	1100,	1001,	110,	1100,	1110
2017-01-02 22:25:18 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-02 22:25:18 AI_Player.update()		1001,	101,	1110,	101,	1001,	1101,	1101
2017-01-02 22:25:18 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:25:18 AI_Player.update()		1010,	1001,	101,	101,	1011,	1010,	1110
2017-01-02 22:25:18 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-02 22:25:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:18 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:18 AI_Player.update()	update
2017-01-02 22:25:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:18 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:18 AI_Player.update()	update
2017-01-02 22:25:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:18 AI_Player.update()	Search took138ms
2017-01-02 22:25:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:18 AI_Player.update()		110,	111,	111,	110,	111,	101,	11
2017-01-02 22:25:18 AI_Player.update()		1010,	101,	1100,	1001,	110,	1100,	1110
2017-01-02 22:25:18 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-02 22:25:18 AI_Player.update()		101,	1110,	101,	1001,	1101,	1101,	1001
2017-01-02 22:25:18 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:25:18 AI_Player.update()		1010,	1001,	101,	101,	1011,	1010,	1110
2017-01-02 22:25:18 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-02 22:25:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:18 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:18 AI_Player.update()	update
2017-01-02 22:25:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:18 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:18 AI_Player.update()	update
2017-01-02 22:25:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:19 AI_Player.update()	Search took383ms
2017-01-02 22:25:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:19 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-02 22:25:19 AI_Player.update()		1010,	1010,	1100,	1001,	110,	1100,	1110
2017-01-02 22:25:19 AI_Player.update()		1110,	1110,	1110,	110,	111,	1001,	1011
2017-01-02 22:25:19 AI_Player.update()		101,	1001,	101,	1001,	1101,	1101,	1001
2017-01-02 22:25:19 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:25:19 AI_Player.update()		1010,	11,	101,	101,	1011,	1010,	1110
2017-01-02 22:25:19 AI_Player.update()		1100,	111,	1101,	1100,	1101,	1010,	1001
2017-01-02 22:25:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:19 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:25:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:19 AI_Player.update()	update
2017-01-02 22:25:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:19 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:25:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:25:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:25:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:25:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:25:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:25:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:25:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:25:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:25:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:25:19 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:25:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:25:19 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:25:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:19 AI_Player.update()	update
2017-01-02 22:25:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:19 AI_Player.update()	Search took364ms
2017-01-02 22:25:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:19 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-02 22:25:19 AI_Player.update()		1010,	1010,	1100,	110,	110,	1100,	1110
2017-01-02 22:25:19 AI_Player.update()		1110,	1110,	1110,	1001,	111,	1001,	1011
2017-01-02 22:25:19 AI_Player.update()		101,	1001,	101,	1010,	1101,	1101,	1001
2017-01-02 22:25:19 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-02 22:25:19 AI_Player.update()		1010,	11,	101,	1100,	1011,	1010,	1110
2017-01-02 22:25:19 AI_Player.update()		1100,	111,	1101,	110,	1101,	1010,	1001
2017-01-02 22:25:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:19 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:25:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:20 AI_Player.update()	update
2017-01-02 22:25:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:25:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:25:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:20 AI_Player.update()	update
2017-01-02 22:25:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:20 AI_Player.update()	Search took117ms
2017-01-02 22:25:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:20 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-02 22:25:20 AI_Player.update()		1010,	1010,	1100,	1001,	110,	1100,	1110
2017-01-02 22:25:20 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-02 22:25:20 AI_Player.update()		101,	1001,	101,	101,	1101,	1101,	1001
2017-01-02 22:25:20 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:25:20 AI_Player.update()		1010,	11,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:20 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:20 AI_Player.update()	update
2017-01-02 22:25:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:20 AI_Player.update()	update
2017-01-02 22:25:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:20 AI_Player.update()	Search took57ms
2017-01-02 22:25:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:20 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-02 22:25:20 AI_Player.update()		1010,	1010,	1100,	1010,	110,	1100,	1110
2017-01-02 22:25:20 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-02 22:25:20 AI_Player.update()		101,	1001,	101,	1100,	1101,	1101,	1001
2017-01-02 22:25:20 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1010,	1011
2017-01-02 22:25:20 AI_Player.update()		1010,	11,	101,	1001,	1011,	1010,	1110
2017-01-02 22:25:20 AI_Player.update()		1100,	111,	1101,	110,	1101,	1010,	1001
2017-01-02 22:25:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:20 AI_Player.update()	update
2017-01-02 22:25:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:20 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:20 AI_Player.update()	update
2017-01-02 22:25:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:21 AI_Player.update()	Search took417ms
2017-01-02 22:25:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:21 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-02 22:25:21 AI_Player.update()		1110,	1010,	1010,	1100,	1010,	110,	1100
2017-01-02 22:25:21 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-02 22:25:21 AI_Player.update()		101,	1001,	101,	1100,	1101,	1101,	1001
2017-01-02 22:25:21 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1010,	1011
2017-01-02 22:25:21 AI_Player.update()		1010,	11,	101,	1001,	1011,	1010,	1110
2017-01-02 22:25:21 AI_Player.update()		1100,	111,	1101,	110,	1101,	1010,	1001
2017-01-02 22:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:21 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:21 AI_Player.update()	update
2017-01-02 22:25:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:21 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:21 AI_Player.update()	update
2017-01-02 22:25:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:21 AI_Player.update()	Search took455ms
2017-01-02 22:25:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:21 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-02 22:25:21 AI_Player.update()		1110,	1010,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:21 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:21 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:21 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:21 AI_Player.update()		1010,	11,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:21 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:21 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:21 AI_Player.update()	update
2017-01-02 22:25:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:21 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:21 AI_Player.update()	update
2017-01-02 22:25:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:22 AI_Player.update()	Search took310ms
2017-01-02 22:25:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:22 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-02 22:25:22 AI_Player.update()		1110,	1110,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:22 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:22 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:22 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:22 AI_Player.update()		1010,	111,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:22 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:22 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:22 AI_Player.update()	update
2017-01-02 22:25:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:22 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:22 AI_Player.update()	update
2017-01-02 22:25:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:22 AI_Player.update()	Search took289ms
2017-01-02 22:25:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:22 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-02 22:25:22 AI_Player.update()		1110,	1010,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:22 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:22 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:22 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:22 AI_Player.update()		1010,	11,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:22 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:22 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:22 AI_Player.update()	update
2017-01-02 22:25:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:22 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:23 AI_Player.update()	update
2017-01-02 22:25:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:23 AI_Player.update()	Search took313ms
2017-01-02 22:25:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:23 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-02 22:25:23 AI_Player.update()		1110,	1110,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:23 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:23 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:23 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:23 AI_Player.update()		1010,	111,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:23 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:23 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:23 AI_Player.update()	update
2017-01-02 22:25:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:23 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:23 AI_Player.update()	update
2017-01-02 22:25:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:23 AI_Player.update()	Search took311ms
2017-01-02 22:25:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:23 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-02 22:25:23 AI_Player.update()		1110,	1010,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:23 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:23 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:23 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:23 AI_Player.update()		1010,	11,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:23 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:23 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:23 AI_Player.update()	update
2017-01-02 22:25:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:23 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:24 AI_Player.update()	update
2017-01-02 22:25:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:24 AI_Player.update()	Search took314ms
2017-01-02 22:25:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:24 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-02 22:25:24 AI_Player.update()		1110,	1110,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:24 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:24 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:24 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:24 AI_Player.update()		1010,	111,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:24 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:24 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:24 AI_Player.update()	update
2017-01-02 22:25:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:24 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:24 AI_Player.update()	update
2017-01-02 22:25:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:24 AI_Player.update()	Search took276ms
2017-01-02 22:25:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:24 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-02 22:25:24 AI_Player.update()		1110,	1010,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:24 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:24 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:24 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:24 AI_Player.update()		1010,	11,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:24 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:24 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:24 AI_Player.update()	update
2017-01-02 22:25:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:24 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:25 AI_Player.update()	update
2017-01-02 22:25:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:25 AI_Player.update()	Search took314ms
2017-01-02 22:25:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:25 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-02 22:25:25 AI_Player.update()		1110,	1110,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:25 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:25 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:25 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:25 AI_Player.update()		1010,	111,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:25 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:25 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:25 AI_Player.update()	update
2017-01-02 22:25:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:25 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:25 AI_Player.update()	update
2017-01-02 22:25:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:25 AI_Player.update()	Search took315ms
2017-01-02 22:25:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:25 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-02 22:25:25 AI_Player.update()		1110,	1010,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:25 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:25 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:25 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:25 AI_Player.update()		1010,	11,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:25 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:25 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:25 AI_Player.update()	update
2017-01-02 22:25:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:25 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:26 AI_Player.update()	update
2017-01-02 22:25:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:26 AI_Player.update()	Search took317ms
2017-01-02 22:25:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:26 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-02 22:25:26 AI_Player.update()		1110,	1110,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:26 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:26 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:26 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:26 AI_Player.update()		1010,	111,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:26 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:26 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:26 AI_Player.update()	update
2017-01-02 22:25:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:26 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:26 AI_Player.update()	update
2017-01-02 22:25:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:26 AI_Player.update()	Search took276ms
2017-01-02 22:25:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:26 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-02 22:25:26 AI_Player.update()		1110,	1010,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:26 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:26 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:26 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:26 AI_Player.update()		1010,	11,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:26 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:26 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:26 AI_Player.update()	update
2017-01-02 22:25:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:26 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:27 AI_Player.update()	update
2017-01-02 22:25:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:27 AI_Player.update()	Search took308ms
2017-01-02 22:25:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:27 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-02 22:25:27 AI_Player.update()		1110,	1110,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:27 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:27 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:27 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:27 AI_Player.update()		1010,	111,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:27 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:27 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:27 AI_Player.update()	update
2017-01-02 22:25:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:27 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:27 AI_Player.update()	update
2017-01-02 22:25:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:27 AI_Player.update()	Search took326ms
2017-01-02 22:25:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:27 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-02 22:25:27 AI_Player.update()		1110,	1010,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:27 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:27 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:27 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:27 AI_Player.update()		1010,	11,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:27 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:27 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:28 AI_Player.update()	update
2017-01-02 22:25:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:28 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:28 AI_Player.update()	update
2017-01-02 22:25:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:28 AI_Player.update()	Search took327ms
2017-01-02 22:25:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:28 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-02 22:25:28 AI_Player.update()		1110,	1110,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:28 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:28 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:28 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:28 AI_Player.update()		1010,	111,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:28 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:28 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:28 AI_Player.update()	update
2017-01-02 22:25:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:28 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:28 AI_Player.update()	update
2017-01-02 22:25:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:28 AI_Player.update()	Search took281ms
2017-01-02 22:25:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:28 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-02 22:25:28 AI_Player.update()		1110,	1010,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:28 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:28 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:28 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:28 AI_Player.update()		1010,	11,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:28 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:28 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:29 AI_Player.update()	update
2017-01-02 22:25:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:29 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:29 AI_Player.update()	update
2017-01-02 22:25:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:29 AI_Player.update()	Search took328ms
2017-01-02 22:25:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:29 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-02 22:25:29 AI_Player.update()		1110,	1110,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:29 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:29 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:29 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:29 AI_Player.update()		1010,	111,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:29 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:29 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:29 AI_Player.update()	update
2017-01-02 22:25:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:29 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:29 AI_Player.update()	update
2017-01-02 22:25:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:30 AI_Player.update()	Search took313ms
2017-01-02 22:25:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:30 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-02 22:25:30 AI_Player.update()		1110,	1010,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:30 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:30 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:30 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:30 AI_Player.update()		1010,	11,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:30 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:30 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:30 AI_Player.update()	update
2017-01-02 22:25:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:30 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:30 AI_Player.update()	update
2017-01-02 22:25:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:30 AI_Player.update()	Search took313ms
2017-01-02 22:25:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:30 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-02 22:25:30 AI_Player.update()		1110,	1110,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:30 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:30 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:30 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:30 AI_Player.update()		1010,	111,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:30 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:30 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:30 AI_Player.update()	update
2017-01-02 22:25:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:30 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:30 AI_Player.update()	update
2017-01-02 22:25:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:31 AI_Player.update()	Search took284ms
2017-01-02 22:25:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:31 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-02 22:25:31 AI_Player.update()		1110,	1010,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:31 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:31 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:31 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:31 AI_Player.update()		1010,	11,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:31 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:31 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:31 AI_Player.update()	update
2017-01-02 22:25:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:25:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:25:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:25:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:25:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:31 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:31 AI_Player.update()	update
2017-01-02 22:25:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:25:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:25:31 AI_Player.update()	Search took362ms
2017-01-02 22:25:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:31 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-02 22:25:31 AI_Player.update()		1110,	1110,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:31 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:31 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:31 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:31 AI_Player.update()		1010,	111,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:31 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:31 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:31 AI_Player.update()	update
2017-01-02 22:25:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:25:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:25:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:25:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:25:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:31 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:25:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:25:31 AI_Player.update()	update
2017-01-02 22:25:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:25:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:25:32 AI_Player.update()	Search took333ms
2017-01-02 22:25:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:32 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-02 22:25:32 AI_Player.update()		1110,	1010,	1010,	101,	1010,	110,	1100
2017-01-02 22:25:32 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-02 22:25:32 AI_Player.update()		101,	1001,	101,	110,	1101,	1101,	1001
2017-01-02 22:25:32 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:25:32 AI_Player.update()		1010,	11,	101,	110,	1011,	1010,	1110
2017-01-02 22:25:32 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-02 22:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:25:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:25:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:25:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:25:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:25:32 GameBoard.setupTreasurePanel()	2 2
