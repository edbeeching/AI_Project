2017-01-05 12:16:20 GameBoard.<init>()	Hello World!
2017-01-05 12:16:20 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-05 12:16:20 QueryProlog.initialise()	setup(h3/h4). suceeded
2017-01-05 12:16:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:20 GameBoard.setupBoardFromString()	Board created
2017-01-05 12:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:20 GameBoard.initialise()	[helmet, fairy, gem, map, candle]
2017-01-05 12:16:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:20 GameBoard.initialise()	[gold, crown, chest, keys, book]
2017-01-05 12:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:20 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-05 12:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	null
2017-01-05 12:16:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:20 AI_Player.update()	update
2017-01-05 12:16:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:20 AI_Player.update()	Search took10ms
2017-01-05 12:16:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:20 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 12:16:20 AI_Player.update()		101,	101,	1010,	11,	101,	110,	101
2017-01-05 12:16:20 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 12:16:20 AI_Player.update()		1010,	1100,	101,	110,	1010,	1001,	1001
2017-01-05 12:16:20 AI_Player.update()		1110,	111,	1101,	1110,	1011,	101,	1011
2017-01-05 12:16:20 AI_Player.update()		101,	1110,	1110,	1101,	1010,	11,	1101
2017-01-05 12:16:20 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-05 12:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:20 AI_Player.update()	update
2017-01-05 12:16:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:21 AI_Player.update()	update
2017-01-05 12:16:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:21 AI_Player.update()	Search took95ms
2017-01-05 12:16:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:21 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 12:16:21 AI_Player.update()		101,	101,	1010,	11,	101,	1010,	101
2017-01-05 12:16:21 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-05 12:16:21 AI_Player.update()		1010,	1100,	101,	110,	1010,	101,	1001
2017-01-05 12:16:21 AI_Player.update()		1110,	111,	1101,	1110,	1011,	11,	1011
2017-01-05 12:16:21 AI_Player.update()		101,	1110,	1110,	1101,	1010,	11,	1101
2017-01-05 12:16:21 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-05 12:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:21 AI_Player.update()	update
2017-01-05 12:16:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:21 AI_Player.update()	update
2017-01-05 12:16:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:21 AI_Player.update()	Search took31ms
2017-01-05 12:16:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:21 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 12:16:21 AI_Player.update()		101,	101,	1010,	11,	101,	1010,	101
2017-01-05 12:16:21 AI_Player.update()		1110,	1100,	1110,	11,	111,	1001,	1011
2017-01-05 12:16:21 AI_Player.update()		1010,	111,	101,	110,	1010,	101,	1001
2017-01-05 12:16:21 AI_Player.update()		1110,	1110,	1101,	1110,	1011,	11,	1011
2017-01-05 12:16:21 AI_Player.update()		101,	1010,	1110,	1101,	1010,	11,	1101
2017-01-05 12:16:21 AI_Player.update()		1100,	110,	1101,	111,	1101,	1001,	1001
2017-01-05 12:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:21 AI_Player.update()	update
2017-01-05 12:16:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:21 AI_Player.update()	update
2017-01-05 12:16:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:22 AI_Player.update()	Search took429ms
2017-01-05 12:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-05 12:16:22 AI_Player.update()		101,	101,	1010,	11,	101,	1001,	101
2017-01-05 12:16:22 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-05 12:16:22 AI_Player.update()		1010,	111,	101,	110,	1010,	11,	1001
2017-01-05 12:16:22 AI_Player.update()		1110,	1110,	1101,	1110,	1011,	11,	1011
2017-01-05 12:16:22 AI_Player.update()		101,	1010,	1110,	1101,	1010,	1001,	1101
2017-01-05 12:16:22 AI_Player.update()		1100,	110,	1101,	111,	1101,	110,	1001
2017-01-05 12:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:22 AI_Player.update()	update
2017-01-05 12:16:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	1 2
2017-01-05 12:16:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:22 AI_Player.update()	update
2017-01-05 12:16:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:22 AI_Player.update()	Search took138ms
2017-01-05 12:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-05 12:16:22 AI_Player.update()		101,	1100,	1010,	11,	101,	1001,	101
2017-01-05 12:16:22 AI_Player.update()		1110,	111,	1110,	11,	111,	101,	1011
2017-01-05 12:16:22 AI_Player.update()		1010,	1110,	101,	110,	1010,	11,	1001
2017-01-05 12:16:22 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	11,	1011
2017-01-05 12:16:22 AI_Player.update()		101,	110,	1110,	1101,	1010,	1001,	1101
2017-01-05 12:16:22 AI_Player.update()		1100,	101,	1101,	111,	1101,	110,	1001
2017-01-05 12:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	1 2
2017-01-05 12:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:22 AI_Player.update()	update
2017-01-05 12:16:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	2 2
2017-01-05 12:16:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:22 AI_Player.update()	update
2017-01-05 12:16:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:22 AI_Player.update()	Search took342ms
2017-01-05 12:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:22 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-05 12:16:22 AI_Player.update()		101,	111,	1010,	11,	101,	1001,	101
2017-01-05 12:16:22 AI_Player.update()		1110,	1110,	1110,	11,	111,	101,	1011
2017-01-05 12:16:22 AI_Player.update()		1010,	1010,	101,	110,	1010,	11,	1001
2017-01-05 12:16:22 AI_Player.update()		1110,	110,	1101,	1110,	1011,	11,	1011
2017-01-05 12:16:22 AI_Player.update()		101,	101,	1110,	1101,	1010,	1001,	1101
2017-01-05 12:16:22 AI_Player.update()		1100,	101,	1101,	111,	1101,	110,	1001
2017-01-05 12:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:22 GameBoard.setupTreasurePanel()	2 2
2017-01-05 12:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:23 AI_Player.update()	update
2017-01-05 12:16:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:23 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:23 AI_Player.update()	update
2017-01-05 12:16:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:23 AI_Player.update()	Search took443ms
2017-01-05 12:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:23 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 12:16:23 AI_Player.update()		101,	111,	1010,	11,	101,	1001,	101
2017-01-05 12:16:23 AI_Player.update()		1110,	1110,	1110,	110,	111,	101,	1011
2017-01-05 12:16:23 AI_Player.update()		1010,	1010,	101,	1110,	1010,	11,	1001
2017-01-05 12:16:23 AI_Player.update()		1110,	110,	1101,	1101,	1011,	11,	1011
2017-01-05 12:16:23 AI_Player.update()		101,	101,	1110,	111,	1010,	1001,	1101
2017-01-05 12:16:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 12:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:23 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:23 AI_Player.update()	update
2017-01-05 12:16:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:23 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:23 AI_Player.update()	update
2017-01-05 12:16:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:24 AI_Player.update()	Search took486ms
2017-01-05 12:16:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:24 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 12:16:24 AI_Player.update()		101,	111,	1010,	11,	101,	1001,	101
2017-01-05 12:16:24 AI_Player.update()		1110,	1110,	1110,	110,	111,	101,	1011
2017-01-05 12:16:24 AI_Player.update()		1010,	1010,	101,	1110,	1010,	11,	1001
2017-01-05 12:16:24 AI_Player.update()		1110,	110,	1101,	1101,	1011,	11,	1011
2017-01-05 12:16:24 AI_Player.update()		101,	1110,	111,	1010,	1001,	1101,	101
2017-01-05 12:16:24 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 12:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:24 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:24 AI_Player.update()	update
2017-01-05 12:16:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:24 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:24 AI_Player.update()	update
2017-01-05 12:16:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:25 AI_Player.update()	Search took575ms
2017-01-05 12:16:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:25 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 12:16:25 AI_Player.update()		101,	111,	1010,	11,	101,	1001,	101
2017-01-05 12:16:25 AI_Player.update()		1110,	1110,	1110,	110,	111,	101,	1011
2017-01-05 12:16:25 AI_Player.update()		1010,	101,	1110,	1010,	11,	1001,	1010
2017-01-05 12:16:25 AI_Player.update()		1110,	110,	1101,	1101,	1011,	11,	1011
2017-01-05 12:16:25 AI_Player.update()		101,	1110,	111,	1010,	1001,	1101,	101
2017-01-05 12:16:25 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 12:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:25 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:25 AI_Player.update()	update
2017-01-05 12:16:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:25 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:25 AI_Player.update()	update
2017-01-05 12:16:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:25 AI_Player.update()	Search took108ms
2017-01-05 12:16:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:25 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 12:16:25 AI_Player.update()		101,	111,	1010,	110,	101,	1001,	101
2017-01-05 12:16:25 AI_Player.update()		1110,	1110,	1110,	1010,	111,	101,	1011
2017-01-05 12:16:25 AI_Player.update()		1010,	101,	1110,	1101,	11,	1001,	1010
2017-01-05 12:16:25 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:25 AI_Player.update()		101,	1110,	111,	1010,	1001,	1101,	101
2017-01-05 12:16:25 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:25 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:25 AI_Player.update()	update
2017-01-05 12:16:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:25 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:25 AI_Player.update()	update
2017-01-05 12:16:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:25 AI_Player.update()	Search took228ms
2017-01-05 12:16:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:25 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-05 12:16:25 AI_Player.update()		101,	1110,	1010,	110,	101,	1001,	101
2017-01-05 12:16:25 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 12:16:25 AI_Player.update()		1010,	110,	1110,	1101,	11,	1001,	1010
2017-01-05 12:16:25 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:25 AI_Player.update()		101,	101,	111,	1010,	1001,	1101,	101
2017-01-05 12:16:25 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:25 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:25 AI_Player.update()	update
2017-01-05 12:16:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:25 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:26 AI_Player.update()	update
2017-01-05 12:16:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:26 AI_Player.update()	Search took90ms
2017-01-05 12:16:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:26 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-05 12:16:26 AI_Player.update()		101,	1110,	1010,	110,	101,	1001,	101
2017-01-05 12:16:26 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 12:16:26 AI_Player.update()		110,	1110,	1101,	11,	1001,	1010,	1010
2017-01-05 12:16:26 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:26 AI_Player.update()		101,	101,	111,	1010,	1001,	1101,	101
2017-01-05 12:16:26 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:26 AI_Player.update()	update
2017-01-05 12:16:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:26 AI_Player.update()	update
2017-01-05 12:16:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:26 AI_Player.update()	Search took30ms
2017-01-05 12:16:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:26 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-05 12:16:26 AI_Player.update()		101,	1110,	1010,	110,	101,	1001,	101
2017-01-05 12:16:26 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 12:16:26 AI_Player.update()		1010,	110,	1110,	1101,	11,	1001,	1010
2017-01-05 12:16:26 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:26 AI_Player.update()		101,	101,	111,	1010,	1001,	1101,	101
2017-01-05 12:16:26 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:26 AI_Player.update()	update
2017-01-05 12:16:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:26 AI_Player.update()	update
2017-01-05 12:16:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:26 AI_Player.update()	Search took95ms
2017-01-05 12:16:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:26 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-05 12:16:26 AI_Player.update()		101,	1110,	1010,	110,	101,	1001,	101
2017-01-05 12:16:26 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 12:16:26 AI_Player.update()		1010,	110,	1110,	1101,	11,	1001,	1010
2017-01-05 12:16:26 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:26 AI_Player.update()		101,	101,	101,	111,	1010,	1001,	1101
2017-01-05 12:16:26 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	2 3
2017-01-05 12:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:26 AI_Player.update()	update
2017-01-05 12:16:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	2 4
2017-01-05 12:16:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:26 AI_Player.update()	update
2017-01-05 12:16:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:27 AI_Player.update()	Search took280ms
2017-01-05 12:16:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:27 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-05 12:16:27 AI_Player.update()		101,	1110,	1010,	110,	101,	1001,	101
2017-01-05 12:16:27 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 12:16:27 AI_Player.update()		1010,	1010,	110,	1110,	1101,	11,	1001
2017-01-05 12:16:27 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:27 AI_Player.update()		101,	101,	101,	111,	1010,	1001,	1101
2017-01-05 12:16:27 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	2 4
2017-01-05 12:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:27 AI_Player.update()	update
2017-01-05 12:16:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	3 4
2017-01-05 12:16:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:27 AI_Player.update()	update
2017-01-05 12:16:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:27 AI_Player.update()	Search took191ms
2017-01-05 12:16:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:27 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-05 12:16:27 AI_Player.update()		101,	1110,	1010,	110,	101,	1001,	101
2017-01-05 12:16:27 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 12:16:27 AI_Player.update()		1010,	110,	1110,	1101,	11,	1001,	1010
2017-01-05 12:16:27 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:27 AI_Player.update()		101,	101,	101,	111,	1010,	1001,	1101
2017-01-05 12:16:27 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	3 4
2017-01-05 12:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:27 AI_Player.update()	update
2017-01-05 12:16:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:16:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:27 AI_Player.update()	update
2017-01-05 12:16:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:27 AI_Player.update()	Search took148ms
2017-01-05 12:16:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:27 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 12:16:27 AI_Player.update()		101,	101,	1010,	110,	101,	1001,	101
2017-01-05 12:16:27 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-05 12:16:27 AI_Player.update()		1010,	1110,	1110,	1101,	11,	1001,	1010
2017-01-05 12:16:27 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:27 AI_Player.update()		101,	1100,	101,	111,	1010,	1001,	1101
2017-01-05 12:16:27 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:27 GameBoard.setupTreasurePanel()	3 5
2017-01-05 12:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:28 AI_Player.update()	update
2017-01-05 12:16:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:28 GameBoard.setupTreasurePanel()	4 5
2017-01-05 12:16:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:28 AI_Player.update()	update
2017-01-05 12:16:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:28 AI_Player.update()	Search took752ms
2017-01-05 12:16:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:28 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 12:16:28 AI_Player.update()		101,	101,	1010,	110,	101,	1001,	101
2017-01-05 12:16:28 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-05 12:16:28 AI_Player.update()		1010,	1110,	1110,	1101,	11,	1001,	1010
2017-01-05 12:16:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:28 AI_Player.update()		1100,	101,	111,	1010,	1001,	1101,	101
2017-01-05 12:16:28 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:28 GameBoard.setupTreasurePanel()	4 5
2017-01-05 12:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:29 AI_Player.update()	update
2017-01-05 12:16:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:29 GameBoard.setupTreasurePanel()	4 6
2017-01-05 12:16:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:29 AI_Player.update()	update
2017-01-05 12:16:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:30 AI_Player.update()	Search took889ms
2017-01-05 12:16:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:30 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 12:16:30 AI_Player.update()		101,	101,	1010,	110,	101,	1001,	101
2017-01-05 12:16:30 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-05 12:16:30 AI_Player.update()		1010,	1110,	1110,	1101,	11,	1001,	1010
2017-01-05 12:16:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:30 AI_Player.update()		101,	1100,	101,	111,	1010,	1001,	1101
2017-01-05 12:16:30 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-05 12:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	4 6
2017-01-05 12:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:30 AI_Player.update()	update
2017-01-05 12:16:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	5 6
2017-01-05 12:16:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:30 AI_Player.update()	update
2017-01-05 12:16:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:30 AI_Player.update()	Search took287ms
2017-01-05 12:16:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:30 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 12:16:30 AI_Player.update()		101,	101,	1010,	110,	101,	1010,	101
2017-01-05 12:16:30 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-05 12:16:30 AI_Player.update()		1010,	1110,	1110,	1101,	11,	101,	1010
2017-01-05 12:16:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 12:16:30 AI_Player.update()		101,	1100,	101,	111,	1010,	11,	1101
2017-01-05 12:16:30 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-05 12:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	5 6
2017-01-05 12:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:30 AI_Player.update()	update
2017-01-05 12:16:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:30 GameBoard.setupTreasurePanel()	5 6
2017-01-05 12:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:30 AI_Player.update()	update
2017-01-05 12:16:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:31 AI_Player.update()	Search took609ms
2017-01-05 12:16:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:31 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 12:16:31 AI_Player.update()		101,	110,	1010,	110,	101,	1010,	101
2017-01-05 12:16:31 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-05 12:16:31 AI_Player.update()		1010,	101,	1110,	1101,	11,	101,	1010
2017-01-05 12:16:31 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 12:16:31 AI_Player.update()		101,	111,	101,	111,	1010,	11,	1101
2017-01-05 12:16:31 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1001,	1001
2017-01-05 12:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:31 GameBoard.setupTreasurePanel()	5 6
2017-01-05 12:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:31 AI_Player.update()	update
2017-01-05 12:16:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:31 GameBoard.setupTreasurePanel()	5 6
2017-01-05 12:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:31 AI_Player.update()	update
2017-01-05 12:16:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:31 AI_Player.update()	Search took60ms
2017-01-05 12:16:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:31 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-05 12:16:31 AI_Player.update()		101,	1110,	1010,	110,	101,	1010,	101
2017-01-05 12:16:31 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-05 12:16:31 AI_Player.update()		1010,	1100,	1110,	1101,	11,	101,	1010
2017-01-05 12:16:31 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-05 12:16:31 AI_Player.update()		101,	1110,	101,	111,	1010,	11,	1101
2017-01-05 12:16:31 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 12:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:31 GameBoard.setupTreasurePanel()	5 6
2017-01-05 12:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:31 AI_Player.update()	update
2017-01-05 12:16:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:31 GameBoard.setupTreasurePanel()	5 6
2017-01-05 12:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:31 AI_Player.update()	update
2017-01-05 12:16:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:32 AI_Player.update()	Search took778ms
2017-01-05 12:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:32 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-05 12:16:32 AI_Player.update()		101,	1110,	1010,	110,	101,	1010,	101
2017-01-05 12:16:32 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-05 12:16:32 AI_Player.update()		1100,	1110,	1101,	11,	101,	1010,	1010
2017-01-05 12:16:32 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-05 12:16:32 AI_Player.update()		101,	1110,	101,	111,	1010,	11,	1101
2017-01-05 12:16:32 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 12:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:32 GameBoard.setupTreasurePanel()	5 6
2017-01-05 12:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:32 AI_Player.update()	update
2017-01-05 12:16:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:32 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:32 AI_Player.update()	update
2017-01-05 12:16:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:32 AI_Player.update()	Search took148ms
2017-01-05 12:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:32 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-05 12:16:32 AI_Player.update()		101,	1110,	1010,	110,	101,	1010,	101
2017-01-05 12:16:32 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-05 12:16:32 AI_Player.update()		1110,	1101,	11,	101,	1010,	1010,	1100
2017-01-05 12:16:32 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-05 12:16:32 AI_Player.update()		101,	1110,	101,	111,	1010,	11,	1101
2017-01-05 12:16:32 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 12:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:32 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:33 AI_Player.update()	update
2017-01-05 12:16:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:33 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:33 AI_Player.update()	update
2017-01-05 12:16:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:33 AI_Player.update()	Search took36ms
2017-01-05 12:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:33 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-05 12:16:33 AI_Player.update()		1110,	1010,	110,	101,	1010,	101,	101
2017-01-05 12:16:33 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-05 12:16:33 AI_Player.update()		1110,	1101,	11,	101,	1010,	1010,	1100
2017-01-05 12:16:33 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-05 12:16:33 AI_Player.update()		101,	1110,	101,	111,	1010,	11,	1101
2017-01-05 12:16:33 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 12:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:33 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:33 AI_Player.update()	update
2017-01-05 12:16:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:33 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:33 AI_Player.update()	update
2017-01-05 12:16:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:33 AI_Player.update()	Search took223ms
2017-01-05 12:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:33 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-05 12:16:33 AI_Player.update()		1110,	1010,	110,	101,	1010,	101,	101
2017-01-05 12:16:33 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-05 12:16:33 AI_Player.update()		1110,	1101,	11,	101,	1010,	1010,	1100
2017-01-05 12:16:33 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-05 12:16:33 AI_Player.update()		1110,	101,	111,	1010,	11,	1101,	101
2017-01-05 12:16:33 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 12:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:33 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:33 AI_Player.update()	update
2017-01-05 12:16:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:33 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:33 AI_Player.update()	update
2017-01-05 12:16:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:33 AI_Player.update()	Search took44ms
2017-01-05 12:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:33 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-05 12:16:33 AI_Player.update()		1110,	1010,	110,	11,	1010,	101,	101
2017-01-05 12:16:33 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 12:16:33 AI_Player.update()		1110,	1101,	11,	1010,	1010,	1010,	1100
2017-01-05 12:16:33 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-05 12:16:33 AI_Player.update()		1110,	101,	111,	1010,	11,	1101,	101
2017-01-05 12:16:33 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 12:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:33 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:33 AI_Player.update()	update
2017-01-05 12:16:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:33 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:34 AI_Player.update()	update
2017-01-05 12:16:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:34 AI_Player.update()	Search took771ms
2017-01-05 12:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:34 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-05 12:16:34 AI_Player.update()		1110,	1010,	110,	11,	1010,	110,	101
2017-01-05 12:16:34 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 12:16:34 AI_Player.update()		1110,	1101,	11,	1010,	1010,	1001,	1100
2017-01-05 12:16:34 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-05 12:16:34 AI_Player.update()		1110,	101,	111,	1010,	11,	1001,	101
2017-01-05 12:16:34 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-05 12:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:34 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:34 AI_Player.update()	update
2017-01-05 12:16:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:34 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:35 AI_Player.update()	update
2017-01-05 12:16:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:35 AI_Player.update()	Search took11ms
2017-01-05 12:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:35 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-05 12:16:35 AI_Player.update()		1110,	1010,	110,	11,	1010,	101,	101
2017-01-05 12:16:35 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 12:16:35 AI_Player.update()		1110,	1101,	11,	1010,	1010,	1010,	1100
2017-01-05 12:16:35 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-05 12:16:35 AI_Player.update()		1110,	101,	111,	1010,	11,	1101,	101
2017-01-05 12:16:35 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 12:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:35 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:35 AI_Player.update()	update
2017-01-05 12:16:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:35 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:35 AI_Player.update()	update
2017-01-05 12:16:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:36 AI_Player.update()	Search took780ms
2017-01-05 12:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:36 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-05 12:16:36 AI_Player.update()		1110,	1010,	110,	11,	1010,	1001,	101
2017-01-05 12:16:36 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 12:16:36 AI_Player.update()		1110,	1101,	11,	1010,	1010,	1001,	1100
2017-01-05 12:16:36 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-05 12:16:36 AI_Player.update()		1110,	101,	111,	1010,	11,	1001,	101
2017-01-05 12:16:36 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 12:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:36 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:36 AI_Player.update()	update
2017-01-05 12:16:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:36 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:36 AI_Player.update()	update
2017-01-05 12:16:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:36 AI_Player.update()	Search took47ms
2017-01-05 12:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:36 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-05 12:16:36 AI_Player.update()		1110,	1010,	110,	11,	1010,	1001,	101
2017-01-05 12:16:36 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 12:16:36 AI_Player.update()		1110,	1101,	11,	1010,	1010,	1001,	1100
2017-01-05 12:16:36 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-05 12:16:36 AI_Player.update()		101,	111,	1010,	11,	1001,	101,	1110
2017-01-05 12:16:36 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 12:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:36 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:36 AI_Player.update()	update
2017-01-05 12:16:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:36 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:36 AI_Player.update()	update
2017-01-05 12:16:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:37 AI_Player.update()	Search took502ms
2017-01-05 12:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:37 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-05 12:16:37 AI_Player.update()		1110,	1010,	110,	11,	1010,	1001,	101
2017-01-05 12:16:37 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 12:16:37 AI_Player.update()		1101,	11,	1010,	1010,	1001,	1100,	1110
2017-01-05 12:16:37 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-05 12:16:37 AI_Player.update()		101,	111,	1010,	11,	1001,	101,	1110
2017-01-05 12:16:37 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 12:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:37 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:37 AI_Player.update()	update
2017-01-05 12:16:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:37 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:37 AI_Player.update()	update
2017-01-05 12:16:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:37 AI_Player.update()	Search took210ms
2017-01-05 12:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:37 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-05 12:16:37 AI_Player.update()		1010,	110,	11,	1010,	1001,	101,	1110
2017-01-05 12:16:37 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 12:16:37 AI_Player.update()		1101,	11,	1010,	1010,	1001,	1100,	1110
2017-01-05 12:16:37 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-05 12:16:37 AI_Player.update()		101,	111,	1010,	11,	1001,	101,	1110
2017-01-05 12:16:37 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 12:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:37 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:37 AI_Player.update()	update
2017-01-05 12:16:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:37 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:37 AI_Player.update()	update
2017-01-05 12:16:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:38 AI_Player.update()	Search took371ms
2017-01-05 12:16:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:38 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-05 12:16:38 AI_Player.update()		110,	11,	1010,	1001,	101,	1110,	1010
2017-01-05 12:16:38 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 12:16:38 AI_Player.update()		1101,	11,	1010,	1010,	1001,	1100,	1110
2017-01-05 12:16:38 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-05 12:16:38 AI_Player.update()		101,	111,	1010,	11,	1001,	101,	1110
2017-01-05 12:16:38 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 12:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:38 AI_Player.update()	update
2017-01-05 12:16:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:38 AI_Player.update()	update
2017-01-05 12:16:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:38 AI_Player.update()	Search took168ms
2017-01-05 12:16:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:38 AI_Player.update()		110,	110,	111,	11,	111,	1110,	11
2017-01-05 12:16:38 AI_Player.update()		110,	11,	1010,	1001,	101,	1010,	1010
2017-01-05 12:16:38 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 12:16:38 AI_Player.update()		1101,	11,	1010,	1010,	1001,	1101,	1110
2017-01-05 12:16:38 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 12:16:38 AI_Player.update()		101,	111,	1010,	11,	1001,	110,	1110
2017-01-05 12:16:38 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 12:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:38 AI_Player.update()	update
2017-01-05 12:16:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:38 AI_Player.update()	update
2017-01-05 12:16:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:38 AI_Player.update()	Search took269ms
2017-01-05 12:16:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:38 AI_Player.update()		110,	110,	111,	11,	111,	1110,	11
2017-01-05 12:16:38 AI_Player.update()		11,	1010,	1001,	101,	1010,	1010,	110
2017-01-05 12:16:38 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 12:16:38 AI_Player.update()		1101,	11,	1010,	1010,	1001,	1101,	1110
2017-01-05 12:16:38 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 12:16:38 AI_Player.update()		101,	111,	1010,	11,	1001,	110,	1110
2017-01-05 12:16:38 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 12:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 12:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:38 AI_Player.update()	update
2017-01-05 12:16:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:38 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 12:16:38 AI_Player.update()	Player b has won!
2017-01-05 12:16:40 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 12:16:40 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 12:16:40 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 12:16:40 QueryProlog.reset()	setup(h3/h4). suceeded
2017-01-05 12:16:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:40 AI_Player.update()	update
2017-01-05 12:16:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:40 AI_Player.update()	Search took146ms
2017-01-05 12:16:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:40 AI_Player.update()		110,	111,	111,	110,	111,	1101,	11
2017-01-05 12:16:40 AI_Player.update()		110,	101,	1110,	11,	1110,	1001,	101
2017-01-05 12:16:40 AI_Player.update()		1110,	1100,	1110,	110,	111,	1110,	1011
2017-01-05 12:16:40 AI_Player.update()		101,	1001,	1001,	110,	1001,	101,	1110
2017-01-05 12:16:40 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1100,	1011
2017-01-05 12:16:40 AI_Player.update()		1011,	1010,	1010,	1010,	1100,	101,	101
2017-01-05 12:16:40 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1001,	1001
2017-01-05 12:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:40 AI_Player.update()	update
2017-01-05 12:16:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:40 AI_Player.update()	update
2017-01-05 12:16:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h4). suceeded
2017-01-05 12:16:40 AI_Player.update()	Search took134ms
2017-01-05 12:16:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:40 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-05 12:16:40 AI_Player.update()		110,	1100,	1110,	11,	1110,	1001,	101
2017-01-05 12:16:40 AI_Player.update()		1110,	1001,	1110,	110,	111,	1110,	1011
2017-01-05 12:16:40 AI_Player.update()		101,	1100,	1001,	110,	1001,	101,	1110
2017-01-05 12:16:40 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1100,	1011
2017-01-05 12:16:40 AI_Player.update()		1011,	1110,	1010,	1010,	1100,	101,	101
2017-01-05 12:16:40 AI_Player.update()		1100,	111,	1101,	110,	1101,	1001,	1001
2017-01-05 12:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:40 AI_Player.update()	update
2017-01-05 12:16:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h4). suceeded
2017-01-05 12:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	1 2
2017-01-05 12:16:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:40 AI_Player.update()	update
2017-01-05 12:16:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 12:16:41 AI_Player.update()	Search took156ms
2017-01-05 12:16:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:41 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-05 12:16:41 AI_Player.update()		101,	110,	1100,	1110,	11,	1110,	1001
2017-01-05 12:16:41 AI_Player.update()		1110,	1001,	1110,	110,	111,	1110,	1011
2017-01-05 12:16:41 AI_Player.update()		101,	1100,	1001,	110,	1001,	101,	1110
2017-01-05 12:16:41 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1100,	1011
2017-01-05 12:16:41 AI_Player.update()		1011,	1110,	1010,	1010,	1100,	101,	101
2017-01-05 12:16:41 AI_Player.update()		1100,	111,	1101,	110,	1101,	1001,	1001
2017-01-05 12:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:41 GameBoard.setupTreasurePanel()	1 2
2017-01-05 12:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:41 AI_Player.update()	update
2017-01-05 12:16:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 12:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:41 GameBoard.setupTreasurePanel()	1 2
2017-01-05 12:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:41 AI_Player.update()	update
2017-01-05 12:16:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
