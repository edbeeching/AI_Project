2017-01-10 12:43:11 GameBoard.<init>()	Hello World!
2017-01-10 12:43:12 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-10 12:43:12 QueryProlog.initialise()	setup(h2/h3). suceeded
2017-01-10 12:43:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:12 GameBoard.setupBoardFromString()	Board created
2017-01-10 12:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:12 GameBoard.initialise()	[sword, gem, ring, keys, gold]
2017-01-10 12:43:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:12 GameBoard.initialise()	[map, helmet, fairy, candle, chest]
2017-01-10 12:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:12 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-10 12:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	null
2017-01-10 12:43:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:12 AI_Player.update()	update
2017-01-10 12:43:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:12 AI_Player.update()	Search took120ms
2017-01-10 12:43:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:12 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-10 12:43:12 AI_Player.update()		110,	1001,	11,	101,	101,	1101,	1010
2017-01-10 12:43:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:12 AI_Player.update()		101,	101,	101,	111,	1011,	101,	1010
2017-01-10 12:43:12 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-10 12:43:12 AI_Player.update()		1011,	11,	1010,	110,	1110,	11,	101
2017-01-10 12:43:12 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-10 12:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:12 AI_Player.update()	update
2017-01-10 12:43:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:12 AI_Player.update()	update
2017-01-10 12:43:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:13 AI_Player.update()	Search took678ms
2017-01-10 12:43:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:13 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-10 12:43:13 AI_Player.update()		110,	1001,	11,	101,	101,	1101,	1010
2017-01-10 12:43:13 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:13 AI_Player.update()		101,	1001,	101,	111,	1011,	101,	1010
2017-01-10 12:43:13 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-10 12:43:13 AI_Player.update()		1011,	110,	1010,	110,	1110,	11,	101
2017-01-10 12:43:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-10 12:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:13 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:13 AI_Player.update()	update
2017-01-10 12:43:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:13 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:13 AI_Player.update()	update
2017-01-10 12:43:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:13 AI_Player.update()	Search took84ms
2017-01-10 12:43:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:13 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-10 12:43:13 AI_Player.update()		1001,	11,	101,	101,	1101,	1010,	110
2017-01-10 12:43:13 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:13 AI_Player.update()		101,	1001,	101,	111,	1011,	101,	1010
2017-01-10 12:43:13 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-10 12:43:13 AI_Player.update()		1011,	110,	1010,	110,	1110,	11,	101
2017-01-10 12:43:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-10 12:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:13 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:13 AI_Player.update()	update
2017-01-10 12:43:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:13 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:13 AI_Player.update()	update
2017-01-10 12:43:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:13 AI_Player.update()	Search took104ms
2017-01-10 12:43:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:13 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-10 12:43:13 AI_Player.update()		110,	1001,	11,	101,	101,	1101,	1010
2017-01-10 12:43:13 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:13 AI_Player.update()		101,	1001,	101,	111,	1011,	101,	1010
2017-01-10 12:43:13 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-10 12:43:13 AI_Player.update()		1011,	110,	1010,	110,	1110,	11,	101
2017-01-10 12:43:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-10 12:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:14 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:14 AI_Player.update()	update
2017-01-10 12:43:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:14 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:14 AI_Player.update()	update
2017-01-10 12:43:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:14 AI_Player.update()	Search took96ms
2017-01-10 12:43:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:14 AI_Player.update()		110,	1001,	111,	1010,	111,	1100,	11
2017-01-10 12:43:14 AI_Player.update()		110,	1001,	11,	11,	101,	1101,	1010
2017-01-10 12:43:14 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-10 12:43:14 AI_Player.update()		101,	1001,	101,	1010,	1011,	101,	1010
2017-01-10 12:43:14 AI_Player.update()		1110,	11,	1101,	111,	1011,	101,	1011
2017-01-10 12:43:14 AI_Player.update()		1011,	110,	1010,	11,	1110,	11,	101
2017-01-10 12:43:14 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-10 12:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:14 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:14 AI_Player.update()	update
2017-01-10 12:43:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:14 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:14 AI_Player.update()	update
2017-01-10 12:43:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:15 AI_Player.update()	Search took997ms
2017-01-10 12:43:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:15 AI_Player.update()		110,	1001,	111,	1010,	111,	1100,	11
2017-01-10 12:43:15 AI_Player.update()		1010,	110,	1001,	11,	11,	101,	1101
2017-01-10 12:43:15 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-10 12:43:15 AI_Player.update()		101,	1001,	101,	1010,	1011,	101,	1010
2017-01-10 12:43:15 AI_Player.update()		1110,	11,	1101,	111,	1011,	101,	1011
2017-01-10 12:43:15 AI_Player.update()		1011,	110,	1010,	11,	1110,	11,	101
2017-01-10 12:43:15 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-10 12:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:15 AI_Player.update()	update
2017-01-10 12:43:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	2 2
2017-01-10 12:43:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:15 AI_Player.update()	update
2017-01-10 12:43:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:15 AI_Player.update()	Search took32ms
2017-01-10 12:43:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:15 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-10 12:43:15 AI_Player.update()		1010,	110,	1001,	101,	11,	101,	1101
2017-01-10 12:43:15 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:15 AI_Player.update()		101,	1001,	101,	111,	1011,	101,	1010
2017-01-10 12:43:15 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-10 12:43:15 AI_Player.update()		1011,	110,	1010,	110,	1110,	11,	101
2017-01-10 12:43:15 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-10 12:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	2 2
2017-01-10 12:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:15 AI_Player.update()	update
2017-01-10 12:43:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:15 GameBoard.setupTreasurePanel()	2 2
2017-01-10 12:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:15 AI_Player.update()	update
2017-01-10 12:43:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:16 AI_Player.update()	Search took122ms
2017-01-10 12:43:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:16 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-10 12:43:16 AI_Player.update()		1010,	110,	1001,	101,	11,	101,	1101
2017-01-10 12:43:16 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:16 AI_Player.update()		101,	1001,	101,	111,	1011,	101,	1010
2017-01-10 12:43:16 AI_Player.update()		1110,	11,	1101,	11,	1011,	11,	1011
2017-01-10 12:43:16 AI_Player.update()		1011,	110,	1010,	110,	1110,	1100,	101
2017-01-10 12:43:16 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-10 12:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	2 2
2017-01-10 12:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:16 AI_Player.update()	update
2017-01-10 12:43:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	2 2
2017-01-10 12:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:16 AI_Player.update()	update
2017-01-10 12:43:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:16 AI_Player.update()	Search took123ms
2017-01-10 12:43:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:16 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-10 12:43:16 AI_Player.update()		1010,	110,	1001,	11,	11,	101,	1101
2017-01-10 12:43:16 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-10 12:43:16 AI_Player.update()		101,	1001,	101,	1010,	1011,	101,	1010
2017-01-10 12:43:16 AI_Player.update()		1110,	11,	1101,	111,	1011,	11,	1011
2017-01-10 12:43:16 AI_Player.update()		1011,	110,	1010,	11,	1110,	1100,	101
2017-01-10 12:43:16 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-10 12:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	2 2
2017-01-10 12:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:16 AI_Player.update()	update
2017-01-10 12:43:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:16 AI_Player.update()	update
2017-01-10 12:43:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:16 AI_Player.update()	Search took79ms
2017-01-10 12:43:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:16 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-10 12:43:16 AI_Player.update()		1010,	110,	1001,	101,	11,	101,	1101
2017-01-10 12:43:16 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:16 AI_Player.update()		101,	1001,	101,	111,	1011,	101,	1010
2017-01-10 12:43:16 AI_Player.update()		1110,	11,	1101,	11,	1011,	11,	1011
2017-01-10 12:43:16 AI_Player.update()		1011,	110,	1010,	110,	1110,	1100,	101
2017-01-10 12:43:16 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-10 12:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:16 AI_Player.update()	update
2017-01-10 12:43:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:16 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:16 AI_Player.update()	update
2017-01-10 12:43:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:17 AI_Player.update()	Search took96ms
2017-01-10 12:43:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:17 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-10 12:43:17 AI_Player.update()		1010,	110,	1001,	11,	11,	101,	1101
2017-01-10 12:43:17 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-10 12:43:17 AI_Player.update()		101,	1001,	101,	1010,	1011,	101,	1010
2017-01-10 12:43:17 AI_Player.update()		1110,	11,	1101,	111,	1011,	11,	1011
2017-01-10 12:43:17 AI_Player.update()		1011,	110,	1010,	11,	1110,	1100,	101
2017-01-10 12:43:17 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-10 12:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:17 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:17 AI_Player.update()	update
2017-01-10 12:43:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:17 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:17 AI_Player.update()	update
2017-01-10 12:43:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:17 AI_Player.update()	Search took97ms
2017-01-10 12:43:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:17 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-10 12:43:17 AI_Player.update()		1010,	110,	1001,	101,	11,	101,	1101
2017-01-10 12:43:17 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:17 AI_Player.update()		101,	1001,	101,	111,	1011,	101,	1010
2017-01-10 12:43:17 AI_Player.update()		1110,	11,	1101,	11,	1011,	11,	1011
2017-01-10 12:43:17 AI_Player.update()		1011,	110,	1010,	110,	1110,	1100,	101
2017-01-10 12:43:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-10 12:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:17 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:17 AI_Player.update()	update
2017-01-10 12:43:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:17 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:17 AI_Player.update()	update
2017-01-10 12:43:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:17 AI_Player.update()	Search took186ms
2017-01-10 12:43:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:17 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-10 12:43:17 AI_Player.update()		1010,	110,	1001,	11,	11,	101,	1101
2017-01-10 12:43:17 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-10 12:43:17 AI_Player.update()		101,	1001,	101,	1010,	1011,	101,	1010
2017-01-10 12:43:17 AI_Player.update()		1110,	11,	1101,	111,	1011,	11,	1011
2017-01-10 12:43:17 AI_Player.update()		1011,	110,	1010,	11,	1110,	1100,	101
2017-01-10 12:43:17 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-10 12:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:17 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:17 AI_Player.update()	update
2017-01-10 12:43:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:17 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:17 AI_Player.update()	update
2017-01-10 12:43:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:18 AI_Player.update()	Search took103ms
2017-01-10 12:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:18 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-10 12:43:18 AI_Player.update()		1010,	110,	1001,	1010,	11,	101,	1101
2017-01-10 12:43:18 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-10 12:43:18 AI_Player.update()		101,	1001,	101,	101,	1011,	101,	1010
2017-01-10 12:43:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	11,	1011
2017-01-10 12:43:18 AI_Player.update()		1011,	110,	1010,	111,	1110,	1100,	101
2017-01-10 12:43:18 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-10 12:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:18 AI_Player.update()	update
2017-01-10 12:43:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:18 AI_Player.update()	update
2017-01-10 12:43:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:18 AI_Player.update()	Search took205ms
2017-01-10 12:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:18 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-10 12:43:18 AI_Player.update()		1010,	101,	1001,	1010,	11,	101,	1101
2017-01-10 12:43:18 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-10 12:43:18 AI_Player.update()		101,	11,	101,	101,	1011,	101,	1010
2017-01-10 12:43:18 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-10 12:43:18 AI_Player.update()		1011,	101,	1010,	111,	1110,	1100,	101
2017-01-10 12:43:18 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-10 12:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:18 AI_Player.update()	update
2017-01-10 12:43:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	4 2
2017-01-10 12:43:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:18 AI_Player.update()	update
2017-01-10 12:43:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:18 AI_Player.update()	Search took89ms
2017-01-10 12:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:18 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-10 12:43:18 AI_Player.update()		101,	1001,	1010,	11,	101,	1101,	1010
2017-01-10 12:43:18 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-10 12:43:18 AI_Player.update()		101,	11,	101,	101,	1011,	101,	1010
2017-01-10 12:43:18 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-10 12:43:18 AI_Player.update()		1011,	101,	1010,	111,	1110,	1100,	101
2017-01-10 12:43:18 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-10 12:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	4 2
2017-01-10 12:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:18 AI_Player.update()	update
2017-01-10 12:43:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:18 GameBoard.setupTreasurePanel()	4 2
2017-01-10 12:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:18 AI_Player.update()	update
2017-01-10 12:43:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:19 AI_Player.update()	Search took723ms
2017-01-10 12:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:19 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-10 12:43:19 AI_Player.update()		101,	1001,	1010,	11,	101,	1101,	1010
2017-01-10 12:43:19 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-10 12:43:19 AI_Player.update()		101,	11,	101,	1010,	1011,	101,	1010
2017-01-10 12:43:19 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-10 12:43:19 AI_Player.update()		1011,	101,	1010,	11,	1110,	1100,	101
2017-01-10 12:43:19 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1100,	1001
2017-01-10 12:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:19 GameBoard.setupTreasurePanel()	4 2
2017-01-10 12:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:19 AI_Player.update()	update
2017-01-10 12:43:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:19 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:19 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:19 AI_Player.update()	update
2017-01-10 12:43:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:20 AI_Player.update()	Search took1030ms
2017-01-10 12:43:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:20 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-10 12:43:20 AI_Player.update()		101,	1001,	1010,	11,	101,	1101,	1010
2017-01-10 12:43:20 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-10 12:43:20 AI_Player.update()		101,	110,	101,	1010,	1011,	101,	1010
2017-01-10 12:43:20 AI_Player.update()		1110,	101,	1101,	111,	1011,	11,	1011
2017-01-10 12:43:20 AI_Player.update()		1011,	1001,	1010,	11,	1110,	1100,	101
2017-01-10 12:43:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	1100,	1001
2017-01-10 12:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:20 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:21 AI_Player.update()	update
2017-01-10 12:43:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:21 GameBoard.setupTreasurePanel()	5 3
2017-01-10 12:43:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:21 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:21 AI_Player.update()	update
2017-01-10 12:43:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:22 AI_Player.update()	Search took1131ms
2017-01-10 12:43:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:22 AI_Player.update()		110,	1001,	111,	11,	111,	1101,	11
2017-01-10 12:43:22 AI_Player.update()		101,	1001,	1010,	11,	101,	101,	1010
2017-01-10 12:43:22 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-10 12:43:22 AI_Player.update()		101,	110,	101,	1010,	1011,	11,	1010
2017-01-10 12:43:22 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-10 12:43:22 AI_Player.update()		1011,	1001,	1010,	11,	1110,	1100,	101
2017-01-10 12:43:22 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-10 12:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:22 GameBoard.setupTreasurePanel()	5 3
2017-01-10 12:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:22 AI_Player.update()	update
2017-01-10 12:43:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:22 GameBoard.setupTreasurePanel()	6 3
2017-01-10 12:43:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:22 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:22 AI_Player.update()	update
2017-01-10 12:43:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:23 AI_Player.update()	Search took1176ms
2017-01-10 12:43:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:23 AI_Player.update()		110,	1001,	111,	11,	111,	1101,	11
2017-01-10 12:43:23 AI_Player.update()		101,	1001,	1010,	11,	101,	101,	1010
2017-01-10 12:43:23 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-10 12:43:23 AI_Player.update()		101,	110,	101,	1010,	1011,	11,	1010
2017-01-10 12:43:23 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-10 12:43:23 AI_Player.update()		101,	1011,	1001,	1010,	11,	1110,	1100
2017-01-10 12:43:23 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-10 12:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:23 GameBoard.setupTreasurePanel()	6 3
2017-01-10 12:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:23 AI_Player.update()	update
2017-01-10 12:43:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:23 GameBoard.setupTreasurePanel()	6 4
2017-01-10 12:43:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:23 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:23 AI_Player.update()	update
2017-01-10 12:43:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:24 AI_Player.update()	Search took963ms
2017-01-10 12:43:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:24 AI_Player.update()		110,	1001,	111,	11,	111,	1101,	11
2017-01-10 12:43:24 AI_Player.update()		101,	11,	1010,	11,	101,	101,	1010
2017-01-10 12:43:24 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-10 12:43:24 AI_Player.update()		101,	101,	101,	1010,	1011,	11,	1010
2017-01-10 12:43:24 AI_Player.update()		1110,	1011,	1101,	111,	1011,	1100,	1011
2017-01-10 12:43:24 AI_Player.update()		101,	110,	1001,	1010,	11,	1110,	1100
2017-01-10 12:43:24 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-10 12:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:24 GameBoard.setupTreasurePanel()	6 4
2017-01-10 12:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:24 AI_Player.update()	update
2017-01-10 12:43:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:24 GameBoard.setupTreasurePanel()	6 4
2017-01-10 12:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:25 AI_Player.update()	update
2017-01-10 12:43:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:25 AI_Player.update()	Search took137ms
2017-01-10 12:43:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:25 AI_Player.update()		110,	1001,	111,	11,	111,	1101,	11
2017-01-10 12:43:25 AI_Player.update()		101,	1001,	1010,	11,	101,	101,	1010
2017-01-10 12:43:25 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-10 12:43:25 AI_Player.update()		101,	110,	101,	1010,	1011,	11,	1010
2017-01-10 12:43:25 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-10 12:43:25 AI_Player.update()		101,	1011,	1001,	1010,	11,	1110,	1100
2017-01-10 12:43:25 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-10 12:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:25 GameBoard.setupTreasurePanel()	6 4
2017-01-10 12:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:25 AI_Player.update()	update
2017-01-10 12:43:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:25 GameBoard.setupTreasurePanel()	6 5
2017-01-10 12:43:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:25 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:25 AI_Player.update()	update
2017-01-10 12:43:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:26 AI_Player.update()	Search took854ms
2017-01-10 12:43:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:26 AI_Player.update()		110,	1001,	111,	11,	111,	1101,	11
2017-01-10 12:43:26 AI_Player.update()		1010,	101,	1001,	1010,	11,	101,	101
2017-01-10 12:43:26 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-10 12:43:26 AI_Player.update()		101,	110,	101,	1010,	1011,	11,	1010
2017-01-10 12:43:26 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-10 12:43:26 AI_Player.update()		101,	1011,	1001,	1010,	11,	1110,	1100
2017-01-10 12:43:26 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-10 12:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:26 GameBoard.setupTreasurePanel()	6 5
2017-01-10 12:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:26 AI_Player.update()	update
2017-01-10 12:43:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:26 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-10 12:43:26 AI_Player.update()	Player a has won!
2017-01-10 12:43:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-10 12:43:36 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-10 12:43:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-10 12:43:36 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-10 12:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:36 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:36 GameBoard.setupTreasurePanel()	adding book
2017-01-10 12:43:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:36 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:36 AI_Player.update()	update
2017-01-10 12:43:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:36 AI_Player.update()	Search took300ms
2017-01-10 12:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:36 AI_Player.update()		110,	1001,	111,	101,	111,	1001,	11
2017-01-10 12:43:36 AI_Player.update()		1110,	111,	101,	1001,	1011,	11,	1010
2017-01-10 12:43:36 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-10 12:43:36 AI_Player.update()		1101,	1110,	11,	1100,	1001,	111,	1110
2017-01-10 12:43:36 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-10 12:43:36 AI_Player.update()		101,	1101,	110,	1010,	1101,	101,	1010
2017-01-10 12:43:36 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-10 12:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:36 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:36 AI_Player.update()	update
2017-01-10 12:43:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:36 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:36 AI_Player.update()	update
2017-01-10 12:43:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:37 AI_Player.update()	Search took263ms
2017-01-10 12:43:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:37 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-10 12:43:37 AI_Player.update()		1110,	111,	101,	1001,	1011,	1001,	1010
2017-01-10 12:43:37 AI_Player.update()		1110,	1100,	1110,	1100,	111,	11,	1011
2017-01-10 12:43:37 AI_Player.update()		1101,	1110,	11,	1100,	1001,	101,	1110
2017-01-10 12:43:37 AI_Player.update()		1110,	11,	1101,	1010,	1011,	111,	1011
2017-01-10 12:43:37 AI_Player.update()		101,	1101,	110,	1010,	1101,	101,	1010
2017-01-10 12:43:37 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:37 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:37 AI_Player.update()	update
2017-01-10 12:43:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:37 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:37 AI_Player.update()	update
2017-01-10 12:43:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:37 AI_Player.update()	Search took317ms
2017-01-10 12:43:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:37 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-10 12:43:37 AI_Player.update()		1110,	111,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:37 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:37 AI_Player.update()		1101,	1110,	11,	1100,	1001,	101,	1110
2017-01-10 12:43:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:37 AI_Player.update()		101,	1101,	110,	1010,	1101,	101,	1010
2017-01-10 12:43:37 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:37 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:37 AI_Player.update()	update
2017-01-10 12:43:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:37 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:37 AI_Player.update()	update
2017-01-10 12:43:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:38 AI_Player.update()	Search took211ms
2017-01-10 12:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:38 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-10 12:43:38 AI_Player.update()		1110,	111,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:38 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:38 AI_Player.update()		1101,	1110,	11,	1100,	1001,	101,	1110
2017-01-10 12:43:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:38 AI_Player.update()		1101,	110,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:38 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:38 AI_Player.update()	update
2017-01-10 12:43:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:38 AI_Player.update()	update
2017-01-10 12:43:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:38 AI_Player.update()	Search took259ms
2017-01-10 12:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:38 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-10 12:43:38 AI_Player.update()		1110,	111,	101,	101,	1011,	11,	1010
2017-01-10 12:43:38 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-10 12:43:38 AI_Player.update()		1101,	1110,	11,	1100,	1001,	11,	1110
2017-01-10 12:43:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-10 12:43:38 AI_Player.update()		1101,	110,	1010,	1101,	101,	111,	101
2017-01-10 12:43:38 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-10 12:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:38 AI_Player.update()	update
2017-01-10 12:43:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	adding book
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:38 AI_Player.update()	update
2017-01-10 12:43:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:38 AI_Player.update()	Search took43ms
2017-01-10 12:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:38 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-10 12:43:38 AI_Player.update()		1110,	111,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:38 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:38 AI_Player.update()		1101,	1110,	11,	1100,	1001,	101,	1110
2017-01-10 12:43:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:38 AI_Player.update()		1101,	110,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:38 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:38 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:39 AI_Player.update()	update
2017-01-10 12:43:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:39 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:39 AI_Player.update()	update
2017-01-10 12:43:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:39 AI_Player.update()	Search took196ms
2017-01-10 12:43:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:39 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-10 12:43:39 AI_Player.update()		1110,	111,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:39 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:39 AI_Player.update()		1101,	1110,	11,	1100,	1001,	101,	1110
2017-01-10 12:43:39 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:39 AI_Player.update()		101,	1101,	110,	1010,	1101,	101,	1010
2017-01-10 12:43:39 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:39 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:39 AI_Player.update()	update
2017-01-10 12:43:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:39 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:39 AI_Player.update()	update
2017-01-10 12:43:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:39 AI_Player.update()	Search took220ms
2017-01-10 12:43:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:39 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-10 12:43:39 AI_Player.update()		1110,	111,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:39 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:39 AI_Player.update()		1101,	1110,	11,	1100,	1001,	101,	1110
2017-01-10 12:43:39 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:39 AI_Player.update()		1101,	110,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:39 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:39 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:39 AI_Player.update()	update
2017-01-10 12:43:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:39 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:39 AI_Player.update()	update
2017-01-10 12:43:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:40 AI_Player.update()	Search took232ms
2017-01-10 12:43:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:40 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-10 12:43:40 AI_Player.update()		1110,	111,	101,	101,	1011,	11,	1010
2017-01-10 12:43:40 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-10 12:43:40 AI_Player.update()		1101,	1110,	11,	1100,	1001,	11,	1110
2017-01-10 12:43:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-10 12:43:40 AI_Player.update()		1101,	110,	1010,	1101,	101,	111,	101
2017-01-10 12:43:40 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-10 12:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:40 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:40 AI_Player.update()	update
2017-01-10 12:43:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:40 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:40 AI_Player.update()	update
2017-01-10 12:43:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:40 AI_Player.update()	Search took44ms
2017-01-10 12:43:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:40 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-10 12:43:40 AI_Player.update()		1110,	111,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:40 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:40 AI_Player.update()		1101,	1110,	11,	1100,	1001,	101,	1110
2017-01-10 12:43:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:40 AI_Player.update()		1101,	110,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:40 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:40 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:40 AI_Player.update()	update
2017-01-10 12:43:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:40 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:40 AI_Player.update()	update
2017-01-10 12:43:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:40 AI_Player.update()	Search took271ms
2017-01-10 12:43:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:40 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-10 12:43:40 AI_Player.update()		1110,	111,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:40 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:40 AI_Player.update()		1110,	1101,	1110,	11,	1100,	1001,	101
2017-01-10 12:43:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:40 AI_Player.update()		1101,	110,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:40 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:40 GameBoard.setupTreasurePanel()	2 1
2017-01-10 12:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:41 AI_Player.update()	update
2017-01-10 12:43:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	3 1
2017-01-10 12:43:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding book
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:41 AI_Player.update()	update
2017-01-10 12:43:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:41 AI_Player.update()	Search took94ms
2017-01-10 12:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:41 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-10 12:43:41 AI_Player.update()		1110,	111,	101,	1010,	1011,	1001,	1010
2017-01-10 12:43:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-10 12:43:41 AI_Player.update()		1110,	1101,	1110,	1001,	1100,	1001,	101
2017-01-10 12:43:41 AI_Player.update()		1110,	11,	1101,	11,	1011,	111,	1011
2017-01-10 12:43:41 AI_Player.update()		1101,	110,	1010,	1100,	101,	1010,	101
2017-01-10 12:43:41 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-10 12:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	3 1
2017-01-10 12:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:41 AI_Player.update()	update
2017-01-10 12:43:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding book
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:41 AI_Player.update()	update
2017-01-10 12:43:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:41 AI_Player.update()	Search took351ms
2017-01-10 12:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:41 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-10 12:43:41 AI_Player.update()		1110,	111,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:41 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:41 AI_Player.update()		1110,	1101,	1110,	11,	1100,	1001,	101
2017-01-10 12:43:41 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:41 AI_Player.update()		1101,	110,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:41 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:41 AI_Player.update()	update
2017-01-10 12:43:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	4 2
2017-01-10 12:43:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding book
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:41 AI_Player.update()	update
2017-01-10 12:43:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:42 AI_Player.update()	Search took59ms
2017-01-10 12:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:42 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-10 12:43:42 AI_Player.update()		1110,	1100,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:42 AI_Player.update()		1110,	1101,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:42 AI_Player.update()		1110,	11,	1110,	11,	1100,	1001,	101
2017-01-10 12:43:42 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:42 AI_Player.update()		1101,	101,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:42 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	4 2
2017-01-10 12:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:42 AI_Player.update()	update
2017-01-10 12:43:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	4 2
2017-01-10 12:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:42 AI_Player.update()	update
2017-01-10 12:43:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:42 AI_Player.update()	Search took420ms
2017-01-10 12:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:42 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-10 12:43:42 AI_Player.update()		1110,	1101,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:42 AI_Player.update()		1110,	110,	1110,	11,	1100,	1001,	101
2017-01-10 12:43:42 AI_Player.update()		1110,	101,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:42 AI_Player.update()		1101,	1001,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:42 AI_Player.update()		1100,	111,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	4 2
2017-01-10 12:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:42 AI_Player.update()	update
2017-01-10 12:43:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	adding book
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:42 AI_Player.update()	update
2017-01-10 12:43:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:42 AI_Player.update()	Search took100ms
2017-01-10 12:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:42 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-10 12:43:42 AI_Player.update()		1110,	1100,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:42 AI_Player.update()		1110,	1101,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:42 AI_Player.update()		1110,	11,	1110,	11,	1100,	1001,	101
2017-01-10 12:43:42 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:42 AI_Player.update()		1101,	101,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:42 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:42 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:43 AI_Player.update()	update
2017-01-10 12:43:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:43 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:43 AI_Player.update()	update
2017-01-10 12:43:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:43 AI_Player.update()	Search took257ms
2017-01-10 12:43:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:43 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-10 12:43:43 AI_Player.update()		1110,	111,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:43 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:43 AI_Player.update()		1110,	1101,	1110,	11,	1100,	1001,	101
2017-01-10 12:43:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:43 AI_Player.update()		1101,	110,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:43 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:43 AI_Player.update()	update
2017-01-10 12:43:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:43 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:43 AI_Player.update()	update
2017-01-10 12:43:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:43 AI_Player.update()	Search took106ms
2017-01-10 12:43:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:43 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-10 12:43:43 AI_Player.update()		1110,	1100,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:43 AI_Player.update()		1110,	1101,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:43 AI_Player.update()		1110,	11,	1110,	11,	1100,	1001,	101
2017-01-10 12:43:43 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:43 AI_Player.update()		1101,	101,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:43 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:43 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:43 AI_Player.update()	update
2017-01-10 12:43:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:43 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:43 AI_Player.update()	update
2017-01-10 12:43:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:44 AI_Player.update()	Search took333ms
2017-01-10 12:43:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:44 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-10 12:43:44 AI_Player.update()		1110,	1101,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:44 AI_Player.update()		1110,	11,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:44 AI_Player.update()		1110,	110,	1110,	11,	1100,	1001,	101
2017-01-10 12:43:44 AI_Player.update()		1110,	101,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:44 AI_Player.update()		1101,	1001,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:44 AI_Player.update()		1100,	111,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:44 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:44 AI_Player.update()	update
2017-01-10 12:43:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:44 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:44 AI_Player.update()	update
2017-01-10 12:43:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:44 AI_Player.update()	Search took96ms
2017-01-10 12:43:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:44 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-10 12:43:44 AI_Player.update()		1110,	1100,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:44 AI_Player.update()		1110,	1101,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:44 AI_Player.update()		1110,	11,	1110,	11,	1100,	1001,	101
2017-01-10 12:43:44 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:44 AI_Player.update()		1101,	101,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:44 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:44 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:44 AI_Player.update()	update
2017-01-10 12:43:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:44 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:44 AI_Player.update()	update
2017-01-10 12:43:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:45 AI_Player.update()	Search took479ms
2017-01-10 12:43:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:45 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-10 12:43:45 AI_Player.update()		1110,	111,	101,	101,	1011,	1001,	1010
2017-01-10 12:43:45 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:45 AI_Player.update()		1110,	1101,	1110,	11,	1100,	1001,	101
2017-01-10 12:43:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:45 AI_Player.update()		1101,	110,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:45 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:45 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:45 AI_Player.update()	update
2017-01-10 12:43:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:45 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:45 AI_Player.update()	update
2017-01-10 12:43:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:45 AI_Player.update()	Search took93ms
2017-01-10 12:43:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:45 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-10 12:43:45 AI_Player.update()		111,	101,	101,	1011,	1001,	1010,	1110
2017-01-10 12:43:45 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:45 AI_Player.update()		1110,	1101,	1110,	11,	1100,	1001,	101
2017-01-10 12:43:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:45 AI_Player.update()		1101,	110,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:45 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:45 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:45 AI_Player.update()	update
2017-01-10 12:43:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:45 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:45 AI_Player.update()	update
2017-01-10 12:43:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:46 AI_Player.update()	Search took371ms
2017-01-10 12:43:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:46 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-10 12:43:46 AI_Player.update()		111,	101,	101,	1011,	1001,	1010,	1110
2017-01-10 12:43:46 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:46 AI_Player.update()		1101,	1110,	11,	1100,	1001,	101,	1110
2017-01-10 12:43:46 AI_Player.update()		1110,	11,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:46 AI_Player.update()		1101,	110,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:46 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:46 AI_Player.update()	update
2017-01-10 12:43:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:46 AI_Player.update()	update
2017-01-10 12:43:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:46 AI_Player.update()	Search took71ms
2017-01-10 12:43:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:46 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-10 12:43:46 AI_Player.update()		111,	1100,	101,	1011,	1001,	1010,	1110
2017-01-10 12:43:46 AI_Player.update()		1110,	1110,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:46 AI_Player.update()		1101,	11,	11,	1100,	1001,	101,	1110
2017-01-10 12:43:46 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:46 AI_Player.update()		1101,	101,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:46 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:46 AI_Player.update()	update
2017-01-10 12:43:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:46 AI_Player.update()	update
2017-01-10 12:43:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:46 AI_Player.update()	Search took130ms
2017-01-10 12:43:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:46 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-10 12:43:46 AI_Player.update()		111,	1100,	101,	1011,	1001,	1010,	1110
2017-01-10 12:43:46 AI_Player.update()		1110,	1110,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:46 AI_Player.update()		11,	11,	1100,	1001,	101,	1110,	1101
2017-01-10 12:43:46 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:46 AI_Player.update()		1101,	101,	1010,	1101,	101,	1010,	101
2017-01-10 12:43:46 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	5 2
2017-01-10 12:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:46 AI_Player.update()	update
2017-01-10 12:43:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	6 2
2017-01-10 12:43:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	adding book
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:46 AI_Player.update()	update
2017-01-10 12:43:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:47 AI_Player.update()	Search took34ms
2017-01-10 12:43:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:47 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-10 12:43:47 AI_Player.update()		111,	1100,	101,	1011,	1001,	1010,	1110
2017-01-10 12:43:47 AI_Player.update()		1110,	1110,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:47 AI_Player.update()		11,	11,	1100,	1001,	101,	1110,	1101
2017-01-10 12:43:47 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:47 AI_Player.update()		101,	1010,	1101,	101,	1010,	101,	1101
2017-01-10 12:43:47 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	6 2
2017-01-10 12:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:47 AI_Player.update()	update
2017-01-10 12:43:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	6 3
2017-01-10 12:43:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	adding book
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:47 AI_Player.update()	update
2017-01-10 12:43:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:47 AI_Player.update()	Search took174ms
2017-01-10 12:43:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:47 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-10 12:43:47 AI_Player.update()		1110,	111,	1100,	101,	1011,	1001,	1010
2017-01-10 12:43:47 AI_Player.update()		1110,	1110,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:47 AI_Player.update()		11,	11,	1100,	1001,	101,	1110,	1101
2017-01-10 12:43:47 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-10 12:43:47 AI_Player.update()		101,	1010,	1101,	101,	1010,	101,	1101
2017-01-10 12:43:47 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	6 3
2017-01-10 12:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:47 AI_Player.update()	update
2017-01-10 12:43:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	6 3
2017-01-10 12:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:47 AI_Player.update()	update
2017-01-10 12:43:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:47 AI_Player.update()	Search took93ms
2017-01-10 12:43:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:47 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-10 12:43:47 AI_Player.update()		1110,	111,	1100,	1001,	1011,	1001,	1010
2017-01-10 12:43:47 AI_Player.update()		1110,	1110,	1110,	1001,	111,	11,	1011
2017-01-10 12:43:47 AI_Player.update()		11,	11,	1100,	1100,	101,	1110,	1101
2017-01-10 12:43:47 AI_Player.update()		1110,	110,	1101,	101,	1011,	111,	1011
2017-01-10 12:43:47 AI_Player.update()		101,	1010,	1101,	1010,	1010,	101,	1101
2017-01-10 12:43:47 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	6 3
2017-01-10 12:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:47 AI_Player.update()	update
2017-01-10 12:43:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:47 GameBoard.setupTreasurePanel()	6 3
2017-01-10 12:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:47 AI_Player.update()	update
2017-01-10 12:43:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:48 AI_Player.update()	Search took196ms
2017-01-10 12:43:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:48 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-10 12:43:48 AI_Player.update()		1110,	111,	1100,	1001,	1011,	11,	1010
2017-01-10 12:43:48 AI_Player.update()		1110,	1110,	1110,	1001,	111,	1001,	1011
2017-01-10 12:43:48 AI_Player.update()		11,	11,	1100,	1100,	101,	11,	1101
2017-01-10 12:43:48 AI_Player.update()		1110,	110,	1101,	101,	1011,	1110,	1011
2017-01-10 12:43:48 AI_Player.update()		101,	1010,	1101,	1010,	1010,	111,	1101
2017-01-10 12:43:48 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-10 12:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:48 GameBoard.setupTreasurePanel()	6 3
2017-01-10 12:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:48 AI_Player.update()	update
2017-01-10 12:43:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:48 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-10 12:43:48 AI_Player.update()	Player a has won!
2017-01-10 12:43:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-10 12:43:49 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-10 12:43:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-10 12:43:49 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-10 12:43:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:49 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:49 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 12:43:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:50 AI_Player.update()	update
2017-01-10 12:43:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:50 AI_Player.update()	Search took70ms
2017-01-10 12:43:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:50 AI_Player.update()		110,	1010,	111,	1011,	111,	1100,	11
2017-01-10 12:43:50 AI_Player.update()		1100,	11,	1010,	110,	111,	1010,	1011
2017-01-10 12:43:50 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:50 AI_Player.update()		1001,	1110,	1001,	1001,	101,	110,	1110
2017-01-10 12:43:50 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:43:50 AI_Player.update()		1010,	1010,	1101,	1001,	1100,	11,	101
2017-01-10 12:43:50 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-10 12:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:50 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:50 AI_Player.update()	update
2017-01-10 12:43:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:50 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:50 AI_Player.update()	update
2017-01-10 12:43:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:50 AI_Player.update()	Search took249ms
2017-01-10 12:43:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:50 AI_Player.update()		110,	11,	111,	1011,	111,	1100,	11
2017-01-10 12:43:50 AI_Player.update()		1100,	1001,	1010,	110,	111,	1010,	1011
2017-01-10 12:43:50 AI_Player.update()		1110,	1110,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:50 AI_Player.update()		1001,	1101,	1001,	1001,	101,	110,	1110
2017-01-10 12:43:50 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:43:50 AI_Player.update()		1010,	110,	1101,	1001,	1100,	11,	101
2017-01-10 12:43:50 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-10 12:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:50 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:50 AI_Player.update()	update
2017-01-10 12:43:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:50 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:50 AI_Player.update()	update
2017-01-10 12:43:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:50 AI_Player.update()	Search took106ms
2017-01-10 12:43:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:50 AI_Player.update()		110,	11,	111,	1011,	111,	1100,	11
2017-01-10 12:43:50 AI_Player.update()		1001,	1010,	110,	111,	1010,	1011,	1100
2017-01-10 12:43:50 AI_Player.update()		1110,	1110,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:50 AI_Player.update()		1001,	1101,	1001,	1001,	101,	110,	1110
2017-01-10 12:43:50 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:43:50 AI_Player.update()		1010,	110,	1101,	1001,	1100,	11,	101
2017-01-10 12:43:50 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-10 12:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:50 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:51 AI_Player.update()	update
2017-01-10 12:43:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:51 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:51 AI_Player.update()	update
2017-01-10 12:43:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:51 AI_Player.update()	Search took29ms
2017-01-10 12:43:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:51 AI_Player.update()		110,	11,	111,	1011,	111,	1100,	11
2017-01-10 12:43:51 AI_Player.update()		1100,	1001,	1010,	110,	111,	1010,	1011
2017-01-10 12:43:51 AI_Player.update()		1110,	1110,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:51 AI_Player.update()		1001,	1101,	1001,	1001,	101,	110,	1110
2017-01-10 12:43:51 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:43:51 AI_Player.update()		1010,	110,	1101,	1001,	1100,	11,	101
2017-01-10 12:43:51 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-10 12:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:51 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:51 AI_Player.update()	update
2017-01-10 12:43:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:51 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:51 AI_Player.update()	update
2017-01-10 12:43:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:51 AI_Player.update()	Search took104ms
2017-01-10 12:43:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:51 AI_Player.update()		110,	11,	111,	1011,	111,	1100,	11
2017-01-10 12:43:51 AI_Player.update()		1100,	1001,	1010,	110,	111,	1010,	1011
2017-01-10 12:43:51 AI_Player.update()		1110,	1110,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:51 AI_Player.update()		1101,	1001,	1001,	101,	110,	1110,	1001
2017-01-10 12:43:51 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:43:51 AI_Player.update()		1010,	110,	1101,	1001,	1100,	11,	101
2017-01-10 12:43:51 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-10 12:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:51 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:51 AI_Player.update()	update
2017-01-10 12:43:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:51 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:51 AI_Player.update()	update
2017-01-10 12:43:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:51 AI_Player.update()	Search took294ms
2017-01-10 12:43:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:51 AI_Player.update()		110,	11,	111,	1011,	111,	1100,	11
2017-01-10 12:43:51 AI_Player.update()		1011,	1100,	1001,	1010,	110,	111,	1010
2017-01-10 12:43:51 AI_Player.update()		1110,	1110,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:51 AI_Player.update()		1101,	1001,	1001,	101,	110,	1110,	1001
2017-01-10 12:43:51 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:43:51 AI_Player.update()		1010,	110,	1101,	1001,	1100,	11,	101
2017-01-10 12:43:51 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-10 12:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:51 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:52 AI_Player.update()	update
2017-01-10 12:43:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	1 2
2017-01-10 12:43:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:52 AI_Player.update()	update
2017-01-10 12:43:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:52 AI_Player.update()	Search took238ms
2017-01-10 12:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:52 AI_Player.update()		110,	11,	111,	1011,	111,	1100,	11
2017-01-10 12:43:52 AI_Player.update()		1011,	1100,	1001,	1010,	110,	111,	1010
2017-01-10 12:43:52 AI_Player.update()		1110,	1110,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:52 AI_Player.update()		1001,	1001,	101,	110,	1110,	1001,	1101
2017-01-10 12:43:52 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:43:52 AI_Player.update()		1010,	110,	1101,	1001,	1100,	11,	101
2017-01-10 12:43:52 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-10 12:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	1 2
2017-01-10 12:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:52 AI_Player.update()	update
2017-01-10 12:43:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	2 2
2017-01-10 12:43:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:52 AI_Player.update()	update
2017-01-10 12:43:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:52 AI_Player.update()	Search took238ms
2017-01-10 12:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:52 AI_Player.update()		110,	11,	111,	1011,	111,	1100,	11
2017-01-10 12:43:52 AI_Player.update()		1011,	1100,	1001,	1010,	110,	111,	1010
2017-01-10 12:43:52 AI_Player.update()		1110,	1110,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:52 AI_Player.update()		1001,	101,	110,	1110,	1001,	1101,	1001
2017-01-10 12:43:52 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:43:52 AI_Player.update()		1010,	110,	1101,	1001,	1100,	11,	101
2017-01-10 12:43:52 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-10 12:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	2 2
2017-01-10 12:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:52 AI_Player.update()	update
2017-01-10 12:43:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:52 GameBoard.setupTreasurePanel()	2 2
2017-01-10 12:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:53 AI_Player.update()	update
2017-01-10 12:43:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:53 AI_Player.update()	Search took587ms
2017-01-10 12:43:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:53 AI_Player.update()		110,	11,	111,	1011,	111,	111,	11
2017-01-10 12:43:53 AI_Player.update()		1011,	1100,	1001,	1010,	110,	101,	1010
2017-01-10 12:43:53 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1101,	1011
2017-01-10 12:43:53 AI_Player.update()		1001,	101,	110,	1110,	1001,	1001,	1001
2017-01-10 12:43:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-10 12:43:53 AI_Player.update()		1010,	110,	1101,	1001,	1100,	11,	101
2017-01-10 12:43:53 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1100,	1001
2017-01-10 12:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:53 GameBoard.setupTreasurePanel()	2 2
2017-01-10 12:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:53 AI_Player.update()	update
2017-01-10 12:43:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:53 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:53 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 12:43:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:53 AI_Player.update()	update
2017-01-10 12:43:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:53 AI_Player.update()	Search took104ms
2017-01-10 12:43:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:53 AI_Player.update()		110,	11,	111,	1011,	111,	111,	11
2017-01-10 12:43:53 AI_Player.update()		1011,	1100,	1001,	1010,	110,	101,	1010
2017-01-10 12:43:53 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1101,	1011
2017-01-10 12:43:53 AI_Player.update()		1001,	101,	110,	1110,	1001,	1001,	1001
2017-01-10 12:43:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-10 12:43:53 AI_Player.update()		101,	1010,	110,	1101,	1001,	1100,	11
2017-01-10 12:43:53 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1100,	1001
2017-01-10 12:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:53 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:54 AI_Player.update()	update
2017-01-10 12:43:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:54 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:54 AI_Player.update()	update
2017-01-10 12:43:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:54 AI_Player.update()	Search took572ms
2017-01-10 12:43:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:54 AI_Player.update()		110,	11,	111,	1011,	111,	1100,	11
2017-01-10 12:43:54 AI_Player.update()		1011,	1100,	1001,	1010,	110,	111,	1010
2017-01-10 12:43:54 AI_Player.update()		1110,	1110,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:54 AI_Player.update()		1001,	101,	110,	1110,	1001,	1101,	1001
2017-01-10 12:43:54 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:43:54 AI_Player.update()		101,	1010,	110,	1101,	1001,	11,	11
2017-01-10 12:43:54 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1100,	1001
2017-01-10 12:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:54 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:54 AI_Player.update()	update
2017-01-10 12:43:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:54 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:54 AI_Player.update()	update
2017-01-10 12:43:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:55 AI_Player.update()	Search took478ms
2017-01-10 12:43:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:55 AI_Player.update()		110,	1100,	111,	1011,	111,	1100,	11
2017-01-10 12:43:55 AI_Player.update()		1011,	1110,	1001,	1010,	110,	111,	1010
2017-01-10 12:43:55 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:55 AI_Player.update()		1001,	1010,	110,	1110,	1001,	1101,	1001
2017-01-10 12:43:55 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:43:55 AI_Player.update()		101,	1010,	110,	1101,	1001,	11,	11
2017-01-10 12:43:55 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-10 12:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:55 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:55 AI_Player.update()	update
2017-01-10 12:43:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:55 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:55 AI_Player.update()	update
2017-01-10 12:43:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:56 AI_Player.update()	Search took621ms
2017-01-10 12:43:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:56 AI_Player.update()		110,	1100,	111,	1011,	111,	1100,	11
2017-01-10 12:43:56 AI_Player.update()		1011,	1110,	1001,	1010,	110,	1100,	1010
2017-01-10 12:43:56 AI_Player.update()		1110,	101,	1110,	1010,	111,	111,	1011
2017-01-10 12:43:56 AI_Player.update()		1001,	1010,	110,	1110,	1001,	101,	1001
2017-01-10 12:43:56 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-10 12:43:56 AI_Player.update()		101,	1010,	110,	1101,	1001,	1001,	11
2017-01-10 12:43:56 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-10 12:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:56 GameBoard.setupTreasurePanel()	3 2
2017-01-10 12:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:56 AI_Player.update()	update
2017-01-10 12:43:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:56 GameBoard.setupTreasurePanel()	4 2
2017-01-10 12:43:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:56 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 12:43:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:56 AI_Player.update()	update
2017-01-10 12:43:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:56 AI_Player.update()	Search took458ms
2017-01-10 12:43:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:56 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-10 12:43:56 AI_Player.update()		1011,	1110,	1001,	1011,	110,	1100,	1010
2017-01-10 12:43:56 AI_Player.update()		1110,	101,	1110,	1010,	111,	111,	1011
2017-01-10 12:43:56 AI_Player.update()		1001,	1010,	110,	1010,	1001,	101,	1001
2017-01-10 12:43:56 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1101,	1011
2017-01-10 12:43:56 AI_Player.update()		101,	1010,	110,	1100,	1001,	1001,	11
2017-01-10 12:43:56 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-10 12:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:56 GameBoard.setupTreasurePanel()	4 2
2017-01-10 12:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:57 AI_Player.update()	update
2017-01-10 12:43:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	4 3
2017-01-10 12:43:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:57 AI_Player.update()	update
2017-01-10 12:43:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:57 AI_Player.update()	Search took54ms
2017-01-10 12:43:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:57 AI_Player.update()		110,	1100,	111,	1011,	111,	1100,	11
2017-01-10 12:43:57 AI_Player.update()		1011,	1110,	1001,	1010,	110,	1100,	1010
2017-01-10 12:43:57 AI_Player.update()		1110,	101,	1110,	1010,	111,	111,	1011
2017-01-10 12:43:57 AI_Player.update()		1001,	1010,	110,	1110,	1001,	101,	1001
2017-01-10 12:43:57 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-10 12:43:57 AI_Player.update()		101,	1010,	110,	1101,	1001,	1001,	11
2017-01-10 12:43:57 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-10 12:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	4 3
2017-01-10 12:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:57 AI_Player.update()	update
2017-01-10 12:43:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	4 3
2017-01-10 12:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:57 AI_Player.update()	update
2017-01-10 12:43:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:57 AI_Player.update()	Search took45ms
2017-01-10 12:43:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:57 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-10 12:43:57 AI_Player.update()		1011,	1110,	1001,	1011,	110,	1100,	1010
2017-01-10 12:43:57 AI_Player.update()		1110,	101,	1110,	1010,	111,	111,	1011
2017-01-10 12:43:57 AI_Player.update()		1001,	1010,	110,	1010,	1001,	101,	1001
2017-01-10 12:43:57 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1101,	1011
2017-01-10 12:43:57 AI_Player.update()		101,	1010,	110,	1100,	1001,	1001,	11
2017-01-10 12:43:57 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-10 12:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	4 3
2017-01-10 12:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:57 AI_Player.update()	update
2017-01-10 12:43:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	4 3
2017-01-10 12:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:57 AI_Player.update()	update
2017-01-10 12:43:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:57 AI_Player.update()	Search took75ms
2017-01-10 12:43:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:57 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-10 12:43:57 AI_Player.update()		1011,	1110,	1001,	1011,	110,	111,	1010
2017-01-10 12:43:57 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:57 AI_Player.update()		1001,	1010,	110,	1010,	1001,	1101,	1001
2017-01-10 12:43:57 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1001,	1011
2017-01-10 12:43:57 AI_Player.update()		101,	1010,	110,	1100,	1001,	11,	11
2017-01-10 12:43:57 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1100,	1001
2017-01-10 12:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	4 3
2017-01-10 12:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:57 AI_Player.update()	update
2017-01-10 12:43:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:57 GameBoard.setupTreasurePanel()	4 3
2017-01-10 12:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:57 AI_Player.update()	update
2017-01-10 12:43:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:58 AI_Player.update()	Search took148ms
2017-01-10 12:43:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:58 AI_Player.update()		110,	1110,	111,	11,	111,	1100,	11
2017-01-10 12:43:58 AI_Player.update()		1011,	101,	1001,	1011,	110,	111,	1010
2017-01-10 12:43:58 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:58 AI_Player.update()		1001,	1010,	110,	1010,	1001,	1101,	1001
2017-01-10 12:43:58 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1001,	1011
2017-01-10 12:43:58 AI_Player.update()		101,	11,	110,	1100,	1001,	11,	11
2017-01-10 12:43:58 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1100,	1001
2017-01-10 12:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:58 GameBoard.setupTreasurePanel()	4 3
2017-01-10 12:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:58 AI_Player.update()	update
2017-01-10 12:43:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:58 GameBoard.setupTreasurePanel()	4 3
2017-01-10 12:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:58 AI_Player.update()	update
2017-01-10 12:43:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:43:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:43:58 AI_Player.update()	Search took286ms
2017-01-10 12:43:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:58 AI_Player.update()		110,	1110,	111,	1011,	111,	1100,	11
2017-01-10 12:43:58 AI_Player.update()		1011,	101,	1001,	1010,	110,	111,	1010
2017-01-10 12:43:58 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:58 AI_Player.update()		1001,	1010,	110,	1110,	1001,	1101,	1001
2017-01-10 12:43:58 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:43:58 AI_Player.update()		101,	11,	110,	1101,	1001,	11,	11
2017-01-10 12:43:58 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-10 12:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:58 GameBoard.setupTreasurePanel()	4 3
2017-01-10 12:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:58 AI_Player.update()	update
2017-01-10 12:43:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:43:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:43:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:43:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:58 GameBoard.setupTreasurePanel()	4 3
2017-01-10 12:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:58 AI_Player.update()	update
2017-01-10 12:43:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:43:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:43:59 AI_Player.update()	Search took426ms
2017-01-10 12:43:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:59 AI_Player.update()		110,	101,	111,	1011,	111,	1100,	11
2017-01-10 12:43:59 AI_Player.update()		1011,	1010,	1001,	1010,	110,	111,	1010
2017-01-10 12:43:59 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-10 12:43:59 AI_Player.update()		1001,	1010,	110,	1110,	1001,	1101,	1001
2017-01-10 12:43:59 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:43:59 AI_Player.update()		101,	1100,	110,	1101,	1001,	11,	11
2017-01-10 12:43:59 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1100,	1001
2017-01-10 12:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:43:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:59 GameBoard.setupTreasurePanel()	4 3
2017-01-10 12:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:59 AI_Player.update()	update
2017-01-10 12:43:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:43:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:43:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:43:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:43:59 GameBoard.setupTreasurePanel()	4 4
2017-01-10 12:43:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:43:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:43:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:43:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:43:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:43:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:43:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:43:59 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:43:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 12:43:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:43:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:43:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:43:59 AI_Player.update()	update
2017-01-10 12:43:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:44:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:44:00 AI_Player.update()	Search took623ms
2017-01-10 12:44:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:00 AI_Player.update()		110,	101,	111,	1011,	111,	1100,	11
2017-01-10 12:44:00 AI_Player.update()		1010,	1001,	1010,	110,	111,	1010,	1011
2017-01-10 12:44:00 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-10 12:44:00 AI_Player.update()		1001,	1010,	110,	1110,	1001,	1101,	1001
2017-01-10 12:44:00 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:44:00 AI_Player.update()		101,	1100,	110,	1101,	1001,	11,	11
2017-01-10 12:44:00 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1100,	1001
2017-01-10 12:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	4 4
2017-01-10 12:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:00 AI_Player.update()	update
2017-01-10 12:44:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:44:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:44:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:44:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	5 4
2017-01-10 12:44:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:44:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:00 AI_Player.update()	update
2017-01-10 12:44:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:44:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:44:00 AI_Player.update()	Search took88ms
2017-01-10 12:44:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:00 AI_Player.update()		110,	101,	111,	1011,	111,	1100,	11
2017-01-10 12:44:00 AI_Player.update()		1010,	1001,	1010,	110,	111,	1010,	1011
2017-01-10 12:44:00 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-10 12:44:00 AI_Player.update()		1010,	110,	1110,	1001,	1101,	1001,	1001
2017-01-10 12:44:00 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-10 12:44:00 AI_Player.update()		101,	1100,	110,	1101,	1001,	11,	11
2017-01-10 12:44:00 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1100,	1001
2017-01-10 12:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	5 4
2017-01-10 12:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:00 AI_Player.update()	update
2017-01-10 12:44:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:44:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:44:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	5 5
2017-01-10 12:44:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:44:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:44:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:00 AI_Player.update()	update
2017-01-10 12:44:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:44:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:44:01 AI_Player.update()	Search took464ms
2017-01-10 12:44:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:01 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-10 12:44:01 AI_Player.update()		1010,	1001,	1010,	1011,	111,	1010,	1011
2017-01-10 12:44:01 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-10 12:44:01 AI_Player.update()		1010,	110,	1110,	1010,	1101,	1001,	1001
2017-01-10 12:44:01 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1001,	1011
2017-01-10 12:44:01 AI_Player.update()		101,	1100,	110,	1100,	1001,	11,	11
2017-01-10 12:44:01 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1100,	1001
2017-01-10 12:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:01 GameBoard.setupTreasurePanel()	5 5
2017-01-10 12:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:01 AI_Player.update()	update
2017-01-10 12:44:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:44:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:44:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:44:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:01 GameBoard.setupTreasurePanel()	6 5
2017-01-10 12:44:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:44:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:44:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:44:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:44:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:44:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:44:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:44:01 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:44:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 12:44:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:44:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:44:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:01 AI_Player.update()	update
2017-01-10 12:44:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:44:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:44:01 AI_Player.update()	Search took695ms
2017-01-10 12:44:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:01 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-10 12:44:01 AI_Player.update()		1010,	1010,	1010,	1011,	111,	1010,	1011
2017-01-10 12:44:01 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-10 12:44:01 AI_Player.update()		1010,	11,	1110,	1010,	1101,	1001,	1001
2017-01-10 12:44:01 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-10 12:44:01 AI_Player.update()		101,	1110,	110,	1100,	1001,	11,	11
2017-01-10 12:44:01 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-10 12:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:01 GameBoard.setupTreasurePanel()	6 5
2017-01-10 12:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:02 AI_Player.update()	update
2017-01-10 12:44:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:44:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:44:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:02 GameBoard.setupTreasurePanel()	6 6
2017-01-10 12:44:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:44:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:44:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:44:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:44:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:44:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:44:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:44:02 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:44:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 12:44:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:44:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 12:44:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:02 AI_Player.update()	update
2017-01-10 12:44:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:44:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:44:02 AI_Player.update()	Search took693ms
2017-01-10 12:44:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:02 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-10 12:44:02 AI_Player.update()		1010,	1001,	1010,	1011,	111,	1010,	1011
2017-01-10 12:44:02 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-10 12:44:02 AI_Player.update()		1010,	110,	1110,	1010,	1101,	1001,	1001
2017-01-10 12:44:02 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1001,	1011
2017-01-10 12:44:02 AI_Player.update()		101,	1100,	110,	1100,	1001,	11,	11
2017-01-10 12:44:02 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1100,	1001
2017-01-10 12:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:02 GameBoard.setupTreasurePanel()	6 6
2017-01-10 12:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:02 AI_Player.update()	update
2017-01-10 12:44:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:44:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:44:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:44:02 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-10 12:44:02 AI_Player.update()	Player a has won!
2017-01-10 12:44:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-10 12:44:04 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-10 12:44:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-10 12:44:04 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-10 12:44:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:04 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:44:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:44:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:44:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:44:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:44:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:44:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:44:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:44:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:44:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:44:04 GameBoard.setupTreasurePanel()	adding book
2017-01-10 12:44:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:44:04 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:04 AI_Player.update()	update
2017-01-10 12:44:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:44:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:44:04 AI_Player.update()	Search took38ms
2017-01-10 12:44:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:04 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-10 12:44:04 AI_Player.update()		101,	1010,	101,	101,	1010,	111,	101
2017-01-10 12:44:04 AI_Player.update()		1110,	1101,	1110,	1010,	111,	111,	1011
2017-01-10 12:44:04 AI_Player.update()		1010,	1001,	101,	110,	111,	1010,	1100
2017-01-10 12:44:04 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-10 12:44:04 AI_Player.update()		101,	1010,	101,	1010,	1100,	1010,	1010
2017-01-10 12:44:04 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1110,	1001
2017-01-10 12:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:04 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:04 AI_Player.update()	update
2017-01-10 12:44:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:44:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:44:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:44:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:04 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:05 AI_Player.update()	update
2017-01-10 12:44:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:44:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:44:05 AI_Player.update()	Search took13ms
2017-01-10 12:44:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:05 AI_Player.update()		110,	1001,	111,	1010,	111,	111,	11
2017-01-10 12:44:05 AI_Player.update()		101,	1010,	101,	101,	1010,	111,	101
2017-01-10 12:44:05 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1010,	1011
2017-01-10 12:44:05 AI_Player.update()		1010,	1001,	101,	110,	111,	101,	1100
2017-01-10 12:44:05 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-10 12:44:05 AI_Player.update()		101,	1010,	101,	1010,	1100,	1110,	1010
2017-01-10 12:44:05 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1001,	1001
2017-01-10 12:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:05 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:05 AI_Player.update()	update
2017-01-10 12:44:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:44:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:44:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:05 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:05 AI_Player.update()	update
2017-01-10 12:44:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:44:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:44:05 AI_Player.update()	Search took76ms
2017-01-10 12:44:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:05 AI_Player.update()		110,	1001,	111,	1010,	111,	111,	11
2017-01-10 12:44:05 AI_Player.update()		101,	1001,	101,	101,	1010,	111,	101
2017-01-10 12:44:05 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-10 12:44:05 AI_Player.update()		1010,	1101,	101,	110,	111,	101,	1100
2017-01-10 12:44:05 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-10 12:44:05 AI_Player.update()		101,	101,	101,	1010,	1100,	1110,	1010
2017-01-10 12:44:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-10 12:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:05 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:05 AI_Player.update()	update
2017-01-10 12:44:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:44:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:44:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:44:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:05 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:05 AI_Player.update()	update
2017-01-10 12:44:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:44:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:44:05 AI_Player.update()	Search took107ms
2017-01-10 12:44:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:05 AI_Player.update()		110,	1001,	111,	1010,	111,	111,	11
2017-01-10 12:44:05 AI_Player.update()		101,	1001,	101,	101,	1010,	1010,	101
2017-01-10 12:44:05 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-10 12:44:05 AI_Player.update()		1010,	1101,	101,	110,	111,	1010,	1100
2017-01-10 12:44:05 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-10 12:44:05 AI_Player.update()		101,	101,	101,	1010,	1100,	1001,	1010
2017-01-10 12:44:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-10 12:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:05 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:05 AI_Player.update()	update
2017-01-10 12:44:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:44:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:44:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:05 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:05 AI_Player.update()	update
2017-01-10 12:44:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:44:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:44:06 AI_Player.update()	Search took130ms
2017-01-10 12:44:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:06 AI_Player.update()		110,	1010,	111,	1010,	111,	111,	11
2017-01-10 12:44:06 AI_Player.update()		101,	1001,	101,	101,	1010,	1010,	101
2017-01-10 12:44:06 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-10 12:44:06 AI_Player.update()		1010,	1010,	101,	110,	111,	1010,	1100
2017-01-10 12:44:06 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1110,	1011
2017-01-10 12:44:06 AI_Player.update()		101,	1001,	101,	1010,	1100,	1001,	1010
2017-01-10 12:44:06 AI_Player.update()		1100,	101,	1101,	1100,	1101,	111,	1001
2017-01-10 12:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:44:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:06 AI_Player.update()	update
2017-01-10 12:44:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:44:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:44:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:44:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:44:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:06 AI_Player.update()	update
2017-01-10 12:44:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:44:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:44:06 AI_Player.update()	Search took623ms
2017-01-10 12:44:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:06 AI_Player.update()		110,	1010,	111,	1010,	111,	111,	11
2017-01-10 12:44:06 AI_Player.update()		101,	1001,	101,	101,	1010,	1010,	101
2017-01-10 12:44:06 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-10 12:44:06 AI_Player.update()		1100,	1010,	1010,	101,	110,	111,	1010
2017-01-10 12:44:06 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1110,	1011
2017-01-10 12:44:06 AI_Player.update()		101,	1001,	101,	1010,	1100,	1001,	1010
2017-01-10 12:44:06 AI_Player.update()		1100,	101,	1101,	1100,	1101,	111,	1001
2017-01-10 12:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	1 1
2017-01-10 12:44:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:06 AI_Player.update()	update
2017-01-10 12:44:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:44:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:44:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	1 2
2017-01-10 12:44:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:44:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	adding book
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:44:06 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:07 AI_Player.update()	update
2017-01-10 12:44:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:44:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:44:07 AI_Player.update()	Search took737ms
2017-01-10 12:44:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:07 AI_Player.update()		110,	1001,	111,	1010,	111,	111,	11
2017-01-10 12:44:07 AI_Player.update()		101,	1001,	101,	101,	1010,	1010,	101
2017-01-10 12:44:07 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-10 12:44:07 AI_Player.update()		1100,	1101,	1010,	101,	110,	111,	1010
2017-01-10 12:44:07 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-10 12:44:07 AI_Player.update()		101,	101,	101,	1010,	1100,	1001,	1010
2017-01-10 12:44:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-10 12:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:07 GameBoard.setupTreasurePanel()	1 2
2017-01-10 12:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:07 AI_Player.update()	update
2017-01-10 12:44:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:44:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:44:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:44:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:07 GameBoard.setupTreasurePanel()	2 2
2017-01-10 12:44:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:44:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:44:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:44:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:44:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:44:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:44:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:44:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:44:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:44:07 GameBoard.setupTreasurePanel()	adding book
2017-01-10 12:44:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:44:07 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:07 AI_Player.update()	update
2017-01-10 12:44:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 12:44:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 12:44:08 AI_Player.update()	Search took272ms
2017-01-10 12:44:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:08 AI_Player.update()		110,	1001,	111,	1010,	111,	111,	11
2017-01-10 12:44:08 AI_Player.update()		101,	1010,	101,	101,	1010,	1010,	101
2017-01-10 12:44:08 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-10 12:44:08 AI_Player.update()		1100,	1001,	1010,	101,	110,	111,	1010
2017-01-10 12:44:08 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-10 12:44:08 AI_Player.update()		101,	1010,	101,	1010,	1100,	1001,	1010
2017-01-10 12:44:08 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	111,	1001
2017-01-10 12:44:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:44:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:08 GameBoard.setupTreasurePanel()	2 2
2017-01-10 12:44:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:08 AI_Player.update()	update
2017-01-10 12:44:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 12:44:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 12:44:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 12:44:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 12:44:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:08 GameBoard.setupTreasurePanel()	2 3
2017-01-10 12:44:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:44:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:44:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:44:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:44:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:44:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:44:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:44:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:44:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:44:08 GameBoard.setupTreasurePanel()	adding book
2017-01-10 12:44:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:44:08 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:44:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:08 AI_Player.update()	update
2017-01-10 12:44:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 12:44:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-10 12:44:09 AI_Player.update()	Search took880ms
2017-01-10 12:44:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 12:44:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:09 AI_Player.update()		110,	1010,	111,	1010,	111,	111,	11
2017-01-10 12:44:09 AI_Player.update()		101,	1101,	101,	101,	1010,	1010,	101
2017-01-10 12:44:09 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-10 12:44:09 AI_Player.update()		1100,	101,	1010,	101,	110,	111,	1010
2017-01-10 12:44:09 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1110,	1011
2017-01-10 12:44:09 AI_Player.update()		101,	1001,	101,	1010,	1100,	1001,	1010
2017-01-10 12:44:09 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	111,	1001
2017-01-10 12:44:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 12:44:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 12:44:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:09 GameBoard.setupTreasurePanel()	2 3
2017-01-10 12:44:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:09 AI_Player.update()	update
2017-01-10 12:44:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 12:44:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 12:44:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-10 12:44:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 12:44:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 12:44:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 12:44:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 12:44:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 12:44:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 12:44:09 GameBoard.setupTreasurePanel()	3 3
2017-01-10 12:44:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 12:44:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 12:44:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 12:44:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 12:44:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 12:44:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 12:44:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 12:44:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 12:44:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 12:44:09 GameBoard.setupTreasurePanel()	adding book
2017-01-10 12:44:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 12:44:09 GameBoard.setupTreasurePanel()	adding map
2017-01-10 12:44:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 12:44:09 AI_Player.update()	update
2017-01-10 12:44:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
