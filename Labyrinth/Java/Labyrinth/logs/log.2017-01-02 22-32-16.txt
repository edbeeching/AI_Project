2017-01-02 22:32:16 GameBoard.<init>()	Hello World!
2017-01-02 22:32:16 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-02 22:32:16 QueryProlog.initialise()	setup(h3/h3). suceeded
2017-01-02 22:32:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:16 GameBoard.setupBoardFromString()	Board created
2017-01-02 22:32:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:16 GameBoard.initialise()	[helmet, crown, ring, fairy, gem]
2017-01-02 22:32:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:16 GameBoard.initialise()	[book, map, keys, gold, sword]
2017-01-02 22:32:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:16 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-02 22:32:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	null
2017-01-02 22:32:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:32:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:16 AI_Player.update()	update
2017-01-02 22:32:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:16 AI_Player.update()	Search took44ms
2017-01-02 22:32:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:16 AI_Player.update()		110,	111,	111,	11,	111,	111,	11
2017-01-02 22:32:16 AI_Player.update()		110,	1011,	1010,	101,	1010,	1010,	101
2017-01-02 22:32:16 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-02 22:32:16 AI_Player.update()		1010,	1001,	1001,	1010,	110,	110,	1010
2017-01-02 22:32:16 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:32:16 AI_Player.update()		101,	1010,	110,	1011,	11,	111,	1001
2017-01-02 22:32:16 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-02 22:32:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:32:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:17 AI_Player.update()	update
2017-01-02 22:32:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:17 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:17 AI_Player.update()	update
2017-01-02 22:32:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:17 AI_Player.update()	Search took162ms
2017-01-02 22:32:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:17 AI_Player.update()		110,	111,	111,	101,	111,	111,	11
2017-01-02 22:32:17 AI_Player.update()		110,	1011,	1010,	1100,	1010,	1010,	101
2017-01-02 22:32:17 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-02 22:32:17 AI_Player.update()		1010,	1001,	1001,	1010,	110,	110,	1010
2017-01-02 22:32:17 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1010,	1011
2017-01-02 22:32:17 AI_Player.update()		101,	1010,	110,	11,	11,	111,	1001
2017-01-02 22:32:17 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-02 22:32:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:17 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:18 AI_Player.update()	update
2017-01-02 22:32:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:18 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:18 AI_Player.update()	update
2017-01-02 22:32:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:19 AI_Player.update()	Search took319ms
2017-01-02 22:32:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:19 AI_Player.update()		110,	111,	111,	11,	111,	111,	11
2017-01-02 22:32:19 AI_Player.update()		110,	1011,	1010,	101,	1010,	1010,	101
2017-01-02 22:32:19 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-02 22:32:19 AI_Player.update()		1010,	1001,	1001,	1010,	110,	110,	1010
2017-01-02 22:32:19 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:32:19 AI_Player.update()		101,	1010,	110,	1011,	11,	111,	1001
2017-01-02 22:32:19 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-02 22:32:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:19 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:19 AI_Player.update()	update
2017-01-02 22:32:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:19 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:20 AI_Player.update()	update
2017-01-02 22:32:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:20 AI_Player.update()	Search took334ms
2017-01-02 22:32:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:20 AI_Player.update()		110,	111,	111,	11,	111,	111,	11
2017-01-02 22:32:20 AI_Player.update()		110,	1011,	1010,	101,	1010,	1010,	101
2017-01-02 22:32:20 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-02 22:32:20 AI_Player.update()		1010,	1001,	1001,	1010,	110,	110,	1010
2017-01-02 22:32:20 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:32:20 AI_Player.update()		1010,	110,	1011,	11,	111,	1001,	101
2017-01-02 22:32:20 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-02 22:32:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:20 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:21 AI_Player.update()	update
2017-01-02 22:32:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:21 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:21 AI_Player.update()	update
2017-01-02 22:32:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:21 AI_Player.update()	Search took251ms
2017-01-02 22:32:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:21 AI_Player.update()		110,	111,	111,	11,	111,	111,	11
2017-01-02 22:32:21 AI_Player.update()		101,	110,	1011,	1010,	101,	1010,	1010
2017-01-02 22:32:21 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-02 22:32:21 AI_Player.update()		1010,	1001,	1001,	1010,	110,	110,	1010
2017-01-02 22:32:21 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:32:21 AI_Player.update()		1010,	110,	1011,	11,	111,	1001,	101
2017-01-02 22:32:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-02 22:32:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:21 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:22 AI_Player.update()	update
2017-01-02 22:32:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:22 GameBoard.setupTreasurePanel()	2 1
2017-01-02 22:32:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:32:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:22 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:22 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:32:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:22 AI_Player.update()	update
2017-01-02 22:32:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:23 AI_Player.update()	Search took173ms
2017-01-02 22:32:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:23 AI_Player.update()		110,	110,	111,	11,	111,	111,	11
2017-01-02 22:32:23 AI_Player.update()		101,	101,	1011,	1010,	101,	1010,	1010
2017-01-02 22:32:23 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-02 22:32:23 AI_Player.update()		1010,	1001,	1001,	1010,	110,	110,	1010
2017-01-02 22:32:23 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:32:23 AI_Player.update()		1010,	1010,	1011,	11,	111,	1001,	101
2017-01-02 22:32:23 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-02 22:32:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:23 GameBoard.setupTreasurePanel()	2 1
2017-01-02 22:32:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:23 AI_Player.update()	update
2017-01-02 22:32:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:23 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:32:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:32:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:23 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:23 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:32:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:24 AI_Player.update()	update
2017-01-02 22:32:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:24 AI_Player.update()	Search took194ms
2017-01-02 22:32:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:24 AI_Player.update()		110,	110,	111,	11,	111,	111,	11
2017-01-02 22:32:24 AI_Player.update()		101,	101,	1011,	1010,	101,	1010,	1010
2017-01-02 22:32:24 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-02 22:32:24 AI_Player.update()		1010,	1010,	1001,	1001,	1010,	110,	110
2017-01-02 22:32:24 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:32:24 AI_Player.update()		1010,	1010,	1011,	11,	111,	1001,	101
2017-01-02 22:32:24 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-02 22:32:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:24 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:32:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:24 AI_Player.update()	update
2017-01-02 22:32:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:24 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:32:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:25 AI_Player.update()	update
2017-01-02 22:32:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:25 AI_Player.update()	Search took208ms
2017-01-02 22:32:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:25 AI_Player.update()		110,	110,	111,	1010,	111,	111,	11
2017-01-02 22:32:25 AI_Player.update()		101,	101,	1011,	1100,	101,	1010,	1010
2017-01-02 22:32:25 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-02 22:32:25 AI_Player.update()		1010,	1010,	1001,	1010,	1010,	110,	110
2017-01-02 22:32:25 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-02 22:32:25 AI_Player.update()		1010,	1010,	1011,	11,	111,	1001,	101
2017-01-02 22:32:25 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-02 22:32:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:25 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:32:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:26 AI_Player.update()	update
2017-01-02 22:32:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:26 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:32:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:26 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:26 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:32:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:26 AI_Player.update()	update
2017-01-02 22:32:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:26 AI_Player.update()	Search took79ms
2017-01-02 22:32:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:26 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-02 22:32:26 AI_Player.update()		101,	101,	1011,	1100,	101,	111,	1010
2017-01-02 22:32:26 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-02 22:32:26 AI_Player.update()		1010,	1010,	1001,	1010,	1010,	1010,	110
2017-01-02 22:32:26 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-02 22:32:26 AI_Player.update()		1010,	1010,	1011,	11,	111,	1010,	101
2017-01-02 22:32:26 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-02 22:32:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:26 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:27 AI_Player.update()	update
2017-01-02 22:32:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:27 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:27 AI_Player.update()	update
2017-01-02 22:32:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:27 AI_Player.update()	Search took180ms
2017-01-02 22:32:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:27 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-02 22:32:27 AI_Player.update()		101,	110,	1011,	1100,	101,	111,	1010
2017-01-02 22:32:27 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-02 22:32:27 AI_Player.update()		1010,	1001,	1001,	1010,	1010,	1010,	110
2017-01-02 22:32:27 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-02 22:32:27 AI_Player.update()		1010,	110,	1011,	11,	111,	1010,	101
2017-01-02 22:32:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-02 22:32:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:27 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:28 AI_Player.update()	update
2017-01-02 22:32:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:28 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:28 AI_Player.update()	update
2017-01-02 22:32:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:28 AI_Player.update()	Search took94ms
2017-01-02 22:32:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:28 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-02 22:32:28 AI_Player.update()		101,	110,	1011,	1100,	101,	111,	1010
2017-01-02 22:32:28 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-02 22:32:28 AI_Player.update()		1010,	1001,	1001,	1010,	1010,	1010,	110
2017-01-02 22:32:28 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-02 22:32:28 AI_Player.update()		110,	1011,	11,	111,	1010,	101,	1010
2017-01-02 22:32:28 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-02 22:32:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:28 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:29 AI_Player.update()	update
2017-01-02 22:32:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:29 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:32:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:32:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:29 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:29 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:32:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:29 AI_Player.update()	update
2017-01-02 22:32:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:30 AI_Player.update()	Search took96ms
2017-01-02 22:32:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:30 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-02 22:32:30 AI_Player.update()		101,	101,	1011,	1100,	101,	111,	1010
2017-01-02 22:32:30 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-02 22:32:30 AI_Player.update()		1010,	1010,	1001,	1010,	1010,	1010,	110
2017-01-02 22:32:30 AI_Player.update()		1110,	1011,	1101,	11,	1011,	110,	1011
2017-01-02 22:32:30 AI_Player.update()		110,	1010,	11,	111,	1010,	101,	1010
2017-01-02 22:32:30 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-02 22:32:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:30 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:32:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:30 AI_Player.update()	update
2017-01-02 22:32:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:30 GameBoard.setupTreasurePanel()	3 4
2017-01-02 22:32:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:32:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:30 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:30 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:32:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:31 AI_Player.update()	update
2017-01-02 22:32:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:31 AI_Player.update()	Search took216ms
2017-01-02 22:32:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:31 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-02 22:32:31 AI_Player.update()		101,	101,	1011,	1100,	101,	1001,	1010
2017-01-02 22:32:31 AI_Player.update()		1110,	1001,	1110,	1001,	111,	111,	1011
2017-01-02 22:32:31 AI_Player.update()		1010,	1010,	1001,	1010,	1010,	1010,	110
2017-01-02 22:32:31 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1010,	1011
2017-01-02 22:32:31 AI_Player.update()		110,	1010,	11,	111,	1010,	110,	1010
2017-01-02 22:32:31 AI_Player.update()		1100,	111,	1101,	11,	1101,	101,	1001
2017-01-02 22:32:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:31 GameBoard.setupTreasurePanel()	3 4
2017-01-02 22:32:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:31 AI_Player.update()	update
2017-01-02 22:32:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:31 GameBoard.setupTreasurePanel()	3 4
2017-01-02 22:32:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:32 AI_Player.update()	update
2017-01-02 22:32:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:32 AI_Player.update()	Search took272ms
2017-01-02 22:32:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:32 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-02 22:32:32 AI_Player.update()		101,	101,	1011,	1010,	101,	1001,	1010
2017-01-02 22:32:32 AI_Player.update()		1110,	1001,	1110,	1100,	111,	111,	1011
2017-01-02 22:32:32 AI_Player.update()		1010,	1010,	1001,	1001,	1010,	1010,	110
2017-01-02 22:32:32 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:32:32 AI_Player.update()		110,	1010,	11,	11,	1010,	110,	1010
2017-01-02 22:32:32 AI_Player.update()		1100,	111,	1101,	111,	1101,	101,	1001
2017-01-02 22:32:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:32 GameBoard.setupTreasurePanel()	3 4
2017-01-02 22:32:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:33 AI_Player.update()	update
2017-01-02 22:32:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:33 GameBoard.setupTreasurePanel()	3 5
2017-01-02 22:32:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:32:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:33 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:33 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:32:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:33 AI_Player.update()	update
2017-01-02 22:32:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:34 AI_Player.update()	Search took736ms
2017-01-02 22:32:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:34 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-02 22:32:34 AI_Player.update()		101,	101,	1011,	1010,	101,	1001,	1010
2017-01-02 22:32:34 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-02 22:32:34 AI_Player.update()		1010,	1010,	1001,	1001,	1010,	111,	110
2017-01-02 22:32:34 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:32:34 AI_Player.update()		110,	1010,	11,	11,	1010,	1010,	1010
2017-01-02 22:32:34 AI_Player.update()		1100,	111,	1101,	111,	1101,	110,	1001
2017-01-02 22:32:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:34 GameBoard.setupTreasurePanel()	3 5
2017-01-02 22:32:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:34 AI_Player.update()	update
2017-01-02 22:32:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:34 GameBoard.setupTreasurePanel()	4 5
2017-01-02 22:32:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:32:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:34 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:34 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:32:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:35 AI_Player.update()	update
2017-01-02 22:32:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:35 AI_Player.update()	Search took245ms
2017-01-02 22:32:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:35 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-02 22:32:35 AI_Player.update()		101,	1001,	1011,	1010,	101,	1001,	1010
2017-01-02 22:32:35 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-02 22:32:35 AI_Player.update()		1010,	1011,	1001,	1001,	1010,	111,	110
2017-01-02 22:32:35 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:32:35 AI_Player.update()		110,	111,	11,	11,	1010,	1010,	1010
2017-01-02 22:32:35 AI_Player.update()		1100,	110,	1101,	111,	1101,	110,	1001
2017-01-02 22:32:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:35 GameBoard.setupTreasurePanel()	4 5
2017-01-02 22:32:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:36 AI_Player.update()	update
2017-01-02 22:32:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:36 GameBoard.setupTreasurePanel()	4 5
2017-01-02 22:32:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:36 AI_Player.update()	update
2017-01-02 22:32:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:36 AI_Player.update()	Search took116ms
2017-01-02 22:32:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:36 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-02 22:32:36 AI_Player.update()		101,	1001,	1011,	11,	101,	1001,	1010
2017-01-02 22:32:36 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-02 22:32:36 AI_Player.update()		1010,	1011,	1001,	1100,	1010,	111,	110
2017-01-02 22:32:36 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:32:36 AI_Player.update()		110,	111,	11,	1010,	1010,	1010,	1010
2017-01-02 22:32:36 AI_Player.update()		1100,	110,	1101,	11,	1101,	110,	1001
2017-01-02 22:32:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:36 GameBoard.setupTreasurePanel()	4 5
2017-01-02 22:32:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:37 AI_Player.update()	update
2017-01-02 22:32:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:37 GameBoard.setupTreasurePanel()	4 5
2017-01-02 22:32:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:37 AI_Player.update()	update
2017-01-02 22:32:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:37 AI_Player.update()	Search took265ms
2017-01-02 22:32:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:37 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-02 22:32:37 AI_Player.update()		101,	1010,	1011,	11,	101,	1001,	1010
2017-01-02 22:32:37 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-02 22:32:37 AI_Player.update()		1010,	1010,	1001,	1100,	1010,	111,	110
2017-01-02 22:32:37 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:32:37 AI_Player.update()		110,	110,	11,	1010,	1010,	1010,	1010
2017-01-02 22:32:37 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-02 22:32:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:37 GameBoard.setupTreasurePanel()	4 5
2017-01-02 22:32:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:38 AI_Player.update()	update
2017-01-02 22:32:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:38 GameBoard.setupTreasurePanel()	4 6
2017-01-02 22:32:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:32:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:38 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:38 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:32:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:38 AI_Player.update()	update
2017-01-02 22:32:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:39 AI_Player.update()	Search took89ms
2017-01-02 22:32:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:39 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-02 22:32:39 AI_Player.update()		1010,	101,	1010,	1011,	11,	101,	1001
2017-01-02 22:32:39 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-02 22:32:39 AI_Player.update()		1010,	1010,	1001,	1100,	1010,	111,	110
2017-01-02 22:32:39 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:32:39 AI_Player.update()		110,	110,	11,	1010,	1010,	1010,	1010
2017-01-02 22:32:39 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-02 22:32:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:39 GameBoard.setupTreasurePanel()	4 6
2017-01-02 22:32:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:39 AI_Player.update()	update
2017-01-02 22:32:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:39 GameBoard.setupTreasurePanel()	5 6
2017-01-02 22:32:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:32:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:39 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:39 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:32:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:40 AI_Player.update()	update
2017-01-02 22:32:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:40 AI_Player.update()	Search took496ms
2017-01-02 22:32:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:40 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-02 22:32:40 AI_Player.update()		1001,	1010,	101,	1010,	1011,	11,	101
2017-01-02 22:32:40 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-02 22:32:40 AI_Player.update()		1010,	1010,	1001,	1100,	1010,	111,	110
2017-01-02 22:32:40 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1010,	1011
2017-01-02 22:32:40 AI_Player.update()		110,	110,	11,	1010,	1010,	1010,	1010
2017-01-02 22:32:40 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-02 22:32:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:40 GameBoard.setupTreasurePanel()	5 6
2017-01-02 22:32:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:41 AI_Player.update()	update
2017-01-02 22:32:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:41 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-02 22:32:41 AI_Player.update()	Player b has won!
2017-01-02 22:32:48 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-02 22:32:48 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-02 22:32:48 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-02 22:32:48 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-02 22:32:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:48 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:48 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:32:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:48 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:32:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:48 AI_Player.update()	update
2017-01-02 22:32:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:48 AI_Player.update()	Search took79ms
2017-01-02 22:32:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:48 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-02 22:32:48 AI_Player.update()		11,	101,	1011,	1110,	1010,	11,	1100
2017-01-02 22:32:48 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-02 22:32:48 AI_Player.update()		101,	1001,	1110,	1110,	1100,	1110,	1010
2017-01-02 22:32:48 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1101,	1011
2017-01-02 22:32:48 AI_Player.update()		1100,	1010,	101,	1001,	110,	1010,	101
2017-01-02 22:32:48 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-02 22:32:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:48 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:49 AI_Player.update()	update
2017-01-02 22:32:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:49 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:49 AI_Player.update()	update
2017-01-02 22:32:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:49 AI_Player.update()	Search took30ms
2017-01-02 22:32:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:49 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-02 22:32:49 AI_Player.update()		11,	101,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:32:49 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-02 22:32:49 AI_Player.update()		101,	1001,	1110,	1110,	1100,	1001,	1010
2017-01-02 22:32:49 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-02 22:32:49 AI_Player.update()		1100,	1010,	101,	1001,	110,	1101,	101
2017-01-02 22:32:49 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-02 22:32:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:49 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:32:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:50 AI_Player.update()	update
2017-01-02 22:32:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:50 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:32:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:50 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:32:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:50 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:32:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:50 AI_Player.update()	update
2017-01-02 22:32:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:51 AI_Player.update()	Search took329ms
2017-01-02 22:32:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:51 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-02 22:32:51 AI_Player.update()		11,	1001,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:32:51 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-02 22:32:51 AI_Player.update()		101,	110,	1110,	1110,	1100,	1001,	1010
2017-01-02 22:32:51 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1110,	1011
2017-01-02 22:32:51 AI_Player.update()		1100,	1001,	101,	1001,	110,	1101,	101
2017-01-02 22:32:51 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-02 22:32:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:51 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:32:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:51 AI_Player.update()	update
2017-01-02 22:32:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:51 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:32:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:51 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:32:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:51 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:32:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:52 AI_Player.update()	update
2017-01-02 22:32:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:52 AI_Player.update()	Search took118ms
2017-01-02 22:32:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:52 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-02 22:32:52 AI_Player.update()		11,	101,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:32:52 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-02 22:32:52 AI_Player.update()		101,	1001,	1110,	1110,	1100,	1001,	1010
2017-01-02 22:32:52 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-02 22:32:52 AI_Player.update()		1100,	1010,	101,	1001,	110,	1101,	101
2017-01-02 22:32:52 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-02 22:32:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:52 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:32:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:52 AI_Player.update()	update
2017-01-02 22:32:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:52 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:32:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:53 AI_Player.update()	update
2017-01-02 22:32:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:53 AI_Player.update()	Search took25ms
2017-01-02 22:32:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:53 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-02 22:32:53 AI_Player.update()		11,	101,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:32:53 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-02 22:32:53 AI_Player.update()		101,	1001,	1110,	1110,	1100,	1001,	1010
2017-01-02 22:32:53 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-02 22:32:53 AI_Player.update()		101,	1100,	1010,	101,	1001,	110,	1101
2017-01-02 22:32:53 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-02 22:32:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:53 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:32:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:53 AI_Player.update()	update
2017-01-02 22:32:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:53 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:32:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:54 AI_Player.update()	update
2017-01-02 22:32:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:54 AI_Player.update()	Search took109ms
2017-01-02 22:32:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:54 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-02 22:32:54 AI_Player.update()		1100,	11,	101,	1011,	1110,	1010,	1010
2017-01-02 22:32:54 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-02 22:32:54 AI_Player.update()		101,	1001,	1110,	1110,	1100,	1001,	1010
2017-01-02 22:32:54 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-02 22:32:54 AI_Player.update()		101,	1100,	1010,	101,	1001,	110,	1101
2017-01-02 22:32:54 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-02 22:32:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:54 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:32:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:54 AI_Player.update()	update
2017-01-02 22:32:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:54 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:54 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:32:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:54 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:32:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:55 AI_Player.update()	update
2017-01-02 22:32:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:55 AI_Player.update()	Search took75ms
2017-01-02 22:32:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:55 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-02 22:32:55 AI_Player.update()		11,	101,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:32:55 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-02 22:32:55 AI_Player.update()		101,	1001,	1110,	1110,	1100,	1001,	1010
2017-01-02 22:32:55 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-02 22:32:55 AI_Player.update()		101,	1100,	1010,	101,	1001,	110,	1101
2017-01-02 22:32:55 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-02 22:32:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:55 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:55 AI_Player.update()	update
2017-01-02 22:32:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:55 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:56 AI_Player.update()	update
2017-01-02 22:32:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:56 AI_Player.update()	Search took50ms
2017-01-02 22:32:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:56 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-02 22:32:56 AI_Player.update()		11,	101,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:32:56 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-02 22:32:56 AI_Player.update()		101,	1001,	1110,	1110,	1100,	1001,	1010
2017-01-02 22:32:56 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-02 22:32:56 AI_Player.update()		101,	110,	1010,	101,	1001,	110,	1101
2017-01-02 22:32:56 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-02 22:32:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:56 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:56 AI_Player.update()	update
2017-01-02 22:32:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:56 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:57 AI_Player.update()	update
2017-01-02 22:32:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:57 AI_Player.update()	Search took59ms
2017-01-02 22:32:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:57 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-02 22:32:57 AI_Player.update()		11,	101,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:32:57 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-02 22:32:57 AI_Player.update()		101,	1001,	1110,	1110,	1100,	1001,	1010
2017-01-02 22:32:57 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-02 22:32:57 AI_Player.update()		101,	1100,	1010,	101,	1001,	110,	1101
2017-01-02 22:32:57 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-02 22:32:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:57 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:58 AI_Player.update()	update
2017-01-02 22:32:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:32:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:32:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:32:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:32:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:58 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:58 AI_Player.update()	update
2017-01-02 22:32:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:32:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:32:58 AI_Player.update()	Search took343ms
2017-01-02 22:32:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:58 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-02 22:32:58 AI_Player.update()		11,	1001,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:32:58 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-02 22:32:58 AI_Player.update()		101,	110,	1110,	1110,	1100,	1001,	1010
2017-01-02 22:32:58 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1110,	1011
2017-01-02 22:32:58 AI_Player.update()		101,	1001,	1010,	101,	1001,	110,	1101
2017-01-02 22:32:58 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-02 22:32:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:58 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:32:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:59 AI_Player.update()	update
2017-01-02 22:32:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:32:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:32:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:32:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:32:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:59 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:32:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:32:59 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:32:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:32:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:32:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:32:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:32:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:32:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:32:59 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:32:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:32:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:32:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:32:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:32:59 AI_Player.update()	update
2017-01-02 22:32:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:32:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:32:59 AI_Player.update()	Search took52ms
2017-01-02 22:32:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:32:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:59 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-02 22:32:59 AI_Player.update()		11,	101,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:32:59 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-02 22:32:59 AI_Player.update()		101,	1001,	1110,	1110,	1100,	1001,	1010
2017-01-02 22:32:59 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-02 22:32:59 AI_Player.update()		101,	1100,	1010,	101,	1001,	110,	1101
2017-01-02 22:32:59 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-02 22:32:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:32:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:32:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:32:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:32:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:32:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:32:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:32:59 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:33:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:00 AI_Player.update()	update
2017-01-02 22:33:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:00 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:33:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:00 AI_Player.update()	update
2017-01-02 22:33:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:01 AI_Player.update()	Search took478ms
2017-01-02 22:33:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:01 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-02 22:33:01 AI_Player.update()		11,	101,	1011,	110,	1010,	1010,	1100
2017-01-02 22:33:01 AI_Player.update()		1110,	1001,	1110,	1110,	111,	11,	1011
2017-01-02 22:33:01 AI_Player.update()		101,	1001,	1110,	1001,	1100,	1001,	1010
2017-01-02 22:33:01 AI_Player.update()		1110,	110,	1101,	101,	1011,	1110,	1011
2017-01-02 22:33:01 AI_Player.update()		101,	1100,	1010,	110,	1001,	110,	1101
2017-01-02 22:33:01 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:33:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:01 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:33:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:01 AI_Player.update()	update
2017-01-02 22:33:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:01 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:33:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:02 AI_Player.update()	update
2017-01-02 22:33:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:02 AI_Player.update()	Search took100ms
2017-01-02 22:33:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:02 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-02 22:33:02 AI_Player.update()		11,	101,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:33:02 AI_Player.update()		1110,	1001,	1110,	1001,	111,	11,	1011
2017-01-02 22:33:02 AI_Player.update()		101,	1001,	1110,	101,	1100,	1001,	1010
2017-01-02 22:33:02 AI_Player.update()		1110,	110,	1101,	110,	1011,	1110,	1011
2017-01-02 22:33:02 AI_Player.update()		101,	1100,	1010,	1010,	1001,	110,	1101
2017-01-02 22:33:02 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1010,	1001
2017-01-02 22:33:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:02 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:33:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:03 AI_Player.update()	update
2017-01-02 22:33:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:03 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:33:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:03 AI_Player.update()	update
2017-01-02 22:33:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:03 AI_Player.update()	Search took181ms
2017-01-02 22:33:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:03 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-02 22:33:03 AI_Player.update()		11,	1001,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:33:03 AI_Player.update()		1110,	1001,	1110,	1001,	111,	11,	1011
2017-01-02 22:33:03 AI_Player.update()		101,	110,	1110,	101,	1100,	1001,	1010
2017-01-02 22:33:03 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-02 22:33:03 AI_Player.update()		101,	1001,	1010,	1010,	1001,	110,	1101
2017-01-02 22:33:03 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-02 22:33:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:03 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:33:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:04 AI_Player.update()	update
2017-01-02 22:33:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:04 GameBoard.setupTreasurePanel()	2 5
2017-01-02 22:33:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:33:04 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:33:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:33:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:33:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:33:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:33:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:33:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:33:04 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:33:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:33:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:33:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:33:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:04 AI_Player.update()	update
2017-01-02 22:33:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:04 AI_Player.update()	Search took50ms
2017-01-02 22:33:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:04 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-02 22:33:04 AI_Player.update()		11,	101,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:33:04 AI_Player.update()		1110,	1001,	1110,	1001,	111,	11,	1011
2017-01-02 22:33:04 AI_Player.update()		101,	1001,	1110,	101,	1100,	1001,	1010
2017-01-02 22:33:04 AI_Player.update()		1110,	110,	1101,	110,	1011,	1110,	1011
2017-01-02 22:33:04 AI_Player.update()		101,	1100,	1010,	1010,	1001,	110,	1101
2017-01-02 22:33:04 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1010,	1001
2017-01-02 22:33:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:04 GameBoard.setupTreasurePanel()	2 5
2017-01-02 22:33:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:05 AI_Player.update()	update
2017-01-02 22:33:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:05 GameBoard.setupTreasurePanel()	2 5
2017-01-02 22:33:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:05 AI_Player.update()	update
2017-01-02 22:33:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:05 AI_Player.update()	Search took114ms
2017-01-02 22:33:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:05 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-02 22:33:05 AI_Player.update()		11,	1001,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:33:05 AI_Player.update()		1110,	1001,	1110,	1001,	111,	11,	1011
2017-01-02 22:33:05 AI_Player.update()		101,	110,	1110,	101,	1100,	1001,	1010
2017-01-02 22:33:05 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-02 22:33:05 AI_Player.update()		101,	1001,	1010,	1010,	1001,	110,	1101
2017-01-02 22:33:05 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-02 22:33:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:05 GameBoard.setupTreasurePanel()	2 5
2017-01-02 22:33:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:06 AI_Player.update()	update
2017-01-02 22:33:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:06 GameBoard.setupTreasurePanel()	2 6
2017-01-02 22:33:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:33:06 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:33:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:33:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:33:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:33:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:33:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:33:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:33:06 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:33:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:33:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:33:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:33:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:06 AI_Player.update()	update
2017-01-02 22:33:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:06 AI_Player.update()	Search took71ms
2017-01-02 22:33:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:06 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-02 22:33:06 AI_Player.update()		11,	101,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:33:06 AI_Player.update()		1110,	1001,	1110,	1001,	111,	11,	1011
2017-01-02 22:33:06 AI_Player.update()		101,	1001,	1110,	101,	1100,	1001,	1010
2017-01-02 22:33:06 AI_Player.update()		1110,	110,	1101,	110,	1011,	1110,	1011
2017-01-02 22:33:06 AI_Player.update()		101,	1100,	1010,	1010,	1001,	110,	1101
2017-01-02 22:33:06 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1010,	1001
2017-01-02 22:33:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:06 GameBoard.setupTreasurePanel()	2 6
2017-01-02 22:33:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:07 AI_Player.update()	update
2017-01-02 22:33:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:07 GameBoard.setupTreasurePanel()	2 6
2017-01-02 22:33:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:07 AI_Player.update()	update
2017-01-02 22:33:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:08 AI_Player.update()	Search took168ms
2017-01-02 22:33:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:08 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-02 22:33:08 AI_Player.update()		11,	101,	1011,	110,	1010,	1010,	1100
2017-01-02 22:33:08 AI_Player.update()		1110,	1001,	1110,	1110,	111,	11,	1011
2017-01-02 22:33:08 AI_Player.update()		101,	1001,	1110,	1001,	1100,	1001,	1010
2017-01-02 22:33:08 AI_Player.update()		1110,	110,	1101,	101,	1011,	1110,	1011
2017-01-02 22:33:08 AI_Player.update()		101,	1100,	1010,	110,	1001,	110,	1101
2017-01-02 22:33:08 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:33:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:08 GameBoard.setupTreasurePanel()	2 6
2017-01-02 22:33:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:08 AI_Player.update()	update
2017-01-02 22:33:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:08 GameBoard.setupTreasurePanel()	2 6
2017-01-02 22:33:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:09 AI_Player.update()	update
2017-01-02 22:33:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:09 AI_Player.update()	Search took94ms
2017-01-02 22:33:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:09 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-02 22:33:09 AI_Player.update()		11,	101,	1011,	1110,	1010,	1010,	1100
2017-01-02 22:33:09 AI_Player.update()		1110,	1001,	1110,	1001,	111,	11,	1011
2017-01-02 22:33:09 AI_Player.update()		101,	1001,	1110,	101,	1100,	1001,	1010
2017-01-02 22:33:09 AI_Player.update()		1110,	110,	1101,	110,	1011,	1110,	1011
2017-01-02 22:33:09 AI_Player.update()		101,	1100,	1010,	1010,	1001,	110,	1101
2017-01-02 22:33:09 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1010,	1001
2017-01-02 22:33:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:09 GameBoard.setupTreasurePanel()	2 6
2017-01-02 22:33:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:09 AI_Player.update()	update
2017-01-02 22:33:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:09 GameBoard.setupTreasurePanel()	2 6
2017-01-02 22:33:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:10 AI_Player.update()	update
2017-01-02 22:33:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:10 AI_Player.update()	Search took434ms
2017-01-02 22:33:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:10 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-02 22:33:10 AI_Player.update()		101,	1011,	1110,	1010,	1010,	1100,	11
2017-01-02 22:33:10 AI_Player.update()		1110,	1001,	1110,	1001,	111,	11,	1011
2017-01-02 22:33:10 AI_Player.update()		101,	1001,	1110,	101,	1100,	1001,	1010
2017-01-02 22:33:10 AI_Player.update()		1110,	110,	1101,	110,	1011,	1110,	1011
2017-01-02 22:33:10 AI_Player.update()		101,	1100,	1010,	1010,	1001,	110,	1101
2017-01-02 22:33:10 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1010,	1001
2017-01-02 22:33:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:10 GameBoard.setupTreasurePanel()	2 6
2017-01-02 22:33:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:11 AI_Player.update()	update
2017-01-02 22:33:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:11 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-02 22:33:11 AI_Player.update()	Player b has won!
2017-01-02 22:33:16 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-02 22:33:16 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-02 22:33:16 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-02 22:33:16 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-02 22:33:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:16 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:33:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:33:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:33:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:33:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:33:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:33:16 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:33:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:33:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:33:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:33:16 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:33:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:33:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:33:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:17 AI_Player.update()	update
2017-01-02 22:33:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:17 AI_Player.update()	Search took164ms
2017-01-02 22:33:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:17 AI_Player.update()		110,	1011,	111,	1101,	111,	1011,	11
2017-01-02 22:33:17 AI_Player.update()		1010,	1001,	1100,	1001,	101,	1001,	101
2017-01-02 22:33:17 AI_Player.update()		1110,	11,	1110,	1110,	111,	110,	1011
2017-01-02 22:33:17 AI_Player.update()		1010,	1100,	110,	11,	1010,	101,	110
2017-01-02 22:33:17 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:33:17 AI_Player.update()		1010,	1010,	101,	110,	1010,	1010,	101
2017-01-02 22:33:17 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-02 22:33:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:17 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:33:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:18 AI_Player.update()	update
2017-01-02 22:33:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:18 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:33:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:18 AI_Player.update()	update
2017-01-02 22:33:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:18 AI_Player.update()	Search took36ms
2017-01-02 22:33:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:18 AI_Player.update()		110,	1011,	111,	1101,	111,	1011,	11
2017-01-02 22:33:18 AI_Player.update()		1001,	1100,	1001,	101,	1001,	101,	1010
2017-01-02 22:33:18 AI_Player.update()		1110,	11,	1110,	1110,	111,	110,	1011
2017-01-02 22:33:18 AI_Player.update()		1010,	1100,	110,	11,	1010,	101,	110
2017-01-02 22:33:18 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:33:18 AI_Player.update()		1010,	1010,	101,	110,	1010,	1010,	101
2017-01-02 22:33:18 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-02 22:33:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:18 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:33:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:19 AI_Player.update()	update
2017-01-02 22:33:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:19 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:33:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:33:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:33:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:33:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:33:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:33:19 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:33:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:33:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:33:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:33:19 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:33:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:33:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:33:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:19 AI_Player.update()	update
2017-01-02 22:33:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:19 AI_Player.update()	Search took283ms
2017-01-02 22:33:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:19 AI_Player.update()		110,	1011,	111,	1100,	111,	1011,	11
2017-01-02 22:33:19 AI_Player.update()		1001,	1100,	1001,	1101,	1001,	101,	1010
2017-01-02 22:33:19 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-02 22:33:19 AI_Player.update()		1010,	1100,	110,	1110,	1010,	101,	110
2017-01-02 22:33:19 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-02 22:33:19 AI_Player.update()		1010,	1010,	101,	1010,	1010,	1010,	101
2017-01-02 22:33:19 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-02 22:33:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:19 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:33:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:20 AI_Player.update()	update
2017-01-02 22:33:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:20 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:33:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:33:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:33:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:33:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:33:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:33:20 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:33:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:33:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:33:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:33:20 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:33:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:33:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:33:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:20 AI_Player.update()	update
2017-01-02 22:33:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:21 AI_Player.update()	Search took175ms
2017-01-02 22:33:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:21 AI_Player.update()		110,	1011,	111,	1100,	111,	101,	11
2017-01-02 22:33:21 AI_Player.update()		1001,	1100,	1001,	1101,	1001,	110,	1010
2017-01-02 22:33:21 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-02 22:33:21 AI_Player.update()		1010,	1100,	110,	1110,	1010,	1010,	110
2017-01-02 22:33:21 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-02 22:33:21 AI_Player.update()		1010,	1010,	101,	1010,	1010,	101,	101
2017-01-02 22:33:21 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1011,	1001
2017-01-02 22:33:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:21 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:33:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:21 AI_Player.update()	update
2017-01-02 22:33:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:21 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:33:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:22 AI_Player.update()	update
2017-01-02 22:33:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:22 AI_Player.update()	Search took127ms
2017-01-02 22:33:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:22 AI_Player.update()		110,	1011,	111,	1101,	111,	101,	11
2017-01-02 22:33:22 AI_Player.update()		1001,	1100,	1001,	101,	1001,	110,	1010
2017-01-02 22:33:22 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-02 22:33:22 AI_Player.update()		1010,	1100,	110,	11,	1010,	1010,	110
2017-01-02 22:33:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:33:22 AI_Player.update()		1010,	1010,	101,	110,	1010,	101,	101
2017-01-02 22:33:22 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1011,	1001
2017-01-02 22:33:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:22 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:33:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:22 AI_Player.update()	update
2017-01-02 22:33:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:22 GameBoard.setupTreasurePanel()	3 2
2017-01-02 22:33:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:33:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:33:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:33:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:33:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:33:22 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:33:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:33:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:33:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:33:22 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:33:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:33:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:33:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:23 AI_Player.update()	update
2017-01-02 22:33:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:23 AI_Player.update()	Search took546ms
2017-01-02 22:33:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:23 AI_Player.update()		110,	1011,	111,	1101,	111,	101,	11
2017-01-02 22:33:23 AI_Player.update()		1001,	1100,	1001,	101,	1001,	110,	1010
2017-01-02 22:33:23 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-02 22:33:23 AI_Player.update()		1010,	1100,	110,	11,	1010,	1010,	110
2017-01-02 22:33:23 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:33:23 AI_Player.update()		101,	1010,	1010,	101,	110,	1010,	101
2017-01-02 22:33:23 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1011,	1001
2017-01-02 22:33:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:23 GameBoard.setupTreasurePanel()	3 2
2017-01-02 22:33:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:24 AI_Player.update()	update
2017-01-02 22:33:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:24 GameBoard.setupTreasurePanel()	3 2
2017-01-02 22:33:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:24 AI_Player.update()	update
2017-01-02 22:33:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:25 AI_Player.update()	Search took251ms
2017-01-02 22:33:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:25 AI_Player.update()		110,	1100,	111,	1101,	111,	101,	11
2017-01-02 22:33:25 AI_Player.update()		1001,	11,	1001,	101,	1001,	110,	1010
2017-01-02 22:33:25 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-02 22:33:25 AI_Player.update()		1010,	110,	110,	11,	1010,	1010,	110
2017-01-02 22:33:25 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-02 22:33:25 AI_Player.update()		101,	1001,	1010,	101,	110,	1010,	101
2017-01-02 22:33:25 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1011,	1001
2017-01-02 22:33:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:25 GameBoard.setupTreasurePanel()	3 2
2017-01-02 22:33:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:25 AI_Player.update()	update
2017-01-02 22:33:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:25 GameBoard.setupTreasurePanel()	3 2
2017-01-02 22:33:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:26 AI_Player.update()	update
2017-01-02 22:33:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:26 AI_Player.update()	Search took133ms
2017-01-02 22:33:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:26 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-02 22:33:26 AI_Player.update()		1001,	11,	1001,	1110,	1001,	110,	1010
2017-01-02 22:33:26 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-02 22:33:26 AI_Player.update()		1010,	110,	110,	1010,	1010,	1010,	110
2017-01-02 22:33:26 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-02 22:33:26 AI_Player.update()		101,	1001,	1010,	1100,	110,	1010,	101
2017-01-02 22:33:26 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	1011,	1001
2017-01-02 22:33:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:26 GameBoard.setupTreasurePanel()	3 2
2017-01-02 22:33:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:26 AI_Player.update()	update
2017-01-02 22:33:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:26 GameBoard.setupTreasurePanel()	3 2
2017-01-02 22:33:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:27 AI_Player.update()	update
2017-01-02 22:33:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:27 AI_Player.update()	Search took287ms
2017-01-02 22:33:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:27 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-02 22:33:27 AI_Player.update()		1001,	1100,	1001,	1110,	1001,	110,	1010
2017-01-02 22:33:27 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-02 22:33:27 AI_Player.update()		1010,	1010,	110,	1010,	1010,	1010,	110
2017-01-02 22:33:27 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-02 22:33:27 AI_Player.update()		101,	1011,	1010,	1100,	110,	1010,	101
2017-01-02 22:33:27 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1011,	1001
2017-01-02 22:33:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:27 GameBoard.setupTreasurePanel()	3 2
2017-01-02 22:33:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:27 AI_Player.update()	update
2017-01-02 22:33:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:27 GameBoard.setupTreasurePanel()	3 2
2017-01-02 22:33:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:28 AI_Player.update()	update
2017-01-02 22:33:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:28 AI_Player.update()	Search took453ms
2017-01-02 22:33:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:28 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-02 22:33:28 AI_Player.update()		1010,	1001,	1100,	1001,	1110,	1001,	110
2017-01-02 22:33:28 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-02 22:33:28 AI_Player.update()		1010,	1010,	110,	1010,	1010,	1010,	110
2017-01-02 22:33:28 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-02 22:33:28 AI_Player.update()		101,	1011,	1010,	1100,	110,	1010,	101
2017-01-02 22:33:28 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1011,	1001
2017-01-02 22:33:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:28 GameBoard.setupTreasurePanel()	3 2
2017-01-02 22:33:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:29 AI_Player.update()	update
2017-01-02 22:33:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:29 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:33:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:33:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:33:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:33:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:33:29 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:33:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:33:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:33:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:33:29 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:33:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:33:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:33:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:29 AI_Player.update()	update
2017-01-02 22:33:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:30 AI_Player.update()	Search took262ms
2017-01-02 22:33:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:30 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-02 22:33:30 AI_Player.update()		1010,	110,	1100,	1001,	1110,	1001,	110
2017-01-02 22:33:30 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-02 22:33:30 AI_Player.update()		1010,	1001,	110,	1010,	1010,	1010,	110
2017-01-02 22:33:30 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1010,	1011
2017-01-02 22:33:30 AI_Player.update()		101,	1100,	1010,	1100,	110,	1010,	101
2017-01-02 22:33:30 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1011,	1001
2017-01-02 22:33:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:30 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:30 AI_Player.update()	update
2017-01-02 22:33:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:30 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:31 AI_Player.update()	update
2017-01-02 22:33:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:31 AI_Player.update()	Search took153ms
2017-01-02 22:33:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:31 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-02 22:33:31 AI_Player.update()		1010,	110,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:31 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:31 AI_Player.update()		1010,	1001,	110,	101,	1010,	1010,	110
2017-01-02 22:33:31 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:31 AI_Player.update()		101,	1100,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:31 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:31 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:31 AI_Player.update()	update
2017-01-02 22:33:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:31 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:32 AI_Player.update()	update
2017-01-02 22:33:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:32 AI_Player.update()	Search took194ms
2017-01-02 22:33:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:32 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-02 22:33:32 AI_Player.update()		1010,	1010,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:32 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:32 AI_Player.update()		1010,	1011,	110,	101,	1010,	1010,	110
2017-01-02 22:33:32 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:32 AI_Player.update()		101,	11,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:32 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:32 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:33 AI_Player.update()	update
2017-01-02 22:33:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:33 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:33 AI_Player.update()	update
2017-01-02 22:33:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:33 AI_Player.update()	Search took145ms
2017-01-02 22:33:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:33 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-02 22:33:33 AI_Player.update()		1010,	110,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:33 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:33 AI_Player.update()		1010,	1001,	110,	101,	1010,	1010,	110
2017-01-02 22:33:33 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:33 AI_Player.update()		101,	1100,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:33 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:33 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:34 AI_Player.update()	update
2017-01-02 22:33:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:34 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:34 AI_Player.update()	update
2017-01-02 22:33:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:34 AI_Player.update()	Search took192ms
2017-01-02 22:33:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:34 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-02 22:33:34 AI_Player.update()		1010,	1010,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:34 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:34 AI_Player.update()		1010,	1011,	110,	101,	1010,	1010,	110
2017-01-02 22:33:34 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:34 AI_Player.update()		101,	11,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:34 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:34 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:35 AI_Player.update()	update
2017-01-02 22:33:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:35 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:35 AI_Player.update()	update
2017-01-02 22:33:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:36 AI_Player.update()	Search took212ms
2017-01-02 22:33:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:36 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-02 22:33:36 AI_Player.update()		1010,	110,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:36 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:36 AI_Player.update()		1010,	1001,	110,	101,	1010,	1010,	110
2017-01-02 22:33:36 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:36 AI_Player.update()		101,	1100,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:36 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:36 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:36 AI_Player.update()	update
2017-01-02 22:33:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:36 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:37 AI_Player.update()	update
2017-01-02 22:33:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:37 AI_Player.update()	Search took226ms
2017-01-02 22:33:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:37 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-02 22:33:37 AI_Player.update()		1010,	1010,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:37 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:37 AI_Player.update()		1010,	1011,	110,	101,	1010,	1010,	110
2017-01-02 22:33:37 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:37 AI_Player.update()		101,	11,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:37 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:37 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:37 AI_Player.update()	update
2017-01-02 22:33:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:37 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:38 AI_Player.update()	update
2017-01-02 22:33:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:38 AI_Player.update()	Search took169ms
2017-01-02 22:33:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:38 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-02 22:33:38 AI_Player.update()		1010,	110,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:38 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:38 AI_Player.update()		1010,	1001,	110,	101,	1010,	1010,	110
2017-01-02 22:33:38 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:38 AI_Player.update()		101,	1100,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:38 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:38 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:39 AI_Player.update()	update
2017-01-02 22:33:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:39 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:39 AI_Player.update()	update
2017-01-02 22:33:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:39 AI_Player.update()	Search took219ms
2017-01-02 22:33:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:39 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-02 22:33:39 AI_Player.update()		1010,	1010,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:39 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:39 AI_Player.update()		1010,	1011,	110,	101,	1010,	1010,	110
2017-01-02 22:33:39 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:39 AI_Player.update()		101,	11,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:39 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:39 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:40 AI_Player.update()	update
2017-01-02 22:33:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:40 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:40 AI_Player.update()	update
2017-01-02 22:33:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:40 AI_Player.update()	Search took205ms
2017-01-02 22:33:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:40 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-02 22:33:40 AI_Player.update()		1010,	110,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:40 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:40 AI_Player.update()		1010,	1001,	110,	101,	1010,	1010,	110
2017-01-02 22:33:40 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:40 AI_Player.update()		101,	1100,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:40 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:40 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:41 AI_Player.update()	update
2017-01-02 22:33:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:41 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:41 AI_Player.update()	update
2017-01-02 22:33:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:42 AI_Player.update()	Search took206ms
2017-01-02 22:33:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:42 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-02 22:33:42 AI_Player.update()		1010,	1010,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:42 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:42 AI_Player.update()		1010,	1011,	110,	101,	1010,	1010,	110
2017-01-02 22:33:42 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:42 AI_Player.update()		101,	11,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:42 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:42 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:42 AI_Player.update()	update
2017-01-02 22:33:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:42 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:43 AI_Player.update()	update
2017-01-02 22:33:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:43 AI_Player.update()	Search took136ms
2017-01-02 22:33:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:43 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-02 22:33:43 AI_Player.update()		1010,	110,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:43 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:43 AI_Player.update()		1010,	1001,	110,	101,	1010,	1010,	110
2017-01-02 22:33:43 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:43 AI_Player.update()		101,	1100,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:43 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:43 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:43 AI_Player.update()	update
2017-01-02 22:33:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:43 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:44 AI_Player.update()	update
2017-01-02 22:33:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:44 AI_Player.update()	Search took219ms
2017-01-02 22:33:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:44 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-02 22:33:44 AI_Player.update()		1010,	1010,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:44 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:44 AI_Player.update()		1010,	1011,	110,	101,	1010,	1010,	110
2017-01-02 22:33:44 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:44 AI_Player.update()		101,	11,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:44 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:44 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:45 AI_Player.update()	update
2017-01-02 22:33:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:45 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:45 AI_Player.update()	update
2017-01-02 22:33:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:45 AI_Player.update()	Search took196ms
2017-01-02 22:33:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:45 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-02 22:33:45 AI_Player.update()		1010,	110,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:45 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:45 AI_Player.update()		1010,	1001,	110,	101,	1010,	1010,	110
2017-01-02 22:33:45 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:45 AI_Player.update()		101,	1100,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:45 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:45 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:46 AI_Player.update()	update
2017-01-02 22:33:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:46 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:46 AI_Player.update()	update
2017-01-02 22:33:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:46 AI_Player.update()	Search took195ms
2017-01-02 22:33:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:46 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-02 22:33:46 AI_Player.update()		1010,	1010,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:46 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:46 AI_Player.update()		1010,	1011,	110,	101,	1010,	1010,	110
2017-01-02 22:33:46 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:46 AI_Player.update()		101,	11,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:46 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:46 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:47 AI_Player.update()	update
2017-01-02 22:33:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:47 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:47 AI_Player.update()	update
2017-01-02 22:33:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:48 AI_Player.update()	Search took141ms
2017-01-02 22:33:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:48 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-02 22:33:48 AI_Player.update()		1010,	110,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:48 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:48 AI_Player.update()		1010,	1001,	110,	101,	1010,	1010,	110
2017-01-02 22:33:48 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:48 AI_Player.update()		101,	1100,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:48 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:48 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:48 AI_Player.update()	update
2017-01-02 22:33:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:48 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:49 AI_Player.update()	update
2017-01-02 22:33:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:49 AI_Player.update()	Search took184ms
2017-01-02 22:33:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:49 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-02 22:33:49 AI_Player.update()		1010,	1010,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:49 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:49 AI_Player.update()		1010,	1011,	110,	101,	1010,	1010,	110
2017-01-02 22:33:49 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:49 AI_Player.update()		101,	11,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:49 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:49 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:49 AI_Player.update()	update
2017-01-02 22:33:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:49 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:50 AI_Player.update()	update
2017-01-02 22:33:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:50 AI_Player.update()	Search took189ms
2017-01-02 22:33:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:50 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-02 22:33:50 AI_Player.update()		1010,	110,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:50 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:50 AI_Player.update()		1010,	1001,	110,	101,	1010,	1010,	110
2017-01-02 22:33:50 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:50 AI_Player.update()		101,	1100,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:50 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:50 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:50 AI_Player.update()	update
2017-01-02 22:33:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:50 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:51 AI_Player.update()	update
2017-01-02 22:33:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:51 AI_Player.update()	Search took178ms
2017-01-02 22:33:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:51 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-02 22:33:51 AI_Player.update()		1010,	1010,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:51 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:51 AI_Player.update()		1010,	1011,	110,	101,	1010,	1010,	110
2017-01-02 22:33:51 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:51 AI_Player.update()		101,	11,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:51 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:51 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:52 AI_Player.update()	update
2017-01-02 22:33:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:52 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:52 AI_Player.update()	update
2017-01-02 22:33:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:52 AI_Player.update()	Search took133ms
2017-01-02 22:33:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:52 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-02 22:33:52 AI_Player.update()		1010,	110,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:52 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:52 AI_Player.update()		1010,	1001,	110,	101,	1010,	1010,	110
2017-01-02 22:33:52 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:52 AI_Player.update()		101,	1100,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:52 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:52 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:53 AI_Player.update()	update
2017-01-02 22:33:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:53 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:53 AI_Player.update()	update
2017-01-02 22:33:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:54 AI_Player.update()	Search took230ms
2017-01-02 22:33:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:54 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-02 22:33:54 AI_Player.update()		1010,	1010,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:54 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:54 AI_Player.update()		1010,	1011,	110,	101,	1010,	1010,	110
2017-01-02 22:33:54 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:54 AI_Player.update()		101,	11,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:54 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:54 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:54 AI_Player.update()	update
2017-01-02 22:33:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:54 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:55 AI_Player.update()	update
2017-01-02 22:33:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:55 AI_Player.update()	Search took216ms
2017-01-02 22:33:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:55 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-02 22:33:55 AI_Player.update()		1010,	110,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:55 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:55 AI_Player.update()		1010,	1001,	110,	101,	1010,	1010,	110
2017-01-02 22:33:55 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:55 AI_Player.update()		101,	1100,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:55 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:55 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:55 AI_Player.update()	update
2017-01-02 22:33:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:55 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:56 AI_Player.update()	update
2017-01-02 22:33:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:56 AI_Player.update()	Search took190ms
2017-01-02 22:33:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:56 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-02 22:33:56 AI_Player.update()		1010,	1010,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:56 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:56 AI_Player.update()		1010,	1011,	110,	101,	1010,	1010,	110
2017-01-02 22:33:56 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:56 AI_Player.update()		101,	11,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:56 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:56 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:56 AI_Player.update()	update
2017-01-02 22:33:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:56 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:57 AI_Player.update()	update
2017-01-02 22:33:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:33:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:33:57 AI_Player.update()	Search took157ms
2017-01-02 22:33:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:57 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-02 22:33:57 AI_Player.update()		1010,	110,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:57 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:57 AI_Player.update()		1010,	1001,	110,	101,	1010,	1010,	110
2017-01-02 22:33:57 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:57 AI_Player.update()		101,	1100,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:57 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:57 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:58 AI_Player.update()	update
2017-01-02 22:33:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:33:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:33:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:33:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:33:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:58 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:58 AI_Player.update()	update
2017-01-02 22:33:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:33:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:33:58 AI_Player.update()	Search took249ms
2017-01-02 22:33:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:33:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:58 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-02 22:33:58 AI_Player.update()		1010,	1010,	1100,	11,	1110,	1001,	110
2017-01-02 22:33:58 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-02 22:33:58 AI_Player.update()		1010,	1011,	110,	101,	1010,	1010,	110
2017-01-02 22:33:58 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:33:58 AI_Player.update()		101,	11,	1010,	1101,	110,	1010,	101
2017-01-02 22:33:58 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-02 22:33:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:33:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:33:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:58 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:59 AI_Player.update()	update
2017-01-02 22:33:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:33:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:33:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:33:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:33:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:33:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:33:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:33:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:33:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:33:59 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:33:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:33:59 AI_Player.update()	update
2017-01-02 22:33:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:34:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:34:00 AI_Player.update()	Search took205ms
2017-01-02 22:34:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:34:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:34:00 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-02 22:34:00 AI_Player.update()		1010,	110,	1100,	11,	1110,	1001,	110
2017-01-02 22:34:00 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-02 22:34:00 AI_Player.update()		1010,	1001,	110,	101,	1010,	1010,	110
2017-01-02 22:34:00 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:34:00 AI_Player.update()		101,	1100,	1010,	1101,	110,	1010,	101
2017-01-02 22:34:00 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-02 22:34:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:34:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:34:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:34:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:34:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:34:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:00 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:34:00 QueryProlog.requestShiftRight()	try_to_shift_row_right( 4 ) failed
2017-01-02 22:34:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:34:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:34:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:34:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:34:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:34:00 AI_Player.update()	update
2017-01-02 22:34:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:34:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:34:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:34:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:34:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:34:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:34:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:00 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:34:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:34:01 AI_Player.update()	update
2017-01-02 22:34:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:34:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:34:01 AI_Player.update()	Search took187ms
2017-01-02 22:34:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:34:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:34:01 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-02 22:34:01 AI_Player.update()		1010,	1010,	1100,	11,	1110,	1001,	110
2017-01-02 22:34:01 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-02 22:34:01 AI_Player.update()		1010,	1011,	110,	101,	1010,	1010,	110
2017-01-02 22:34:01 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-02 22:34:01 AI_Player.update()		101,	11,	1010,	1101,	110,	1010,	101
2017-01-02 22:34:01 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-02 22:34:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:34:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:34:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:34:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:34:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:34:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:01 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:34:01 QueryProlog.requestShiftRight()	try_to_shift_row_right( 4 ) failed
2017-01-02 22:34:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:34:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:34:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:34:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:34:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:34:01 AI_Player.update()	update
2017-01-02 22:34:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:34:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:34:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:34:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:34:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:34:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:34:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:34:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:01 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:34:02 QueryProlog.requestShiftRight()	try_to_shift_row_right( 4 ) suceeded
2017-01-02 22:34:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:34:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:34:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:34:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:34:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:34:02 AI_Player.update()	update
2017-01-02 22:34:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:34:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:34:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). failed
2017-01-02 22:34:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:34:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:34:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:34:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:02 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:34:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:34:02 AI_Player.update()	update
2017-01-02 22:34:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:34:02 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-02 22:34:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:34:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:02 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:34:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:34:03 AI_Player.update()	update
2017-01-02 22:34:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:34:03 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-02 22:34:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:34:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:03 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:34:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:34:03 AI_Player.update()	update
2017-01-02 22:34:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:34:03 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-02 22:34:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:34:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:03 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:34:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:34:04 AI_Player.update()	update
2017-01-02 22:34:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:34:04 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-02 22:34:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:34:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:04 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:34:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:34:04 AI_Player.update()	update
2017-01-02 22:34:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:34:04 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-02 22:34:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:34:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:04 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:34:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:34:05 AI_Player.update()	update
2017-01-02 22:34:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:34:05 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-02 22:34:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:34:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:05 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:34:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:34:05 AI_Player.update()	update
2017-01-02 22:34:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:34:05 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-02 22:34:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:34:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:05 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:34:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:34:06 AI_Player.update()	update
2017-01-02 22:34:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:34:06 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-02 22:34:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:34:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:06 GameBoard.setupTreasurePanel()	3 3
2017-01-02 22:34:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:34:06 AI_Player.update()	update
2017-01-02 22:34:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:34:06 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-02 22:34:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:34:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:34:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:34:06 GameBoard.setupTreasurePanel()	3 3
